WRMCB=function(e){var c=console;if(c&&c.log&&c.error){c.log('Error running batched script.');c.error(e);}}
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-collaborative-editor-plugin:confluence-collaborative-editor-plugin-resources', location = '/template/synchrony-presence.soy' */
// This file was automatically generated from synchrony-presence.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace Confluence.Templates.SynchronyPresence.
 */

if (typeof Confluence == 'undefined') { var Confluence = {}; }
if (typeof Confluence.Templates == 'undefined') { Confluence.Templates = {}; }
if (typeof Confluence.Templates.SynchronyPresence == 'undefined') { Confluence.Templates.SynchronyPresence = {}; }


Confluence.Templates.SynchronyPresence.container = function(opt_data, opt_ignored) {
  return '<ul id="avatar-list" class="synchrony-doc-' + soy.$$escapeHtml(opt_data.docId) + ' collaborative-avatars-list"></ul><aui-inline-dialog id="more-avatars" alignment="bottom right" responds-to="toggle" aria-hidden="true"><h3>' + soy.$$escapeHtml("\u0422\u0430\u043a\u0436\u0435 \u0441\u0435\u0439\u0447\u0430\u0441 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u0443\u0435\u0442") + '</h3><ul id="more-avatars-list" class="collaborative-avatars-list"></ul></aui-inline-dialog>';
};
if (goog.DEBUG) {
  Confluence.Templates.SynchronyPresence.container.soyTemplateName = 'Confluence.Templates.SynchronyPresence.container';
}


Confluence.Templates.SynchronyPresence.avatar = function(opt_data, opt_ignored) {
  return '<li class="avatar-item p' + soy.$$escapeHtml(opt_data.telepointer) + '"><span title="' + soy.$$escapeHtml(opt_data.name) + '" avatar="' + soy.$$escapeHtml(opt_data.initial) + '" data-origin="' + soy.$$escapeHtml(opt_data.origin) + '" class="avatar"><img src="' + soy.$$escapeHtml(opt_data.avatarUrl) + '"></span></li>';
};
if (goog.DEBUG) {
  Confluence.Templates.SynchronyPresence.avatar.soyTemplateName = 'Confluence.Templates.SynchronyPresence.avatar';
}


Confluence.Templates.SynchronyPresence.overlay = function(opt_data, opt_ignored) {
  return '<span id="synchrony-presence-overlay" class="overlay avatar"><a href="#" aria-controls="more-avatars" class="aui-button" data-aui-trigger></a></span>';
};
if (goog.DEBUG) {
  Confluence.Templates.SynchronyPresence.overlay.soyTemplateName = 'Confluence.Templates.SynchronyPresence.overlay';
}

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-collaborative-editor-plugin:confluence-collaborative-editor-plugin-resources', location = '/js/synchrony-presence.js' */
define("confluence-collaborative-editor-plugin/synchrony-presence",["backbone","confluence-collaborative-editor-plugin/avatar-list-view","confluence-collaborative-editor-plugin/overlay-view","ajs","confluence/templates","jquery","underscore"],function(h,d,k,g,l,c,i){var m=new h.Collection;var f=false;var a="";var j;function e(n){j=n}function b(o,q,r,s){a=o;var p=null;if(!f){j=j||require("tinymce");if(!s){g.log("synchronyPresence error: specify a valid container.");return}f=true;p=c(l.SynchronyPresence.container({docId:r}));c(s).append(p);new d({el:"#avatar-list",collection:m});var n=new k({collection:m});c(s).append(n.render());q.on("presence",function(t){n.hideInlineDialog();t.joined.filter(function(u){return u.origin!==a}).forEach(function(u){u.id=u.origin;u.fullname=u.fullname||"\u0410\u043d\u043e\u043d\u0438\u043c\u043d\u044b\u0439";u.name=u.name||"anonymous";m.add(u)});t.left.forEach(function(u){u.id=u.origin;m.remove(u)})});q.on("disconnected",function(){m.reset()});j.EditorManager.activeEditor.onClick.add(i.bind(k.prototype.hideInlineDialog,n))}return p}return{appendTo:b,setTinyMce:e}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-collaborative-editor-plugin:confluence-collaborative-editor-plugin-resources', location = '/js/avatar-list-view.js' */
define("confluence-collaborative-editor-plugin/avatar-list-view",["backbone","confluence-collaborative-editor-plugin/avatar-view","ajs","jquery","underscore"],function(f,c,a,e,b){var d=5;return f.View.extend({initialize:function(){this.collection.on("add",this.addAvatar,this);this.collection.on("remove",this.removeAvatar,this);this.collection.each(this.addAvatar,this)},addAvatar:function(h){a.log(h.get("fullname")+" joined. ("+h.get("origin")+")");var j=new c({model:h});var g=j.render().appendTo(this.$el);b.defer(function(k){k.addClass("show");k.children(".avatar").tooltip({fade:true,gravity:"ne"})},g);var i=this.collection.length;if(i===d+1){this.collection.at(d-1).set("hidden",true)}if(i>d){h.set("hidden",true)}this._manageOverlayClass()},removeAvatar:function(g){a.log(g.get("fullname")+" left. ("+g.get("origin")+")");var h=this.collection.length;this.collection.each(function(j,i){j.set("hidden",h>d&&i>=d-1)});this._manageOverlayClass()},_manageOverlayClass:function(){var g=this.collection.length;if(g>d){this.$el.addClass("has-overlay")}else{this.$el.removeClass("has-overlay")}}})});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-collaborative-editor-plugin:confluence-collaborative-editor-plugin-resources', location = '/js/avatar-view.js' */
define("confluence-collaborative-editor-plugin/avatar-view",["backbone","ajs","confluence/templates","jquery"],function(d,a,b,c){return d.View.extend({initialize:function(){this.model.on("remove",this.remove,this)},render:function(){this.$el=c(b.SynchronyPresence.avatar({name:this.model.get("fullname"),initial:this.model.get("fullname").charAt(0).toUpperCase(),avatarUrl:a.contextPath()+this.model.get("avatarURL"),origin:this.model.get("origin"),telepointer:this._synchronyTelepointerId()}));return this.$el},remove:function(){this.$el.removeClass().addClass("avatar-item animate");if(!this.model.get("hidden")){this.$el.addClass("removing")}this.$el.one("webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend",function(){c(this).removeClass("animate removing").remove()})},_synchronyTelepointerId:function(){var g=""+(this.model.get("sub")||this.model.get("origin")||"");var f=0;for(var e=0;e<g.length;e++){f=((f<<5)-f)+g.charCodeAt(e);f=f&f}return(Math.abs(f)%10)}})});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-collaborative-editor-plugin:confluence-collaborative-editor-plugin-resources', location = '/js/overlay-view.js' */
define("confluence-collaborative-editor-plugin/overlay-view",["backbone","aui/inline-dialog2","confluence-collaborative-editor-plugin/avatar-view","confluence/templates","ajs","jquery","underscore"],function(g,d,c,e,a,f,b){return g.View.extend({initialize:function(){this.collection.on("add remove",this.reconcile,this);this.inlineDialog2=document.querySelector("#more-avatars")},render:function(){this.$el=f(e.SynchronyPresence.overlay());this.$el.children("a").tooltip({fade:true,gravity:"ne"});this.$el.on("click",function(){f(".tipsy").remove()});return this.$el},reconcile:function(){var h=this.collection.where({hidden:true});if(h.length>0){this.$el.addClass("show");this.$el.children(".aui-button").html("+"+h.length).attr("title",h.length+" "+"\u0434\u0440\u0443\u0433\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u044e\u0442 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435.");f("#more-avatars-list").children().remove();h.forEach(function(i){var j=new c({model:i});f("#more-avatars-list").append(j.render())})}else{this.$el.removeClass("show");this.hideInlineDialog()}},hideInlineDialog:function(){if(this.inlineDialog2&&this.inlineDialog2.isVisible&&this.inlineDialog2.isVisible()){this.inlineDialog2.open=false}}})});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-collaborative-editor-plugin:confluence-collaborative-editor-plugin-resources', location = '/template/status-indicator.soy' */
// This file was automatically generated from status-indicator.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace Confluence.Templates.CollaborativeEditor.StatusIndicator.
 */

if (typeof Confluence == 'undefined') { var Confluence = {}; }
if (typeof Confluence.Templates == 'undefined') { Confluence.Templates = {}; }
if (typeof Confluence.Templates.CollaborativeEditor == 'undefined') { Confluence.Templates.CollaborativeEditor = {}; }
if (typeof Confluence.Templates.CollaborativeEditor.StatusIndicator == 'undefined') { Confluence.Templates.CollaborativeEditor.StatusIndicator = {}; }


Confluence.Templates.CollaborativeEditor.StatusIndicator.container = function(opt_data, opt_ignored) {
  return '<div class="synchrony-status-indicator"><div class="status-indicator-icon aui-icon aui-icon-small' + ((opt_data.error) ? ' aui-iconfont-warning' : (opt_data.saving) ? ' aui-iconfont-devtools-task-in-progress' : ' aui-iconfont-approve') + '" data-tooltip="' + soy.$$escapeHtml(opt_data.tooltipMessage) + '"></div><div class="status-indicator-message" data-tooltip="' + soy.$$escapeHtml(opt_data.tooltipMessage) + '">' + soy.$$escapeHtml(opt_data.statusMessage) + '</div></div>';
};
if (goog.DEBUG) {
  Confluence.Templates.CollaborativeEditor.StatusIndicator.container.soyTemplateName = 'Confluence.Templates.CollaborativeEditor.StatusIndicator.container';
}

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-collaborative-editor-plugin:confluence-collaborative-editor-plugin-resources', location = '/js/status-indicator-view.js' */
define("confluence-collaborative-editor-plugin/status-indicator-view",["confluence/templates","backbone","ajs","jquery","underscore"],function(c,e,a,d,b){return e.View.extend({initialize:function(){this.$el.addClass("synchrony");this.listenTo(this.model,"change:saving change:error",this.render);this.model.set("confluenceUnreachable",false);this.model.set("synchronyUnreachable",false);a.bind("rte.heartbeat",b.bind(this._successHeartbeat,this));a.bind("rte.safe-save.error",b.bind(this._errorPublishing,this));a.bind("rte.preview.error",b.bind(this._errorPublishing,this));this.model.set("connecting",true);this._setProgressState()},render:function(){d(".tipsy").remove();this.$el.html(c.CollaborativeEditor.StatusIndicator.container(this.model.attributes))},onConnectedState:function(g){this.model.set("synchronyUnreachable",false);if(!this.model.has("synchronyEntity")){this.model.set("synchronyEntity",g);var f=this;this.model.get("synchronyEntity").on("update",function(h){f._handleSynchronyUpdateEvent(h,f)});this.model.get("synchronyEntity").on("ack",function(h){f._handleSynchronyAckEvent(h,f)})}this._setSavedState()},onDisconnectedState:function(){this.model.set("synchronyUnreachable",true);this.model.set("connecting",true);this._setErrorState()},_handleSynchronyUpdateEvent:function(h,f){var g=h.revisions.filter(function(i){return !i.rev});if(g&&g.length>0){f.model.set("pendingChanges",true);f._saving()}},_handleSynchronyAckEvent:function(h,g){var f=h.pending.length>0;g.model.set("pendingChanges",f);if(!f){g.model.set("lastSavedTime",new Date().getTime())}},_saving:function(){var f=this;var g=function(){setTimeout(function(){if(f.model.get("pendingChanges")||new Date().getTime()-f.model.get("lastSavedTime")<f.model.get("minActiveTime")){g()}else{f._setSavedState()}},f.model.get("minActiveTime"))};if(this.model.get("saving")){return}this.model.set("connecting",false);this._setProgressState();g()},_reachable:function(){return !this.model.get("confluenceUnreachable")&&!this.model.get("synchronyUnreachable")},_errorPublishing:function(g,f){switch(f.status){case 0:case 500:case 503:this.model.set("confluenceUnreachable",true);this.model.set("connecting",true);this._setErrorState();break;case 400:case 403:case 404:case 409:case 410:case 413:default:break}},_successHeartbeat:function(){if(this.model.get("confluenceUnreachable")){this.model.set("confluenceUnreachable",false);this._setSavedState()}},_setSavedState:function(){if(this._reachable()){this.model.set("statusMessage",this.model.get("connecting")?"\u0413\u043e\u0442\u043e\u0432\u043e \u043a \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044e":"\u0427\u0435\u0440\u043d\u043e\u0432\u0438\u043a \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d");this.model.set("tooltipMessage","\u0412\u0441\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u044e\u0442\u0441\u044f \u0432 \u0447\u0435\u0440\u043d\u043e\u0432\u0438\u043a.");this.model.set("connecting",false);this.model.set("saving",false);this.model.set("error",false)}else{this._setErrorState()}},_setErrorState:function(){this.model.set("statusMessage","\u041d\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u043e");this.model.set("tooltipMessage","\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443. \u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0418\u043d\u0442\u0435\u0440\u043d\u0435\u0442, \u043f\u043e\u043f\u044b\u0442\u043a\u0438 \u0432\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0431\u0443\u0434\u0443\u0442 \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0435\u043d\u044b.");this.model.set("saving",false);this.model.set("error",true)},_setProgressState:function(){this.model.set("statusMessage",this.model.get("connecting")?"\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u2026":"\u0421\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0447\u0435\u0440\u043d\u043e\u0432\u0438\u043a\u0430\u2026");this.model.set("tooltipMessage","\u0412\u0441\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u044e\u0442\u0441\u044f \u0432 \u0447\u0435\u0440\u043d\u043e\u0432\u0438\u043a.");this.model.set("saving",true);this.model.set("error",false)}})});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-collaborative-editor-plugin:confluence-collaborative-editor-plugin-resources', location = '/js/lib/SyncManager.js' */
define("confluence-collaborative-editor-plugin/lib/SyncManager",["ajs","jquery"],function(f,d){var b="synchrony.";var h=["id"];var a={START_SYNCHRONIZING_EVENT_NAME:"start",STOP_SYNCHRONIZING_EVENT_NAME:"stop",MAX_CONSECUTIVE_AUTO_RECOVERY_TRIGGERED:10,MAX_WAIT_TIME_TO_RESTART:30000,DEBUG_MODE:false};var g={AUTO_RECOVERY_TIMER_TRIGGERED:"Auto recovery has been triggered",AUTO_RECOVERY_TIMER_TRIGGERED_TOO_MANY_TIMES:"Auto recovery has been triggered too many times for the same action",INVALID_EVENT_PAYLOAD:"Invalid payload, missing required params",START_ENTITY:"Starting entity synchronization",STOP_ENTITY:"Stoping entity synchronization"};var c=function(){return{DISABLED_SYNC_STATUS:false,RECOVERY_TIMER_RUNNING:false,CONSECUTIVE_AUTO_RECOVERY_TRIGGERED:0}};var i=function(j){return h.every(function(k){return typeof j[k]!=="undefined"})};var e=function(k,l){this.entity=k;this.settings=d.extend({},a,l||{});this.controlSyncState={};this.recoveryTimeoutTasks={};var j=function(m,o,n){if(!i(n)){this.displayLogMessage(g.INVALID_EVENT_PAYLOAD,o,n)}else{m(n)}};f.bind(b+this.settings.START_SYNCHRONIZING_EVENT_NAME,j.bind(this,this.enableSynchronization.bind(this)));f.bind(b+this.settings.STOP_SYNCHRONIZING_EVENT_NAME,j.bind(this,this.disableSynchronization.bind(this)))};e.prototype.getOrCreateControlSyncState=function(k){var j=this.controlSyncState[k]=this.controlSyncState[k]||c();return j};e.prototype.enableDebug=function(j){this.settings.DEBUG_MODE=typeof j!=="undefined"?j:true};e.prototype.displayLogMessage=function(){if(this.settings.DEBUG_MODE){var j=Array.prototype.slice.call(arguments);j.splice(0,0,"DEBUG: "+new Date().toLocaleTimeString());console.log.apply(console,j)}};e.prototype.disableSynchronization=function(k){var l=k.id;var j=this.getOrCreateControlSyncState(l);j.DISABLED_SYNC_STATUS=true;this.clearAutoRecoveryTimer(l);this.setAutoRecoveryTimer(k);this.entity.stop(l);this.displayLogMessage(g.STOP_ENTITY,l,d.extend(true,{},this.controlSyncState))};e.prototype.enableSynchronization=function(k){var l=k.id;var j=this.getOrCreateControlSyncState(l);j.DISABLED_SYNC_STATUS=false;this.clearAutoRecoveryTimer(l);this.entity.start(l);this.displayLogMessage(g.START_ENTITY,l,d.extend(true,{},this.controlSyncState))};e.prototype.clearAutoRecoveryTimer=function(k){var j=this.getOrCreateControlSyncState(k);clearTimeout(this.recoveryTimeoutTasks[k]);delete this.recoveryTimeoutTasks[k];j.RECOVERY_TIMER_RUNNING=false};e.prototype.setAutoRecoveryTimer=function(k){var l=k.id;var j=this.getOrCreateControlSyncState(l);j.RECOVERY_TIMER_RUNNING=true;this.recoveryTimeoutTasks[l]=setTimeout(function(){this.displayLogMessage(g.AUTO_RECOVERY_TIMER_TRIGGERED,l);this.clearAutoRecoveryTimer(l);j.DISABLED_SYNC_STATUS=false;j.RECOVERY_TIMER_RUNNING=false;j.CONSECUTIVE_AUTO_RECOVERY_TRIGGERED++;f.trigger("analyticsEvent",{name:"confluence.synchrony.syncmanager.failed-to-restart",data:{id:l}});if(j.CONSECUTIVE_AUTO_RECOVERY_TRIGGERED>=this.settings.MAX_CONSECUTIVE_AUTO_RECOVERY_TRIGGERED){this.displayLogMessage(g.AUTO_RECOVERY_TIMER_TRIGGERED_TOO_MANY_TIMES,l,this.controlSyncState[l].CONSECUTIVE_AUTO_RECOVERY_TRIGGERED);f.trigger("analyticsEvent",{name:"confluence.synchrony.syncmanager.consecutive-failed-to-restart",data:{id:l}})}this.entity.start(l)}.bind(this),k.maxWaitTimeToRestart||this.settings.MAX_WAIT_TIME_TO_RESTART)};return e});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-collaborative-editor-plugin:confluence-collaborative-editor-plugin-resources', location = '/js/telepointer-cleaner.js' */
define("confluence-collaborative-editor-plugin/telepointer-cleaner",["confluence-editor-reliable-save/reliable-save","jquery"],function(a,b){var c=function(d){var e=b("<div>");e.append(d);e.find(".synchrony-container, .synchrony-tp").remove();return e.html()};a.registerCleanupFunction(c)});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-collaborative-editor-plugin:confluence-collaborative-editor-plugin-resources', location = '/js/synchrony-editor.js' */
define("confluence-collaborative-editor-plugin/synchrony-editor",["window","ajs","jquery","underscore","confluence-collaborative-editor-plugin/synchrony-presence","confluence-collaborative-editor-plugin/lib/SyncManager","confluence-editor/editor/page-editor-message"],function(a,m,t,K,F,C,c){var o,H,l,B;var n={"rte.init.ui":false,"rte-ready":false,"rte-quick-edit-ready":false};if(m.Rte.getEditor()&&m.Rte.getEditor().initialized){n["rte-ready"]=true}t.each(n,function(M){function L(N){m.unbind(N,L);n[N.type]=true}m.bind(M,L)});if(e()){I()}else{m.log("Synchrony deferring initialisation until editor is activated.");u("rte.init.ui",I)}function q(){return Number(s("synchrony-expiry"))>(Date.now()/1000)}function A(L,M){t.ajax({dataType:"json",method:"GET",url:encodeURI(m.contextPath()+"/rest/synchrony/1.0/token/"+m.Confluence.getContentId()+"/generate")}).done(function(N){m.Meta.set("synchrony-token",N.synchronyToken);m.Meta.set("synchrony-expiry",N.synchronyExpiry);m.log("Synchrony JWT token updated.");L.resolve(N.synchronyToken)}).fail(function(){var N="Confluence failed to renew JWT token.";m.log(M?M.message:N);L.reject(new Error(N))})}function E(M){var L=jQuery.Deferred();if(!M&&q()){L.resolve(s("synchrony-token"))}else{m.log("Synchrony JWT expired or invalid, retrieving new token.");A(L,M)}return L.promise()}function D(L){return L.firstChild&&L.firstChild.classList&&L.firstChild.classList.contains("synchrony-container")}function G(L){L.setContent("")}function d(L){return !L.children.length||(L.children.length===1&&D(L))}function s(M){var L=m.Meta.get(M);if(L===undefined){L=t('meta[name="ajs-'+M+'"]').attr("content");if(L!==undefined){m.Meta.set(M,L)}}return L}function b(L){return s("synchrony-resources-uri")+L}function z(){var L=s("content-type");return L=="page"||L=="blogpost"}function e(){return s("synchrony-dark-enabled")===true}function i(){var N=m.$("#content-title").val();if(N!==H){var M=frames.wysiwygTextarea_ifr;var L=M.contentDocument!==undefined?M.contentDocument:M.document;L.body.setAttribute("data-title",N);H=N}}function y(){var N=frames.wysiwygTextarea_ifr;var M=N.contentDocument!==undefined?N.contentDocument:N.document;var L=M.body;if(L.hasAttribute("data-title")){var O=L.getAttribute("data-title");if(O!==H){m.$("#content-title").val(O);H=O}}}function I(){if(e()){if(z()){require(["aui/inline-dialog2"]);o=[b("/js/vendor/sockjs.min.js"),b("/js/synchrony.min.js")];m.$(function(){m.$("body").addClass("synchrony-active");var L=require("confluence-collaborative-editor-plugin/status-indicator-view");l=new L({el:"#pluggable-status",model:new Backbone.Model({minActiveTime:500})})});x()}else{m.log("Synchrony does not support content type: "+contentType+".")}}else{m.log("Synchrony is not available in this context and/or space.")}}function x(){if(a.Synchrony!=null||o.length==0){m.log("Synchrony successfully initialised.");j();return}var M=a.document.getElementsByTagName("head")[0];var L=a.document.createElement("script");L.onload=function(){x()};L.onerror=function(){m.$(function(){l.onDisconnectedState()})};L.type="text/javascript";L.src=o.shift();M.appendChild(L)}function u(M,N){if(n[M]){N()}else{var L=function(O){m.unbind(O,L);N()};m.bind(M,L)}}function r(){var M=t(document);var L="confluence.postpaste-fix";M.bind("prePaste",function(){m.trigger("synchrony.stop",{id:L})}).bind("postPaste",function(){setTimeout(function(){m.trigger("synchrony.start",{id:L})},0)})}var g=false;function j(){function L(){if(!g){g=true;if(!z()||!e()){return}var M=m.Confluence.getContentId();if(M==="0"){m.logError("Synchrony is unable to operate without a contentId, aborting!");return}t.when(E()).then(k);m.log("Synchrony will load with contentId: ",M)}}u("rte-ready",function(){if(!m.Rte.isQuickEdit){L()}});u("rte-quick-edit-ready",L)}function v(N){var L=t.Deferred();var M=t.ajax(N).always(function(){L.resolve(Array.prototype.slice.call(arguments))});return L}var p=1000;var w=200000;var f=null;var h=function(L){if(f===null){f=(L.getBody().innerHTML.length>w)}if(!f){m.trigger("cursor-target-refresh")}};function k(){var aa;var ai=m.Confluence.getContentId();var R=m.Rte.getEditor();var af=m.Rte.getEditor().getBody();var X=s("synchrony-token");var Q=s("synchrony-app-id");var ab=t("#syncRev");var ac=/^[\w\.\-\+\%]+$/i;var al=s("synchrony-service-uri");var ak="/"+Q+"/confluence-"+ai;var L=s("conf-revision");var V=ab.val()==="dummy-sync-rev"?null:ab.val();var U=m.Meta.get("original-content-title")||m.Meta.get("page-title");var ah=("<body data-title='"+K.escape(U)+"'>"+af.innerHTML+"</body>");var M=v({method:"GET",headers:{"x-token":X},url:encodeURI(al+"/data"+ak+"?state-at=@head-partition&state-format=type-tagged"),dataType:"json"});var O=v({type:"PUT",headers:{"x-token":X},url:encodeURI(al+"/data"+ak+"?delta-from=@head-partition&delta-to=@head&delta-format=type-tagged"),contentType:"application/json",data:JSON.stringify({ancestor:V||null,rev:L,state:{format:"html",value:ah},merges:{master:{meta:{type:"client-reconciliation"}}}}),dataType:"json"});var W=t.extend({},Synchrony.whitelists.tinymce,{styles:t.extend({},Synchrony.whitelists.tinymce.styles,{"padding-top":false,"padding-right":false,"padding-bottom":false,"padding-left":false,padding:false,display:ac,"list-style-type":ac,"background-image":true}),attributes:t.extend({},Synchrony.whitelists.tinymce.attributes,{contenteditable:true,"confluence-query-params":true,"data-element-title":true,"data-ref":true,accesskey:true,datetime:true,"data-highlight-class":true,"data-highlight-colour":true,"data-space-key":true,"data-username":true,"data-entity-id":true,"data-entity-type":true,"data-favourites-bound":true,"data-macro-id":true,"data-macro-name":true,"data-macro-schema-version":true,"data-macro-body-type":true,"data-macro-parameters":true,"data-macro-default-parameter":true,"data-atlassian-layout":true,"data-placeholder-type":true,"data-layout":true,"data-title":true,"data-type":true,"data-inline-task-id":true,"data-inline-tasks-content-id":true,"data-base-url":true,"data-linked-resource-id":true,"data-linked-resource-type":true,"data-linked-resource-version":true,"data-linked-resource-default-alias":true,"data-linked-resource-container-version":true,"data-unresolved-comment-count":true,"data-location":true,"data-image-height":true,"data-image-width":true,"data-attachment-copy":true}),classes:function(am){switch(am){case"mceSelected":return false;break;default:return true}},elements:t.extend({},Synchrony.whitelists.tinymce.elements,{time:true,mark:true,label:true,form:true})});var P={profile:"tinymce",selectionCorrections:false,telepointer:{refreshOnResize:true,label:{hover:true,movement:1000,text:function(ao){try{var am=ao.fullname||"\u0410\u043d\u043e\u043d\u0438\u043c\u043d\u044b\u0439";return am.charAt(0).toUpperCase()}catch(an){m.log(an)}return"&#9786;"}}},tinymce:{monkeyPatchUndoManager:true,instance:R},whitelist:function(ap){var am=ap.domNode===af;var ao=ap.type==="node";var an=ap.type==="attribute"&&ap.name==="data-title";if(am){return ao||an}return Synchrony.isWhitelisted(W,ap)}};var T=function(am){ab.val(am.rev.toString());y()};var ag=function(an,am){return K.last(an.filter(function(ao){return ao.meta&&ao.meta[am]}))};var Z=function(aq){var ao=ag(aq.revisions,"user");var at=ao?ao.meta.user:"\u0410\u043d\u043e\u043d\u0438\u043c\u043d\u044b\u0439";function am(){c.handleMessage("editor.synchrony.page-published",{type:"info",message:m.format("{0} \u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043b \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443.",at),close:"auto"});m.trigger("analyticsEvent",{name:"confluence.synchrony.external-changes.publish"})}function ap(){m.Meta.set("new-page",false);m.Meta.set("page-id",s("content-id"));m.Meta.set("draft-id","0");if(!Confluence.Editor.isFallbackModeEnabled()){Confluence.Editor.UI.setButtonState(true,t("#rte-button-discard"))}}function au(av){return aq.revisions.some(function(aw){return aw.meta&&aw.meta.type===av})}function ar(av){return aq.revisions.some(function(aw){return aw.meta&&aw.meta.trigger===av})}if(aq.updateType==="remote"){ab.val(aq.revisions[aq.revisions.length-1].rev.toString());if(ar("reset")){c.handleMessage("editor.synchrony.revert-page",{type:"info",message:m.format("{0} \u0432\u0435\u0440\u043d\u0443\u043b\u0441\u044f \u043a \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u0439 \u0432\u0435\u0440\u0441\u0438\u0438 \u044d\u0442\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b.",at)});m.trigger("analyticsEvent",{name:"confluence.synchrony.external-changes.revert"})}if(ar("publish")){if(s("new-page")){ap()}am()}if(au("external")){m.trigger("editor.external.change")}var an=ag(aq.revisions,"confVersion");if(an&&an.meta.confVersion){t('meta[name="page-version"]').attr("content",an.meta.confVersion);t('meta[name="ajs-page-version"]').attr("content",an.meta.confVersion);m.Meta.set("page-version",an.meta.confVersion)}}setTimeout(function(){if(aq.updateType==="remote"){y()}h(R);if(d(af)){G(R)}if(aq.updateType==="local"){m.trigger("editor.local.change")}},0)};var ad=function(am){ab.val(am.rev.toString());m.trigger("synchrony.entity.ack",{pendingChanges:am.pending.length>0})};var N=function(am){m.log("Synchrony connected.");ab=t("#syncRev");J(am.sid,aa,ai);l.onConnectedState(aa);m.trigger("synchrony.connected");m.trigger("editor.external.change");m.trigger("cursor-target-refresh");if(d(af)){G(R)}};var S=function(){l.onDisconnectedState();m.log("Synchrony disconnected!")};var Y=function(am){if(am.level==="fatal"){m.trigger("editor.error.message",{messageKey:"synchrony-token-expired",message:"\u041c\u044b \u043d\u0435 \u0441\u043c\u043e\u0433\u043b\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0432\u0430\u0448 \u0437\u0430\u043f\u0440\u043e\u0441, \u0442\u0430\u043a \u043a\u0430\u043a \u0432 \u043d\u0435\u043c \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0439 \u043c\u0430\u0440\u043a\u0435\u0440 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438. \u0421\u043a\u043e\u043f\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u0430\u0448\u0443 \u0440\u0430\u0431\u043e\u0442\u0443, \u0437\u0430\u0442\u0435\u043c \u043e\u0442\u043f\u0440\u0430\u0432\u044c\u0442\u0435 \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e \u0444\u043e\u0440\u043c\u0443 \u0438\u043b\u0438 \u043f\u0435\u0440\u0435\u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443.",disablePublish:true})}};var ae={init:T,update:Z,ack:ad,connected:N,disconnected:S,error:Y};m.$("#content-title").keyup(i);function aj(aq){var ap=5000;var ao=t.Deferred();function an(){ao.resolve()}function am(at){if(!at.pending.length){aa.off("ack",am);ab.val(at.rev.toString());an()}}var ar=!aa.ackState().pending.length;if(ar){an()}else{aa.on("ack",am);setTimeout(function(){aa.off("ack",am);ao.reject({origin:"synchrony",cause:"timeout",message:ap/1000+"s timeout exceeded"})},ap)}return ao.promise()}t.when(M,O).always(function(an,ap){var am=an[0];var at=ap[0];var ao;var au={url:al,entityId:ak,jwt:E,presence:true};var ar;if(an[1]!=="success"&&ap[1]!=="success"){m.trigger("analyticsEvent",{name:"confluence.synchrony.client.content.reconciliation.failure"});m.trigger("editor.error.message",{messageKey:"collaborative-editor-load-failure",disablePublish:true});return}if(an[1]==="success"){ar={base:{rev:Synchrony.rev(am.stateAt),state:Synchrony.unmarshal(am.state.value)}};ao=am.stateAt}if(ar&&ap[1]==="success"&&am.stateAt===at.deltaFrom){ar.base.rev=Synchrony.rev(at.deltaTo);ar.base.state=Synchrony.materialize(ar.base.state,Synchrony.unmarshal(at.delta.value));ao=at.deltaTo}if(ar){au.history=ar}if(ao){ab.val(ao)}try{aa=Synchrony.entity(au).bind(af,P);B=new C(aa,{DEBUG_MODE:true});r();Object.keys(ae).forEach(function(av){aa.on(av,ae[av])})}catch(aq){m.trigger("editor.error.message",{messageKey:"synchrony-init-error",disablePublish:true});m.trigger("analyticsEvent",{name:"confluence.synchrony.bind.failure"})}});Confluence.Editor.overrideBeforeSave(aj);require(["confluence-collaborative-editor-plugin/telepointer-cleaner"])}function J(L,M,N){F.appendTo(L,M,N,m.$("#rte-toolbar"))}});require(["confluence-collaborative-editor-plugin/synchrony-editor"],function(){});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.drag-and-drop:plupload', location = 'js/plupload.js' */
(function(){function x(){this.returnValue=!1}function y(){this.cancelBubble=!0}var z=0,p=[],u={},v={},t={},w={"<":"lt",">":"gt","&":"amp",'"':"quot","'":"#39"},A=/[<>&\"\']/g,q=window.setTimeout,m={},h,j="application/msword,doc dot,application/pdf,pdf,application/pgp-signature,pgp,application/postscript,ps ai eps,application/rtf,rtf,application/vnd.ms-excel,xls xlb,application/vnd.ms-powerpoint,ppt pps pot,application/zip,zip,application/java-archive,jar,application/java-archive,war,application/java-archive,ear,application/x-shockwave-flash,swf swfl,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,xlsx,application/vnd.openxmlformats-officedocument.spreadsheetml.template,xltx,application/vnd.openxmlformats-officedocument.presentationml.presentation,pptx,application/vnd.openxmlformats-officedocument.presentationml.slideshow,ppsx,application/vnd.openxmlformats-officedocument.presentationml.template,potx,application/vnd.openxmlformats-officedocument.wordprocessingml.document,docx,application/vnd.openxmlformats-officedocument.wordprocessingml.template,dotx,audio/mpeg,mpga mpega mp2 mp3,audio/mp3,mp3,audio/x-wav,wav,audio/mp4,m4a,image/bmp,bmp,image/gif,gif,image/jpeg,jpeg jpg jpe,image/photoshop,psd,image/png,png,image/svg+xml,svg svgz,image/tiff,tiff tif,text/html,htm html xhtml,text/xml,xml,text/javascript,js,text/css,css,text/rtf,rtf,text/x-java-source,java,video/mpeg,mpeg mpg mpe,video/quicktime,qt mov,video/mp4,mp4,video/x-m4v,m4v,video/x-flv,flv,video/x-ms-wmv,wmv,video/avi,avi,video/webm,webm,video/vnd.rn-realvideo,rv,text/csv,csv,text/plain,asc txt text diff log,application/octet-stream,exe".split(/,/),
k,n,o;for(k=0;k<j.length;k+=2){o=j[k+1].split(/ /);for(n=0;n<o.length;n++){v[o[n]]=j[k];var r=t[j[k]]||[];r.push(o[n]);t[j[k]]=r}}j=navigator;k=j.userAgent;o=j.vendor;r=(n=/WebKit/.test(k))&&-1!==o.indexOf("Apple");o=window.opera&&window.opera.buildNumber;var j={windows:-1!==navigator.platform.indexOf("Win"),ie:!n&&!o&&/MSIE/gi.test(k)&&/Explorer/gi.test(j.appName),webkit:n,gecko:!n&&/Gecko/.test(k),safari:r,opera:!!o},c={VERSION:"@@version@@",STOPPED:1,STARTED:2,QUEUED:1,UPLOADING:2,FAILED:4,DONE:5,
GENERIC_ERROR:-100,HTTP_ERROR:-200,IO_ERROR:-300,SECURITY_ERROR:-400,INIT_ERROR:-500,FILE_SIZE_ERROR:-600,FILE_EXTENSION_ERROR:-601,IMAGE_FORMAT_ERROR:-700,IMAGE_MEMORY_ERROR:-701,IMAGE_DIMENSIONS_ERROR:-702,mimeTypes:v,mineTypeToExtensionsMap:t,ua:j,extend:function(a){c.each(arguments,function(b,g){0<g&&c.each(b,function(b,c){a[c]=b})});return a},getElement:function(a){return a&&1===a.nodeType?a:document.getElementById(a)},cleanName:function(a){var b,c;c=[/[\300-\306]/g,"A",/[\340-\346]/g,"a",/\307/g,
"C",/\347/g,"c",/[\310-\313]/g,"E",/[\350-\353]/g,"e",/[\314-\317]/g,"I",/[\354-\357]/g,"i",/\321/g,"N",/\361/g,"n",/[\322-\330]/g,"O",/[\362-\370]/g,"o",/[\331-\334]/g,"U",/[\371-\374]/g,"u"];for(b=0;b<c.length;b+=2)a=a.replace(c[b],c[b+1]);a=a.replace(/\s+/g,"_");return a=a.replace(/[^a-z0-9_\-\.]+/gi,"")},addRuntime:function(a,b){b.name=a;p[a]=b;p.push(b);return b},guid:function(){var a=(new Date).getTime().toString(32),b;for(b=0;5>b;b++)a+=Math.floor(65535*Math.random()).toString(32);return(c.guidPrefix||
"p")+a+(z++).toString(32)},buildUrl:function(a,b){var g="";c.each(b,function(a,b){g+=(g?"&":"")+encodeURIComponent(b)+"="+encodeURIComponent(a)});g&&(a+=(0<a.indexOf("?")?"&":"?")+g);return a},each:function(a,b){var c,f;if(a)if(c=a.length,void 0===c)for(f in a){if(a.hasOwnProperty(f)&&!1===b(a[f],f))break}else for(f=0;f<c&&!1!==b(a[f],f);f++);},formatSize:function(a){return void 0===a||/\D/.test(a)?c.translate("N/A"):1073741824<a?Math.round(a/1073741824,1)+" GB":1048576<a?Math.round(a/1048576,1)+
" MB":1024<a?Math.round(a/1024,1)+" KB":a+" b"},getPos:function(a,b){function c(a){var b,e=0;b=0;a&&(b=a.getBoundingClientRect(),a="CSS1Compat"===h.compatMode?h.documentElement:h.body,e=b.left+a.scrollLeft,b=b.top+a.scrollTop);return{x:e,y:b}}var f=0,d=0,e,h=document,b=b||h.body;if(a&&a.getBoundingClientRect&&0<navigator.userAgent.indexOf("MSIE")&&8!==h.documentMode)return f=c(a),d=c(b),{x:f.x-d.x,y:f.y-d.y};for(e=a;e&&e!=b&&e.nodeType;)f+=e.offsetLeft||0,d+=e.offsetTop||0,e=e.offsetParent;for(e=
a.parentNode;e&&e!=b&&e.nodeType;)f-=e.scrollLeft||0,d-=e.scrollTop||0,e=e.parentNode;return{x:f,y:d}},getSize:function(a){return{w:a.offsetWidth||a.clientWidth,h:a.offsetHeight||a.clientHeight}},parseSize:function(a){var b;"string"==typeof a&&(a=/^([0-9]+)([mgk]?)$/.exec(a.toLowerCase().replace(/[^0-9mkg]/g,"")),b=a[2],a=+a[1],"g"==b&&(a*=1073741824),"m"==b&&(a*=1048576),"k"==b&&(a*=1024));return a},xmlEncode:function(a){return a?(""+a).replace(A,function(a){return w[a]?"&"+w[a]+";":a}):a},toArray:function(a){var b,
c=[];for(b=0;b<a.length;b++)c[b]=a[b];return c},addI18n:function(a){return c.extend(u,a)},translate:function(a){return u[a]||a},isEmptyObj:function(a){if(void 0===a)return!0;for(var b in a)return!1;return!0},hasClass:function(a,b){return""==a.className?!1:RegExp("(^|\\s+)"+b+"(\\s+|$)").test(a.className)},addClass:function(a,b){c.hasClass(a,b)||(a.className=""==a.className?b:a.className.replace(/\s+$/,"")+" "+b)},removeClass:function(a,b){a.className=a.className.replace(RegExp("(^|\\s+)"+b+"(\\s+|$)"),
function(a,b,c){return" "===b&&" "===c?" ":""})},getStyle:function(a,b){if(a.currentStyle)return a.currentStyle[b];if(window.getComputedStyle)return window.getComputedStyle(a,null)[b]},addEvent:function(a,b,g,f){var d,b=b.toLowerCase();void 0===h&&(h="Plupload_"+c.guid());a.addEventListener?(d=g,a.addEventListener(b,d,!1)):a.attachEvent&&(d=function(){var a=window.event;a.target||(a.target=a.srcElement);a.preventDefault=x;a.stopPropagation=y;g(a)},a.attachEvent("on"+b,d));void 0===a[h]&&(a[h]=c.guid());
m.hasOwnProperty(a[h])||(m[a[h]]={});a=m[a[h]];a.hasOwnProperty(b)||(a[b]=[]);a[b].push({func:d,orig:g,key:f})},removeEvent:function(a,b,g){var f,d;"function"==typeof g?f=g:d=g;b=b.toLowerCase();if(a[h]&&m[a[h]]&&m[a[h]][b]){for(var g=m[a[h]][b],e=g.length-1;0<=e;e--)if(g[e].key===d||g[e].orig===f)if(a.detachEvent?a.detachEvent("on"+b,g[e].func):a.removeEventListener&&a.removeEventListener(b,g[e].func,!1),g[e].orig=null,g[e].func=null,g.splice(e,1),void 0!==f)break;g.length||delete m[a[h]][b];if(c.isEmptyObj(m[a[h]])){delete m[a[h]];
try{delete a[h]}catch(k){a[h]=void 0}}}},removeAllEvents:function(a,b){void 0!==a[h]&&a[h]&&c.each(m[a[h]],function(g,f){c.removeEvent(a,f,b)})},Uploader:function(a){function b(){var a,b=0,d;if(this.state==c.STARTED){for(d=0;d<e.length;d++)!a&&e[d].status==c.QUEUED?(a=e[d],a.status=c.UPLOADING,this.trigger("BeforeUpload",a)&&this.trigger("UploadFile",a)):b++;b==e.length&&(this.stop(),this.trigger("UploadComplete",e))}}function g(){var a,b;d.reset();for(a=0;a<e.length;a++)b=e[a],void 0!==b.size?(d.size+=
b.size,d.loaded+=b.loaded):d.size=void 0,b.status==c.DONE?d.uploaded++:b.status==c.FAILED?d.failed++:d.queued++;void 0===d.size?d.percent=0<e.length?Math.ceil(100*(d.uploaded/e.length)):0:(d.bytesPerSec=Math.ceil(d.loaded/((+new Date-h||1)/1E3)),d.percent=0<d.size?Math.ceil(100*(d.loaded/d.size)):0)}var f={},d,e=[],h;d=new c.QueueProgress;a=c.extend({chunk_size:0,multipart:!0,multi_selection:!0,file_data_name:"file",filters:[]},a);c.extend(this,{state:c.STOPPED,runtime:"",features:{},files:e,settings:a,
total:d,id:c.guid(),init:function(){function f(){var a=s[k++],b,e,d;if(a){b=a.getFeatures();if(e=i.settings.required_features){e=e.split(",");for(d=0;d<e.length;d++)if(!b[e[d]]){f();return}}a.init(i,function(c){c&&c.success?(i.features=b,i.runtime=a.name,i.trigger("Init",{runtime:a.name}),i.trigger("PostInit"),i.refresh()):f()})}else i.trigger("Error",{code:c.INIT_ERROR,message:c.translate("Init error.")})}var i=this,l,s,k=0,j;"function"==typeof a.preinit?a.preinit(i):c.each(a.preinit,function(a,
b){i.bind(b,a)});a.page_url=a.page_url||document.location.pathname.replace(/\/[^\/]+$/g,"/");/^(\w+:\/\/|\/)/.test(a.url)||(a.url=a.page_url+a.url);a.chunk_size=c.parseSize(a.chunk_size);a.max_file_size=c.parseSize(a.max_file_size);i.bind("FilesAdded",function(b,d){b.trigger("Started",d);var f,g,l=0,h;if((f=a.filters)&&f.length){h=[];c.each(f,function(a){c.each(a.extensions.split(/,/),function(a){/^\s*\*\s*$/.test(a)?h.push("\\.*"):h.push("\\."+a.replace(RegExp("["+"/^$.*+?|()[]{}\\".replace(/./g,
"\\$&")+"]","g"),"\\$&"))})});h=RegExp(h.join("|")+"$","i")}for(f=0;f<d.length;f++){g=d[f];g.loaded=0;g.percent=0;g.status=c.QUEUED;if(h&&!h.test(g.name))b.trigger("Error",{code:c.FILE_EXTENSION_ERROR,message:c.translate("File extension error."),file:g});else if(g.size!==void 0&&g.size>a.max_file_size)b.trigger("Error",{code:c.FILE_SIZE_ERROR,message:c.translate("File size error."),file:g});else{e.push(g);l++}}if(l)q(function(){i.trigger("QueueChanged");i.refresh()},1);else return false});a.unique_names&&
i.bind("UploadFile",function(a,b){var c=b.name.match(/\.([^.]+)$/),d="tmp";c&&(d=c[1]);b.target_name=b.id+"."+d});i.bind("UploadProgress",function(a,b){b.percent=b.size>0?Math.ceil(b.loaded/b.size*100):100;g()});i.bind("StateChanged",function(a){if(a.state==c.STARTED)h=+new Date;else if(a.state==c.STOPPED)for(l=a.files.length-1;l>=0;l--)if(a.files[l].status==c.UPLOADING){a.files[l].status=c.QUEUED;g()}});i.bind("QueueChanged",g);i.bind("Error",function(a,e){if(e.file){e.file.status=c.FAILED;g();a.state==
c.STARTED&&(d.queued||q(function(){b.call(i)},1))}});i.bind("FileUploaded",function(a,d){d.status=c.DONE;d.loaded=d.size;a.trigger("UploadProgress",d);q(function(){b.call(i)},1)});if(a.runtimes){s=[];j=a.runtimes.split(/\s?,\s?/);for(l=0;l<j.length;l++)p[j[l]]&&s.push(p[j[l]])}else s=p;f();"function"==typeof a.init?a.init(i):c.each(a.init,function(a,b){i.bind(b,a)})},refresh:function(){this.trigger("Refresh")},start:function(){this.state!=c.STARTED&&(this.state=c.STARTED,this.trigger("StateChanged"),
b.call(this))},stop:function(){this.state!=c.STOPPED&&(this.state=c.STOPPED,this.trigger("CancelUpload"),this.trigger("StateChanged"))},getFile:function(a){var b;for(b=e.length-1;0<=b;b--)if(e[b].id===a)return e[b]},removeFile:function(a){var b;for(b=e.length-1;0<=b;b--)if(e[b].id===a.id)return this.splice(b,1)[0]},splice:function(a,b){var f;f=e.splice(void 0===a?0:a,void 0===b?e.length:b);this.trigger("FilesRemoved",f);this.trigger("QueueChanged");f[0].status==c.UPLOADING&&this.state==c.STARTED&&
this.trigger("CancelUpload");if(!d.queued){var g=this;q(function(){g.trigger("UploadComplete")})}return f},trigger:function(a){var b=f[a.toLowerCase()],c,d;if(b){d=Array.prototype.slice.call(arguments);d[0]=this;for(c=0;c<b.length;c++)if(!1===b[c].func.apply(b[c].scope,d))return!1}return!0},hasEventListener:function(a){return!!f[a.toLowerCase()]},bind:function(a,b,c){var d,a=a.toLowerCase();d=f[a]||[];d.push({func:b,scope:c||this});f[a]=d},unbind:function(a,b){var a=a.toLowerCase(),c=f[a],d;if(c){if(void 0!==
b)for(d=c.length-1;0<=d;d--){if(c[d].func===b){c.splice(d,1);break}}else c=[];c.length||delete f[a]}},unbindAll:function(){var a=this;c.each(f,function(b,c){a.unbind(c)})},destroy:function(){this.trigger("Destroy");this.unbindAll()}})},File:function(a,b,c){this.id=a;this.name=b;this.size=c;this.status=this.percent=this.loaded=0},Runtime:function(){this.getFeatures=function(){};this.init=function(){}},QueueProgress:function(){var a=this;a.size=0;a.loaded=0;a.uploaded=0;a.failed=0;a.queued=0;a.percent=
0;a.bytesPerSec=0;a.reset=function(){a.size=a.loaded=a.uploaded=a.failed=a.queued=a.percent=a.bytesPerSec=0}},runtimes:{}};window.plupload=c})();
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.drag-and-drop:plupload', location = 'js/plupload.html5.js' */
(function(s,j,e,p){function G(e,f,k,g){var b,a,c,q,m=this;var d=y[e.id],r=function(d){b=j.createElement("canvas");b.style.display="none";j.body.appendChild(b);a=b.getContext("2d");c=new Image;c.onerror=c.onabort=function(){g({success:!1})};c.onload=function(){var r,t,j,o;f.width||(f.width=c.width);f.height||(f.height=c.height);q=Math.min(f.width/c.width,f.height/c.height);if(1>q||1===q&&"image/jpeg"===k){r=Math.round(c.width*q);t=Math.round(c.height*q);b.width=r;b.height=t;a.drawImage(c,0,0,r,t);
if("image/jpeg"===k){if(j=new w(atob(d.substring(d.indexOf("base64,")+7))),j.headers&&j.headers.length&&(o=new H,o.init(j.get("exif")[0])&&(o.setExif("PixelXDimension",r),o.setExif("PixelYDimension",t),j.set("exif",o.getBinary()),m.hasEventListener("ExifData")&&m.trigger("ExifData",e,o.EXIF()),m.hasEventListener("GpsData")&&m.trigger("GpsData",e,o.GPS()))),f.quality)try{d=b.toDataURL(k,f.quality/100)}catch(s){d=b.toDataURL(k)}}else d=b.toDataURL(k);d=d.substring(d.indexOf("base64,")+7);d=atob(d);
j&&(j.headers&&j.headers.length)&&(d=j.restore(d),j.purge());b.parentNode.removeChild(b);g({success:!0,data:d})}else g({success:!1})};c.src=d},t;"FileReader"in s?(t=new FileReader,t.readAsDataURL(d),t.onload=function(){r(t.result)}):r(d.getAsDataURL())}function C(){function e(b,a){var c=k?0:-8*(a-1),q=0,m;for(m=0;m<a;m++)q|=g.charCodeAt(b+m)<<Math.abs(c+8*m);return q}function f(b,a,c){c=3===arguments.length?c:g.length-a-1;g=g.substr(0,a)+b+g.substr(c+a)}var k=!1,g;return{II:function(b){if(b===p)return k;
k=b},init:function(b){k=!1;g=b},SEGMENT:function(b,a,c){switch(arguments.length){case 1:return g.substr(b,g.length-b-1);case 2:return g.substr(b,a);case 3:f(c,b,a);break;default:return g}},BYTE:function(b){return e(b,1)},SHORT:function(b){return e(b,2)},LONG:function(b,a){if(a===p)return e(b,4);var c="",q=k?0:-24,m;for(m=0;4>m;m++)c+=String.fromCharCode(a>>Math.abs(q+8*m)&255);f(c,b,4)},SLONG:function(b){b=e(b,4);return 2147483647<b?b-4294967296:b},STRING:function(b,a){for(var c="",a=a+b;b<a;b++)c+=
String.fromCharCode(e(b,1));return c}}}function w(e){var f={65505:{app:"EXIF",name:"APP1",signature:"Exif\x00"},65506:{app:"ICC",name:"APP2",signature:"ICC_PROFILE\x00"},65517:{app:"IPTC",name:"APP13",signature:"Photoshop 3.0\x00"}},k=[],g,b,a=p,c=0;g=new C;g.init(e);if(65496===g.SHORT(0)){b=2;for(e=Math.min(1048576,e.length);b<=e;)if(a=g.SHORT(b),65488<=a&&65495>=a)b+=2;else{if(65498===a||65497===a)break;c=g.SHORT(b+2)+2;f[a]&&g.STRING(b+4,f[a].signature.length)===f[a].signature&&k.push({hex:a,app:f[a].app.toUpperCase(),
name:f[a].name.toUpperCase(),start:b,length:c,segment:g.SEGMENT(b,c)});b+=c}g.init(null);return{headers:k,restore:function(a){g.init(a);var c=new w(a);if(!c.headers)return!1;for(a=c.headers.length;0<a;a--){var d=c.headers[a-1];g.SEGMENT(d.start,d.length,"")}c.purge();b=65504==g.SHORT(2)?4+g.SHORT(4):2;a=0;for(c=k.length;a<c;a++)g.SEGMENT(b,0,k[a].segment),b+=k[a].length;return g.SEGMENT()},get:function(a){for(var c=[],d=0,b=k.length;d<b;d++)k[d].app===a.toUpperCase()&&c.push(k[d].segment);return c},
set:function(a,c){var d=[];"string"===typeof c?d.push(c):d=c;for(var b=ii=0,e=k.length;b<e&&!(k[b].app===a.toUpperCase()&&(k[b].segment=d[ii],k[b].length=d[ii].length,ii++),ii>=d.length);b++);},purge:function(){k=[];g.init(null)}}}}function H(){function e(a,c){var q=f.SHORT(a),m,d,k,h,l,j=[],n={};for(m=0;m<q;m++)if(l=a+12*m+2,k=c[f.SHORT(l)],k!==p){d=f.SHORT(l+=2);h=f.LONG(l+=2);l+=4;j=[];switch(d){case 1:case 7:4<h&&(l=f.LONG(l)+g.tiffHeader);for(d=0;d<h;d++)j[d]=f.BYTE(l+d);break;case 2:4<h&&(l=
f.LONG(l)+g.tiffHeader);n[k]=f.STRING(l,h-1);continue;case 3:2<h&&(l=f.LONG(l)+g.tiffHeader);for(d=0;d<h;d++)j[d]=f.SHORT(l+2*d);break;case 4:1<h&&(l=f.LONG(l)+g.tiffHeader);for(d=0;d<h;d++)j[d]=f.LONG(l+4*d);break;case 5:l=f.LONG(l)+g.tiffHeader;for(d=0;d<h;d++)j[d]=f.LONG(l+4*d)/f.LONG(l+4*d+4);break;case 9:l=f.LONG(l)+g.tiffHeader;for(d=0;d<h;d++)j[d]=f.SLONG(l+4*d);break;case 10:l=f.LONG(l)+g.tiffHeader;for(d=0;d<h;d++)j[d]=f.SLONG(l+4*d)/f.SLONG(l+4*d+4);break;default:continue}h=1==h?j[0]:j;
n[k]=b.hasOwnProperty(k)&&"object"!=typeof h?b[k][h]:h}return n}var f,k,g={},b;f=new C;k={tiff:{274:"Orientation",34665:"ExifIFDPointer",34853:"GPSInfoIFDPointer"},exif:{36864:"ExifVersion",40961:"ColorSpace",40962:"PixelXDimension",40963:"PixelYDimension",36867:"DateTimeOriginal",33434:"ExposureTime",33437:"FNumber",34855:"ISOSpeedRatings",37377:"ShutterSpeedValue",37378:"ApertureValue",37383:"MeteringMode",37384:"LightSource",37385:"Flash",41986:"ExposureMode",41987:"WhiteBalance",41990:"SceneCaptureType",
41988:"DigitalZoomRatio",41992:"Contrast",41993:"Saturation",41994:"Sharpness"},gps:{"0":"GPSVersionID",1:"GPSLatitudeRef",2:"GPSLatitude",3:"GPSLongitudeRef",4:"GPSLongitude"}};b={ColorSpace:{1:"sRGB","0":"Uncalibrated"},MeteringMode:{"0":"Unknown",1:"Average",2:"CenterWeightedAverage",3:"Spot",4:"MultiSpot",5:"Pattern",6:"Partial",255:"Other"},LightSource:{1:"Daylight",2:"Fliorescent",3:"Tungsten",4:"Flash",9:"Fine weather",10:"Cloudy weather",11:"Shade",12:"Daylight fluorescent (D 5700 - 7100K)",
13:"Day white fluorescent (N 4600 -5400K)",14:"Cool white fluorescent (W 3900 - 4500K)",15:"White fluorescent (WW 3200 - 3700K)",17:"Standard light A",18:"Standard light B",19:"Standard light C",20:"D55",21:"D65",22:"D75",23:"D50",24:"ISO studio tungsten",255:"Other"},Flash:{"0":"Flash did not fire.",1:"Flash fired.",5:"Strobe return light not detected.",7:"Strobe return light detected.",9:"Flash fired, compulsory flash mode",13:"Flash fired, compulsory flash mode, return light not detected",15:"Flash fired, compulsory flash mode, return light detected",
16:"Flash did not fire, compulsory flash mode",24:"Flash did not fire, auto mode",25:"Flash fired, auto mode",29:"Flash fired, auto mode, return light not detected",31:"Flash fired, auto mode, return light detected",32:"No flash function",65:"Flash fired, red-eye reduction mode",69:"Flash fired, red-eye reduction mode, return light not detected",71:"Flash fired, red-eye reduction mode, return light detected",73:"Flash fired, compulsory flash mode, red-eye reduction mode",77:"Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected",
79:"Flash fired, compulsory flash mode, red-eye reduction mode, return light detected",89:"Flash fired, auto mode, red-eye reduction mode",93:"Flash fired, auto mode, return light not detected, red-eye reduction mode",95:"Flash fired, auto mode, return light detected, red-eye reduction mode"},ExposureMode:{"0":"Auto exposure",1:"Manual exposure",2:"Auto bracket"},WhiteBalance:{"0":"Auto white balance",1:"Manual white balance"},SceneCaptureType:{"0":"Standard",1:"Landscape",2:"Portrait",3:"Night scene"},
Contrast:{"0":"Normal",1:"Soft",2:"Hard"},Saturation:{"0":"Normal",1:"Low saturation",2:"High saturation"},Sharpness:{"0":"Normal",1:"Soft",2:"Hard"},GPSLatitudeRef:{N:"North latitude",S:"South latitude"},GPSLongitudeRef:{E:"East longitude",W:"West longitude"}};return{init:function(a){g={tiffHeader:10};if(a===p||!a.length)return!1;f.init(a);return 65505===f.SHORT(0)&&"EXIF\x00"===f.STRING(4,5).toUpperCase()?(a=p,a=g.tiffHeader,f.II(18761==f.SHORT(a)),42!==f.SHORT(a+=2)?a=!1:(g.IFD0=g.tiffHeader+f.LONG(a+
2),a=e(g.IFD0,k.tiff),g.exifIFD="ExifIFDPointer"in a?g.tiffHeader+a.ExifIFDPointer:p,g.gpsIFD="GPSInfoIFDPointer"in a?g.tiffHeader+a.GPSInfoIFDPointer:p,a=!0),a):!1},EXIF:function(){var a;a=e(g.exifIFD,k.exif);a.ExifVersion&&(a.ExifVersion=String.fromCharCode(a.ExifVersion[0],a.ExifVersion[1],a.ExifVersion[2],a.ExifVersion[3]));return a},GPS:function(){var a;a=e(g.gpsIFD,k.gps);a.GPSVersionID&&(a.GPSVersionID=a.GPSVersionID.join("."));return a},setExif:function(a,c){if("PixelXDimension"!==a&&"PixelYDimension"!==
a)return!1;var b;b=a;var e,d,h,j=0;if("string"===typeof b)for(hex in e=k.exif,e)if(e[hex]===b){b=hex;break}e=g.exifIFD;d=f.SHORT(e);for(i=0;i<d;i++)if(h=e+12*i+2,f.SHORT(h)==b){j=h+8;break}j?(f.LONG(j,c),b=!0):b=!1;return b},getBinary:function(){return f.SEGMENT()}}}var y={},F;e.runtimes.Html5=e.addRuntime("html5",{getFeatures:function(){var h,f,k,g,b,a;f=k=b=a=!1;s.XMLHttpRequest&&(h=new XMLHttpRequest,k=!!h.upload,f=!(!h.sendAsBinary&&!h.upload));f&&(g=!!(h.sendAsBinary||s.Uint8Array&&s.ArrayBuffer),
b=!(!File||!File.prototype.getAsDataURL&&!s.FileReader||!g),a=!(!File||!File.prototype.mozSlice&&!File.prototype.webkitSlice&&!File.prototype.slice));F=e.ua.safari&&e.ua.windows&&navigator.userAgent&&0<navigator.userAgent.indexOf("Version/4");h=f;f=j.createElement("div");return{html5:h,dragdrop:"draggable"in f||"ondragstart"in f&&"ondrop"in f,jpgresize:b,pngresize:b,multipart:b||!!s.FileReader||!!s.FormData,canSendBinary:g,cantSendBlobInFormData:!(!e.ua.gecko||!s.FormData||!s.FileReader||FileReader.prototype.readAsArrayBuffer),
progress:k,chunks:a,multi_selection:!(e.ua.safari&&e.ua.windows),triggerDialog:e.ua.gecko&&s.FormData||e.ua.webkit||e.ua.windows}},init:function(h,f){function k(a){var c,b,g=[],d,f={};for(b=0;b<a.length;b++)c=a[b],f[c.name]||(f[c.name]=!0,d=e.guid(),y[d]=c,d=new e.File(d,c.fileName||c.name,c.fileSize||c.size),d.nativeFile=c,g.push(d));g.length&&h.trigger("FilesAdded",g)}var g,b;g=this.getFeatures();g.html5?(h.upload=function(a){k(a)},h.bind("Init",function(a){var c,b,g=[],d,f,t=a.settings.filters,
l,s;d=j.body;var n;c=j.createElement("div");c.id=a.id+"_html5_container";e.extend(c.style,{position:"absolute",background:h.settings.shim_bgcolor||"transparent",width:"100px",height:"100px",overflow:"hidden",zIndex:99999,opacity:h.settings.shim_bgcolor?"":0});c.className="plupload html5";h.settings.container&&(d=j.getElementById(h.settings.container),"static"===e.getStyle(d,"position")&&(d.style.position="relative"));d.appendChild(c);d=0;a:for(;d<t.length;d++){l=t[d].extensions.split(/,/);for(f=0;f<
l.length;f++){if("*"===l[f]){g=[];break a}(s=e.mimeTypes[l[f]])&&g.push(s)}}c.innerHTML='<input id="'+h.id+'_html5"  style="font-size:999px" type="file" accept="'+g.join(",")+'" '+(h.settings.multi_selection&&h.features.multi_selection?'multiple="multiple"':"")+" />";c.scrollTop=100;n=j.getElementById(h.id+"_html5");h.settings.inputFileClazz&&(n.className+=" "+h.settings.inputFileClazz);a.features.triggerDialog?e.extend(n.style,{position:"absolute",width:"100%",height:"100%"}):e.extend(n.style,{cssFloat:"right",
styleFloat:"right"});var p=function(){k(this.files);if(navigator.appVersion.indexOf("MSIE10")===-1){n=this.cloneNode(true);n.onchange=p;this.parentNode.replaceChild(n,this)}else this.value=""};n.onchange=p;if(b="string"===typeof a.settings.browse_button?j.getElementById(a.settings.browse_button):a.settings.browse_button){var o=a.settings.browse_button_hover,B=a.settings.browse_button_active;c=a.features.triggerDialog?b:c;o&&(e.addEvent(c,"mouseover",function(){e.addClass(b,o)},a.id),e.addEvent(c,
"mouseout",function(){e.removeClass(b,o)},a.id));B&&(e.addEvent(c,"mousedown",function(){e.addClass(b,B)},a.id),e.addEvent(j.body,"mouseup",function(){e.removeClass(b,B)},a.id));a.features.triggerDialog&&e.addEvent(b,"click",function(c){j.getElementById(a.id+"_html5").click();c.preventDefault()},a.id)}}),h.bind("PostInit",function(){var a=e.getElement(h.settings.drop_element),c,b=!1;a&&(F?(e.addEvent(a,"dragenter",function(){var c,d;c=j.getElementById(h.id+"_drop");c||(c=j.createElement("input"),
c.setAttribute("type","file"),c.setAttribute("id",h.id+"_drop"),c.setAttribute("multiple","multiple"),e.addEvent(c,"change",function(){k(this.files);e.removeEvent(c,"change",h.id);c.parentNode.removeChild(c)},h.id),a.appendChild(c),b=!0);e.getPos(a,j.getElementById(h.settings.container));d=e.getSize(a);"static"===e.getStyle(a,"position")&&e.extend(a.style,{position:"relative"});e.extend(c.style,{position:"absolute",display:"block",top:0,left:0,width:d.w+"px",height:d.h+"px",opacity:0})},h.id),e.addEvent(a,
"dragleave",function(){b||(c&&c.parentElement.removeChild(c),c=null);b=!1})):(e.addEvent(a,"dragover",function(a){a.preventDefault()},h.id),e.addEvent(a,"drop",function(a){if(!$(".disable-attachment-uploader").length){var b=a.dataTransfer;b&&b.files&&k(b.files)}c&&c.parentElement.removeChild(c);c=null;a.preventDefault();h.settings.stop_propagation&&(a.cancelBubble?a.cancelBubble=!0:a.stopPropagation())},h.id)))}),h.bind("Refresh",function(a){var c,b,f;if(c=j.getElementById(h.settings.browse_button))b=
e.getPos(c,j.getElementById(a.settings.container)),f=e.getSize(c),a=j.getElementById(h.id+"_html5_container"),e.extend(a.style,{top:b.y+"px",left:b.x+"px",width:f.w+"px",height:f.h+"px"}),h.features.triggerDialog&&("static"===e.getStyle(c,"position")&&e.extend(c.style,{position:"relative"}),b=parseInt(e.getStyle(c,"z-index"),10),isNaN(b)&&(b=0),e.extend(c.style,{zIndex:b}),e.extend(a.style,{zIndex:b-1}))}),h.bind("CancelUpload",function(){b&&b.abort&&b.abort()}),h.bind("UploadFile",function(a,c){function f(d){function k(){function f(d){var h=
0,m="----pluploadboundary"+e.guid(),n,r="";b=new XMLHttpRequest;b.upload&&(b.upload.onprogress=function(b){c.loaded=Math.min(c.size,q+b.loaded-h);a.trigger("UploadProgress",c)});b.onreadystatechange=function(){var f,g;if(b.readyState==4){try{f=b.status}catch(h){f=0}if(f>=400)a.trigger("Error",{code:e.HTTP_ERROR,message:e.translate("HTTP Error."),file:c,status:f,response:b.responseText||""});else{if(p){g={chunk:j,chunks:p,response:b.responseText,status:f};a.trigger("ChunkUploaded",c,g);q=q+z;if(g.cancelled){c.status=
e.FAILED;return}c.loaded=Math.min(c.size,(j+1)*u)}else c.loaded=c.size;a.trigger("UploadProgress",c);d=o=n=r=null;if(!p||++j>=p){c.status=e.DONE;a.trigger("FileUploaded",c,{response:b.responseText,status:f})}else k()}}};if(a.settings.multipart&&g.multipart){x.name=c.target_name||c.name;b.open("post",D,!0);e.each(a.settings.headers,function(a,c){b.setRequestHeader(c,a)});if("string"!==typeof d&&s.FormData){n=new FormData;e.each(e.extend(x,a.settings.multipart_params),function(a,b){n.append(b,a)});
n.append(a.settings.file_data_name,d);b.send(n);return}if("string"===typeof d){b.setRequestHeader("Content-Type","multipart/form-data; boundary="+m);e.each(e.extend(x,a.settings.multipart_params),function(a,b){r=r+("--"+m+'\r\nContent-Disposition: form-data; name="'+b+'"\r\n\r\n');r=r+(unescape(encodeURIComponent(a))+"\r\n")});y=e.mimeTypes[c.name.replace(/^.+\.([^.]+)/,"$1").toLowerCase()]||"application/octet-stream";r+="--"+m+'\r\nContent-Disposition: form-data; name="'+a.settings.file_data_name+
'"; filename="'+unescape(encodeURIComponent(c.name))+'"\r\nContent-Type: '+y+"\r\n\r\n"+d+"\r\n--"+m+"--\r\n";h=r.length-d.length;d=r;if(b.sendAsBinary)b.sendAsBinary(d);else if(g.canSendBinary){for(var w=new Uint8Array(d.length),v=0;v<d.length;v++)w[v]=d.charCodeAt(v)&255;b.send(w.buffer)}return}}D=e.buildUrl(a.settings.url,e.extend(x,a.settings.multipart_params));b.open("post",D,!0);b.setRequestHeader("Content-Type","application/octet-stream");d.encoding&&b.setRequestHeader("Content-Encoding",d.encoding);
e.each(a.settings.headers,function(a,c){b.setRequestHeader(c,a)});b.send(d.getData?d.getData():d)}var o,p,x,u,z,y,D=a.settings.url;if(!(c.status==e.DONE||c.status==e.FAILED||a.state==e.STOPPED)){x={name:c.target_name||c.name};if(h.chunk_size&&c.size>h.chunk_size&&(g.chunks||"string"==typeof d)){u=h.chunk_size;p=Math.ceil(c.size/u);z=Math.min(u,c.size-j*u);if("string"==typeof d)o=d.substring(j*u,j*u+z);else{var v=d,A=j*u,E=j*u+z,w;if(File.prototype.slice)try{v.slice(),o=v.slice(A,E)}catch(C){o=v.slice(A,
E-A)}else o=(w=File.prototype.webkitSlice||File.prototype.mozSlice)?w.call(v,A,E):null}x.chunk=j;x.chunks=p}else z=c.size,o=d;"string"!==typeof o&&n&&g.cantSendBlobInFormData&&g.chunks&&a.settings.chunk_size?(n.onload=function(){f(n.result)},n.readAsBinaryString(o)):f(o)}}var j=0,q=0,n="FileReader"in s?new FileReader:null;k()}var h=a.settings,d;d=y[c.id];g.jpgresize&&a.settings.resize&&/\.(png|jpg|jpeg)$/i.test(c.name)?G.call(a,c,a.settings.resize,/\.png$/i.test(c.name)?"image/png":"image/jpeg",function(a){a.success?
(c.size=a.data.length,f(a.data)):f(d)}):f(d)}),h.bind("Destroy",function(a){var b,f,g=j.body,d={inputContainer:a.id+"_html5_container",inputFile:a.id+"_html5",browseButton:a.settings.browse_button,dropElm:a.settings.drop_element};for(b in d)(f=j.getElementById(d[b]))&&e.removeAllEvents(f,a.id);e.removeAllEvents(j.body,a.id);a.settings.container&&(g=j.getElementById(a.settings.container));g.removeChild(j.getElementById(d.inputContainer))}),f({success:!0})):f({success:!1})}})})(window,document,plupload);
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'confluence.web.resources:defaults', location = '/includes/js/defaults.js' */
define("confluence/defaults",[],function(){return{maxResults:50}});require("confluence/module-exporter").exportModuleAsGlobal("confluence/defaults","Confluence.Defaults");
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:panel-components', location = 'files/file-item/file-item.soy' */
// This file was automatically generated from file-item.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace Confluence.Templates.File.
 */

if (typeof Confluence == 'undefined') { var Confluence = {}; }
if (typeof Confluence.Templates == 'undefined') { Confluence.Templates = {}; }
if (typeof Confluence.Templates.File == 'undefined') { Confluence.Templates.File = {}; }


Confluence.Templates.File.fileDialogListItem = function(opt_data, opt_ignored) {
  return '<li class="attached-file loading" data-attachment-id="' + soy.$$escapeHtml(opt_data.file.id) + '" data-owner-id="' + soy.$$escapeHtml(opt_data.file.ownerId) + '" data-file-name="' + soy.$$escapeHtml(opt_data.file.fileName) + '"><div class="file-container" title="' + soy.$$escapeHtml(opt_data.tooltip) + '">' + ((opt_data.file.isImage) ? '<img class="thumbnail hidden" src="' + soy.$$escapeHtml(opt_data.file.nonceUrl) + '" ><a href="' + soy.$$escapeHtml(opt_data.file.downloadUrl) + '" class="abs-icon zoom">Zoom</a><p class="hidden image-preview-throbber">&nbsp;</p>' : (opt_data.file.isPreviewable) ? '<span class="thumbnail ' + soy.$$escapeHtml(opt_data.file.iconClass) + '" ><i class="aui-icon size-48 svg-icon ' + soy.$$escapeHtml(opt_data.file.iconAUIClass) + '">File</i></span><a href="' + soy.$$escapeHtml(opt_data.file.downloadUrl) + '" class="abs-icon zoom">Zoom</a><p class="hidden image-preview-throbber">&nbsp;</p>' : '<span class="thumbnail ' + soy.$$escapeHtml(opt_data.file.iconClass) + '" ><i class="aui-icon size-48 svg-icon ' + soy.$$escapeHtml(opt_data.file.iconAUIClass) + '">File</i></span>') + '<i class="abs-icon select">Select</i></div><span class="caption filename" title="' + soy.$$escapeHtml(opt_data.file.fileName) + '">' + soy.$$filterNoAutoescape(opt_data.highlightedImageNameContent) + '</span>' + ((opt_data.highlightedParentTitleContent) ? '<span class="caption owner-title" title="' + soy.$$escapeHtml(opt_data.file.parentTitle) + '">' + soy.$$filterNoAutoescape(opt_data.highlightedParentTitleContent) + '</span>' : '') + '</li>';
};
if (goog.DEBUG) {
  Confluence.Templates.File.fileDialogListItem.soyTemplateName = 'Confluence.Templates.File.fileDialogListItem';
}


Confluence.Templates.File.fileDialogListItemPlaceHolder = function(opt_data, opt_ignored) {
  return '<li class="attached-file loading" data-attachment-id="' + soy.$$escapeHtml(opt_data.file.id) + '" data-file-name="' + soy.$$escapeHtml(opt_data.file.fileName) + '"><div class="file-container" title="' + soy.$$escapeHtml(opt_data.file.fileName) + '">' + ((opt_data.file.isImage && opt_data.file.url) ? '<img class="thumbnail" src="' + soy.$$escapeHtml(opt_data.file.url) + '">' : '<span class="thumbnail"><i class="aui-icon size-48 svg-icon ' + soy.$$escapeHtml(opt_data.file.iconAUIClass) + '">File</i></span>') + '<div id="docs-progress-bar-' + soy.$$escapeHtml(opt_data.file.fileId) + '" class="aui-progress-indicator"><span class="aui-progress-indicator-value"></span></div><div class="overlay"></div><i class="aui-icon aui-icon-small aui-iconfont-close-dialog abs-icon cancel">Cancel</i></div><span class="caption filename" title="' + soy.$$escapeHtml(opt_data.file.fileName) + '">' + soy.$$escapeHtml(opt_data.file.fileName) + '</span><span class="caption owner-title hidden" title=""></span></li>';
};
if (goog.DEBUG) {
  Confluence.Templates.File.fileDialogListItemPlaceHolder.soyTemplateName = 'Confluence.Templates.File.fileDialogListItemPlaceHolder';
}

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:panel-components', location = 'files/file-item/file-item-model.js' */
define('confluence-editor/files/file-item/file-item-model', [
    'backbone',
    'confluence/legacy',
    'ajs',
    'underscore',
    'plupload'
], function(
    Backbone,
    Confluence,
    AJS,
    _,
    plupload
) {
    "use strict";

    /**
     * FileItemModel is wrapper for 'file' or 'image' object that returns from server
     */
    var FileItemModel = Backbone.Model.extend({

        defaults: {
            id: -1,
            ownerId: -1,
            fileName: "",
            nonceUrl: "",
            isImage: false,
            isFilePlaceHolder: false,
            isSelect: false,
            thumbnailUrl: "",
            downloadUrl: ""
        },

        initialize: function () {
            var that = this;
            this._findDownloadUrl();
            this._findThumbnailUrl();

            this.set("fileName", this.getFileName());
            this.set("nonceUrl", this.getNonceUrl());
            this.set("isImage", this.isImage());
            this.set("isPreviewable", this.isPreviewable());
            if (this.get("attachmentId")) {
                this.set("id", this.get("attachmentId"));
            }

            if (this.get("isFilePlaceHolder")) {
                this.set("id", this.get("fileId"));
            }

            //for IE9 only
            this.listenTo(this, "change:link", function () {
                that.set("nonceUrl", that.getNonceUrl());
                that._findDownloadUrl();
            });

            this.set("iconAUIClass", this._parseFileNameToAuiIconClass(this.get("fileName")));
        },

        isImage: function () {
            if (this.get("isImage")) {
                return true;
            }
            return !!this.get("thumbnailUrl");
        },

        /**
         * Preview button is only applied with "pdf" and "image" file types.
         */
        isPreviewable: function() {
            var niceType = this.get("niceType") || "";
            return niceType.toLocaleLowerCase() === "pdf document" || this.isImage();
        },

        getFileName: function () {
            return this.get("fileName") || this.get("name") || "";
        },

        getDestinationUrl: function () {
            return AJS.REST.wikiLink(this.attributes).destination;
        },

        getNonceUrl: function () {
            var thumbnailUrl = this.get("thumbnailUrl");

            if (thumbnailUrl.indexOf("modificationDate") >= 0) {
                return thumbnailUrl;
            }

            var lastModifiedDate = this.get("lastModifiedDate");
            lastModifiedDate = lastModifiedDate ? lastModifiedDate.date : (+new Date());
            lastModifiedDate = encodeURIComponent(lastModifiedDate);

            if (thumbnailUrl) {
                var extraParam = (thumbnailUrl.indexOf("?") + 1 ? "&" : "?") + "nonce=" + lastModifiedDate;
                thumbnailUrl = thumbnailUrl + extraParam;
            }
            return thumbnailUrl ;
        },

        getRelativeUrl: function (url) {
            if (!url) {
                return url;
            }

            if (url.indexOf(Confluence.getBaseUrl()) === 0) {
                url = url.replace(Confluence.getBaseUrl(), "");
                url = AJS.contextPath() + url;
            }

            return url;
        },

        _findThumbnailUrl: function () {
            if (!this.get("thumbnailUrl") && this.get("thumbnailLink")) {
                this.set("thumbnailUrl", this.getRelativeUrl(this.get("thumbnailLink").href));
            }
        },

        _findDownloadUrl: function () {
            // REST API
            var links = this.get("link");
            if (!this.get("downloadUrl") && links) {
                var downloadUrl = _.findWhere(links, {rel: "download"}).href;
                this.set("downloadUrl", this.getRelativeUrl(downloadUrl));
            }

        },

        _getFileExtension: function(fileName) {
            return fileName.substr(fileName.lastIndexOf(".") + 1);
        },

        _parseFileNameToAuiIconClass: function (fileName) {
            var fileMime = (typeof plupload !== "undefined")
                    ? plupload.mimeTypes[this._getFileExtension(fileName)]
                    : "";

            return AJS.Confluence.FileTypesUtils.getAUIIconFromMime(fileMime);
        }

    });

    return FileItemModel;
});

require('confluence/module-exporter').exportModuleAsGlobal('confluence-editor/files/file-item/file-item-model', 'Confluence.Editor.FileDialog.FileItemModel');

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:panel-components', location = 'files/file-item/file-item-view.js' */
define('confluence-editor/files/file-item/file-item-view', [
    'backbone',
    'confluence/templates',
    'confluence/highlighter',
    'raphael',
    'underscore',
    'wrm',
    'jquery'
], function(
    Backbone,
    Templates,
    Highlighter,
    Raphael,
    _,
    WRM,
    $
) {
    "use strict";

    /**
     * FileItemView is used for rendering file item
     * File item is Image item or Non-image item
     */
    var FileItemView = Backbone.View.extend({
        template: Templates.File.fileDialogListItem,

        model: null,// is instance of FileItemModel

        /**
         * Constructor
         * @param model is an FileItemModel object containing the image/file properties
         * @param showContainerInfo indicates if the container info (space/page name) should be rendered
         * @param highlighter highlight
         */
        initialize: function (options) {
            var that = this;

            this.eventListener = options.eventListener;
            this.model = options.model;
            this.showContainerInfo = options.showContainerInfo;
            this.highlighter = options.highlighter;

            //when isSelect attribute changes value
            this.listenTo(this.model, "change:isSelect", function () {
                that.$el.toggleClass("selected", that.model.get("isSelect"));
            });
        },

        render: function () {
            var highlighter = this.highlighter || new Highlighter();
            var space = this.model.get("space");
            var fileName = this.model.getFileName();

            var tooltip = (this.showContainerInfo && space) ?
            fileName + " (" + space.name +  ")" :
                    fileName;

            var optionGeneral = {
                file: this.model.attributes,
                tooltip: tooltip,
                highlightedImageNameContent: highlighter.highlight(fileName),
                highlightedParentTitleContent: this.showContainerInfo ? highlighter.highlight(this.model.attributes.parentTitle) : null
            };

            this.$el = $(this.template(optionGeneral));
            this.el = this.$el[0];

            //begin to bind events
            this.delegateEvents();

            this.$el.find(".file-container").tooltip({
                aria:true
            });

            this.$el.attr("data-destination", this.model.getDestinationUrl());

            if (this.model.get("isImage")) {
                this._renderLoadingSpinner();
            }
            else {
                this.$el.removeClass("loading");
            }

            if (this.model.get("isPreviewable")) {
                this._renderPreviewButton();
            }

            return this;
        },

        _renderPreviewButton: function () {
            var $previewLink = this.$(".zoom");

            $previewLink.on("click", _.bind(function (e) {
                e.preventDefault();

                var fileInfo = {
                    src: this.model.get("downloadUrl"),
                    thumbnail: this.model.get("nonceUrl") || this.model.get("downloadUrl"),
                    type: this.model.get("contentType"),
                    rank: 0,
                    title: this.model.getFileName(),
                    id: this.model.get("id"),
                    ownerId: this.model.get("ownerId"),
                    version: this.model.get("version")
                };

                this._setupAndShowPreviewer(fileInfo);
            }, this));
        },

        _setupAndShowPreviewer: function (file) {
            var opt = {
                viewMode: "simple",
                // Because AUI Dialog v1 does not support a mechanism to turn off or override ESC handler,
                // so we need to hide the dialog element to prevent processing hiding of AUI Dialog.
                openPreviewCallback : function () {
                    // hide Insert File Dialog
                    $("#insert-image-dialog").hide();
                    $(".aui-blanket").hide();
                },
                closePreviewCallback: function () {
                    $("#insert-image-dialog").show();
                    $(".aui-blanket").show();
                }
            };

            var showPreviewerForFile = _.bind(function (file, opt) {
                this.loader = require("cp/confluence/file-preview-loader");
                var fileViewer = this.loader.setupPreviewForSingleFile([file], opt);

                fileViewer.on("fv.open", opt.openPreviewCallback);
                fileViewer.on("fv.close", opt.closePreviewCallback);

                fileViewer.open();
                fileViewer.showFileWhere();
            }, this);

            // load Preview resource
            if (!this.dfd) {
                this.dfd = WRM.require("wr!com.atlassian.confluence.plugins.confluence-previews:confluence-previews-resources", _.partial(showPreviewerForFile, file, opt));
            } else {
                this.dfd.done(_.partial(showPreviewerForFile, file, opt));
            }
        },

        _renderLoadingSpinner: function() {
            var that = this;

            var $throbber = this.$el.find(".image-preview-throbber").removeClass("hidden");
            var killSpinner = Raphael.spinner($throbber[0], 8, "#666");

            var $img = this.$el
                    .find("img")
                    .load(function () {
                        killSpinner();
                        $throbber.remove();
                        $img.removeClass("hidden");
                        that.$el.removeClass("loading");
                    });
        }

    });

    return FileItemView;
});

require('confluence/module-exporter').exportModuleAsGlobal('confluence-editor/files/file-item/file-item-view', 'Confluence.Editor.FileDialog.FileItemView');

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:panel-components', location = 'files/file-item/file-placeholder-view.js' */
define('confluence-editor/files/file-item/file-placeholder-view', [
    'backbone',
    'confluence/templates',
    'underscore',
    'ajs',
    'jquery'
], function(
    Backbone,
    Templates,
    _,
    AJS,
    $
) {
    "use strict";

    /**
     * FilePlaceHolderView is used for rendering file item place holder
     */
    var FilePlaceHolderView = Backbone.View.extend({
        model: null,// is instance of FileItemModel
        template: Templates.File.fileDialogListItemPlaceHolder,

        initialize: function (options) {
            this.model = options.model;
            this.eventListener = options.eventListener;

            this.eventListener.on("file.placeholder.process", _.bind(this._setUploadInProgress, this));
        },

        events: {
            "click .cancel" : "_cancelUpload"
        },

        render: function () {
            this.$el = $(this.template({file: this.model.attributes}));
            this.el = this.$el[0];
            this.delegateEvents();
            return this;
        },

        _setUploadInProgress: function (percentage, fileClientId) {
            var $progressBar = this.$el.find("#docs-progress-bar-" + fileClientId || "");

            if (!$progressBar.length) {
                return;
            }

            //if upload complete => hide cancel button
            if (percentage === 1) {
                this.$(".cancel").hide();
            }

            $progressBar.show();
            AJS.progressBars.update($progressBar, percentage);
        },

        _cancelUpload: function() {
            this.eventListener.trigger("uploadingfile.cancelled", this.model.get("fileId"));
        }
    });

    return FilePlaceHolderView;
});

require('confluence/module-exporter').exportModuleAsGlobal('confluence-editor/files/file-item/file-placeholder-view', 'Confluence.Editor.FileDialog.FilePlaceHolderView');

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:panel-components', location = 'files/file-list/file-list-collection.js' */
define('confluence-editor/files/file-list/file-list-collection', [
    'backbone',
    'confluence-editor/files/file-item/file-item-model',
    'underscore'
], function(
    Backbone,
    FileItemModel,
    _
) {
    "use strict";

    var FileListCollection = Backbone.Collection.extend({
        model: FileItemModel,

        clearSelection: function () {
            this.each(function (model) {
                model.get("isSelect") && model.set("isSelect", false);
            });
            this.trigger("clear.selection");
        },

        getAllSelectItems: function () {
            return this.filter(function (model) {
                return model.get("isSelect");
            });
        },

        setSelection: function (models) {
            _.each(models, function (model) {
                return model.set("isSelect", true);
            });
        },

        resetFiles: function(models) {
            this.reset();
            for (var i = 0; i < models.length; i++) {
                this.addFile(models[i]);
            }
        },

        addFile: function(model) {
            var addedModels = this.add(model);
            this.trigger("add-file", addedModels.at(addedModels.length - 1));
        },

        removeFile: function(model) {
            this.remove(model);
            this.trigger("remove-file", model);
        },

        replaceFile: function(oldModel, newModel) {
            this.remove(oldModel);
            this.add(newModel);
            this.trigger("replace-file", oldModel, newModel);
        }
    });

    return FileListCollection;
});

require('confluence/module-exporter').exportModuleAsGlobal('confluence-editor/files/file-list/file-list-collection', 'Confluence.Editor.FileDialog.FileListCollection');

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:panel-components', location = 'files/file-list/file-list-view.js' */
define('confluence-editor/files/file-list/file-list-view', [
    'backbone',
    'confluence-editor/files/file-item/file-item-view',
    'confluence-editor/files/file-item/file-item-model',
    'confluence-editor/files/file-item/file-placeholder-view',
    'ajs',
    'jquery'
], function(
    Backbone,
    FileItemView,
    FileItemModel,
    FilePlaceHolderView,
    AJS,
    $
) {
    "use strict";

    var FileListView = Backbone.View.extend({
        eventListener: null,

        events: {
            "click": "_clearSelection",
            "click li.attached-file": "_clickItem",
            "dblclick li.attached-file": "_doubleClickItem"
        },

        initialize: function (options) {
            var that = this;

            this.collection = options.collection;

            if (options.eventListener) {
                this.eventListener = options.eventListener;
                this.listenTo(this.eventListener, "uploadingfile.completed", this._addUploadedFile);
                this.listenTo(this.eventListener, "uploadingfile.cancelled", this._cancelUploadingFile);
            }

            this.listenTo(this.collection, "reset", this._clearFileList);
            this.listenTo(this.collection, "add-file", this._renderNewItem);
            this.listenTo(this.collection, "remove-file", this._removeItem);
            this.listenTo(this.collection, "replace-file", this._replaceItem);
            this.listenTo(this.collection, "change:isSelect", function () {
                this.context.setSelectItems(this.collection.getAllSelectItems());
            });
            //for IE9 only
            this.listenTo(this.collection, "change:link", function (fileModel) {
                //re-render in dom, the new item will be rendered at beginning of list
                that.collection.removeFile(fileModel);
                that.collection.addFile(fileModel);
            });

            this.updateDialogContext(options.context);
            this.updatePanelContext(options.panelContext);
        },

        _addUploadedFile: function(fileClientId, fileServerId) {
            var that = this;

            var url = AJS.contextPath() + "/rest/prototype/1/attachment/" + fileServerId + ".json";
            var xhr = $.get(url);
            xhr.done(function(json){
                var newFileModel = new FileItemModel(json);

                var filePlaceholderModel = that.collection.get(fileClientId);
                if (!filePlaceholderModel) {
                    filePlaceholderModel = that.collection.findWhere({fileName: newFileModel.get('fileName')});
                }

                if (filePlaceholderModel) {
                    that.collection.replaceFile(filePlaceholderModel, newFileModel);
                } else {
                    that.collection.addFile(newFileModel);
                }
            });
        },

        _cancelUploadingFile: function(fileClientId) {
            var filePlaceholderModel = this.collection.get(fileClientId);
            if (filePlaceholderModel) {
                if (filePlaceholderModel.get("previousUploadedFile")) {
                    this.collection.replaceFile(filePlaceholderModel, filePlaceholderModel.get("previousUploadedFile"));
                }
                else {
                    this.collection.removeFile(filePlaceholderModel);
                }
            }
        },

        render: function () {
            return this;
        },

        resetFileList: function (files, options) {
            options = options || {};

            //clean some DOM before rendering
            this.$el.find(".loading-message").addClass("hidden");
            this.$el.find(".no-files").remove();

            this.collection.resetFiles(files);

            if (this.collection.length === 0) {
                this.$fileList.before($("<p></p>").addClass("no-files").text(this.noFileMessage));
            }

            options.shouldClearSelection && this.collection.clearSelection();

            this._checkError(options.errors);
            this.$el.sizeToFit();
        },

        _getViewFromModel: function(fileModel) {
            if (fileModel.get("isFilePlaceHolder")) {
                return new FilePlaceHolderView({
                    model: fileModel,
                    eventListener: this.eventListener
                }).render();
            }
            else {
                return new FileItemView({
                    model: fileModel,
                    showContainerInfo: this.showContainerInfo,
                    highlighter: this.highlighter,
                    eventListener: this.eventListener
                }).render();
            }
        },

        /**
         * Render a new FileItemView or FilePlaceHolderView in beginning of file list.
         * @param fileModel
         * @private
         */
        _renderNewItem: function (fileModel) {
            if (!this.$fileList || !this.$fileList.length) {
                return;
            }

            var fileItemView = this._getViewFromModel(fileModel);
            this.$fileList.prepend(fileItemView.el);

            if (!fileModel.get("isFilePlaceHolder")) {
                fileModel.set("isSelect", true);
            }
        },

        /**
         * When a file item is removed from colletion
         * @param fileModel
         * @private
         */
        _removeItem: function (fileModel) {
            if (!this.$fileList || !this.$fileList.length) {
                return;
            }

            var oldEl = this._getDomElementByFileName(fileModel.get("fileName"));
            if (oldEl) {
                oldEl.remove();
            }
        },

        _replaceItem: function (oldFileModel, newFileModel) {
            if (!this.$fileList || !this.$fileList.length) {
                return;
            }

            var newFileItemView = this._getViewFromModel(newFileModel);
            var oldEl = this._getDomElementByFileName(oldFileModel.get("fileName"));
            if (oldEl && oldEl.length) {
                oldEl.replaceWith(newFileItemView.el);
            }
            else {
                this.$fileList.prepend(newFileItemView.el);
            }

            newFileModel.set("isSelect", true);
        },

        _getDomElementByFileName: function(fileName) {
            var $el = null;
            this.$fileList.find("li").each(function() {
                var $this = $(this);
                if ($this.attr("data-file-name") === fileName) {
                    $el = $this;
                }
            });
            return $el;
        },

        /**
         * Update options: panelContext
         */
        updatePanelContext: function (panelContext) {
            if (!panelContext) {
                return;
            }

            this.panelContext = panelContext;
            this.errors = this.panelContext.errors || [];

            this.fileContainer = this.panelContext.fileContainer;

            this.$el = this.fileContainer;
            this.el = this.$el[0];
            this.$fileList = this.$el.find(".file-list");

            //bind events to DOM
            this.delegateEvents();

            //this.files = this.panelContext.files || this.panelContext.images || [];

            this.noFileMessage = this.panelContext.noFileMessage;
            this.showContainerInfo = this.panelContext.showContainerInfo;
            this.highlighter = this.panelContext.highlighter;
            this.displayErrors = this.panelContext.displayErrors;
        },

        updateDialogContext: function (context) {
            if (!context) {
                return;
            }

            this.context = context;
            this.contextOptions = this.context.options;
        },

        _checkError: function (errors) {
            errors = errors || [];

            if (errors && errors.length) {
                this.displayErrors(errors);
            }
        },

        _clearSelection: function (e) {
            var $target = e && $(e.target);

            //do not clear selection when clicking close tip message
            if ($target && $target.hasClass('close-tip')) {
                return;
            }

            this.collection.clearSelection();
            this.$el.find(".current").removeClass("current");
        },

        _clearFileList: function () {
            this.$fileList && this.$fileList.empty();
        },

        _clickItem: function (e) {
            // prevent propagation to container, which when clicked deselects
            e.stopPropagation();
            e.preventDefault();

            //if user click zoom button, do not select the whole item
            var $target = $(e.target);
            if ($target.closest(".zoom").length) {
                return;
            }

            //do not clean current class when trigger click by shortcut
            if (!e.isTrigger) {
                this.$fileList.find(".current").removeClass("current");
            }

            var $item = $target.closest("li");
            var id = $item.attr("data-attachment-id");
            var selectFileItem = this.collection.get(id);

            //do now allow click on uploading one
            if (selectFileItem &&
                    !selectFileItem.get("isFilePlaceHolder")) {
                selectFileItem.set("isSelect", !selectFileItem.get("isSelect"));
            }
        },

        _doubleClickItem: function (e) {
            var $item = $(e.target).closest("li");
            var id = $item.attr("data-attachment-id");
            var selectFileItem = this.collection.get(id);

            //do now allow double-click on uploading one
            if (selectFileItem &&
                    !selectFileItem.get("isFilePlaceHolder")) {

                $item.click();
                this.context.insert();
            }
        }
    });

    return FileListView;
});

require('confluence/module-exporter').exportModuleAsGlobal('confluence-editor/files/file-list/file-list-view', 'Confluence.Editor.FileDialog.FileListView');
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:panel-components', location = 'files/base-panel/base-panel-view.js' */
define('confluence-editor/files/base-panel/base-panel-view', [
    'backbone',
    'ajs',
    'jquery'
], function(
    Backbone,
    AJS,
    $
) {
    "use strict";

    /**
     * This is abstract class.
     * It contains some general properties & methods
     */
    var BasePanel = Backbone.View.extend({
        context:  null,
        cssContainer: "",
        cssPanel: "",

        textErrorSearch: "\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u043e\u0438\u0441\u043a\u0430 \u0432\u043b\u043e\u0436\u0435\u043d\u0438\u0439 \u0438\u0437 Confluence. \u0421\u0435\u0440\u0432\u0435\u0440 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d.",
        textErrorRetrieving: "\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0438\u0437\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u0438 \u0432\u043b\u043e\u0436\u0435\u043d\u0438\u0439 \u0438\u0437 Confluence. \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d.",
        textDefaultErrorMessage: "\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u0444\u0430\u0439\u043b \u0432 Confluence. \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d.",
        textUploading: "\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f...",

        initialize: function () {
        },

        createPanel: function (context) {
            this.context = context;
            this.render();

            var that = this;
            var panel = this.context.getPanel(this.panelId);

            if (panel) {
                panel.onselect = function() {
                    that.context.clearSelection();
                    that.focus && that.focus();
                };
            }
        },

        /**
         * render method will be overrode in sub view
         * @returns {BasePanel}
         */
        render: function () {
            return this;
        },

        getPanelElement: function() {
            return $(this.cssPanel, this.context.baseElement);
        },

        getContainer: function() {
            return $(this.cssContainer);
        },

        getForm: function() {
            return $("form", this.getPanelElement());
        },

        clearContainer: function() {
            var container = this.getContainer();
            container.find(".loading-message").removeClass("hidden");
            container.find(".warning").addClass("hidden");
        },

        clearErrors: function() {
            this.messenger.clearMessages();
        },

        displayErrors: function(message) {
            this.uploader.displayErrors(message);
            this.getContainer().sizeToFit();
        },

        /**
         * Exposed methods to use in other module, such as Drag-Drop
         * @returns {jQuery Object}
         */
        getNoFileContainer: function () {
            return this.getPanelElement().find(".no-files");
        },

        /**
         * Exposed methods to use in other module, such as Drag-Drop
         * @returns {jQuery Object}
         */
        getFileListContainer: function () {
            return this.getPanelElement().find("ul.file-list");
        }
    });

    return BasePanel;
});

require('confluence/module-exporter').exportModuleAsGlobal('confluence-editor/files/base-panel/base-panel-view', 'Confluence.Editor.FileDialog.BasePanel', function(BasePanel) {
    var _ = require('underscore');
    var Backbone = require('backbone');
    var Confluence = require('confluence/legacy');

    Confluence.Editor.FileDialog.eventListener = _.extend({}, Backbone.Events);
});



}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:panel-components', location = 'files/attachments-panel/attachments-panel.soy' */
// This file was automatically generated from attachments-panel.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace Confluence.Templates.File.
 */

if (typeof Confluence == 'undefined') { var Confluence = {}; }
if (typeof Confluence.Templates == 'undefined') { Confluence.Templates = {}; }
if (typeof Confluence.Templates.File == 'undefined') { Confluence.Templates.File = {}; }


Confluence.Templates.File.uploadFileForm = function(opt_data, opt_ignored) {
  return '' + ((opt_data.hasAttachPermission) ? '<div id="upload-attachment">' + ((opt_data.isNonSupportDragDrop) ? '<form action="' + soy.$$escapeHtml("/wiki") + '/pages/attachfile.action" method="post" enctype="multipart/form-data">' : '<form>') + '<label id="upload-files-button" class="aui-button upload-files"><span class="file-upload-icon">' + soy.$$escapeHtml("\u0417\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u0444\u0430\u0439\u043b\u044b") + '</span>&nbsp;&nbsp;' + soy.$$escapeHtml("\u0417\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u0444\u0430\u0439\u043b\u044b") + ((opt_data.isNonSupportDragDrop) ? '<input name="file_0" type="file" class="upfile invisible">' : '') + '</label>' + ((opt_data.isNonSupportDragDrop) ? '<input type="hidden" name="minorEdit_0" value="true" /><input type="hidden" name="atl_token" value="' + soy.$$escapeHtml(opt_data.atlToken) + '" />' : '') + '</form>' + ((opt_data.isNonSupportDragDrop) ? '<div class="upload-in-progress hidden">' + soy.$$escapeHtml("\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f...") + '</div>' : '') + '</div>' : '') + ((opt_data.hasAttachPermission) ? '<div class="divider"></div>' : '');
};
if (goog.DEBUG) {
  Confluence.Templates.File.uploadFileForm.soyTemplateName = 'Confluence.Templates.File.uploadFileForm';
}


Confluence.Templates.File.attachedFilesPanel = function(opt_data, opt_ignored) {
  return '<div id="attached-files" class="scroll-wrapper">' + aui.message.warning({title: '', closeable: 'true', content: ''}) + '<div class="loading-message hidden">' + soy.$$escapeHtml("\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430") + '</div><ul class="file-list"></ul></div>';
};
if (goog.DEBUG) {
  Confluence.Templates.File.attachedFilesPanel.soyTemplateName = 'Confluence.Templates.File.attachedFilesPanel';
}

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:panel-components', location = 'files/attachments-panel/attachments-panel-view.js' */
define('confluence-editor/files/attachments-panel/attachments-panel-view', [
    'confluence-editor/files/file-list/file-list-view',
    'confluence-editor/files/file-item/file-item-model',
    'confluence-editor/files/file-list/file-list-collection',
    'confluence-editor/files/base-panel/base-panel-view',
    'confluence/templates',
    'confluence/legacy',
    'ajs',
    'confluence/meta',
    'underscore',
    'window',
    'jquery'
], function(
    FileListView,
    FileItemModel,
    FileListCollection,
    BasePanel,
    Templates,
    Confluence,
    AJS,
    Meta,
    _,
    window,
    $
) {
    "use strict";

    var LIMITED_SIZE_FOR_THUMBNAIL = 5 * 1024 * 1024; // 5MB
    var LIMITED_SIZE_FOR_THUMBNAIL_IE = 1 * 1024 * 1024; // 1MB

    var AttachmentsPanelView = BasePanel.extend({

        id: "attachments",
        panelId: "",
        cssPanel: ".attachments-panel",
        cssContainer: "#attached-files",
        textNoFileMessage: "\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0442 \u0444\u0430\u0439\u043b\u044b, \u043f\u0440\u0438\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u043d\u044b\u0435 \u043a \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435.",
        textPanelTitle: "\u041f\u0440\u0438\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u043d\u044b\u0435 \u043a \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435",

        initialize: function (options) {
            BasePanel.prototype.initialize.call(this);
            this.eventListener = options.eventListener;

            //context will be assigned a value in 'createPanel' method
            this.context = null;

            //collection of FileModel
            this.collection = new FileListCollection();
            this.fileListView = new FileListView({
                collection: this.collection,
                eventListener: this.eventListener
            });

            //a private counter to prevent multiple ajax request at the same time
            this.xhrCount = 0;
        },

        /**
         * 'render' method is called when 'createPanel' is called
         * @returns {AttachmentsPanelView}
         */
        render: function () {
            var that = this;
            //let other plugin, such as Drag-Drop to override some methods
            this.eventListener.trigger("AttachmentsPanelView.render", this);
            this.fileListView.updateDialogContext(this.context);
            this.panelId = this.context.addPanel(this.textPanelTitle, this.getPanel(), "attachments-panel");

            // Add the panel element to the image Dialog.
            this.el = this.getPanelElement();
            this.$el = $(this.el);

            //now we have actual el, so we need to bind events manually
            this.delegateEvents();

            //should call updatePanelContext when we have ready 'this.el' element
            this.fileListView.updatePanelContext({
                fileContainer: this.getContainer(),
                noFileMessage: this.textNoFileMessage,
                showContainerInfo: false,
                errors: [],
                // Delegate displaying image errors to the uploader controller so that messages are
                // shown in the error box associated with the upload form.
                displayErrors: function (messages) {
                    that.uploader.clearErrors();
                    that.uploader.displayErrors(messages);
                }
            });

            // Bind an AttachmentUploader to the upload form.
            this.uploader = this.getUploaderController(this.context);
            // The controller for displaying error messages in the panel - refer to it sparingly to avoid coupling too.
            this.messenger = this.uploader.getMessageHandler();

            //reset collection will trigger 'reset' event that makes fileListView empty file list
            this.collection.reset();

            if (this._canAttachFiles()) {
                this.refresh({
                    shouldClearSelection: true
                });
            } else {
                this.refresh({
                    errors: ["\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0438\u0442\u044c \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u043d\u0430 \u0432\u0441\u0442\u0430\u0432\u043a\u0443 \u0444\u0430\u0439\u043b\u043e\u0432 \u0441\u044e\u0434\u0430."],
                    shouldClearSelection: true
                });
            }
            return this;
        },

        getPanel: function () {
            return Templates.File.uploadFileForm({
                        isNonSupportDragDrop: ((!this._hasXhrSupport())||(typeof DragnDropSupport == "undefined")),
                        atlToken: Meta.get("atl-token"),
                        hasAttachPermission: this._canAttachFiles()
                    }) + Templates.File.attachedFilesPanel();
        },

        _overideUploaderClientForNonDragDropSupport: function () {
            var that = this;

            return {

                // Override the default upload success behaviour to refresh the thumbnail grid with the uploaded
                // image(s).
                onUploadSuccess: function (attachmentsAdded) {
                    for (var i = 0; i < attachmentsAdded.length; i++) {
                        var attachment = attachmentsAdded[i];
                        var attachmentId = attachment.id;
                        var existingFile = that.collection.get(attachmentId);
                        if (existingFile) {
                            that.collection.removeFile(existingFile);
                        }

                        var url = AJS.contextPath() + "/rest/prototype/1/attachment/" + attachmentId + ".json";
                        var xhr = $.get(url);
                        xhr.done(function (json) {
                            var newFileModel = new FileItemModel(json);
                            that.collection.addFile(newFileModel);
                        });
                    }
                },

                // When errors are displayed the image grid changes size.
                pack: function () {
                    that.getContainer().sizeToFit();
                },

                getDefaultErrorMessage: function () {
                    return that.textDefaultErrorMessage;
                },

                getDefaultUploadingMessage: function () {
                    return that.textUploading;
                },

                displayErrors: function (messages) {
                    this.getMessageHandler().displayMessages(messages);
                    that._showErrorIconInMessageBox();
                    this.pack();
                }
            };
        },

        /**
         * Returns the sub-controller that will drive the attachment-uploader form.
         * The image attachment panel mainly uses the default sub-controller, overriding methods to
         * refresh images after an upload and fix the layout after messages are shown/cleared.
         * In modern browsers that support Drag&Drop, 'getUploaderController' is overrode in confluence-drag-and-drop
         * @returns {Object} Upload client controller
         */
        getUploaderController: function () {
            return Confluence.AttachmentUploader({
                        baseElement: this.getPanelElement()
                    },
                    _.bind(this._overideUploaderClientForNonDragDropSupport, this)
            );
        },

        /**
         * Fetch and render all latest image
         * @param options has these properties:
         * - errors
         * - shouldClearSelection
         */
        refresh: function (options) {
            var that = this;

            // when opening dialog first time, we do not want to show loading message.
            var loadingElement = options.shouldClearSelection ? this.getPanelElement().find(".loading-message") : false;

            this.xhrCount += 1;
            var seqNumber = this.xhrCount;
            AJS.getJSONWrap({
                url: this._getUrlREST(),

                // Handler for error messages.
                messageHandler: this.messenger,

                // An element to show while the AJAX request is running and hide when finished.
                loadingElement: loadingElement,

                // A message to display when unknown server or network errors occur.
                errorMessage: this.textErrorRetrieving,

                successCallback: function (data) {
                    if (seqNumber === that.xhrCount) {
                        options.data = data;
                        that._onSuccessLoadFiles(options);
                    }
                },

                errorCallback: _.bind(this._onErrorLoadFiles, this)
            });
        },

        /**
         * Callback function when Ajax call is success to refresh attachment files
         * @param options has these properties:
         * - errors
         * - shouldClearSelection
         * - data
         * @private
         */
        _onSuccessLoadFiles: function (options) {
            var files = options.data.attachment ? options.data.attachment : options.data.images;
            this.fileListView.resetFileList(files, options);
        },

        _onErrorLoadFiles: function () {
            this._showErrorIconInMessageBox();
        },

        _showErrorIconInMessageBox: function () {
            var $messageList = this.messenger.getMessageContainer().find("ul");
            $messageList.toggleClass("one-message", $messageList.find("li").length === 1);

            //Because current version of AUI is 5.4.x, so we have to add icon manually
            $messageList.closest(".aui-message").append("<span class='aui-icon icon-warning'></span>");
        },

        /**
         * Exposed methods to use in other module, such as Drag-Drop
         */
        setUploadInProgress: function (percentage, fileClientId) {
            this.eventListener.trigger("file.placeholder.process", percentage, fileClientId);
        },

        /**
         * Exposed method to use in other modules. This method trigger event when one file is uploaded.
         * @param fileClientId: id of attachment model before uploaded.
         * @param fileServerId: id of attachment return from server after uploaded.
         */
        attachmentUploaded: function(fileClientId, fileServerId) {
            this.eventListener.trigger("uploadingfile.completed", fileClientId, fileServerId);
        },

        /**
         * Exposed method to use in other modules. This method trigger event when one file is cancelled.
         * @param fileClientId: id of attachment model before uploaded.
         */
        attachmentUploadingCancelled: function(fileClientId) {
            this.eventListener.trigger("uploadingfile.cancelled", fileClientId);
        },

        /**
         * A helper method that is to check Drag&Drop ability support in current browser
         * @returns {boolean}
         * @private
         */
        _hasXhrSupport: function() {
            var xhr;
            var xhrSupport;
            try {
                xhr = new XMLHttpRequest();
                xhrSupport = !!(xhr.sendAsBinary || xhr.upload)  && !($.browser.mozilla && $.browser.version.indexOf('1.9.1') > -1);
            }
            catch(e) {
                //fix for ie with xhr disabled
                xhrSupport = false;
            }
            xhr = null;

            return xhrSupport;
        },

        /**
         * Add preview image of uploading files.
         * It will handle for both cases: image and non-image files
         * @param file: added file
         */
        addPreviewImage: function(file){
            var tinymce = require('tinymce');

            if (!(window.File && window.FileReader && window.FileList && window.Blob)) {
                return;
            }

            var that = this;

            //is uploading image
            var limitedFileSizeForThumbnail = tinymce.isIE ? LIMITED_SIZE_FOR_THUMBNAIL_IE : LIMITED_SIZE_FOR_THUMBNAIL;
            file.isImage = file.nativeFile && file.nativeFile.type && this._isImageType(file.nativeFile.type);
            if (file.isImage && file.nativeFile.size < limitedFileSizeForThumbnail) {
                var reader = new FileReader();
                reader.onload = function() {
                    that._addFilePlaceHolderToCollection(file, reader.result);
                };
                reader.readAsDataURL(file.nativeFile);
            }
            else { //is non-image
                this._addFilePlaceHolderToCollection(file, null);
            }
        },

        _addFilePlaceHolderToCollection: function (file, base64Url) {
            var previousUploadedFile = null;
            //remove existing one, but do not remove uploading one
            var existingFile = this.collection.findWhere({fileName: file.name});
            if (existingFile) {
                this.collection.removeFile(existingFile);

                // if the existing file is an actual uploaded file
                if (!existingFile.get("isFilePlaceHolder")) {
                    previousUploadedFile = existingFile;
                }
                // else, if the existing file placeholder hold a reference to an actual uploaded file
                else if (existingFile.get("previousUploadedFile")) {
                    previousUploadedFile = existingFile.get("previousUploadedFile");
                }
            }

            //add a placeholder FileItemModel
            //will trigger "add.placeholder" event on the collection
            var newModel = new FileItemModel({
                isFilePlaceHolder: true,
                fileName: file.name,
                fileId: file.id,
                fileNative: file.nativeFile,
                url: base64Url ? base64Url : "",
                isImage: file.isImage,
                niceType: file.isImage ? "Image" : "",
                fileType: file.nativeFile.type,
                thumbnailUrl: base64Url ? base64Url : "",
                previousUploadedFile: previousUploadedFile
            });

            this.collection.addFile(newModel);
        },

        _isImageType: function (mimeType) {
            return AJS.Confluence.FileTypesUtils.isImage(mimeType);
        },

        _canAttachFiles: function () {
            return Meta.getBoolean("can-attach-files");
        },

        _getUrlREST: function () {
            var contentId = parseInt(Meta.get("attachment-source-content-id"), 10);
            return AJS.REST.makeUrl("content/" + contentId + "/attachments.json");
        },

        focus: function () {
            this.collection.clearSelection();
        }
    });

    return AttachmentsPanelView;
});

require('confluence/module-exporter').exportModuleAsGlobal('confluence-editor/files/attachments-panel/attachments-panel-view', 'Confluence.Editor.FileDialog.AttachmentsPanelView');

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:panel-components', location = 'files/external-panel/external-panel.soy' */
// This file was automatically generated from external-panel.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace Confluence.Templates.File.
 */

if (typeof Confluence == 'undefined') { var Confluence = {}; }
if (typeof Confluence.Templates == 'undefined') { Confluence.Templates = {}; }
if (typeof Confluence.Templates.File == 'undefined') { Confluence.Templates.File = {}; }


Confluence.Templates.File.webPanel = function(opt_data, opt_ignored) {
  return '<div class="insert-web-image"><form id="insert-web-image-form" action="#" class="aui"><fieldset class="inline"><div class="web-image-input"><label for="insert-web-image-image-url" id="insert-web-image-image-url-label">' + soy.$$escapeHtml("URL \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f:") + '</label><input type="text" class="text image-url" id="insert-web-image-image-url" name="insert-web-image-image-url"></div><input type="submit" class="image-preview aui-button" value="' + soy.$$escapeHtml("\u041f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440") + '"></fieldset></form><p class="faraway image-preview-area"></p><p class="hidden image-preview-error">' + soy.$$escapeHtml("\u041d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 URL-\u0430\u0434\u0440\u0435\u0441.") + '</p><p class="hidden image-preview-throbber">&nbsp;</p></div>';
};
if (goog.DEBUG) {
  Confluence.Templates.File.webPanel.soyTemplateName = 'Confluence.Templates.File.webPanel';
}

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:panel-components', location = 'files/external-panel/external-panel-view.js' */
define('confluence-editor/files/external-panel/external-panel-view', [
    'confluence-editor/files/base-panel/base-panel-view',
    'confluence/templates',
    'jquery',
    'raphael',
    'ajs'
], function(
    BasePanel,
    Templates,
    $,
    Raphael,
    AJS
) {
    "use strict";

    var ExternalPanelView = BasePanel.extend({
        id: "external",
        panelId: "",
        cssPanel: ".web-image-panel",
        cssContainer: ".insert-web-image",
        textPanelTitle: "\u0418\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0438\u0437 \u0418\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u0430",

        template: Templates.File.searchPanel,

        events: {
            "submit form": "_submit",
            "keyup input.image-url": "_checkAllowInsert",
            "click input.image-url": "_checkAllowInsert",
            "blur input.image-url": "_checkAllowInsert"
        },

        initialize: function () {
            BasePanel.prototype.initialize.call(this);

            this.context = null;
            this.token = 0;
        },

        render: function () {
            this.panelId = this.context.addPanel(this.textPanelTitle, this.getPanel(), "web-image-panel");

            //cache some DOM elements
            this.container = this.getContainer();
            this.preview = this.container.find(".image-preview-area");
            this.throbber = this.container.find(".image-preview-throbber");
            this.killSpinner = null;
            this.error = this.container.find(".image-preview-error");
        },

        focus: function() {
            this._getImageInput().focus();
            this._checkAllowInsert();
        },

        getPanel: function() {
            this.$el = $(Templates.File.webPanel());
            this.el = this.$el[0];
            this.delegateEvents();
            return this.el;
        },

        _getImageInput: function() {
            return $("input.image-url", this.context.baseElement);
        },

        _submit: function (e) {
            e.preventDefault();
            e.stopPropagation();

            var that = this;

            var src = this._getImageInput().val();
            if (src === "http://") {
                // a 'http://' src confuses image and it won't fall into the 'error' block
                // Just don't do anything - it doesn't make sense anyway
                return false;
            }
            this.token++;
            var localToken = this.token;

            this.preview.addClass("faraway").html("");
            this.throbber.removeClass("hidden");
            if (!this.killSpinner) {
                this.killSpinner = Raphael.spinner(this.throbber[0], 60, "#666");
            }
            this.error.addClass("hidden");

            $("<img>")
                .load(function () {
                    if (localToken === that.token) {
                        that.killSpinner();
                        that.killSpinner = null;
                        that.throbber.addClass("hidden");
                        that.preview.removeClass("faraway");
                        that._checkAllowInsert();
                    }
                })
                .error(function () {
                    if (localToken === that.token) {
                        that.killSpinner();
                        that.killSpinner = null;
                        that.throbber.addClass("hidden");
                        that.error.removeClass("hidden");
                        that._checkAllowInsert();
                    }
                })
                .appendTo(this.preview).attr("src", src);
        },

        _checkAllowInsert: function (/*e*/) {
            var val = this.$el.find("input.image-url").val();
            var url = (val !== "" && val !== "http://") ? val : [];
            this.context.setSelectItems(url);
        }

    });

    return ExternalPanelView;
});

require('confluence/module-exporter').exportModuleAsGlobal('confluence-editor/files/external-panel/external-panel-view', 'Confluence.Editor.FileDialog.ExternalPanelView');

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:panel-components', location = 'files/search-panel/search-panel.soy' */
// This file was automatically generated from search-panel.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace Confluence.Templates.File.
 */

if (typeof Confluence == 'undefined') { var Confluence = {}; }
if (typeof Confluence.Templates == 'undefined') { Confluence.Templates = {}; }
if (typeof Confluence.Templates.File == 'undefined') { Confluence.Templates.File = {}; }


Confluence.Templates.File.searchPanel = function(opt_data, opt_ignored) {
  return '<div class="search-panel-wrapper"><div id="search-image"><form class="aui search-form" id="search-image-form" action="#"><fieldset class="inline"><div class="search-input"><label for="search-image" class="assistive">' + soy.$$escapeHtml("\u041f\u043e\u0438\u0441\u043a") + '</label><input autofocus type="text" class="text search-image-text" size="50" autocomplete="off"></div><select class="search-space select" id="search-image-space-select"><option value="">' + soy.$$escapeHtml("\u0412\u0441\u0435 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0430") + '</option><option value="' + soy.$$escapeHtml(opt_data.spaceKey) + '">' + soy.$$escapeHtml(opt_data.spaceName) + '</option></select><button type="submit" class="aui-button search-button">' + soy.$$escapeHtml("\u041f\u043e\u0438\u0441\u043a") + '</button></fieldset></form></div><div id="searched-images" class="scroll-wrapper"><div class="loading-message hidden">' + soy.$$escapeHtml("\u041f\u043e\u0438\u0441\u043a...") + '</div><ul class="file-list"></ul></div></div>';
};
if (goog.DEBUG) {
  Confluence.Templates.File.searchPanel.soyTemplateName = 'Confluence.Templates.File.searchPanel';
}

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:panel-components', location = 'files/search-panel/search-panel-view.js' */
define('confluence-editor/files/search-panel/search-panel-view', [
    'confluence-editor/files/file-item/file-item-model',
    'confluence-editor/files/file-list/file-list-view',
    'confluence-editor/files/file-list/file-list-collection',
    'confluence-editor/files/base-panel/base-panel-view',
    'confluence/templates',
    'confluence/meta',
    'confluence/defaults',
    'confluence/highlighter',
    'underscore',
    'ajs',
    'jquery'
], function(
    FileItemModel,
    FileListView,
    FileListCollection,
    BasePanel,
    Templates,
    Meta,
    Defaults,
    Highlighter,
    _,
    AJS,
    $
) {
    "use strict";

    var SearchPanelView = BasePanel.extend({
        id: "search",
        panelId: "",
        cssPanel: ".search-panel",
        cssContainer: "#searched-images",

        template: Templates.File.searchPanel,

        events: {
            "submit form": "_submit"
        },

        initialize: function () {
            BasePanel.prototype.initialize.call(this);

            //context will be assigned a value in 'createPanel' method
            this.context = null;
            this.collection = new FileListCollection();
            this.fileListView = new FileListView({
                collection: this.collection
            });
        },

        getPanel: function() {
            this.$el = $(this.template({
                spaceKey: Meta.get("space-key"),
                spaceName: Meta.get("space-name")
            }));
            this.el = this.$el[0];

            this.delegateEvents();

            return this.el;
        },

        render: function () {
            this.fileListView.updateDialogContext(this.context);
            this.panelId = this.context.addPanel(
                    "\u041f\u043e\u0438\u0441\u043a \u043d\u0430 \u0434\u0440\u0443\u0433\u0438\u0445 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430\u0445",
                    this.getPanel(),
                    "search-panel");

            //should call updatePanelContext when we have ready 'this.el'
            this.fileListView.updatePanelContext({
                fileContainer: this.getContainer(),
                noFileMessage: "\u041d\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 \u043f\u043e\u0438\u0441\u043a\u0430.",
                showContainerInfo: true
            });
        },

        _submit: function (e) {
            e.preventDefault();
            e.stopPropagation();

            if (this._getQuery()) {
                this.clearContainer();
                this.collection.reset();
                this._loadImages()
                        .then(
                        _.bind(this._onSuccessLoadFiles, this),
                        _.bind(this._onErrorLoadFiles, this));
            }
        },

        _loadImages: function() {
            return $.ajax({
                type: "GET",
                dataType: "json",
                url: AJS.contextPath() + AJS.REST.getBaseUrl() + "search.json",
                data: {
                    spaceKey: this.getForm().find(".search-space").val(),
                    query: this._getQuery(),
                    search: "name",
                    type: "attachment",
                    attachmentType: [],
                    groupResults: true,
                    maxResultsPerGroup: 50,
                    searchParentName: true,
                    pageSize: Defaults.maxResults
                }
            });
        },

        _onSuccessLoadFiles: function (json) {
            var that = this;
            var result = {result: []};

            //TODO: this is a limittation at this moment. Will be fixed in future
            //for data that is returned with groupResults:false
            if (json.result && json.result.length > 0) {
                result = json;
            }
            //for data that is returned with groupResults:true
            else if (json.group && json.group[0]) {
                result = json.group[0];
            }

            this.fileListView.highlighter = new Highlighter(this._getQuery().split(" "));
            this.fileListView.resetFileList(result.result, {shouldClearSelection: true});
        },

        _onErrorLoadFiles: function () {
            var searchContainer = this.getContainer();
            searchContainer.find(".loading-message").addClass("hidden");
            searchContainer.append($("<p class='warning'>" + $(this.textErrorSearch).text() +"</p>"));
        },

        _getSearchText: function() {
            return $("input.search-image-text", this.getForm());
        },

        _getQuery: function() {
            return this._getSearchText().val() || "";
        },

        focus: function() {
            this.collection.clearSelection();
            this._getSearchText().focus();
        }
    });

    return SearchPanelView;
});

require('confluence/module-exporter').exportModuleAsGlobal('confluence-editor/files/search-panel/search-panel-view', 'Confluence.Editor.FileDialog.SearchPanelView');
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:panel-components', location = 'files/file-dialog/file-dialog.soy' */
// This file was automatically generated from file-dialog.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace Confluence.Templates.File.
 */

if (typeof Confluence == 'undefined') { var Confluence = {}; }
if (typeof Confluence.Templates == 'undefined') { Confluence.Templates = {}; }
if (typeof Confluence.Templates.File == 'undefined') { Confluence.Templates.File = {}; }


Confluence.Templates.File.helpLink = function(opt_data, opt_ignored) {
  return '<div class="dialog-help-link"><a href="' + soy.$$escapeHtml("https://docs.atlassian.com/confluence/docs-510/Display+Files+and+Images") + '" target="_blank">' + soy.$$escapeHtml("\u041f\u043e\u043c\u043e\u0449\u044c") + '</a></div>';
};
if (goog.DEBUG) {
  Confluence.Templates.File.helpLink.soyTemplateName = 'Confluence.Templates.File.helpLink';
}

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:panel-components', location = 'files/file-dialog/file-dialog-view.js' */
define('confluence-editor/files/file-dialog/file-dialog-view', [
    'backbone',
    'ajs',
    'confluence/templates',
    'underscore',
    'jquery',
    'document',
    'window'
], function(
    Backbone,
    AJS,
    Templates,
    _,
    $,
    document,
    window
) {
    "use strict";

    //declare some dependencies
    var FileDialogView = Backbone.View.extend({

        dialogId: "insert-image-dialog",
        ESC_KEY_CODE: 27,
        width: 840, //width of dialog
        height: 530, //height of dialog

        /**
         * Opens the image dialog. If the options include an imageProperties object, the image represented by the
         * properties will be edited. If not, an insert dialog is shown.
         *
         * @param options for opening the dialog, includes:
         *  - submitCallback called when the dialog form is submitted
         *  - cancelCallback called when the dialog is cancelled
         */
        initialize: function (options) {
            this.urlExternalImg = "";
            this.selectItems = [];

            this.submitCallback = options.submitCallback;
            this.cancelCallback = options.cancelCallback;
            this.beforeShowListeners = options.beforeShowListeners;
            this.panelComponents = options.panelComponents;
        },

        render: function () {
            this._createDialog();
            this.clearSelection();

            // Applies key binding to a particular image container, i.e. for fancybox navigation.
            $(document).on("keydown.insert-image", _.bind(this._onNavigationByKey, this));
            return this;
        },

        /**
         * The main task of this method is to create object dialog from JS.Dialog
         * @returns {AJS.Dialog}
         * @private
         */
        _createDialog: function () {
            var dialog = new AJS.Dialog(this.width, this.height, this.dialogId);
            var textDialogTitle = "\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0444\u0430\u0439\u043b\u044b \u0438 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f";
            var textSubmit = "\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c";

            this.dialog = dialog;

            dialog.addHeader(textDialogTitle);
            dialog.addButton(textSubmit, _.bind(this._submitDialog, this), "insert");

            // Close Button
            dialog.addCancel("\u0417\u0430\u043a\u0440\u044b\u0442\u044c", _.bind(this._killDialog, this));

            this.el = dialog.popup.element;
            this.$el = $(this.el);
            this.baseElement = this.el;//alias for el
            this.$el.attr("data-tab-default", "0");

            this.$insertButton = this.$el.find(".dialog-button-panel .insert");

            // CONFDEV-12853: Add help link via prepend() instead of append() to prevent FF display issue
            $("#" + this.dialogId + " .dialog-components .dialog-title").prepend(Templates.File.helpLink());

            this.$el.find(".dialog-button-panel")
                    .append($("<div></div>").addClass("dialog-tip").html("\u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430: \u0432\u0432\u0435\u0434\u0438\u0442\u0435  \u0022\u003cstrong\u003e!\u003c/strong\u003e\u0022 \u0432 \u0440\u0435\u0434\u0430\u043a\u0442\u043e\u0440\u0435, \u0447\u0442\u043e\u0431\u044b \u0432\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435."));

            this._createPanels();

            // Handle pressing ESC to close dialog
            // Because AJS.popup handles ESC keys and do not fire "hide.dialog" event for AJS.Dialog,
            // so we need a another treatment for ESC to remove dialog.
            $(document).on("hideLayer", _.bind(function (e, layerType, popup) {
                if (layerType === "popup" && popup === dialog.popup) {
                    popup.remove();
                    this.teardown();
                    if (typeof this.cancelCallback === "function") {
                        this.cancelCallback();
                    }
                }
            }, this));

            AJS.bind("remove.dialog", _.bind(function(e, data) {
                if (data.dialog.id === this.dialog.id) {
                    this.teardown();
                }
            }, this));

            dialog.show();

            return dialog;
        },

        /**
         * Initialize collection of panels from "panelComponents"
         * @private
         */
        _createPanels: function () {
            var that = this;

            // Construct panels
            $.each(this.panelComponents, function () {
                if (this && typeof this.createPanel === "function") {
                    this.createPanel(that);
                }
            });

            AJS.debug(this.beforeShowListeners.length + " beforeShow listeners registered.");
            $.each(this.beforeShowListeners, function () {
                if (typeof this === "function") {
                    this();
                }
            });
        },

        teardown: function () {
            $(document).unbind(".insert-image");
            //remove some orphan tooltips
            $(".tipsy").remove();
            this.undelegateEvents();
        },

        /**
         * Close dialog when click cancel button
         * @private
         */
        _killDialog: function () {
            this.dialog.remove();
            this.clearSelection();

            if (typeof this.cancelCallback === "function") {
                this.cancelCallback();
            }
        },

        /**
         * Close dialog when click submit button
         * @private
         */
        _submitDialog: function () {
            var placeholderRequest = {
                url: this.urlExternalImg,
                // For pages and blogs this is their own pageId. For comments, pageId is the page they are on.
                // For drafts it is contentId.
                contentId: AJS.Meta.get('attachment-source-content-id'),
                selectItems: this.selectItems
            };

            this.dialog.remove();

            if (typeof this.submitCallback === "function") {
                this.submitCallback(placeholderRequest);
            }
        },

        /**
         * Add file item mode to select files collection
         * @param items if items is object, add file items to select files array.
         * if items is string, set the value to "urlExternalImg" property
         */
        setSelectItems: function (items) {
            if (typeof items === "string") {
                this.urlExternalImg = items;
                this.selectItems = [];
            } else {
                this.urlExternalImg = "";
                this.selectItems = items;
            }

            //update insert button state in UI
            var allow = this.selectItems.length > 0 || this.urlExternalImg;
            if (this.$insertButton) {
                this.$insertButton.prop("disabled", !allow);
                this.$insertButton.attr("aria-disabled", !allow);
            }
        },

        clearSelection: function () {
            this.setSelectItems([]);
        },

        /**
         * Inserts the selected content.
         */
        insert: function() {
            if (this.$insertButton &&
                    (!this.$insertButton.is(":disabled") || !this.$insertButton.attr("aria-disabled"))) {
                this.$insertButton.click();
            }
        },

        /**
         * @param title {string} panel title
         * @param reference {string} or {object} jQuery object or selector for the contents of the Panel
         * @param className {string} [optional] HTML class name
         * @param panelButtonId {string} [optional] The unique id for the panel's button.
         * @return the panel id
         */
        addPanel: function(title, reference, className, panelButtonId) {
            var nextPanelId = this.dialog.getPage(0).panel.length;
            this.dialog.addPanel(title, reference, className, panelButtonId);
            return nextPanelId;
        },

        /**
         * Selects the panel by id.
         * @param panelId
         */
        getPanel: function(panelId) {
            return this.dialog.getPanel(panelId);
        },

        /**
         * Handle navigation by arrow keys to choose/select file.
         * @param e event object
         */
        _onNavigationByKey: function (e) {
            // dialog is hidden when Preview is showing
            if ($("#" + this.dialog.id).is(":hidden")) {
                return;
            }

            var $bodyPanel = this.dialog.getCurrentPanel().body;
            var $listFiles = $bodyPanel.find(".attached-file");

            // empty item or input/select element is focusing, do nothing
            if ($listFiles.length === 0 ||
                    $(document.activeElement).is("input[type=text], select, button")){
                return;
            }

            var VK = window.tinymce.VK;

            var findNextIndex = function (currentIndex, keyCode, totalItems) {
                var keyToDelta = {};
                keyToDelta[VK.LEFT] = -1;
                keyToDelta[VK.RIGHT] = 1;
                keyToDelta[VK.UP] = -4;
                keyToDelta[VK.DOWN] = 4;

                var delta = keyToDelta[keyCode] ? keyToDelta[keyCode] : 0;
                var nextIndex = (currentIndex + delta);
                if (nextIndex < 0 || nextIndex >= totalItems ) {
                    return  currentIndex;
                }
                return nextIndex;
            };

            var moveSelection = function(keyCode) {
                var $selected;
                var $next;

                //find the current one
                $selected = $listFiles.filter(".current");

                //if no current one, find first selected one
                if (!$selected.length) {
                    $selected = $listFiles.filter(".selected");
                }

                //if no selected one, find first one
                if (!$selected.length) {
                    $next = $listFiles.first();
                } else {
                    var currentIndex = $listFiles.index($selected);
                    var nextIndex = findNextIndex(currentIndex, keyCode, $listFiles.length);
                    $next = $listFiles.eq(nextIndex);
                }

                $next.parent().find("li.attached-file.current").removeClass("current");
                $next.addClass("current");

                if ($next.length) {
                    $bodyPanel.find(".scroll-wrapper").simpleScrollTo($next);
                }

                return AJS.stopEvent(e);
            };

            switch (e.which) {
                case VK.LEFT:
                case VK.UP:
                case VK.RIGHT:
                case VK.DOWN:
                    return moveSelection(e.which);

                case VK.SPACEBAR:
                    $bodyPanel.find("li.attached-file.current").click();
                    return AJS.stopEvent(e);

                case  VK.ENTER:
                    this.insert();
                    return AJS.stopEvent(e);
            }
        }

    });

    return FileDialogView;
});

require('confluence/module-exporter').exportModuleAsGlobal('confluence-editor/files/file-dialog/file-dialog-view', 'Confluence.Editor.FileDialog.FileDialogView');

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'confluence.web.resources:dictionary', location = '/includes/js/api/dictionary.js' */
define("confluence/api/dictionary",[],function(){return function(){var a={};return{get:function(b){return a[b]},put:function(b,c){return a[b]=c},reset:function(){a={}},elements:function(){return a}}}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'confluence.web.resources:macro-js-overrides', location = '/includes/js/macro-js-overrides.js' */
define("confluence/macro-js-overrides",["confluence/api/dictionary","underscore"],function(f,e){var a=new f;return e.extend(a,{getFunction:function(b,c){var d=a.get(b);if(d&&"function"===typeof d[c])return d[c]},assignFunction:function(b,c){a.put(b,e.extend({},a.get(b),c))}})});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:space-picker', location = '/js/internal/space-resolver.js' */
define("confluence-ui-components/js/internal/space-resolver",["underscore","jquery","ajs"],function(i,b,h){var g={conf_all:"\u0412\u0441\u0435 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0430",conf_current:"\u0422\u0435\u043a\u0443\u0449\u0435\u0435 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u043e",conf_favorites:"\u0418\u0437\u0431\u0440\u0430\u043d\u043d\u044b\u0435 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0430",conf_global:"\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0430 \u0441\u0430\u0439\u0442\u0430",conf_personal:"\u041b\u0438\u0447\u043d\u044b\u0435 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0430"};function e(j){var k=i.map(j,function(l){return"spaceKey="+encodeURI(l)});return k.join("&")}function f(k,l){var j=typeof l==="undefined";var m=i.escape(j?k:l);return{id:k,text:m,idOnly:j}}function a(m,p){var n={};var o=[];i.each(m,function(r){var q=d(r);if(q){n[r]=f(r,q)}else{o.push(r)}});var k;if(o.length){var l=h.contextPath()+"/rest/api/space?"+e(o);k=b.getJSON(l)}else{k=new b.Deferred();k.resolve({results:[]})}function j(r){var q=r.results;i.each(q,function(t){n[t.key]=f(t.key,t.name)});var s=i.map(m,function(t){return n[t]||f(t)});p(s)}k.done(j)}function d(j){return g[j]}var c=["conf_favorites","conf_global","conf_personal"];return{getSpaceDisplayItems:a,getSpaceCategoryDisplayName:d,getSpaceTypeKeys:function(){return c}}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:space-picker', location = '/js/space-picker.js' */
define("confluence-ui-components/js/space-picker",["underscore","ajs","jquery","confluence-ui-components/js/internal/space-resolver"],function(r,f,b,d){var a={data:null,suggestCategories:null};var p=function(s){return function(t){var u={id:t.spaceKey,text:t.spaceName};if(typeof s==="function"){return s(u)}return u}};var k;var c=function(s){return function(t,x){var w=b(t).val();if(w===""){return}var u=w.split(",");function v(y){if(!s.multiple){y=y[0]}x(y)}d.getSpaceDisplayItems(u,v)}};var e=function(t){var s;if(t.suggestCategories){var u={text:"\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0438\u043b\u0438 \u0442\u0438\u043f \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430",children:r.map(t.suggestCategories,function(v){return{id:v,text:d.getSpaceCategoryDisplayName(v)}})}}return function(w){if(s){w.callback(s);return}function v(x){var y={results:[]};if(u){y.results.push(u)}if(x.length>0){y.results.push({text:"\u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0430",children:r.map(x,function(z){return{id:z.key,text:r.escape(z.name)}})})}s=y;w.callback(s)}b.getJSON(f.contextPath()+"/rest/recentlyviewed/1.0/recent/spaces").done(v).fail(function(){f.log("Couldn't fetch recent spaces");var x={results:[]};if(u){x.results.push(u)}w.callback(x)})}};var n=function(){return window.Select2.query.ajax({url:f.contextPath()+"/rest/quicknav/1/search?type=spacedesc&type=personalspacedesc",data:function(s){return{query:s,maxPerCategory:25}},quietMillis:250,results:function(u){var t=u.contentNameMatches;if(t.length<=1){return{results:[]}}else{var s=r.map(t[0],k);return{results:[{text:"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u043f\u043e\u0438\u0441\u043a\u0430",children:s}]}}}})};function g(t){var s=n();var u=e(t);return function(v,x,w){if(v.term.length<2){return u(v)}else{if(typeof x==="function"){v.term=x(v.term)}k=p(w);return s(v)}}}function h(){var s=b(".select2-container-active").next("input");var t=s.val().trim();return(t!=="")?t.split(","):[]}function i(s){var t=r.intersection(s,d.getSpaceTypeKeys());return t.length>0}function j(s){return(typeof s.id!=="undefined")&&r.contains(d.getSpaceTypeKeys(),s.id)}function q(t,u,v){var s=[];t.forEach(function(w){if(w.children){var x=q(w.children,u,v);if(x.length){s.push(b.extend({},w,{children:x}))}}else{var y=j(w);if((u&&y)||(!u&&!y)){if(!r.contains(v,w.id)){s.push(w)}}}});return s}function m(t,v){if(!t.length||!v.length){return t}var u=i(v);var s=q(t,u,v);if(!s.length){s.push({text:"\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043e\u0442\u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u043e \u0442\u0438\u043f\u0430\u043c \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432 \u0418 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0430\u043c",disabled:true})}return s}function o(s){var t=h();return m(s,t)}function l(t){t=r.extend({},a,t);var s={placeholder:"\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u043e",formatResult:function(u,v,w){v.attr("title",b("<div/>").html(u.text).text());return b.fn.select2.defaults.formatResult.apply(this,arguments)},escapeMarkup:function(u){return u},multiple:t.multiple===true};if(t.disableMixedSpaceTypes){s.sortResults=o}if(t.data){return r.extend(s,{data:t.data})}else{return r.extend(s,{initSelection:c(t),query:g(t)})}}return{build:l,filterMixedTypesForValues:m}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:space-picker', location = '/js/internal/space-picker-legacy.js' */
window.Confluence.UI.Components.SpacePicker=require("confluence-ui-components/js/space-picker");AJS.deprecate.prop(window.Confluence.UI.Components.SpacePicker,"build",{sinceVersion:"1.4.22",extraInfo:"Use require('confluence-ui-components/js/space-picker')"});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.auiplugin:internal-@atlassian-aui-src-js-vendor-jquery-jquery-ui-jquery-ui-datepicker', location = 'node_modules/@atlassian/aui/src/js-vendor/jquery/jquery-ui/jquery.ui.datepicker.js' */
("undefined"===typeof window?global:window).__716e1ce77ba41179f2e03684627da84b=function(){(function(d){function B(){this.debug=!1;this._curInst=null;this._keyEvent=!1;this._disabledInputs=[];this._inDialog=this._datepickerShowing=!1;this._mainDivId="ui-datepicker-div";this._inlineClass="ui-datepicker-inline";this._appendClass="ui-datepicker-append";this._triggerClass="ui-datepicker-trigger";this._dialogClass="ui-datepicker-dialog";this._disableClass="ui-datepicker-disabled";this._unselectableClass=
"ui-datepicker-unselectable";this._currentClass="ui-datepicker-current-day";this._dayOverClass="ui-datepicker-days-cell-over";this.regional=[];this.regional[""]={closeText:"Done",prevText:"Prev",nextText:"Next",currentText:"Today",monthNames:"January February March April May June July August September October November December".split(" "),monthNamesShort:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "),dayNames:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),dayNamesShort:"Sun Mon Tue Wed Thu Fri Sat".split(" "),
dayNamesMin:"Su Mo Tu We Th Fr Sa".split(" "),weekHeader:"Wk",dateFormat:"mm/dd/yy",firstDay:0,isRTL:!1,showMonthAfterYear:!1,yearSuffix:""};this._defaults={showOn:"focus",showAnim:"fadeIn",showOptions:{},defaultDate:null,appendText:"",buttonText:"...",buttonImage:"",buttonImageOnly:!1,hideIfNoPrevNext:!1,navigationAsDateFormat:!1,gotoCurrent:!1,changeMonth:!1,changeYear:!1,yearRange:"c-10:c+10",showOtherMonths:!1,selectOtherMonths:!1,showWeek:!1,calculateWeek:this.iso8601Week,shortYearCutoff:"+10",
minDate:null,maxDate:null,duration:"fast",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:"",altFormat:"",constrainInput:!0,showButtonPanel:!1,autoSize:!1,disabled:!1};d.extend(this._defaults,this.regional[""]);this.dpDiv=C(d('<div id="'+this._mainDivId+'" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'))}function C(a){return a.bind("mouseout",
function(a){a=d(a.target).closest("button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a");a.length&&a.removeClass("ui-state-hover ui-datepicker-prev-hover ui-datepicker-next-hover")}).bind("mouseover",function(b){b=d(b.target).closest("button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a");if(!d.datepicker._isDisabledDatepicker(D.inline?a.parent()[0]:D.input[0])&&b.length)b.parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"),
b.addClass("ui-state-hover"),b.hasClass("ui-datepicker-prev")&&b.addClass("ui-datepicker-prev-hover"),b.hasClass("ui-datepicker-next")&&b.addClass("ui-datepicker-next-hover")})}function z(a,b){d.extend(a,b);for(var c in b)if(null==b[c]||void 0==b[c])a[c]=b[c];return a}d.extend(d.ui,{datepicker:{version:"1.8.24"}});var x=(new Date).getTime(),D;d.extend(B.prototype,{markerClassName:"hasDatepicker",maxRows:4,log:function(){this.debug&&console.log.apply("",arguments)},_widgetDatepicker:function(){return this.dpDiv},
setDefaults:function(a){z(this._defaults,a||{});return this},_attachDatepicker:function(a,b){var c=null,e;for(e in this._defaults){var f=a.getAttribute("date:"+e);if(f){c=c||{};try{c[e]=eval(f)}catch(h){c[e]=f}}}e=a.nodeName.toLowerCase();f="div"==e||"span"==e;a.id||(this.uuid+=1,a.id="dp"+this.uuid);var j=this._newInst(d(a),f);j.settings=d.extend({},b||{},c||{});"input"==e?this._connectDatepicker(a,j):f&&this._inlineDatepicker(a,j)},_newInst:function(a,b){return{id:a[0].id.replace(/([^A-Za-z0-9_-])/g,
"\\\\$1"),input:a,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:b,dpDiv:!b?this.dpDiv:C(d('<div class="'+this._inlineClass+' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'))}},_connectDatepicker:function(a,b){var c=d(a);b.append=d([]);b.trigger=d([]);c.hasClass(this.markerClassName)||(this._attachments(c,b),c.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp).bind("setData.datepicker",
function(a,c,d){b.settings[c]=d}).bind("getData.datepicker",function(a,c){return this._get(b,c)}),this._autoSize(b),d.data(a,"datepicker",b),b.settings.disabled&&this._disableDatepicker(a))},_attachments:function(a,b){var c=this._get(b,"appendText"),e=this._get(b,"isRTL");b.append&&b.append.remove();c&&(b.append=d('<span class="'+this._appendClass+'">'+c+"</span>"),a[e?"before":"after"](b.append));a.unbind("focus",this._showDatepicker);b.trigger&&b.trigger.remove();c=this._get(b,"showOn");("focus"==
c||"both"==c)&&a.focus(this._showDatepicker);if("button"==c||"both"==c){var c=this._get(b,"buttonText"),f=this._get(b,"buttonImage");b.trigger=d(this._get(b,"buttonImageOnly")?d("<img/>").addClass(this._triggerClass).attr({src:f,alt:c,title:c}):d('<button type="button"></button>').addClass(this._triggerClass).html(""==f?c:d("<img/>").attr({src:f,alt:c,title:c})));a[e?"before":"after"](b.trigger);b.trigger.click(function(){if(d.datepicker._datepickerShowing&&d.datepicker._lastInput==a[0])d.datepicker._hideDatepicker();
else{d.datepicker._datepickerShowing&&d.datepicker._lastInput!=a[0]&&d.datepicker._hideDatepicker();d.datepicker._showDatepicker(a[0])}return false})}},_autoSize:function(a){if(this._get(a,"autoSize")&&!a.inline){var b=new Date(2009,11,20),c=this._get(a,"dateFormat");if(c.match(/[DM]/)){var d=function(a){for(var b=0,c=0,d=0;d<a.length;d++)a[d].length>b&&(b=a[d].length,c=d);return c};b.setMonth(d(this._get(a,c.match(/MM/)?"monthNames":"monthNamesShort")));b.setDate(d(this._get(a,c.match(/DD/)?"dayNames":
"dayNamesShort"))+20-b.getDay())}a.input.attr("size",this._formatDate(a,b).length)}},_inlineDatepicker:function(a,b){var c=d(a);c.hasClass(this.markerClassName)||(c.addClass(this.markerClassName).append(b.dpDiv).bind("setData.datepicker",function(a,c,d){b.settings[c]=d}).bind("getData.datepicker",function(a,c){return this._get(b,c)}),d.data(a,"datepicker",b),this._setDate(b,this._getDefaultDate(b),!0),this._updateDatepicker(b),this._updateAlternate(b),b.settings.disabled&&this._disableDatepicker(a),
b.dpDiv.css("display","block"))},_dialogDatepicker:function(a,b,c,e,f){a=this._dialogInst;a||(this.uuid+=1,this._dialogInput=d('<input type="text" id="dp'+this.uuid+'" style="position: absolute; top: -100px; width: 0px;"/>'),this._dialogInput.keydown(this._doKeyDown),d("body").append(this._dialogInput),a=this._dialogInst=this._newInst(this._dialogInput,!1),a.settings={},d.data(this._dialogInput[0],"datepicker",a));z(a.settings,e||{});b=b&&b.constructor==Date?this._formatDate(a,b):b;this._dialogInput.val(b);
this._pos=f?f.length?f:[f.pageX,f.pageY]:null;this._pos||(this._pos=[document.documentElement.clientWidth/2-100+(document.documentElement.scrollLeft||document.body.scrollLeft),document.documentElement.clientHeight/2-150+(document.documentElement.scrollTop||document.body.scrollTop)]);this._dialogInput.css("left",this._pos[0]+20+"px").css("top",this._pos[1]+"px");a.settings.onSelect=c;this._inDialog=!0;this.dpDiv.addClass(this._dialogClass);this._showDatepicker(this._dialogInput[0]);d.blockUI&&d.blockUI(this.dpDiv);
d.data(this._dialogInput[0],"datepicker",a);return this},_destroyDatepicker:function(a){var b=d(a),c=d.data(a,"datepicker");if(b.hasClass(this.markerClassName)){var e=a.nodeName.toLowerCase();d.removeData(a,"datepicker");"input"==e?(c.append.remove(),c.trigger.remove(),b.removeClass(this.markerClassName).unbind("focus",this._showDatepicker).unbind("keydown",this._doKeyDown).unbind("keypress",this._doKeyPress).unbind("keyup",this._doKeyUp)):("div"==e||"span"==e)&&b.removeClass(this.markerClassName).empty()}},
_enableDatepicker:function(a){var b=d(a),c=d.data(a,"datepicker");if(b.hasClass(this.markerClassName)){var e=a.nodeName.toLowerCase();if("input"==e)a.disabled=!1,c.trigger.filter("button").each(function(){this.disabled=!1}).end().filter("img").css({opacity:"1.0",cursor:""});else if("div"==e||"span"==e)b=b.children("."+this._inlineClass),b.children().removeClass("ui-state-disabled"),b.find("select.ui-datepicker-month, select.ui-datepicker-year").removeAttr("disabled");this._disabledInputs=d.map(this._disabledInputs,
function(b){return b==a?null:b})}},_disableDatepicker:function(a){var b=d(a),c=d.data(a,"datepicker");if(b.hasClass(this.markerClassName)){var e=a.nodeName.toLowerCase();if("input"==e)a.disabled=!0,c.trigger.filter("button").each(function(){this.disabled=!0}).end().filter("img").css({opacity:"0.5",cursor:"default"});else if("div"==e||"span"==e)b=b.children("."+this._inlineClass),b.children().addClass("ui-state-disabled"),b.find("select.ui-datepicker-month, select.ui-datepicker-year").attr("disabled",
"disabled");this._disabledInputs=d.map(this._disabledInputs,function(b){return b==a?null:b});this._disabledInputs[this._disabledInputs.length]=a}},_isDisabledDatepicker:function(a){if(!a)return!1;for(var b=0;b<this._disabledInputs.length;b++)if(this._disabledInputs[b]==a)return!0;return!1},_getInst:function(a){try{return d.data(a,"datepicker")}catch(b){throw"Missing instance data for this datepicker";}},_optionDatepicker:function(a,b,c){var e=this._getInst(a);if(2==arguments.length&&"string"==typeof b)return"defaults"==
b?d.extend({},d.datepicker._defaults):e?"all"==b?d.extend({},e.settings):this._get(e,b):null;var f=b||{};"string"==typeof b&&(f={},f[b]=c);if(e){this._curInst==e&&this._hideDatepicker();var h=this._getDateDatepicker(a,!0),j=this._getMinMaxDate(e,"min"),g=this._getMinMaxDate(e,"max");z(e.settings,f);null!==j&&(void 0!==f.dateFormat&&void 0===f.minDate)&&(e.settings.minDate=this._formatDate(e,j));null!==g&&(void 0!==f.dateFormat&&void 0===f.maxDate)&&(e.settings.maxDate=this._formatDate(e,g));this._attachments(d(a),
e);this._autoSize(e);this._setDate(e,h);this._updateAlternate(e);this._updateDatepicker(e)}},_changeDatepicker:function(a,b,c){this._optionDatepicker(a,b,c)},_refreshDatepicker:function(a){(a=this._getInst(a))&&this._updateDatepicker(a)},_setDateDatepicker:function(a,b){var c=this._getInst(a);c&&(this._setDate(c,b),this._updateDatepicker(c),this._updateAlternate(c))},_getDateDatepicker:function(a,b){var c=this._getInst(a);c&&!c.inline&&this._setDateFromField(c,b);return c?this._getDate(c):null},_doKeyDown:function(a){var b=
d.datepicker._getInst(a.target),c=!0,e=b.dpDiv.is(".ui-datepicker-rtl");b._keyEvent=!0;if(d.datepicker._datepickerShowing)switch(a.keyCode){case 9:d.datepicker._hideDatepicker();c=!1;break;case 13:return c=d("td."+d.datepicker._dayOverClass+":not(."+d.datepicker._currentClass+")",b.dpDiv),c[0]&&d.datepicker._selectDay(a.target,b.selectedMonth,b.selectedYear,c[0]),(a=d.datepicker._get(b,"onSelect"))?(c=d.datepicker._formatDate(b),a.apply(b.input?b.input[0]:null,[c,b])):d.datepicker._hideDatepicker(),
!1;case 27:d.datepicker._hideDatepicker();break;case 33:d.datepicker._adjustDate(a.target,a.ctrlKey?-d.datepicker._get(b,"stepBigMonths"):-d.datepicker._get(b,"stepMonths"),"M");break;case 34:d.datepicker._adjustDate(a.target,a.ctrlKey?+d.datepicker._get(b,"stepBigMonths"):+d.datepicker._get(b,"stepMonths"),"M");break;case 35:(a.ctrlKey||a.metaKey)&&d.datepicker._clearDate(a.target);c=a.ctrlKey||a.metaKey;break;case 36:(a.ctrlKey||a.metaKey)&&d.datepicker._gotoToday(a.target);c=a.ctrlKey||a.metaKey;
break;case 37:if(a.ctrlKey||a.metaKey)d.datepicker._adjustDate(a.target,e?1:-1,"D");c=a.ctrlKey||a.metaKey;a.originalEvent.altKey&&d.datepicker._adjustDate(a.target,a.ctrlKey?-d.datepicker._get(b,"stepBigMonths"):-d.datepicker._get(b,"stepMonths"),"M");break;case 38:(a.ctrlKey||a.metaKey)&&d.datepicker._adjustDate(a.target,-7,"D");c=a.ctrlKey||a.metaKey;break;case 39:if(a.ctrlKey||a.metaKey)d.datepicker._adjustDate(a.target,e?-1:1,"D");c=a.ctrlKey||a.metaKey;a.originalEvent.altKey&&d.datepicker._adjustDate(a.target,
a.ctrlKey?+d.datepicker._get(b,"stepBigMonths"):+d.datepicker._get(b,"stepMonths"),"M");break;case 40:(a.ctrlKey||a.metaKey)&&d.datepicker._adjustDate(a.target,7,"D");c=a.ctrlKey||a.metaKey;break;default:c=!1}else 36==a.keyCode&&a.ctrlKey?d.datepicker._showDatepicker(this):c=!1;c&&(a.preventDefault(),a.stopPropagation())},_doKeyPress:function(a){var b=d.datepicker._getInst(a.target);if(d.datepicker._get(b,"constrainInput")){var b=d.datepicker._possibleChars(d.datepicker._get(b,"dateFormat")),c=String.fromCharCode(void 0==
a.charCode?a.keyCode:a.charCode);return a.ctrlKey||a.metaKey||" ">c||!b||-1<b.indexOf(c)}},_doKeyUp:function(a){a=d.datepicker._getInst(a.target);if(a.input.val()!=a.lastVal)try{if(d.datepicker.parseDate(d.datepicker._get(a,"dateFormat"),a.input?a.input.val():null,d.datepicker._getFormatConfig(a)))d.datepicker._setDateFromField(a),d.datepicker._updateAlternate(a),d.datepicker._updateDatepicker(a)}catch(b){d.datepicker.log(b)}return!0},_showDatepicker:function(a){a=a.target||a;"input"!=a.nodeName.toLowerCase()&&
(a=d("input",a.parentNode)[0]);if(!(d.datepicker._isDisabledDatepicker(a)||d.datepicker._lastInput==a)){var b=d.datepicker._getInst(a);d.datepicker._curInst&&d.datepicker._curInst!=b&&(d.datepicker._curInst.dpDiv.stop(!0,!0),b&&d.datepicker._datepickerShowing&&d.datepicker._hideDatepicker(d.datepicker._curInst.input[0]));var c=d.datepicker._get(b,"beforeShow"),c=c?c.apply(a,[a,b]):{};if(!1!==c){z(b.settings,c);b.lastVal=null;d.datepicker._lastInput=a;d.datepicker._setDateFromField(b);d.datepicker._inDialog&&
(a.value="");d.datepicker._pos||(d.datepicker._pos=d.datepicker._findPos(a),d.datepicker._pos[1]+=a.offsetHeight);var e=!1;d(a).parents().each(function(){e=e|d(this).css("position")=="fixed";return!e});e&&d.browser.opera&&(d.datepicker._pos[0]-=document.documentElement.scrollLeft,d.datepicker._pos[1]-=document.documentElement.scrollTop);c={left:d.datepicker._pos[0],top:d.datepicker._pos[1]};d.datepicker._pos=null;b.dpDiv.empty();b.dpDiv.css({position:"absolute",display:"block",top:"-1000px"});d.datepicker._updateDatepicker(b);
c=d.datepicker._checkOffset(b,c,e);b.dpDiv.css({position:d.datepicker._inDialog&&d.blockUI?"static":e?"fixed":"absolute",display:"none",left:c.left+"px",top:c.top+"px"});if(!b.inline){var c=d.datepicker._get(b,"showAnim"),f=d.datepicker._get(b,"duration"),h=function(){var a=b.dpDiv.find("iframe.ui-datepicker-cover");if(a.length){var c=d.datepicker._getBorders(b.dpDiv);a.css({left:-c[0],top:-c[1],width:b.dpDiv.outerWidth(),height:b.dpDiv.outerHeight()})}};b.dpDiv.zIndex(d(a).zIndex()+1);d.datepicker._datepickerShowing=
!0;if(d.effects&&d.effects[c])b.dpDiv.show(c,d.datepicker._get(b,"showOptions"),f,h);else b.dpDiv[c||"show"](c?f:null,h);(!c||!f)&&h();b.input.is(":visible")&&!b.input.is(":disabled")&&b.input.focus();d.datepicker._curInst=b}}}},_updateDatepicker:function(a){this.maxRows=4;var b=d.datepicker._getBorders(a.dpDiv);D=a;a.dpDiv.empty().append(this._generateHTML(a));this._attachHandlers(a);var c=a.dpDiv.find("iframe.ui-datepicker-cover");c.length&&c.css({left:-b[0],top:-b[1],width:a.dpDiv.outerWidth(),
height:a.dpDiv.outerHeight()});a.dpDiv.find("."+this._dayOverClass+" a").mouseover();b=this._getNumberOfMonths(a);c=b[1];a.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width("");1<c&&a.dpDiv.addClass("ui-datepicker-multi-"+c).css("width",17*c+"em");a.dpDiv[(1!=b[0]||1!=b[1]?"add":"remove")+"Class"]("ui-datepicker-multi");a.dpDiv[(this._get(a,"isRTL")?"add":"remove")+"Class"]("ui-datepicker-rtl");a==d.datepicker._curInst&&(d.datepicker._datepickerShowing&&
a.input&&a.input.is(":visible")&&!a.input.is(":disabled")&&a.input[0]!=document.activeElement)&&a.input.focus();if(a.yearshtml){var e=a.yearshtml;setTimeout(function(){e===a.yearshtml&&a.yearshtml&&a.dpDiv.find("select.ui-datepicker-year:first").replaceWith(a.yearshtml);e=a.yearshtml=null},0)}},_getBorders:function(a){var b=function(a){return{thin:1,medium:2,thick:3}[a]||a};return[parseFloat(b(a.css("border-left-width"))),parseFloat(b(a.css("border-top-width")))]},_checkOffset:function(a,b,c){var e=
a.dpDiv.outerWidth(),f=a.dpDiv.outerHeight(),h=a.input?a.input.outerWidth():0,j=a.input?a.input.outerHeight():0,g=document.documentElement.clientWidth+(c?0:d(document).scrollLeft()),i=document.documentElement.clientHeight+(c?0:d(document).scrollTop());b.left-=this._get(a,"isRTL")?e-h:0;b.left-=c&&b.left==a.input.offset().left?d(document).scrollLeft():0;b.top-=c&&b.top==a.input.offset().top+j?d(document).scrollTop():0;b.left-=Math.min(b.left,b.left+e>g&&g>e?Math.abs(b.left+e-g):0);b.top-=Math.min(b.top,
b.top+f>i&&i>f?Math.abs(f+j):0);return b},_findPos:function(a){for(var b=this._getInst(a),b=this._get(b,"isRTL");a&&("hidden"==a.type||1!=a.nodeType||d.expr.filters.hidden(a));)a=a[b?"previousSibling":"nextSibling"];a=d(a).offset();return[a.left,a.top]},_hideDatepicker:function(a){var b=this._curInst;if(b&&!(a&&b!=d.data(a,"datepicker"))&&this._datepickerShowing){var a=this._get(b,"showAnim"),c=this._get(b,"duration"),e=function(){d.datepicker._tidyDialog(b)};if(d.effects&&d.effects[a])b.dpDiv.hide(a,
d.datepicker._get(b,"showOptions"),c,e);else b.dpDiv["slideDown"==a?"slideUp":"fadeIn"==a?"fadeOut":"hide"](a?c:null,e);a||e();this._datepickerShowing=!1;(a=this._get(b,"onClose"))&&a.apply(b.input?b.input[0]:null,[b.input?b.input.val():"",b]);this._lastInput=null;this._inDialog&&(this._dialogInput.css({position:"absolute",left:"0",top:"-100px"}),d.blockUI&&(d.unblockUI(),d("body").append(this.dpDiv)));this._inDialog=!1}},_tidyDialog:function(a){a.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")},
_checkExternalClick:function(a){if(d.datepicker._curInst){var a=d(a.target),b=d.datepicker._getInst(a[0]);(a[0].id!=d.datepicker._mainDivId&&0==a.parents("#"+d.datepicker._mainDivId).length&&!a.hasClass(d.datepicker.markerClassName)&&!a.closest("."+d.datepicker._triggerClass).length&&d.datepicker._datepickerShowing&&(!d.datepicker._inDialog||!d.blockUI)||a.hasClass(d.datepicker.markerClassName)&&d.datepicker._curInst!=b)&&d.datepicker._hideDatepicker()}},_adjustDate:function(a,b,c){var a=d(a),e=this._getInst(a[0]);
this._isDisabledDatepicker(a[0])||(this._adjustInstDate(e,b+("M"==c?this._get(e,"showCurrentAtPos"):0),c),this._updateDatepicker(e))},_gotoToday:function(a){var a=d(a),b=this._getInst(a[0]);if(this._get(b,"gotoCurrent")&&b.currentDay)b.selectedDay=b.currentDay,b.drawMonth=b.selectedMonth=b.currentMonth,b.drawYear=b.selectedYear=b.currentYear;else{var c=new Date;b.selectedDay=c.getDate();b.drawMonth=b.selectedMonth=c.getMonth();b.drawYear=b.selectedYear=c.getFullYear()}this._notifyChange(b);this._adjustDate(a)},
_selectMonthYear:function(a,b,c){var a=d(a),e=this._getInst(a[0]);e["selected"+("M"==c?"Month":"Year")]=e["draw"+("M"==c?"Month":"Year")]=parseInt(b.options[b.selectedIndex].value,10);this._notifyChange(e);this._adjustDate(a)},_selectDay:function(a,b,c,e){var f=d(a);!d(e).hasClass(this._unselectableClass)&&!this._isDisabledDatepicker(f[0])&&(f=this._getInst(f[0]),f.selectedDay=f.currentDay=d("a",e).html(),f.selectedMonth=f.currentMonth=b,f.selectedYear=f.currentYear=c,this._selectDate(a,this._formatDate(f,
f.currentDay,f.currentMonth,f.currentYear)))},_clearDate:function(a){a=d(a);this._getInst(a[0]);this._selectDate(a,"")},_selectDate:function(a,b){var c=d(a),c=this._getInst(c[0]),b=null!=b?b:this._formatDate(c);c.input&&c.input.val(b);this._updateAlternate(c);var e=this._get(c,"onSelect");e?e.apply(c.input?c.input[0]:null,[b,c]):c.input&&c.input.trigger("change");c.inline?this._updateDatepicker(c):(this._hideDatepicker(),this._lastInput=c.input[0],"object"!=typeof c.input[0]&&c.input.focus(),this._lastInput=
null)},_updateAlternate:function(a){var b=this._get(a,"altField");if(b){var c=this._get(a,"altFormat")||this._get(a,"dateFormat"),e=this._getDate(a),f=this.formatDate(c,e,this._getFormatConfig(a));d(b).each(function(){d(this).val(f)})}},noWeekends:function(a){a=a.getDay();return[0<a&&6>a,""]},iso8601Week:function(a){a=new Date(a.getTime());a.setDate(a.getDate()+4-(a.getDay()||7));var b=a.getTime();a.setMonth(0);a.setDate(1);return Math.floor(Math.round((b-a)/864E5)/7)+1},parseDate:function(a,b,c){if(null==
a||null==b)throw"Invalid arguments";b="object"==typeof b?b.toString():b+"";if(""==b)return null;for(var e=(c?c.shortYearCutoff:null)||this._defaults.shortYearCutoff,e="string"!=typeof e?e:(new Date).getFullYear()%100+parseInt(e,10),f=(c?c.dayNamesShort:null)||this._defaults.dayNamesShort,h=(c?c.dayNames:null)||this._defaults.dayNames,j=(c?c.monthNamesShort:null)||this._defaults.monthNamesShort,g=(c?c.monthNames:null)||this._defaults.monthNames,i=c=-1,p=-1,r=-1,k=!1,m=function(b){(b=y+1<a.length&&
a.charAt(y+1)==b)&&y++;return b},l=function(a){var c=m(a),a=RegExp("^\\d{1,"+("@"==a?14:"!"==a?20:"y"==a&&c?4:"o"==a?3:2)+"}"),a=b.substring(u).match(a);if(!a)throw"Missing number at position "+u;u+=a[0].length;return parseInt(a[0],10)},n=function(a,c,e){var a=d.map(m(a)?e:c,function(a,b){return[[b,a]]}).sort(function(a,b){return-(a[1].length-b[1].length)}),f=-1;d.each(a,function(a,c){var d=c[1];if(b.substr(u,d.length).toLowerCase()==d.toLowerCase())return f=c[0],u+=d.length,!1});if(-1!=f)return f+
1;throw"Unknown name at position "+u;},s=function(){if(b.charAt(u)!=a.charAt(y))throw"Unexpected literal at position "+u;u++},u=0,y=0;y<a.length;y++)if(k)"'"==a.charAt(y)&&!m("'")?k=!1:s();else switch(a.charAt(y)){case "d":p=l("d");break;case "D":n("D",f,h);break;case "o":r=l("o");break;case "m":i=l("m");break;case "M":i=n("M",j,g);break;case "y":c=l("y");break;case "@":var v=new Date(l("@")),c=v.getFullYear(),i=v.getMonth()+1,p=v.getDate();break;case "!":v=new Date((l("!")-this._ticksTo1970)/1E4);
c=v.getFullYear();i=v.getMonth()+1;p=v.getDate();break;case "'":m("'")?s():k=!0;break;default:s()}if(u<b.length)throw"Extra/unparsed characters found in date: "+b.substring(u);-1==c?c=(new Date).getFullYear():100>c&&(c+=(new Date).getFullYear()-(new Date).getFullYear()%100+(c<=e?0:-100));if(-1<r){i=1;p=r;do{e=this._getDaysInMonth(c,i-1);if(p<=e)break;i++;p-=e}while(1)}v=this._daylightSavingAdjust(new Date(c,i-1,p));if(v.getFullYear()!=c||v.getMonth()+1!=i||v.getDate()!=p)throw"Invalid date";return v},
ATOM:"yy-mm-dd",COOKIE:"D, dd M yy",ISO_8601:"yy-mm-dd",RFC_822:"D, d M y",RFC_850:"DD, dd-M-y",RFC_1036:"D, d M y",RFC_1123:"D, d M yy",RFC_2822:"D, d M yy",RSS:"D, d M y",TICKS:"!",TIMESTAMP:"@",W3C:"yy-mm-dd",_ticksTo1970:864E9*(718685+Math.floor(492.5)-Math.floor(19.7)+Math.floor(4.925)),formatDate:function(a,b,c){if(!b)return"";var d=(c?c.dayNamesShort:null)||this._defaults.dayNamesShort,f=(c?c.dayNames:null)||this._defaults.dayNames,h=(c?c.monthNamesShort:null)||this._defaults.monthNamesShort,
c=(c?c.monthNames:null)||this._defaults.monthNames,j=function(b){(b=r+1<a.length&&a.charAt(r+1)==b)&&r++;return b},g=function(a,b,c){b=""+b;if(j(a))for(;b.length<c;)b="0"+b;return b},i="",p=!1;if(b)for(var r=0;r<a.length;r++)if(p)"'"==a.charAt(r)&&!j("'")?p=!1:i+=a.charAt(r);else switch(a.charAt(r)){case "d":i+=g("d",b.getDate(),2);break;case "D":var k;k=b.getDay();var m=d,l=f;k=j("D")?l[k]:m[k];i+=k;break;case "o":i+=g("o",Math.round(((new Date(b.getFullYear(),b.getMonth(),b.getDate())).getTime()-
(new Date(b.getFullYear(),0,0)).getTime())/864E5),3);break;case "m":i+=g("m",b.getMonth()+1,2);break;case "M":k=b.getMonth();m=h;l=c;k=j("M")?l[k]:m[k];i+=k;break;case "y":i+=j("y")?b.getFullYear():(10>b.getYear()%100?"0":"")+b.getYear()%100;break;case "@":i+=b.getTime();break;case "!":i+=1E4*b.getTime()+this._ticksTo1970;break;case "'":j("'")?i+="'":p=!0;break;default:i+=a.charAt(r)}return i},_possibleChars:function(a){for(var b="",c=!1,d=function(b){(b=f+1<a.length&&a.charAt(f+1)==b)&&f++;return b},
f=0;f<a.length;f++)if(c)"'"==a.charAt(f)&&!d("'")?c=!1:b+=a.charAt(f);else switch(a.charAt(f)){case "d":case "m":case "y":case "@":b+="0123456789";break;case "D":case "M":return null;case "'":d("'")?b+="'":c=!0;break;default:b+=a.charAt(f)}return b},_get:function(a,b){return void 0!==a.settings[b]?a.settings[b]:this._defaults[b]},_setDateFromField:function(a,b){if(a.input.val()!=a.lastVal){var c=this._get(a,"dateFormat"),d=a.lastVal=a.input?a.input.val():null,f,h;f=h=this._getDefaultDate(a);var j=
this._getFormatConfig(a);try{f=this.parseDate(c,d,j)||h}catch(g){this.log(g),d=b?"":d}a.selectedDay=f.getDate();a.drawMonth=a.selectedMonth=f.getMonth();a.drawYear=a.selectedYear=f.getFullYear();a.currentDay=d?f.getDate():0;a.currentMonth=d?f.getMonth():0;a.currentYear=d?f.getFullYear():0;this._adjustInstDate(a)}},_getDefaultDate:function(a){return this._restrictMinMax(a,this._determineDate(a,this._get(a,"defaultDate"),new Date))},_determineDate:function(a,b,c){if(null==b||""===b)b=c;else{var e;if("string"==
typeof b)a:{try{e=d.datepicker.parseDate(d.datepicker._get(a,"dateFormat"),b,d.datepicker._getFormatConfig(a));break a}catch(f){}var h=(b.toLowerCase().match(/^c/)?d.datepicker._getDate(a):null)||new Date,a=h.getFullYear();e=h.getMonth();for(var h=h.getDate(),j=/([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,g=j.exec(b);g;){switch(g[2]||"d"){case "d":case "D":h+=parseInt(g[1],10);break;case "w":case "W":h+=7*parseInt(g[1],10);break;case "m":case "M":e+=parseInt(g[1],10);h=Math.min(h,d.datepicker._getDaysInMonth(a,
e));break;case "y":case "Y":a+=parseInt(g[1],10),h=Math.min(h,d.datepicker._getDaysInMonth(a,e))}g=j.exec(b)}e=new Date(a,e,h)}else"number"==typeof b?isNaN(b)?b=c:(a=new Date,a.setDate(a.getDate()+b),b=a):b=new Date(b.getTime()),e=b;b=e}if(b=b&&"Invalid Date"==b.toString()?c:b)b.setHours(0),b.setMinutes(0),b.setSeconds(0),b.setMilliseconds(0);return this._daylightSavingAdjust(b)},_daylightSavingAdjust:function(a){if(!a)return null;a.setHours(12<a.getHours()?a.getHours()+2:0);return a},_setDate:function(a,
b,c){var d=!b,f=a.selectedMonth,h=a.selectedYear,b=this._restrictMinMax(a,this._determineDate(a,b,new Date));a.selectedDay=a.currentDay=b.getDate();a.drawMonth=a.selectedMonth=a.currentMonth=b.getMonth();a.drawYear=a.selectedYear=a.currentYear=b.getFullYear();(f!=a.selectedMonth||h!=a.selectedYear)&&!c&&this._notifyChange(a);this._adjustInstDate(a);a.input&&a.input.val(d?"":this._formatDate(a))},_getDate:function(a){return!a.currentYear||a.input&&""==a.input.val()?null:this._daylightSavingAdjust(new Date(a.currentYear,
a.currentMonth,a.currentDay))},_attachHandlers:function(a){var b=this._get(a,"stepMonths"),c="#"+a.id.replace(/\\\\/g,"\\");a.dpDiv.find("[data-handler]").map(function(){d(this).bind(this.getAttribute("data-event"),{prev:function(){window["DP_jQuery_"+x].datepicker._adjustDate(c,-b,"M")},next:function(){window["DP_jQuery_"+x].datepicker._adjustDate(c,+b,"M")},hide:function(){window["DP_jQuery_"+x].datepicker._hideDatepicker()},today:function(){window["DP_jQuery_"+x].datepicker._gotoToday(c)},selectDay:function(){window["DP_jQuery_"+
x].datepicker._selectDay(c,+this.getAttribute("data-month"),+this.getAttribute("data-year"),this);return!1},selectMonth:function(){window["DP_jQuery_"+x].datepicker._selectMonthYear(c,this,"M");return!1},selectYear:function(){window["DP_jQuery_"+x].datepicker._selectMonthYear(c,this,"Y");return!1}}[this.getAttribute("data-handler")])})},_generateHTML:function(a){var b=new Date,b=this._daylightSavingAdjust(new Date(b.getFullYear(),b.getMonth(),b.getDate())),c=this._get(a,"isRTL"),e=this._get(a,"showButtonPanel"),
f=this._get(a,"hideIfNoPrevNext"),h=this._get(a,"navigationAsDateFormat"),j=this._getNumberOfMonths(a),g=this._get(a,"showCurrentAtPos"),i=this._get(a,"stepMonths"),p=1!=j[0]||1!=j[1],r=this._daylightSavingAdjust(!a.currentDay?new Date(9999,9,9):new Date(a.currentYear,a.currentMonth,a.currentDay)),k=this._getMinMaxDate(a,"min"),m=this._getMinMaxDate(a,"max"),g=a.drawMonth-g,l=a.drawYear;0>g&&(g+=12,l--);if(m)for(var n=this._daylightSavingAdjust(new Date(m.getFullYear(),m.getMonth()-j[0]*j[1]+1,m.getDate())),
n=k&&n<k?k:n;this._daylightSavingAdjust(new Date(l,g,1))>n;)g--,0>g&&(g=11,l--);a.drawMonth=g;a.drawYear=l;var n=this._get(a,"prevText"),n=!h?n:this.formatDate(n,this._daylightSavingAdjust(new Date(l,g-i,1)),this._getFormatConfig(a)),n=this._canAdjustMonth(a,-1,l,g)?'<a class="ui-datepicker-prev ui-corner-all" data-handler="prev" data-event="click" title="'+n+'"><span class="ui-icon ui-icon-circle-triangle-'+(c?"e":"w")+'">'+n+"</span></a>":f?"":'<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="'+
n+'"><span class="ui-icon ui-icon-circle-triangle-'+(c?"e":"w")+'">'+n+"</span></a>",s=this._get(a,"nextText"),s=!h?s:this.formatDate(s,this._daylightSavingAdjust(new Date(l,g+i,1)),this._getFormatConfig(a)),f=this._canAdjustMonth(a,1,l,g)?'<a class="ui-datepicker-next ui-corner-all" data-handler="next" data-event="click" title="'+s+'"><span class="ui-icon ui-icon-circle-triangle-'+(c?"w":"e")+'">'+s+"</span></a>":f?"":'<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="'+s+'"><span class="ui-icon ui-icon-circle-triangle-'+
(c?"w":"e")+'">'+s+"</span></a>",i=this._get(a,"currentText"),s=this._get(a,"gotoCurrent")&&a.currentDay?r:b,i=!h?i:this.formatDate(i,s,this._getFormatConfig(a)),h=!a.inline?'<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" data-handler="hide" data-event="click">'+this._get(a,"closeText")+"</button>":"",e=e?'<div class="ui-datepicker-buttonpane ui-widget-content">'+(c?h:"")+(this._isInRange(a,s)?'<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" data-handler="today" data-event="click">'+
i+"</button>":"")+(c?"":h)+"</div>":"",h=parseInt(this._get(a,"firstDay"),10),h=isNaN(h)?0:h,i=this._get(a,"showWeek"),s=this._get(a,"dayNames");this._get(a,"dayNamesShort");var u=this._get(a,"dayNamesMin"),y=this._get(a,"monthNames"),v=this._get(a,"monthNamesShort"),x=this._get(a,"beforeShowDay"),z=this._get(a,"showOtherMonths"),D=this._get(a,"selectOtherMonths");this._get(a,"calculateWeek");for(var B=this._getDefaultDate(a),E="",F=0;F<j[0];F++){var I="";this.maxRows=4;for(var G=0;G<j[1];G++){var C=
this._daylightSavingAdjust(new Date(l,g,a.selectedDay)),t=" ui-corner-all",q="";if(p){q+='<div class="ui-datepicker-group';if(1<j[1])switch(G){case 0:q+=" ui-datepicker-group-first";t=" ui-corner-"+(c?"right":"left");break;case j[1]-1:q+=" ui-datepicker-group-last";t=" ui-corner-"+(c?"left":"right");break;default:q+=" ui-datepicker-group-middle",t=""}q+='">'}for(var q=q+('<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix'+t+'">'+(/all|left/.test(t)&&0==F?c?f:n:"")+(/all|right/.test(t)&&
0==F?c?n:f:"")+this._generateMonthYearHeader(a,g,l,k,m,0<F||0<G,y,v)+'</div><table class="ui-datepicker-calendar"><thead><tr>'),w=i?'<th class="ui-datepicker-week-col">'+this._get(a,"weekHeader")+"</th>":"",t=0;7>t;t++)var o=(t+h)%7,w=w+("<th"+(5<=(t+h+6)%7?' class="ui-datepicker-week-end"':"")+'><span title="'+s[o]+'">'+u[o]+"</span></th>");q+=w+"</tr></thead><tbody>";w=this._getDaysInMonth(l,g);l==a.selectedYear&&g==a.selectedMonth&&(a.selectedDay=Math.min(a.selectedDay,w));t=(this._getFirstDayOfMonth(l,
g)-h+7)%7;w=Math.ceil((t+w)/7);this.maxRows=w=p?this.maxRows>w?this.maxRows:w:w;for(var o=this._daylightSavingAdjust(new Date(l,g,1-t)),L=0;L<w;L++){for(var q=q+"<tr>",J=!i?"":'<td class="ui-datepicker-week-col">'+this._get(a,"calculateWeek")(o)+"</td>",t=0;7>t;t++){var H=x?x.apply(a.input?a.input[0]:null,[o]):[!0,""],A=o.getMonth()!=g,K=A&&!D||!H[0]||k&&o<k||m&&o>m,J=J+('<td class="'+(5<=(t+h+6)%7?" ui-datepicker-week-end":"")+(A?" ui-datepicker-other-month":"")+(o.getTime()==C.getTime()&&g==a.selectedMonth&&
a._keyEvent||B.getTime()==o.getTime()&&B.getTime()==C.getTime()?" "+this._dayOverClass:"")+(K?" "+this._unselectableClass+" ui-state-disabled":"")+(A&&!z?"":" "+H[1]+(o.getTime()==r.getTime()?" "+this._currentClass:"")+(o.getTime()==b.getTime()?" ui-datepicker-today":""))+'"'+((!A||z)&&H[2]?' title="'+H[2]+'"':"")+(K?"":' data-handler="selectDay" data-event="click" data-month="'+o.getMonth()+'" data-year="'+o.getFullYear()+'"')+">"+(A&&!z?"&#xa0;":K?'<span class="ui-state-default">'+o.getDate()+"</span>":
'<a class="ui-state-default'+(o.getTime()==b.getTime()?" ui-state-highlight":"")+(o.getTime()==r.getTime()?" ui-state-active":"")+(A?" ui-priority-secondary":"")+'" href="#">'+o.getDate()+"</a>")+"</td>");o.setDate(o.getDate()+1);o=this._daylightSavingAdjust(o)}q+=J+"</tr>"}g++;11<g&&(g=0,l++);q+="</tbody></table>"+(p?"</div>"+(0<j[0]&&G==j[1]-1?'<div class="ui-datepicker-row-break"></div>':""):"");I+=q}E+=I}E+=e+(d.browser.msie&&7>parseInt(d.browser.version,10)&&!a.inline?'<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>':
"");a._keyEvent=!1;return E},_generateMonthYearHeader:function(a,b,c,d,f,h,j,g){var i=this._get(a,"changeMonth"),p=this._get(a,"changeYear"),r=this._get(a,"showMonthAfterYear"),k='<div class="ui-datepicker-title">',m="";if(h||!i)m+='<span class="ui-datepicker-month">'+j[b]+"</span>";else{for(var j=d&&d.getFullYear()==c,l=f&&f.getFullYear()==c,m=m+'<select class="ui-datepicker-month" data-handler="selectMonth" data-event="change">',n=0;12>n;n++)if((!j||n>=d.getMonth())&&(!l||n<=f.getMonth()))m+='<option value="'+
n+'"'+(n==b?' selected="selected"':"")+">"+g[n]+"</option>";m+="</select>"}r||(k+=m+(h||!i||!p?"&#xa0;":""));if(!a.yearshtml)if(a.yearshtml="",h||!p)k+='<span class="ui-datepicker-year">'+c+"</span>";else{var g=this._get(a,"yearRange").split(":"),s=(new Date).getFullYear(),j=function(a){a=a.match(/c[+-].*/)?c+parseInt(a.substring(1),10):a.match(/[+-].*/)?s+parseInt(a,10):parseInt(a,10);return isNaN(a)?s:a},b=j(g[0]),g=Math.max(b,j(g[1]||"")),b=d?Math.max(b,d.getFullYear()):b,g=f?Math.min(g,f.getFullYear()):
g;for(a.yearshtml+='<select class="ui-datepicker-year" data-handler="selectYear" data-event="change">';b<=g;b++)a.yearshtml+='<option value="'+b+'"'+(b==c?' selected="selected"':"")+">"+b+"</option>";a.yearshtml+="</select>";k+=a.yearshtml;a.yearshtml=null}k+=this._get(a,"yearSuffix");r&&(k+=(h||!i||!p?"&#xa0;":"")+m);return k+"</div>"},_adjustInstDate:function(a,b,c){var d=a.drawYear+("Y"==c?b:0),f=a.drawMonth+("M"==c?b:0),b=Math.min(a.selectedDay,this._getDaysInMonth(d,f))+("D"==c?b:0),d=this._restrictMinMax(a,
this._daylightSavingAdjust(new Date(d,f,b)));a.selectedDay=d.getDate();a.drawMonth=a.selectedMonth=d.getMonth();a.drawYear=a.selectedYear=d.getFullYear();("M"==c||"Y"==c)&&this._notifyChange(a)},_restrictMinMax:function(a,b){var c=this._getMinMaxDate(a,"min"),d=this._getMinMaxDate(a,"max"),c=c&&b<c?c:b;return d&&c>d?d:c},_notifyChange:function(a){var b=this._get(a,"onChangeMonthYear");b&&b.apply(a.input?a.input[0]:null,[a.selectedYear,a.selectedMonth+1,a])},_getNumberOfMonths:function(a){a=this._get(a,
"numberOfMonths");return null==a?[1,1]:"number"==typeof a?[1,a]:a},_getMinMaxDate:function(a,b){return this._determineDate(a,this._get(a,b+"Date"),null)},_getDaysInMonth:function(a,b){return 32-this._daylightSavingAdjust(new Date(a,b,32)).getDate()},_getFirstDayOfMonth:function(a,b){return(new Date(a,b,1)).getDay()},_canAdjustMonth:function(a,b,c,d){var f=this._getNumberOfMonths(a),c=this._daylightSavingAdjust(new Date(c,d+(0>b?b:f[0]*f[1]),1));0>b&&c.setDate(this._getDaysInMonth(c.getFullYear(),
c.getMonth()));return this._isInRange(a,c)},_isInRange:function(a,b){var c=this._getMinMaxDate(a,"min"),d=this._getMinMaxDate(a,"max");return(!c||b.getTime()>=c.getTime())&&(!d||b.getTime()<=d.getTime())},_getFormatConfig:function(a){var b=this._get(a,"shortYearCutoff"),b="string"!=typeof b?b:(new Date).getFullYear()%100+parseInt(b,10);return{shortYearCutoff:b,dayNamesShort:this._get(a,"dayNamesShort"),dayNames:this._get(a,"dayNames"),monthNamesShort:this._get(a,"monthNamesShort"),monthNames:this._get(a,
"monthNames")}},_formatDate:function(a,b,c,d){b||(a.currentDay=a.selectedDay,a.currentMonth=a.selectedMonth,a.currentYear=a.selectedYear);b=b?"object"==typeof b?b:this._daylightSavingAdjust(new Date(d,c,b)):this._daylightSavingAdjust(new Date(a.currentYear,a.currentMonth,a.currentDay));return this.formatDate(this._get(a,"dateFormat"),b,this._getFormatConfig(a))}});d.fn.datepicker=function(a){if(!this.length)return this;d.datepicker.initialized||(d(document).mousedown(d.datepicker._checkExternalClick).find("body").append(d.datepicker.dpDiv),
d.datepicker.initialized=!0);var b=Array.prototype.slice.call(arguments,1);return"string"==typeof a&&("isDisabled"==a||"getDate"==a||"widget"==a)||"option"==a&&2==arguments.length&&"string"==typeof arguments[1]?d.datepicker["_"+a+"Datepicker"].apply(d.datepicker,[this[0]].concat(b)):this.each(function(){typeof a=="string"?d.datepicker["_"+a+"Datepicker"].apply(d.datepicker,[this].concat(b)):d.datepicker._attachDatepicker(this,a)})};d.datepicker=new B;d.datepicker.initialized=!1;d.datepicker.uuid=
(new Date).getTime();d.datepicker.version="1.8.24";window["DP_jQuery_"+x]=d})(jQuery);return{}}.call(this);
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.auiplugin:internal-@atlassian-aui-src-js-aui-date-picker', location = 'node_modules/@atlassian/aui/src/js/aui/date-picker.js' */
("undefined"===typeof window?global:window).__f60531af6fc7657922d6dda15e693588=function(){function g(a){return a&&a.__esModule?a:{"default":a}}function f(a,c){var d,g,b,i,m;d={};i=w++;b=(0,e.default)(a);b.attr("data-aui-dp-uuid",i);c=e.default.extend(void 0,f.prototype.defaultOptions,c);d.getField=function(){return b};d.getOptions=function(){return c};g=function(){var a,g,h,k,s,u,p,q,j,n;d.hide=function(){j.hide()};d.show=function(){j.show()};d.setDate=function(b){"undefined"!==typeof a&&a.datepicker("setDate",
b)};d.getDate=function(){if("undefined"!==typeof a)return a.datepicker("getDate")};u=function(f){n.off();if(c.hint){var l=(0,e.default)("<div/>").addClass("aui-datepicker-hint");l.append("<span/>").text(c.hint);n.append(l)}a=(0,e.default)("<div/>");a.attr("data-aui-dp-popup-uuid",i);n.append(a);l={dateFormat:c.dateFormat,defaultDate:b.val(),maxDate:b.attr("max"),minDate:b.attr("min"),nextText:">",onSelect:function(a){b.val(a);b.change();d.hide();p=!0;b.focus();c.onSelect&&c.onSelect.call(this,a)},
onChangeMonthYear:function(){setTimeout(j.refresh,0)},prevText:"<"};e.default.extend(l,f);-1<c.firstDay&&(l.firstDay=c.firstDay);"undefined"!==typeof b.attr("step")&&t.log("WARNING: The date picker polyfill currently does not support the step attribute!");a.datepicker(l);(0,e.default)("body").on("keydown",g);b.on("focusout keydown",h);b.on("propertychange keyup input paste",s)};g=function(a){var c=(0,e.default)(a.target),f=c.closest(n).length||c.is(b),g=c.closest(".ui-datepicker-header").length;!f&&
!g||a.keyCode===x.default.ESCAPE?d.hide():c[0]!==b[0]&&a.preventDefault()};h=function(){q||((0,e.default)("body").on("focus blur click mousedown","*",g),q=!0)};k=function(){p?p=!1:d.show()};s=function(){if((0,e.default)(this).val())a.datepicker("setDate",b.val()),a.datepicker("option",{maxDate:b.attr("max"),minDate:b.attr("min")})};d.destroyPolyfill=function(){d.hide();b.attr("placeholder",null);b.off("propertychange keyup input paste",s);b.off("focus click",k);b.off("focusout keydown",h);(0,e.default)("body").off("keydown",
h);f.prototype.browserSupportsDateField&&(b[0].type="date");"undefined"!==typeof a&&a.datepicker("destroy");delete d.destroyPolyfill;delete d.show;delete d.hide};q=p=!1;c.languageCode in f.prototype.localisations||(c.languageCode="");var v=f.prototype.localisations,r="",o=240;"large"===v.size&&(o=325,r="aui-datepicker-dialog-large");o={hideCallback:function(){(0,e.default)("body").off("focus blur click mousedown","*",g);q=false;m&&m._datePickerPopup&&delete m._datePickerPopup},hideDelay:null,noBind:!0,
persistent:!0,closeOthers:!1,width:o};c.position&&(o.calculatePositions=function(a,b){var d=(0,e.default)(a[0]);return c.position.call(this,d,b)});j=(0,y.default)(b,void 0,function(b,c,d){if(typeof a==="undefined"){n=b;u(v)}if(m=(0,e.default)(c).closest(".aui-inline-dialog").get(0))m._datePickerPopup=j;d()},o);j.addClass("aui-datepicker-dialog");j.addClass(r);b.on("focus click",k);b.attr("placeholder",c.dateFormat);if(c.overrideBrowserDefault&&f.prototype.browserSupportsDateField&&(b[0].type="text",
r=b[0].getAttribute("value")))b[0].value=r};d.reset=function(){"function"===typeof d.destroyPolyfill&&d.destroyPolyfill();(!f.prototype.browserSupportsDateField||c.overrideBrowserDefault)&&g()};d.reset();return d}var h={};"use strict";Object.defineProperty(h,"__esModule",{value:!0});var e=g(__2fd777cca7fe187ff4048afabed6a6b5);__716e1ce77ba41179f2e03684627da84b;var t;var a=__4f4d08f5cd21aa65e83ce6be211355f4;if(a&&a.__esModule)t=a;else{var k={};if(null!=a)for(var i in a)Object.prototype.hasOwnProperty.call(a,
i)&&(k[i]=a[i]);k.default=a;t=k}i=g(__dd0dee18d8910035abf3563b0855343d);var y=g(__afb690a989e69e0e0958267e81e20b37),x=g(__2df6ae9f601a70792914228c0cba1eb9),a=g(__c224cbc2582565ddc04950dfebb7528b),w=0;f.prototype.browserSupportsDateField="date"===(0,e.default)('<input type="date" />')[0].type;f.prototype.defaultOptions={overrideBrowserDefault:!1,firstDay:-1,languageCode:(0,e.default)("html").attr("lang")||"en-AU",dateFormat:e.default.datepicker.W3C};f.prototype.localisations={dayNames:[a.default.getText("ajs.datepicker.localisations.day-names.sunday"),
a.default.getText("ajs.datepicker.localisations.day-names.monday"),a.default.getText("ajs.datepicker.localisations.day-names.tuesday"),a.default.getText("ajs.datepicker.localisations.day-names.wednesday"),a.default.getText("ajs.datepicker.localisations.day-names.thursday"),a.default.getText("ajs.datepicker.localisations.day-names.friday"),a.default.getText("ajs.datepicker.localisations.day-names.saturday")],dayNamesMin:[a.default.getText("ajs.datepicker.localisations.day-names-min.sunday"),a.default.getText("ajs.datepicker.localisations.day-names-min.monday"),
a.default.getText("ajs.datepicker.localisations.day-names-min.tuesday"),a.default.getText("ajs.datepicker.localisations.day-names-min.wednesday"),a.default.getText("ajs.datepicker.localisations.day-names-min.thursday"),a.default.getText("ajs.datepicker.localisations.day-names-min.friday"),a.default.getText("ajs.datepicker.localisations.day-names-min.saturday")],firstDay:a.default.getText("ajs.datepicker.localisations.first-day"),isRTL:"true"===a.default.getText("ajs.datepicker.localisations.is-RTL")?
!0:!1,monthNames:[a.default.getText("ajs.datepicker.localisations.month-names.january"),a.default.getText("ajs.datepicker.localisations.month-names.february"),a.default.getText("ajs.datepicker.localisations.month-names.march"),a.default.getText("ajs.datepicker.localisations.month-names.april"),a.default.getText("ajs.datepicker.localisations.month-names.may"),a.default.getText("ajs.datepicker.localisations.month-names.june"),a.default.getText("ajs.datepicker.localisations.month-names.july"),a.default.getText("ajs.datepicker.localisations.month-names.august"),
a.default.getText("ajs.datepicker.localisations.month-names.september"),a.default.getText("ajs.datepicker.localisations.month-names.october"),a.default.getText("ajs.datepicker.localisations.month-names.november"),a.default.getText("ajs.datepicker.localisations.month-names.december")],showMonthAfterYear:"true"===a.default.getText("ajs.datepicker.localisations.show-month-after-year")?!0:!1,yearSuffix:a.default.getText("ajs.datepicker.localisations.year-suffix")};e.default.fn.datePicker=function(a){return new f(this,
a)};(0,i.default)("DatePicker",f);h.default=f;return h=h["default"]}.call(this);
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.auiplugin:internal-jquery-ui-datepicker', location = 'node_modules/@atlassian/aui/src/js-vendor/jquery/jquery-ui/jquery.ui.datepicker.js' */
("undefined"===typeof window?global:window).__716e1ce77ba41179f2e03684627da84b=function(){(function(d){function B(){this.debug=!1;this._curInst=null;this._keyEvent=!1;this._disabledInputs=[];this._inDialog=this._datepickerShowing=!1;this._mainDivId="ui-datepicker-div";this._inlineClass="ui-datepicker-inline";this._appendClass="ui-datepicker-append";this._triggerClass="ui-datepicker-trigger";this._dialogClass="ui-datepicker-dialog";this._disableClass="ui-datepicker-disabled";this._unselectableClass=
"ui-datepicker-unselectable";this._currentClass="ui-datepicker-current-day";this._dayOverClass="ui-datepicker-days-cell-over";this.regional=[];this.regional[""]={closeText:"Done",prevText:"Prev",nextText:"Next",currentText:"Today",monthNames:"January February March April May June July August September October November December".split(" "),monthNamesShort:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "),dayNames:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),dayNamesShort:"Sun Mon Tue Wed Thu Fri Sat".split(" "),
dayNamesMin:"Su Mo Tu We Th Fr Sa".split(" "),weekHeader:"Wk",dateFormat:"mm/dd/yy",firstDay:0,isRTL:!1,showMonthAfterYear:!1,yearSuffix:""};this._defaults={showOn:"focus",showAnim:"fadeIn",showOptions:{},defaultDate:null,appendText:"",buttonText:"...",buttonImage:"",buttonImageOnly:!1,hideIfNoPrevNext:!1,navigationAsDateFormat:!1,gotoCurrent:!1,changeMonth:!1,changeYear:!1,yearRange:"c-10:c+10",showOtherMonths:!1,selectOtherMonths:!1,showWeek:!1,calculateWeek:this.iso8601Week,shortYearCutoff:"+10",
minDate:null,maxDate:null,duration:"fast",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:"",altFormat:"",constrainInput:!0,showButtonPanel:!1,autoSize:!1,disabled:!1};d.extend(this._defaults,this.regional[""]);this.dpDiv=C(d('<div id="'+this._mainDivId+'" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'))}function C(a){return a.bind("mouseout",
function(a){a=d(a.target).closest("button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a");a.length&&a.removeClass("ui-state-hover ui-datepicker-prev-hover ui-datepicker-next-hover")}).bind("mouseover",function(b){b=d(b.target).closest("button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a");if(!d.datepicker._isDisabledDatepicker(D.inline?a.parent()[0]:D.input[0])&&b.length)b.parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"),
b.addClass("ui-state-hover"),b.hasClass("ui-datepicker-prev")&&b.addClass("ui-datepicker-prev-hover"),b.hasClass("ui-datepicker-next")&&b.addClass("ui-datepicker-next-hover")})}function z(a,b){d.extend(a,b);for(var c in b)if(null==b[c]||void 0==b[c])a[c]=b[c];return a}d.extend(d.ui,{datepicker:{version:"1.8.24"}});var x=(new Date).getTime(),D;d.extend(B.prototype,{markerClassName:"hasDatepicker",maxRows:4,log:function(){this.debug&&console.log.apply("",arguments)},_widgetDatepicker:function(){return this.dpDiv},
setDefaults:function(a){z(this._defaults,a||{});return this},_attachDatepicker:function(a,b){var c=null,e;for(e in this._defaults){var f=a.getAttribute("date:"+e);if(f){c=c||{};try{c[e]=eval(f)}catch(h){c[e]=f}}}e=a.nodeName.toLowerCase();f="div"==e||"span"==e;a.id||(this.uuid+=1,a.id="dp"+this.uuid);var j=this._newInst(d(a),f);j.settings=d.extend({},b||{},c||{});"input"==e?this._connectDatepicker(a,j):f&&this._inlineDatepicker(a,j)},_newInst:function(a,b){return{id:a[0].id.replace(/([^A-Za-z0-9_-])/g,
"\\\\$1"),input:a,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:b,dpDiv:!b?this.dpDiv:C(d('<div class="'+this._inlineClass+' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'))}},_connectDatepicker:function(a,b){var c=d(a);b.append=d([]);b.trigger=d([]);c.hasClass(this.markerClassName)||(this._attachments(c,b),c.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp).bind("setData.datepicker",
function(a,c,d){b.settings[c]=d}).bind("getData.datepicker",function(a,c){return this._get(b,c)}),this._autoSize(b),d.data(a,"datepicker",b),b.settings.disabled&&this._disableDatepicker(a))},_attachments:function(a,b){var c=this._get(b,"appendText"),e=this._get(b,"isRTL");b.append&&b.append.remove();c&&(b.append=d('<span class="'+this._appendClass+'">'+c+"</span>"),a[e?"before":"after"](b.append));a.unbind("focus",this._showDatepicker);b.trigger&&b.trigger.remove();c=this._get(b,"showOn");("focus"==
c||"both"==c)&&a.focus(this._showDatepicker);if("button"==c||"both"==c){var c=this._get(b,"buttonText"),f=this._get(b,"buttonImage");b.trigger=d(this._get(b,"buttonImageOnly")?d("<img/>").addClass(this._triggerClass).attr({src:f,alt:c,title:c}):d('<button type="button"></button>').addClass(this._triggerClass).html(""==f?c:d("<img/>").attr({src:f,alt:c,title:c})));a[e?"before":"after"](b.trigger);b.trigger.click(function(){if(d.datepicker._datepickerShowing&&d.datepicker._lastInput==a[0])d.datepicker._hideDatepicker();
else{d.datepicker._datepickerShowing&&d.datepicker._lastInput!=a[0]&&d.datepicker._hideDatepicker();d.datepicker._showDatepicker(a[0])}return false})}},_autoSize:function(a){if(this._get(a,"autoSize")&&!a.inline){var b=new Date(2009,11,20),c=this._get(a,"dateFormat");if(c.match(/[DM]/)){var d=function(a){for(var b=0,c=0,d=0;d<a.length;d++)a[d].length>b&&(b=a[d].length,c=d);return c};b.setMonth(d(this._get(a,c.match(/MM/)?"monthNames":"monthNamesShort")));b.setDate(d(this._get(a,c.match(/DD/)?"dayNames":
"dayNamesShort"))+20-b.getDay())}a.input.attr("size",this._formatDate(a,b).length)}},_inlineDatepicker:function(a,b){var c=d(a);c.hasClass(this.markerClassName)||(c.addClass(this.markerClassName).append(b.dpDiv).bind("setData.datepicker",function(a,c,d){b.settings[c]=d}).bind("getData.datepicker",function(a,c){return this._get(b,c)}),d.data(a,"datepicker",b),this._setDate(b,this._getDefaultDate(b),!0),this._updateDatepicker(b),this._updateAlternate(b),b.settings.disabled&&this._disableDatepicker(a),
b.dpDiv.css("display","block"))},_dialogDatepicker:function(a,b,c,e,f){a=this._dialogInst;a||(this.uuid+=1,this._dialogInput=d('<input type="text" id="dp'+this.uuid+'" style="position: absolute; top: -100px; width: 0px;"/>'),this._dialogInput.keydown(this._doKeyDown),d("body").append(this._dialogInput),a=this._dialogInst=this._newInst(this._dialogInput,!1),a.settings={},d.data(this._dialogInput[0],"datepicker",a));z(a.settings,e||{});b=b&&b.constructor==Date?this._formatDate(a,b):b;this._dialogInput.val(b);
this._pos=f?f.length?f:[f.pageX,f.pageY]:null;this._pos||(this._pos=[document.documentElement.clientWidth/2-100+(document.documentElement.scrollLeft||document.body.scrollLeft),document.documentElement.clientHeight/2-150+(document.documentElement.scrollTop||document.body.scrollTop)]);this._dialogInput.css("left",this._pos[0]+20+"px").css("top",this._pos[1]+"px");a.settings.onSelect=c;this._inDialog=!0;this.dpDiv.addClass(this._dialogClass);this._showDatepicker(this._dialogInput[0]);d.blockUI&&d.blockUI(this.dpDiv);
d.data(this._dialogInput[0],"datepicker",a);return this},_destroyDatepicker:function(a){var b=d(a),c=d.data(a,"datepicker");if(b.hasClass(this.markerClassName)){var e=a.nodeName.toLowerCase();d.removeData(a,"datepicker");"input"==e?(c.append.remove(),c.trigger.remove(),b.removeClass(this.markerClassName).unbind("focus",this._showDatepicker).unbind("keydown",this._doKeyDown).unbind("keypress",this._doKeyPress).unbind("keyup",this._doKeyUp)):("div"==e||"span"==e)&&b.removeClass(this.markerClassName).empty()}},
_enableDatepicker:function(a){var b=d(a),c=d.data(a,"datepicker");if(b.hasClass(this.markerClassName)){var e=a.nodeName.toLowerCase();if("input"==e)a.disabled=!1,c.trigger.filter("button").each(function(){this.disabled=!1}).end().filter("img").css({opacity:"1.0",cursor:""});else if("div"==e||"span"==e)b=b.children("."+this._inlineClass),b.children().removeClass("ui-state-disabled"),b.find("select.ui-datepicker-month, select.ui-datepicker-year").removeAttr("disabled");this._disabledInputs=d.map(this._disabledInputs,
function(b){return b==a?null:b})}},_disableDatepicker:function(a){var b=d(a),c=d.data(a,"datepicker");if(b.hasClass(this.markerClassName)){var e=a.nodeName.toLowerCase();if("input"==e)a.disabled=!0,c.trigger.filter("button").each(function(){this.disabled=!0}).end().filter("img").css({opacity:"0.5",cursor:"default"});else if("div"==e||"span"==e)b=b.children("."+this._inlineClass),b.children().addClass("ui-state-disabled"),b.find("select.ui-datepicker-month, select.ui-datepicker-year").attr("disabled",
"disabled");this._disabledInputs=d.map(this._disabledInputs,function(b){return b==a?null:b});this._disabledInputs[this._disabledInputs.length]=a}},_isDisabledDatepicker:function(a){if(!a)return!1;for(var b=0;b<this._disabledInputs.length;b++)if(this._disabledInputs[b]==a)return!0;return!1},_getInst:function(a){try{return d.data(a,"datepicker")}catch(b){throw"Missing instance data for this datepicker";}},_optionDatepicker:function(a,b,c){var e=this._getInst(a);if(2==arguments.length&&"string"==typeof b)return"defaults"==
b?d.extend({},d.datepicker._defaults):e?"all"==b?d.extend({},e.settings):this._get(e,b):null;var f=b||{};"string"==typeof b&&(f={},f[b]=c);if(e){this._curInst==e&&this._hideDatepicker();var h=this._getDateDatepicker(a,!0),j=this._getMinMaxDate(e,"min"),g=this._getMinMaxDate(e,"max");z(e.settings,f);null!==j&&(void 0!==f.dateFormat&&void 0===f.minDate)&&(e.settings.minDate=this._formatDate(e,j));null!==g&&(void 0!==f.dateFormat&&void 0===f.maxDate)&&(e.settings.maxDate=this._formatDate(e,g));this._attachments(d(a),
e);this._autoSize(e);this._setDate(e,h);this._updateAlternate(e);this._updateDatepicker(e)}},_changeDatepicker:function(a,b,c){this._optionDatepicker(a,b,c)},_refreshDatepicker:function(a){(a=this._getInst(a))&&this._updateDatepicker(a)},_setDateDatepicker:function(a,b){var c=this._getInst(a);c&&(this._setDate(c,b),this._updateDatepicker(c),this._updateAlternate(c))},_getDateDatepicker:function(a,b){var c=this._getInst(a);c&&!c.inline&&this._setDateFromField(c,b);return c?this._getDate(c):null},_doKeyDown:function(a){var b=
d.datepicker._getInst(a.target),c=!0,e=b.dpDiv.is(".ui-datepicker-rtl");b._keyEvent=!0;if(d.datepicker._datepickerShowing)switch(a.keyCode){case 9:d.datepicker._hideDatepicker();c=!1;break;case 13:return c=d("td."+d.datepicker._dayOverClass+":not(."+d.datepicker._currentClass+")",b.dpDiv),c[0]&&d.datepicker._selectDay(a.target,b.selectedMonth,b.selectedYear,c[0]),(a=d.datepicker._get(b,"onSelect"))?(c=d.datepicker._formatDate(b),a.apply(b.input?b.input[0]:null,[c,b])):d.datepicker._hideDatepicker(),
!1;case 27:d.datepicker._hideDatepicker();break;case 33:d.datepicker._adjustDate(a.target,a.ctrlKey?-d.datepicker._get(b,"stepBigMonths"):-d.datepicker._get(b,"stepMonths"),"M");break;case 34:d.datepicker._adjustDate(a.target,a.ctrlKey?+d.datepicker._get(b,"stepBigMonths"):+d.datepicker._get(b,"stepMonths"),"M");break;case 35:(a.ctrlKey||a.metaKey)&&d.datepicker._clearDate(a.target);c=a.ctrlKey||a.metaKey;break;case 36:(a.ctrlKey||a.metaKey)&&d.datepicker._gotoToday(a.target);c=a.ctrlKey||a.metaKey;
break;case 37:if(a.ctrlKey||a.metaKey)d.datepicker._adjustDate(a.target,e?1:-1,"D");c=a.ctrlKey||a.metaKey;a.originalEvent.altKey&&d.datepicker._adjustDate(a.target,a.ctrlKey?-d.datepicker._get(b,"stepBigMonths"):-d.datepicker._get(b,"stepMonths"),"M");break;case 38:(a.ctrlKey||a.metaKey)&&d.datepicker._adjustDate(a.target,-7,"D");c=a.ctrlKey||a.metaKey;break;case 39:if(a.ctrlKey||a.metaKey)d.datepicker._adjustDate(a.target,e?-1:1,"D");c=a.ctrlKey||a.metaKey;a.originalEvent.altKey&&d.datepicker._adjustDate(a.target,
a.ctrlKey?+d.datepicker._get(b,"stepBigMonths"):+d.datepicker._get(b,"stepMonths"),"M");break;case 40:(a.ctrlKey||a.metaKey)&&d.datepicker._adjustDate(a.target,7,"D");c=a.ctrlKey||a.metaKey;break;default:c=!1}else 36==a.keyCode&&a.ctrlKey?d.datepicker._showDatepicker(this):c=!1;c&&(a.preventDefault(),a.stopPropagation())},_doKeyPress:function(a){var b=d.datepicker._getInst(a.target);if(d.datepicker._get(b,"constrainInput")){var b=d.datepicker._possibleChars(d.datepicker._get(b,"dateFormat")),c=String.fromCharCode(void 0==
a.charCode?a.keyCode:a.charCode);return a.ctrlKey||a.metaKey||" ">c||!b||-1<b.indexOf(c)}},_doKeyUp:function(a){a=d.datepicker._getInst(a.target);if(a.input.val()!=a.lastVal)try{if(d.datepicker.parseDate(d.datepicker._get(a,"dateFormat"),a.input?a.input.val():null,d.datepicker._getFormatConfig(a)))d.datepicker._setDateFromField(a),d.datepicker._updateAlternate(a),d.datepicker._updateDatepicker(a)}catch(b){d.datepicker.log(b)}return!0},_showDatepicker:function(a){a=a.target||a;"input"!=a.nodeName.toLowerCase()&&
(a=d("input",a.parentNode)[0]);if(!(d.datepicker._isDisabledDatepicker(a)||d.datepicker._lastInput==a)){var b=d.datepicker._getInst(a);d.datepicker._curInst&&d.datepicker._curInst!=b&&(d.datepicker._curInst.dpDiv.stop(!0,!0),b&&d.datepicker._datepickerShowing&&d.datepicker._hideDatepicker(d.datepicker._curInst.input[0]));var c=d.datepicker._get(b,"beforeShow"),c=c?c.apply(a,[a,b]):{};if(!1!==c){z(b.settings,c);b.lastVal=null;d.datepicker._lastInput=a;d.datepicker._setDateFromField(b);d.datepicker._inDialog&&
(a.value="");d.datepicker._pos||(d.datepicker._pos=d.datepicker._findPos(a),d.datepicker._pos[1]+=a.offsetHeight);var e=!1;d(a).parents().each(function(){e=e|d(this).css("position")=="fixed";return!e});e&&d.browser.opera&&(d.datepicker._pos[0]-=document.documentElement.scrollLeft,d.datepicker._pos[1]-=document.documentElement.scrollTop);c={left:d.datepicker._pos[0],top:d.datepicker._pos[1]};d.datepicker._pos=null;b.dpDiv.empty();b.dpDiv.css({position:"absolute",display:"block",top:"-1000px"});d.datepicker._updateDatepicker(b);
c=d.datepicker._checkOffset(b,c,e);b.dpDiv.css({position:d.datepicker._inDialog&&d.blockUI?"static":e?"fixed":"absolute",display:"none",left:c.left+"px",top:c.top+"px"});if(!b.inline){var c=d.datepicker._get(b,"showAnim"),f=d.datepicker._get(b,"duration"),h=function(){var a=b.dpDiv.find("iframe.ui-datepicker-cover");if(a.length){var c=d.datepicker._getBorders(b.dpDiv);a.css({left:-c[0],top:-c[1],width:b.dpDiv.outerWidth(),height:b.dpDiv.outerHeight()})}};b.dpDiv.zIndex(d(a).zIndex()+1);d.datepicker._datepickerShowing=
!0;if(d.effects&&d.effects[c])b.dpDiv.show(c,d.datepicker._get(b,"showOptions"),f,h);else b.dpDiv[c||"show"](c?f:null,h);(!c||!f)&&h();b.input.is(":visible")&&!b.input.is(":disabled")&&b.input.focus();d.datepicker._curInst=b}}}},_updateDatepicker:function(a){this.maxRows=4;var b=d.datepicker._getBorders(a.dpDiv);D=a;a.dpDiv.empty().append(this._generateHTML(a));this._attachHandlers(a);var c=a.dpDiv.find("iframe.ui-datepicker-cover");c.length&&c.css({left:-b[0],top:-b[1],width:a.dpDiv.outerWidth(),
height:a.dpDiv.outerHeight()});a.dpDiv.find("."+this._dayOverClass+" a").mouseover();b=this._getNumberOfMonths(a);c=b[1];a.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width("");1<c&&a.dpDiv.addClass("ui-datepicker-multi-"+c).css("width",17*c+"em");a.dpDiv[(1!=b[0]||1!=b[1]?"add":"remove")+"Class"]("ui-datepicker-multi");a.dpDiv[(this._get(a,"isRTL")?"add":"remove")+"Class"]("ui-datepicker-rtl");a==d.datepicker._curInst&&(d.datepicker._datepickerShowing&&
a.input&&a.input.is(":visible")&&!a.input.is(":disabled")&&a.input[0]!=document.activeElement)&&a.input.focus();if(a.yearshtml){var e=a.yearshtml;setTimeout(function(){e===a.yearshtml&&a.yearshtml&&a.dpDiv.find("select.ui-datepicker-year:first").replaceWith(a.yearshtml);e=a.yearshtml=null},0)}},_getBorders:function(a){var b=function(a){return{thin:1,medium:2,thick:3}[a]||a};return[parseFloat(b(a.css("border-left-width"))),parseFloat(b(a.css("border-top-width")))]},_checkOffset:function(a,b,c){var e=
a.dpDiv.outerWidth(),f=a.dpDiv.outerHeight(),h=a.input?a.input.outerWidth():0,j=a.input?a.input.outerHeight():0,g=document.documentElement.clientWidth+(c?0:d(document).scrollLeft()),i=document.documentElement.clientHeight+(c?0:d(document).scrollTop());b.left-=this._get(a,"isRTL")?e-h:0;b.left-=c&&b.left==a.input.offset().left?d(document).scrollLeft():0;b.top-=c&&b.top==a.input.offset().top+j?d(document).scrollTop():0;b.left-=Math.min(b.left,b.left+e>g&&g>e?Math.abs(b.left+e-g):0);b.top-=Math.min(b.top,
b.top+f>i&&i>f?Math.abs(f+j):0);return b},_findPos:function(a){for(var b=this._getInst(a),b=this._get(b,"isRTL");a&&("hidden"==a.type||1!=a.nodeType||d.expr.filters.hidden(a));)a=a[b?"previousSibling":"nextSibling"];a=d(a).offset();return[a.left,a.top]},_hideDatepicker:function(a){var b=this._curInst;if(b&&!(a&&b!=d.data(a,"datepicker"))&&this._datepickerShowing){var a=this._get(b,"showAnim"),c=this._get(b,"duration"),e=function(){d.datepicker._tidyDialog(b)};if(d.effects&&d.effects[a])b.dpDiv.hide(a,
d.datepicker._get(b,"showOptions"),c,e);else b.dpDiv["slideDown"==a?"slideUp":"fadeIn"==a?"fadeOut":"hide"](a?c:null,e);a||e();this._datepickerShowing=!1;(a=this._get(b,"onClose"))&&a.apply(b.input?b.input[0]:null,[b.input?b.input.val():"",b]);this._lastInput=null;this._inDialog&&(this._dialogInput.css({position:"absolute",left:"0",top:"-100px"}),d.blockUI&&(d.unblockUI(),d("body").append(this.dpDiv)));this._inDialog=!1}},_tidyDialog:function(a){a.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")},
_checkExternalClick:function(a){if(d.datepicker._curInst){var a=d(a.target),b=d.datepicker._getInst(a[0]);(a[0].id!=d.datepicker._mainDivId&&0==a.parents("#"+d.datepicker._mainDivId).length&&!a.hasClass(d.datepicker.markerClassName)&&!a.closest("."+d.datepicker._triggerClass).length&&d.datepicker._datepickerShowing&&(!d.datepicker._inDialog||!d.blockUI)||a.hasClass(d.datepicker.markerClassName)&&d.datepicker._curInst!=b)&&d.datepicker._hideDatepicker()}},_adjustDate:function(a,b,c){var a=d(a),e=this._getInst(a[0]);
this._isDisabledDatepicker(a[0])||(this._adjustInstDate(e,b+("M"==c?this._get(e,"showCurrentAtPos"):0),c),this._updateDatepicker(e))},_gotoToday:function(a){var a=d(a),b=this._getInst(a[0]);if(this._get(b,"gotoCurrent")&&b.currentDay)b.selectedDay=b.currentDay,b.drawMonth=b.selectedMonth=b.currentMonth,b.drawYear=b.selectedYear=b.currentYear;else{var c=new Date;b.selectedDay=c.getDate();b.drawMonth=b.selectedMonth=c.getMonth();b.drawYear=b.selectedYear=c.getFullYear()}this._notifyChange(b);this._adjustDate(a)},
_selectMonthYear:function(a,b,c){var a=d(a),e=this._getInst(a[0]);e["selected"+("M"==c?"Month":"Year")]=e["draw"+("M"==c?"Month":"Year")]=parseInt(b.options[b.selectedIndex].value,10);this._notifyChange(e);this._adjustDate(a)},_selectDay:function(a,b,c,e){var f=d(a);!d(e).hasClass(this._unselectableClass)&&!this._isDisabledDatepicker(f[0])&&(f=this._getInst(f[0]),f.selectedDay=f.currentDay=d("a",e).html(),f.selectedMonth=f.currentMonth=b,f.selectedYear=f.currentYear=c,this._selectDate(a,this._formatDate(f,
f.currentDay,f.currentMonth,f.currentYear)))},_clearDate:function(a){a=d(a);this._getInst(a[0]);this._selectDate(a,"")},_selectDate:function(a,b){var c=d(a),c=this._getInst(c[0]),b=null!=b?b:this._formatDate(c);c.input&&c.input.val(b);this._updateAlternate(c);var e=this._get(c,"onSelect");e?e.apply(c.input?c.input[0]:null,[b,c]):c.input&&c.input.trigger("change");c.inline?this._updateDatepicker(c):(this._hideDatepicker(),this._lastInput=c.input[0],"object"!=typeof c.input[0]&&c.input.focus(),this._lastInput=
null)},_updateAlternate:function(a){var b=this._get(a,"altField");if(b){var c=this._get(a,"altFormat")||this._get(a,"dateFormat"),e=this._getDate(a),f=this.formatDate(c,e,this._getFormatConfig(a));d(b).each(function(){d(this).val(f)})}},noWeekends:function(a){a=a.getDay();return[0<a&&6>a,""]},iso8601Week:function(a){a=new Date(a.getTime());a.setDate(a.getDate()+4-(a.getDay()||7));var b=a.getTime();a.setMonth(0);a.setDate(1);return Math.floor(Math.round((b-a)/864E5)/7)+1},parseDate:function(a,b,c){if(null==
a||null==b)throw"Invalid arguments";b="object"==typeof b?b.toString():b+"";if(""==b)return null;for(var e=(c?c.shortYearCutoff:null)||this._defaults.shortYearCutoff,e="string"!=typeof e?e:(new Date).getFullYear()%100+parseInt(e,10),f=(c?c.dayNamesShort:null)||this._defaults.dayNamesShort,h=(c?c.dayNames:null)||this._defaults.dayNames,j=(c?c.monthNamesShort:null)||this._defaults.monthNamesShort,g=(c?c.monthNames:null)||this._defaults.monthNames,i=c=-1,p=-1,r=-1,k=!1,m=function(b){(b=y+1<a.length&&
a.charAt(y+1)==b)&&y++;return b},l=function(a){var c=m(a),a=RegExp("^\\d{1,"+("@"==a?14:"!"==a?20:"y"==a&&c?4:"o"==a?3:2)+"}"),a=b.substring(u).match(a);if(!a)throw"Missing number at position "+u;u+=a[0].length;return parseInt(a[0],10)},n=function(a,c,e){var a=d.map(m(a)?e:c,function(a,b){return[[b,a]]}).sort(function(a,b){return-(a[1].length-b[1].length)}),f=-1;d.each(a,function(a,c){var d=c[1];if(b.substr(u,d.length).toLowerCase()==d.toLowerCase())return f=c[0],u+=d.length,!1});if(-1!=f)return f+
1;throw"Unknown name at position "+u;},s=function(){if(b.charAt(u)!=a.charAt(y))throw"Unexpected literal at position "+u;u++},u=0,y=0;y<a.length;y++)if(k)"'"==a.charAt(y)&&!m("'")?k=!1:s();else switch(a.charAt(y)){case "d":p=l("d");break;case "D":n("D",f,h);break;case "o":r=l("o");break;case "m":i=l("m");break;case "M":i=n("M",j,g);break;case "y":c=l("y");break;case "@":var v=new Date(l("@")),c=v.getFullYear(),i=v.getMonth()+1,p=v.getDate();break;case "!":v=new Date((l("!")-this._ticksTo1970)/1E4);
c=v.getFullYear();i=v.getMonth()+1;p=v.getDate();break;case "'":m("'")?s():k=!0;break;default:s()}if(u<b.length)throw"Extra/unparsed characters found in date: "+b.substring(u);-1==c?c=(new Date).getFullYear():100>c&&(c+=(new Date).getFullYear()-(new Date).getFullYear()%100+(c<=e?0:-100));if(-1<r){i=1;p=r;do{e=this._getDaysInMonth(c,i-1);if(p<=e)break;i++;p-=e}while(1)}v=this._daylightSavingAdjust(new Date(c,i-1,p));if(v.getFullYear()!=c||v.getMonth()+1!=i||v.getDate()!=p)throw"Invalid date";return v},
ATOM:"yy-mm-dd",COOKIE:"D, dd M yy",ISO_8601:"yy-mm-dd",RFC_822:"D, d M y",RFC_850:"DD, dd-M-y",RFC_1036:"D, d M y",RFC_1123:"D, d M yy",RFC_2822:"D, d M yy",RSS:"D, d M y",TICKS:"!",TIMESTAMP:"@",W3C:"yy-mm-dd",_ticksTo1970:864E9*(718685+Math.floor(492.5)-Math.floor(19.7)+Math.floor(4.925)),formatDate:function(a,b,c){if(!b)return"";var d=(c?c.dayNamesShort:null)||this._defaults.dayNamesShort,f=(c?c.dayNames:null)||this._defaults.dayNames,h=(c?c.monthNamesShort:null)||this._defaults.monthNamesShort,
c=(c?c.monthNames:null)||this._defaults.monthNames,j=function(b){(b=r+1<a.length&&a.charAt(r+1)==b)&&r++;return b},g=function(a,b,c){b=""+b;if(j(a))for(;b.length<c;)b="0"+b;return b},i="",p=!1;if(b)for(var r=0;r<a.length;r++)if(p)"'"==a.charAt(r)&&!j("'")?p=!1:i+=a.charAt(r);else switch(a.charAt(r)){case "d":i+=g("d",b.getDate(),2);break;case "D":var k;k=b.getDay();var m=d,l=f;k=j("D")?l[k]:m[k];i+=k;break;case "o":i+=g("o",Math.round(((new Date(b.getFullYear(),b.getMonth(),b.getDate())).getTime()-
(new Date(b.getFullYear(),0,0)).getTime())/864E5),3);break;case "m":i+=g("m",b.getMonth()+1,2);break;case "M":k=b.getMonth();m=h;l=c;k=j("M")?l[k]:m[k];i+=k;break;case "y":i+=j("y")?b.getFullYear():(10>b.getYear()%100?"0":"")+b.getYear()%100;break;case "@":i+=b.getTime();break;case "!":i+=1E4*b.getTime()+this._ticksTo1970;break;case "'":j("'")?i+="'":p=!0;break;default:i+=a.charAt(r)}return i},_possibleChars:function(a){for(var b="",c=!1,d=function(b){(b=f+1<a.length&&a.charAt(f+1)==b)&&f++;return b},
f=0;f<a.length;f++)if(c)"'"==a.charAt(f)&&!d("'")?c=!1:b+=a.charAt(f);else switch(a.charAt(f)){case "d":case "m":case "y":case "@":b+="0123456789";break;case "D":case "M":return null;case "'":d("'")?b+="'":c=!0;break;default:b+=a.charAt(f)}return b},_get:function(a,b){return void 0!==a.settings[b]?a.settings[b]:this._defaults[b]},_setDateFromField:function(a,b){if(a.input.val()!=a.lastVal){var c=this._get(a,"dateFormat"),d=a.lastVal=a.input?a.input.val():null,f,h;f=h=this._getDefaultDate(a);var j=
this._getFormatConfig(a);try{f=this.parseDate(c,d,j)||h}catch(g){this.log(g),d=b?"":d}a.selectedDay=f.getDate();a.drawMonth=a.selectedMonth=f.getMonth();a.drawYear=a.selectedYear=f.getFullYear();a.currentDay=d?f.getDate():0;a.currentMonth=d?f.getMonth():0;a.currentYear=d?f.getFullYear():0;this._adjustInstDate(a)}},_getDefaultDate:function(a){return this._restrictMinMax(a,this._determineDate(a,this._get(a,"defaultDate"),new Date))},_determineDate:function(a,b,c){if(null==b||""===b)b=c;else{var e;if("string"==
typeof b)a:{try{e=d.datepicker.parseDate(d.datepicker._get(a,"dateFormat"),b,d.datepicker._getFormatConfig(a));break a}catch(f){}var h=(b.toLowerCase().match(/^c/)?d.datepicker._getDate(a):null)||new Date,a=h.getFullYear();e=h.getMonth();for(var h=h.getDate(),j=/([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,g=j.exec(b);g;){switch(g[2]||"d"){case "d":case "D":h+=parseInt(g[1],10);break;case "w":case "W":h+=7*parseInt(g[1],10);break;case "m":case "M":e+=parseInt(g[1],10);h=Math.min(h,d.datepicker._getDaysInMonth(a,
e));break;case "y":case "Y":a+=parseInt(g[1],10),h=Math.min(h,d.datepicker._getDaysInMonth(a,e))}g=j.exec(b)}e=new Date(a,e,h)}else"number"==typeof b?isNaN(b)?b=c:(a=new Date,a.setDate(a.getDate()+b),b=a):b=new Date(b.getTime()),e=b;b=e}if(b=b&&"Invalid Date"==b.toString()?c:b)b.setHours(0),b.setMinutes(0),b.setSeconds(0),b.setMilliseconds(0);return this._daylightSavingAdjust(b)},_daylightSavingAdjust:function(a){if(!a)return null;a.setHours(12<a.getHours()?a.getHours()+2:0);return a},_setDate:function(a,
b,c){var d=!b,f=a.selectedMonth,h=a.selectedYear,b=this._restrictMinMax(a,this._determineDate(a,b,new Date));a.selectedDay=a.currentDay=b.getDate();a.drawMonth=a.selectedMonth=a.currentMonth=b.getMonth();a.drawYear=a.selectedYear=a.currentYear=b.getFullYear();(f!=a.selectedMonth||h!=a.selectedYear)&&!c&&this._notifyChange(a);this._adjustInstDate(a);a.input&&a.input.val(d?"":this._formatDate(a))},_getDate:function(a){return!a.currentYear||a.input&&""==a.input.val()?null:this._daylightSavingAdjust(new Date(a.currentYear,
a.currentMonth,a.currentDay))},_attachHandlers:function(a){var b=this._get(a,"stepMonths"),c="#"+a.id.replace(/\\\\/g,"\\");a.dpDiv.find("[data-handler]").map(function(){d(this).bind(this.getAttribute("data-event"),{prev:function(){window["DP_jQuery_"+x].datepicker._adjustDate(c,-b,"M")},next:function(){window["DP_jQuery_"+x].datepicker._adjustDate(c,+b,"M")},hide:function(){window["DP_jQuery_"+x].datepicker._hideDatepicker()},today:function(){window["DP_jQuery_"+x].datepicker._gotoToday(c)},selectDay:function(){window["DP_jQuery_"+
x].datepicker._selectDay(c,+this.getAttribute("data-month"),+this.getAttribute("data-year"),this);return!1},selectMonth:function(){window["DP_jQuery_"+x].datepicker._selectMonthYear(c,this,"M");return!1},selectYear:function(){window["DP_jQuery_"+x].datepicker._selectMonthYear(c,this,"Y");return!1}}[this.getAttribute("data-handler")])})},_generateHTML:function(a){var b=new Date,b=this._daylightSavingAdjust(new Date(b.getFullYear(),b.getMonth(),b.getDate())),c=this._get(a,"isRTL"),e=this._get(a,"showButtonPanel"),
f=this._get(a,"hideIfNoPrevNext"),h=this._get(a,"navigationAsDateFormat"),j=this._getNumberOfMonths(a),g=this._get(a,"showCurrentAtPos"),i=this._get(a,"stepMonths"),p=1!=j[0]||1!=j[1],r=this._daylightSavingAdjust(!a.currentDay?new Date(9999,9,9):new Date(a.currentYear,a.currentMonth,a.currentDay)),k=this._getMinMaxDate(a,"min"),m=this._getMinMaxDate(a,"max"),g=a.drawMonth-g,l=a.drawYear;0>g&&(g+=12,l--);if(m)for(var n=this._daylightSavingAdjust(new Date(m.getFullYear(),m.getMonth()-j[0]*j[1]+1,m.getDate())),
n=k&&n<k?k:n;this._daylightSavingAdjust(new Date(l,g,1))>n;)g--,0>g&&(g=11,l--);a.drawMonth=g;a.drawYear=l;var n=this._get(a,"prevText"),n=!h?n:this.formatDate(n,this._daylightSavingAdjust(new Date(l,g-i,1)),this._getFormatConfig(a)),n=this._canAdjustMonth(a,-1,l,g)?'<a class="ui-datepicker-prev ui-corner-all" data-handler="prev" data-event="click" title="'+n+'"><span class="ui-icon ui-icon-circle-triangle-'+(c?"e":"w")+'">'+n+"</span></a>":f?"":'<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="'+
n+'"><span class="ui-icon ui-icon-circle-triangle-'+(c?"e":"w")+'">'+n+"</span></a>",s=this._get(a,"nextText"),s=!h?s:this.formatDate(s,this._daylightSavingAdjust(new Date(l,g+i,1)),this._getFormatConfig(a)),f=this._canAdjustMonth(a,1,l,g)?'<a class="ui-datepicker-next ui-corner-all" data-handler="next" data-event="click" title="'+s+'"><span class="ui-icon ui-icon-circle-triangle-'+(c?"w":"e")+'">'+s+"</span></a>":f?"":'<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="'+s+'"><span class="ui-icon ui-icon-circle-triangle-'+
(c?"w":"e")+'">'+s+"</span></a>",i=this._get(a,"currentText"),s=this._get(a,"gotoCurrent")&&a.currentDay?r:b,i=!h?i:this.formatDate(i,s,this._getFormatConfig(a)),h=!a.inline?'<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" data-handler="hide" data-event="click">'+this._get(a,"closeText")+"</button>":"",e=e?'<div class="ui-datepicker-buttonpane ui-widget-content">'+(c?h:"")+(this._isInRange(a,s)?'<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" data-handler="today" data-event="click">'+
i+"</button>":"")+(c?"":h)+"</div>":"",h=parseInt(this._get(a,"firstDay"),10),h=isNaN(h)?0:h,i=this._get(a,"showWeek"),s=this._get(a,"dayNames");this._get(a,"dayNamesShort");var u=this._get(a,"dayNamesMin"),y=this._get(a,"monthNames"),v=this._get(a,"monthNamesShort"),x=this._get(a,"beforeShowDay"),z=this._get(a,"showOtherMonths"),D=this._get(a,"selectOtherMonths");this._get(a,"calculateWeek");for(var B=this._getDefaultDate(a),E="",F=0;F<j[0];F++){var I="";this.maxRows=4;for(var G=0;G<j[1];G++){var C=
this._daylightSavingAdjust(new Date(l,g,a.selectedDay)),t=" ui-corner-all",q="";if(p){q+='<div class="ui-datepicker-group';if(1<j[1])switch(G){case 0:q+=" ui-datepicker-group-first";t=" ui-corner-"+(c?"right":"left");break;case j[1]-1:q+=" ui-datepicker-group-last";t=" ui-corner-"+(c?"left":"right");break;default:q+=" ui-datepicker-group-middle",t=""}q+='">'}for(var q=q+('<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix'+t+'">'+(/all|left/.test(t)&&0==F?c?f:n:"")+(/all|right/.test(t)&&
0==F?c?n:f:"")+this._generateMonthYearHeader(a,g,l,k,m,0<F||0<G,y,v)+'</div><table class="ui-datepicker-calendar"><thead><tr>'),w=i?'<th class="ui-datepicker-week-col">'+this._get(a,"weekHeader")+"</th>":"",t=0;7>t;t++)var o=(t+h)%7,w=w+("<th"+(5<=(t+h+6)%7?' class="ui-datepicker-week-end"':"")+'><span title="'+s[o]+'">'+u[o]+"</span></th>");q+=w+"</tr></thead><tbody>";w=this._getDaysInMonth(l,g);l==a.selectedYear&&g==a.selectedMonth&&(a.selectedDay=Math.min(a.selectedDay,w));t=(this._getFirstDayOfMonth(l,
g)-h+7)%7;w=Math.ceil((t+w)/7);this.maxRows=w=p?this.maxRows>w?this.maxRows:w:w;for(var o=this._daylightSavingAdjust(new Date(l,g,1-t)),L=0;L<w;L++){for(var q=q+"<tr>",J=!i?"":'<td class="ui-datepicker-week-col">'+this._get(a,"calculateWeek")(o)+"</td>",t=0;7>t;t++){var H=x?x.apply(a.input?a.input[0]:null,[o]):[!0,""],A=o.getMonth()!=g,K=A&&!D||!H[0]||k&&o<k||m&&o>m,J=J+('<td class="'+(5<=(t+h+6)%7?" ui-datepicker-week-end":"")+(A?" ui-datepicker-other-month":"")+(o.getTime()==C.getTime()&&g==a.selectedMonth&&
a._keyEvent||B.getTime()==o.getTime()&&B.getTime()==C.getTime()?" "+this._dayOverClass:"")+(K?" "+this._unselectableClass+" ui-state-disabled":"")+(A&&!z?"":" "+H[1]+(o.getTime()==r.getTime()?" "+this._currentClass:"")+(o.getTime()==b.getTime()?" ui-datepicker-today":""))+'"'+((!A||z)&&H[2]?' title="'+H[2]+'"':"")+(K?"":' data-handler="selectDay" data-event="click" data-month="'+o.getMonth()+'" data-year="'+o.getFullYear()+'"')+">"+(A&&!z?"&#xa0;":K?'<span class="ui-state-default">'+o.getDate()+"</span>":
'<a class="ui-state-default'+(o.getTime()==b.getTime()?" ui-state-highlight":"")+(o.getTime()==r.getTime()?" ui-state-active":"")+(A?" ui-priority-secondary":"")+'" href="#">'+o.getDate()+"</a>")+"</td>");o.setDate(o.getDate()+1);o=this._daylightSavingAdjust(o)}q+=J+"</tr>"}g++;11<g&&(g=0,l++);q+="</tbody></table>"+(p?"</div>"+(0<j[0]&&G==j[1]-1?'<div class="ui-datepicker-row-break"></div>':""):"");I+=q}E+=I}E+=e+(d.browser.msie&&7>parseInt(d.browser.version,10)&&!a.inline?'<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>':
"");a._keyEvent=!1;return E},_generateMonthYearHeader:function(a,b,c,d,f,h,j,g){var i=this._get(a,"changeMonth"),p=this._get(a,"changeYear"),r=this._get(a,"showMonthAfterYear"),k='<div class="ui-datepicker-title">',m="";if(h||!i)m+='<span class="ui-datepicker-month">'+j[b]+"</span>";else{for(var j=d&&d.getFullYear()==c,l=f&&f.getFullYear()==c,m=m+'<select class="ui-datepicker-month" data-handler="selectMonth" data-event="change">',n=0;12>n;n++)if((!j||n>=d.getMonth())&&(!l||n<=f.getMonth()))m+='<option value="'+
n+'"'+(n==b?' selected="selected"':"")+">"+g[n]+"</option>";m+="</select>"}r||(k+=m+(h||!i||!p?"&#xa0;":""));if(!a.yearshtml)if(a.yearshtml="",h||!p)k+='<span class="ui-datepicker-year">'+c+"</span>";else{var g=this._get(a,"yearRange").split(":"),s=(new Date).getFullYear(),j=function(a){a=a.match(/c[+-].*/)?c+parseInt(a.substring(1),10):a.match(/[+-].*/)?s+parseInt(a,10):parseInt(a,10);return isNaN(a)?s:a},b=j(g[0]),g=Math.max(b,j(g[1]||"")),b=d?Math.max(b,d.getFullYear()):b,g=f?Math.min(g,f.getFullYear()):
g;for(a.yearshtml+='<select class="ui-datepicker-year" data-handler="selectYear" data-event="change">';b<=g;b++)a.yearshtml+='<option value="'+b+'"'+(b==c?' selected="selected"':"")+">"+b+"</option>";a.yearshtml+="</select>";k+=a.yearshtml;a.yearshtml=null}k+=this._get(a,"yearSuffix");r&&(k+=(h||!i||!p?"&#xa0;":"")+m);return k+"</div>"},_adjustInstDate:function(a,b,c){var d=a.drawYear+("Y"==c?b:0),f=a.drawMonth+("M"==c?b:0),b=Math.min(a.selectedDay,this._getDaysInMonth(d,f))+("D"==c?b:0),d=this._restrictMinMax(a,
this._daylightSavingAdjust(new Date(d,f,b)));a.selectedDay=d.getDate();a.drawMonth=a.selectedMonth=d.getMonth();a.drawYear=a.selectedYear=d.getFullYear();("M"==c||"Y"==c)&&this._notifyChange(a)},_restrictMinMax:function(a,b){var c=this._getMinMaxDate(a,"min"),d=this._getMinMaxDate(a,"max"),c=c&&b<c?c:b;return d&&c>d?d:c},_notifyChange:function(a){var b=this._get(a,"onChangeMonthYear");b&&b.apply(a.input?a.input[0]:null,[a.selectedYear,a.selectedMonth+1,a])},_getNumberOfMonths:function(a){a=this._get(a,
"numberOfMonths");return null==a?[1,1]:"number"==typeof a?[1,a]:a},_getMinMaxDate:function(a,b){return this._determineDate(a,this._get(a,b+"Date"),null)},_getDaysInMonth:function(a,b){return 32-this._daylightSavingAdjust(new Date(a,b,32)).getDate()},_getFirstDayOfMonth:function(a,b){return(new Date(a,b,1)).getDay()},_canAdjustMonth:function(a,b,c,d){var f=this._getNumberOfMonths(a),c=this._daylightSavingAdjust(new Date(c,d+(0>b?b:f[0]*f[1]),1));0>b&&c.setDate(this._getDaysInMonth(c.getFullYear(),
c.getMonth()));return this._isInRange(a,c)},_isInRange:function(a,b){var c=this._getMinMaxDate(a,"min"),d=this._getMinMaxDate(a,"max");return(!c||b.getTime()>=c.getTime())&&(!d||b.getTime()<=d.getTime())},_getFormatConfig:function(a){var b=this._get(a,"shortYearCutoff"),b="string"!=typeof b?b:(new Date).getFullYear()%100+parseInt(b,10);return{shortYearCutoff:b,dayNamesShort:this._get(a,"dayNamesShort"),dayNames:this._get(a,"dayNames"),monthNamesShort:this._get(a,"monthNamesShort"),monthNames:this._get(a,
"monthNames")}},_formatDate:function(a,b,c,d){b||(a.currentDay=a.selectedDay,a.currentMonth=a.selectedMonth,a.currentYear=a.selectedYear);b=b?"object"==typeof b?b:this._daylightSavingAdjust(new Date(d,c,b)):this._daylightSavingAdjust(new Date(a.currentYear,a.currentMonth,a.currentDay));return this.formatDate(this._get(a,"dateFormat"),b,this._getFormatConfig(a))}});d.fn.datepicker=function(a){if(!this.length)return this;d.datepicker.initialized||(d(document).mousedown(d.datepicker._checkExternalClick).find("body").append(d.datepicker.dpDiv),
d.datepicker.initialized=!0);var b=Array.prototype.slice.call(arguments,1);return"string"==typeof a&&("isDisabled"==a||"getDate"==a||"widget"==a)||"option"==a&&2==arguments.length&&"string"==typeof arguments[1]?d.datepicker["_"+a+"Datepicker"].apply(d.datepicker,[this[0]].concat(b)):this.each(function(){typeof a=="string"?d.datepicker["_"+a+"Datepicker"].apply(d.datepicker,[this].concat(b)):d.datepicker._attachDatepicker(this,a)})};d.datepicker=new B;d.datepicker.initialized=!1;d.datepicker.uuid=
(new Date).getTime();d.datepicker.version="1.8.24";window["DP_jQuery_"+x]=d})(jQuery);return{}}.call(this);
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.auiplugin:internal-@atlassian-aui-src-js-vendor-jquery-plugins-jquery-select2', location = 'node_modules/@atlassian/aui/src/js-vendor/jquery/plugins/jquery.select2.js' */
("undefined"===typeof window?global:window).__1f8266a045326897dc01ded64d3814fa=function(){var y=jQuery;"undefined"==typeof y.fn.each2&&y.extend(y.fn,{each2:function(a){for(var b=y([0]),c=-1,d=this.length;++c<d&&(b.context=b[0]=this[c])&&!1!==a.call(b[0],c,b););return this}});var e=jQuery,w=function(a){var b,c,d,g;if(!a||1>a.length)return a;b="";c=0;for(d=a.length;c<d;c++)g=a.charAt(c),b+=O[g]||g;return b},k=function(a,b){for(var c=0,d=b.length;c<d;c+=1)if(m(a,b[c]))return c;return-1},m=function(a,
b){return a===b?!0:void 0===a||void 0===b||null===a||null===b?!1:a.constructor===String?a+""===b+"":b.constructor===String?b+""===a+"":!1},B=function(a,b){var c,d,g;if(null===a||1>a.length)return[];c=a.split(b);d=0;for(g=c.length;d<g;d+=1)c[d]=e.trim(c[d]);return c},G=function(a){a.on("keydown",function(){void 0===e.data(a,"keyup-change-value")&&e.data(a,"keyup-change-value",a.val())});a.on("keyup",function(){var b=e.data(a,"keyup-change-value");void 0!==b&&a.val()!==b&&(e.removeData(a,"keyup-change-value"),
a.trigger("keyup-change"))})},H=function(a,b,c){var c=c||void 0,d;return function(){var g=arguments;window.clearTimeout(d);d=window.setTimeout(function(){b.apply(c,g)},a)}},j=function(a){a.preventDefault();a.stopPropagation()},z=function(a,b,c){var d,g=[],h;(d=a.attr("class"))&&e((""+d).split(" ")).each2(function(){0===this.indexOf("select2-")&&g.push(this)});(d=b.attr("class"))&&e((""+d).split(" ")).each2(function(){0!==this.indexOf("select2-")&&(h=c(this))&&g.push(h)});a.attr("class",g.join(" "))},
I=function(a,b,c,d){var g=w(a.toUpperCase()).indexOf(w(b.toUpperCase())),b=b.length;0>g?c.push(d(a)):(c.push(d(a.substring(0,g))),c.push("<span class='select2-match'>"),c.push(d(a.substring(g,g+b))),c.push("</span>"),c.push(d(a.substring(g+b,a.length))))},J=function(a){var b={"\\":"&#92;","&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#47;"};return String(a).replace(/[&<>"'\/\\]/g,function(a){return b[a]})},K=function(a){var b,c=null,d=a.quietMillis||100,g=a.url,h=this;return function(l){window.clearTimeout(b);
b=window.setTimeout(function(){var b=a.data,d=g,t=a.transport||e.fn.select2.ajaxDefaults.transport,f=e.extend({},e.fn.select2.ajaxDefaults.params,{type:a.type||"GET",cache:a.cache||!1,jsonpCallback:a.jsonpCallback||void 0,dataType:a.dataType||"json"}),b=b?b.call(h,l.term,l.page,l.context):null,d="function"===typeof d?d.call(h,l.term,l.page,l.context):d;c&&c.abort();a.params&&(e.isFunction(a.params)?e.extend(f,a.params.call(h)):e.extend(f,a.params));e.extend(f,{url:d,dataType:a.dataType,data:b,success:function(b){b=
a.results(b,l.page);l.callback(b)}});c=t.call(h,f)},d)}},L=function(a){var b=a,c,d,g=function(a){return""+a.text};e.isArray(b)&&(d=b,b={results:d});!1===e.isFunction(b)&&(d=b,b=function(){return d});a=b();a.text&&(g=a.text,e.isFunction(g)||(c=a.text,g=function(a){return a[c]}));return function(a){var c=a.term,d={results:[]},n;if(c==="")a.callback(b());else{n=function(b,d){var i,f,b=b[0];if(b.children){i={};for(f in b)b.hasOwnProperty(f)&&(i[f]=b[f]);i.children=[];e(b.children).each2(function(a,b){n(b,
i.children)});(i.children.length||a.matcher(c,g(i),b))&&d.push(i)}else a.matcher(c,g(b),b)&&d.push(b)};e(b().results).each2(function(a,b){n(b,d.results)});a.callback(d)}}},M=function(a){var b=e.isFunction(a);return function(c){var d=c.term,g={results:[]};e(b?a():a).each(function(){var a=void 0!==this.text,b=a?this.text:this;if(""===d||c.matcher(d,b))g.results.push(a?this:{id:this,text:this})});c.callback(g)}},r=function(a,b){if(e.isFunction(a))return!0;if(!a)return!1;throw Error(b+" must be a function or a falsy value");
},o=function(a){return e.isFunction(a)?a():a},N=function(a){var b=0;e.each(a,function(a,d){d.children?b+=N(d.children):b++});return b},P=function(a,b,c,d){var g=a,h=!1,e,i,f,t;if(d.createSearchChoice&&d.tokenSeparators&&!(1>d.tokenSeparators.length)){for(;;){h=-1;i=0;for(f=d.tokenSeparators.length;i<f&&!(t=d.tokenSeparators[i],h=a.indexOf(t),0<=h);i++);if(0>h)break;e=a.substring(0,h);a=a.substring(h+t.length);if(0<e.length&&(e=d.createSearchChoice.call(this,e,b),void 0!==e&&null!==e&&void 0!==d.id(e)&&
null!==d.id(e))){h=!1;i=0;for(f=b.length;i<f;i++)if(m(d.id(e),d.id(b[i]))){h=!0;break}h||c(e)}}if(g!==a)return a}},C=function(a,b){var c=function(){};c.prototype=new a;c.prototype.constructor=c;c.prototype.parent=a.prototype;c.prototype=e.extend(c.prototype,b);return c};if(void 0===window.Select2){var f,s,D,E,A,v,x={x:0,y:0},F;f={TAB:9,ENTER:13,ESC:27,SPACE:32,LEFT:37,UP:38,RIGHT:39,DOWN:40,SHIFT:16,CTRL:17,ALT:18,PAGE_UP:33,PAGE_DOWN:34,HOME:36,END:35,BACKSPACE:8,DELETE:46,isArrow:function(a){a=
a.which?a.which:a;switch(a){case f.LEFT:case f.RIGHT:case f.UP:case f.DOWN:return!0}return!1},isControl:function(a){switch(a.which){case f.SHIFT:case f.CTRL:case f.ALT:return!0}return a.metaKey?!0:!1},isFunctionKey:function(a){a=a.which?a.which:a;return 112<=a&&123>=a}};var O={"\u24b6":"A","\uff21":"A","\u00c0":"A","\u00c1":"A","\u00c2":"A","\u1ea6":"A","\u1ea4":"A","\u1eaa":"A","\u1ea8":"A","\u00c3":"A","\u0100":"A","\u0102":"A","\u1eb0":"A","\u1eae":"A","\u1eb4":"A","\u1eb2":"A","\u0226":"A","\u01e0":"A",
"\u00c4":"A","\u01de":"A","\u1ea2":"A","\u00c5":"A","\u01fa":"A","\u01cd":"A","\u0200":"A","\u0202":"A","\u1ea0":"A","\u1eac":"A","\u1eb6":"A","\u1e00":"A","\u0104":"A","\u023a":"A","\u2c6f":"A","\ua732":"AA","\u00c6":"AE","\u01fc":"AE","\u01e2":"AE","\ua734":"AO","\ua736":"AU","\ua738":"AV","\ua73a":"AV","\ua73c":"AY","\u24b7":"B","\uff22":"B","\u1e02":"B","\u1e04":"B","\u1e06":"B","\u0243":"B","\u0182":"B","\u0181":"B","\u24b8":"C","\uff23":"C","\u0106":"C","\u0108":"C","\u010a":"C","\u010c":"C",
"\u00c7":"C","\u1e08":"C","\u0187":"C","\u023b":"C","\ua73e":"C","\u24b9":"D","\uff24":"D","\u1e0a":"D","\u010e":"D","\u1e0c":"D","\u1e10":"D","\u1e12":"D","\u1e0e":"D","\u0110":"D","\u018b":"D","\u018a":"D","\u0189":"D","\ua779":"D","\u01f1":"DZ","\u01c4":"DZ","\u01f2":"Dz","\u01c5":"Dz","\u24ba":"E","\uff25":"E","\u00c8":"E","\u00c9":"E","\u00ca":"E","\u1ec0":"E","\u1ebe":"E","\u1ec4":"E","\u1ec2":"E","\u1ebc":"E","\u0112":"E","\u1e14":"E","\u1e16":"E","\u0114":"E","\u0116":"E","\u00cb":"E","\u1eba":"E",
"\u011a":"E","\u0204":"E","\u0206":"E","\u1eb8":"E","\u1ec6":"E","\u0228":"E","\u1e1c":"E","\u0118":"E","\u1e18":"E","\u1e1a":"E","\u0190":"E","\u018e":"E","\u24bb":"F","\uff26":"F","\u1e1e":"F","\u0191":"F","\ua77b":"F","\u24bc":"G","\uff27":"G","\u01f4":"G","\u011c":"G","\u1e20":"G","\u011e":"G","\u0120":"G","\u01e6":"G","\u0122":"G","\u01e4":"G","\u0193":"G","\ua7a0":"G","\ua77d":"G","\ua77e":"G","\u24bd":"H","\uff28":"H","\u0124":"H","\u1e22":"H","\u1e26":"H","\u021e":"H","\u1e24":"H","\u1e28":"H",
"\u1e2a":"H","\u0126":"H","\u2c67":"H","\u2c75":"H","\ua78d":"H","\u24be":"I","\uff29":"I","\u00cc":"I","\u00cd":"I","\u00ce":"I","\u0128":"I","\u012a":"I","\u012c":"I","\u0130":"I","\u00cf":"I","\u1e2e":"I","\u1ec8":"I","\u01cf":"I","\u0208":"I","\u020a":"I","\u1eca":"I","\u012e":"I","\u1e2c":"I","\u0197":"I","\u24bf":"J","\uff2a":"J","\u0134":"J","\u0248":"J","\u24c0":"K","\uff2b":"K","\u1e30":"K","\u01e8":"K","\u1e32":"K","\u0136":"K","\u1e34":"K","\u0198":"K","\u2c69":"K","\ua740":"K","\ua742":"K",
"\ua744":"K","\ua7a2":"K","\u24c1":"L","\uff2c":"L","\u013f":"L","\u0139":"L","\u013d":"L","\u1e36":"L","\u1e38":"L","\u013b":"L","\u1e3c":"L","\u1e3a":"L","\u0141":"L","\u023d":"L","\u2c62":"L","\u2c60":"L","\ua748":"L","\ua746":"L","\ua780":"L","\u01c7":"LJ","\u01c8":"Lj","\u24c2":"M","\uff2d":"M","\u1e3e":"M","\u1e40":"M","\u1e42":"M","\u2c6e":"M","\u019c":"M","\u24c3":"N","\uff2e":"N","\u01f8":"N","\u0143":"N","\u00d1":"N","\u1e44":"N","\u0147":"N","\u1e46":"N","\u0145":"N","\u1e4a":"N","\u1e48":"N",
"\u0220":"N","\u019d":"N","\ua790":"N","\ua7a4":"N","\u01ca":"NJ","\u01cb":"Nj","\u24c4":"O","\uff2f":"O","\u00d2":"O","\u00d3":"O","\u00d4":"O","\u1ed2":"O","\u1ed0":"O","\u1ed6":"O","\u1ed4":"O","\u00d5":"O","\u1e4c":"O","\u022c":"O","\u1e4e":"O","\u014c":"O","\u1e50":"O","\u1e52":"O","\u014e":"O","\u022e":"O","\u0230":"O","\u00d6":"O","\u022a":"O","\u1ece":"O","\u0150":"O","\u01d1":"O","\u020c":"O","\u020e":"O","\u01a0":"O","\u1edc":"O","\u1eda":"O","\u1ee0":"O","\u1ede":"O","\u1ee2":"O","\u1ecc":"O",
"\u1ed8":"O","\u01ea":"O","\u01ec":"O","\u00d8":"O","\u01fe":"O","\u0186":"O","\u019f":"O","\ua74a":"O","\ua74c":"O","\u01a2":"OI","\ua74e":"OO","\u0222":"OU","\u24c5":"P","\uff30":"P","\u1e54":"P","\u1e56":"P","\u01a4":"P","\u2c63":"P","\ua750":"P","\ua752":"P","\ua754":"P","\u24c6":"Q","\uff31":"Q","\ua756":"Q","\ua758":"Q","\u024a":"Q","\u24c7":"R","\uff32":"R","\u0154":"R","\u1e58":"R","\u0158":"R","\u0210":"R","\u0212":"R","\u1e5a":"R","\u1e5c":"R","\u0156":"R","\u1e5e":"R","\u024c":"R","\u2c64":"R",
"\ua75a":"R","\ua7a6":"R","\ua782":"R","\u24c8":"S","\uff33":"S","\u1e9e":"S","\u015a":"S","\u1e64":"S","\u015c":"S","\u1e60":"S","\u0160":"S","\u1e66":"S","\u1e62":"S","\u1e68":"S","\u0218":"S","\u015e":"S","\u2c7e":"S","\ua7a8":"S","\ua784":"S","\u24c9":"T","\uff34":"T","\u1e6a":"T","\u0164":"T","\u1e6c":"T","\u021a":"T","\u0162":"T","\u1e70":"T","\u1e6e":"T","\u0166":"T","\u01ac":"T","\u01ae":"T","\u023e":"T","\ua786":"T","\ua728":"TZ","\u24ca":"U","\uff35":"U","\u00d9":"U","\u00da":"U","\u00db":"U",
"\u0168":"U","\u1e78":"U","\u016a":"U","\u1e7a":"U","\u016c":"U","\u00dc":"U","\u01db":"U","\u01d7":"U","\u01d5":"U","\u01d9":"U","\u1ee6":"U","\u016e":"U","\u0170":"U","\u01d3":"U","\u0214":"U","\u0216":"U","\u01af":"U","\u1eea":"U","\u1ee8":"U","\u1eee":"U","\u1eec":"U","\u1ef0":"U","\u1ee4":"U","\u1e72":"U","\u0172":"U","\u1e76":"U","\u1e74":"U","\u0244":"U","\u24cb":"V","\uff36":"V","\u1e7c":"V","\u1e7e":"V","\u01b2":"V","\ua75e":"V","\u0245":"V","\ua760":"VY","\u24cc":"W","\uff37":"W","\u1e80":"W",
"\u1e82":"W","\u0174":"W","\u1e86":"W","\u1e84":"W","\u1e88":"W","\u2c72":"W","\u24cd":"X","\uff38":"X","\u1e8a":"X","\u1e8c":"X","\u24ce":"Y","\uff39":"Y","\u1ef2":"Y","\u00dd":"Y","\u0176":"Y","\u1ef8":"Y","\u0232":"Y","\u1e8e":"Y","\u0178":"Y","\u1ef6":"Y","\u1ef4":"Y","\u01b3":"Y","\u024e":"Y","\u1efe":"Y","\u24cf":"Z","\uff3a":"Z","\u0179":"Z","\u1e90":"Z","\u017b":"Z","\u017d":"Z","\u1e92":"Z","\u1e94":"Z","\u01b5":"Z","\u0224":"Z","\u2c7f":"Z","\u2c6b":"Z","\ua762":"Z","\u24d0":"a","\uff41":"a",
"\u1e9a":"a","\u00e0":"a","\u00e1":"a","\u00e2":"a","\u1ea7":"a","\u1ea5":"a","\u1eab":"a","\u1ea9":"a","\u00e3":"a","\u0101":"a","\u0103":"a","\u1eb1":"a","\u1eaf":"a","\u1eb5":"a","\u1eb3":"a","\u0227":"a","\u01e1":"a","\u00e4":"a","\u01df":"a","\u1ea3":"a","\u00e5":"a","\u01fb":"a","\u01ce":"a","\u0201":"a","\u0203":"a","\u1ea1":"a","\u1ead":"a","\u1eb7":"a","\u1e01":"a","\u0105":"a","\u2c65":"a","\u0250":"a","\ua733":"aa","\u00e6":"ae","\u01fd":"ae","\u01e3":"ae","\ua735":"ao","\ua737":"au","\ua739":"av",
"\ua73b":"av","\ua73d":"ay","\u24d1":"b","\uff42":"b","\u1e03":"b","\u1e05":"b","\u1e07":"b","\u0180":"b","\u0183":"b","\u0253":"b","\u24d2":"c","\uff43":"c","\u0107":"c","\u0109":"c","\u010b":"c","\u010d":"c","\u00e7":"c","\u1e09":"c","\u0188":"c","\u023c":"c","\ua73f":"c","\u2184":"c","\u24d3":"d","\uff44":"d","\u1e0b":"d","\u010f":"d","\u1e0d":"d","\u1e11":"d","\u1e13":"d","\u1e0f":"d","\u0111":"d","\u018c":"d","\u0256":"d","\u0257":"d","\ua77a":"d","\u01f3":"dz","\u01c6":"dz","\u24d4":"e","\uff45":"e",
"\u00e8":"e","\u00e9":"e","\u00ea":"e","\u1ec1":"e","\u1ebf":"e","\u1ec5":"e","\u1ec3":"e","\u1ebd":"e","\u0113":"e","\u1e15":"e","\u1e17":"e","\u0115":"e","\u0117":"e","\u00eb":"e","\u1ebb":"e","\u011b":"e","\u0205":"e","\u0207":"e","\u1eb9":"e","\u1ec7":"e","\u0229":"e","\u1e1d":"e","\u0119":"e","\u1e19":"e","\u1e1b":"e","\u0247":"e","\u025b":"e","\u01dd":"e","\u24d5":"f","\uff46":"f","\u1e1f":"f","\u0192":"f","\ua77c":"f","\u24d6":"g","\uff47":"g","\u01f5":"g","\u011d":"g","\u1e21":"g","\u011f":"g",
"\u0121":"g","\u01e7":"g","\u0123":"g","\u01e5":"g","\u0260":"g","\ua7a1":"g","\u1d79":"g","\ua77f":"g","\u24d7":"h","\uff48":"h","\u0125":"h","\u1e23":"h","\u1e27":"h","\u021f":"h","\u1e25":"h","\u1e29":"h","\u1e2b":"h","\u1e96":"h","\u0127":"h","\u2c68":"h","\u2c76":"h","\u0265":"h","\u0195":"hv","\u24d8":"i","\uff49":"i","\u00ec":"i","\u00ed":"i","\u00ee":"i","\u0129":"i","\u012b":"i","\u012d":"i","\u00ef":"i","\u1e2f":"i","\u1ec9":"i","\u01d0":"i","\u0209":"i","\u020b":"i","\u1ecb":"i","\u012f":"i",
"\u1e2d":"i","\u0268":"i","\u0131":"i","\u24d9":"j","\uff4a":"j","\u0135":"j","\u01f0":"j","\u0249":"j","\u24da":"k","\uff4b":"k","\u1e31":"k","\u01e9":"k","\u1e33":"k","\u0137":"k","\u1e35":"k","\u0199":"k","\u2c6a":"k","\ua741":"k","\ua743":"k","\ua745":"k","\ua7a3":"k","\u24db":"l","\uff4c":"l","\u0140":"l","\u013a":"l","\u013e":"l","\u1e37":"l","\u1e39":"l","\u013c":"l","\u1e3d":"l","\u1e3b":"l","\u017f":"l","\u0142":"l","\u019a":"l","\u026b":"l","\u2c61":"l","\ua749":"l","\ua781":"l","\ua747":"l",
"\u01c9":"lj","\u24dc":"m","\uff4d":"m","\u1e3f":"m","\u1e41":"m","\u1e43":"m","\u0271":"m","\u026f":"m","\u24dd":"n","\uff4e":"n","\u01f9":"n","\u0144":"n","\u00f1":"n","\u1e45":"n","\u0148":"n","\u1e47":"n","\u0146":"n","\u1e4b":"n","\u1e49":"n","\u019e":"n","\u0272":"n","\u0149":"n","\ua791":"n","\ua7a5":"n","\u01cc":"nj","\u24de":"o","\uff4f":"o","\u00f2":"o","\u00f3":"o","\u00f4":"o","\u1ed3":"o","\u1ed1":"o","\u1ed7":"o","\u1ed5":"o","\u00f5":"o","\u1e4d":"o","\u022d":"o","\u1e4f":"o","\u014d":"o",
"\u1e51":"o","\u1e53":"o","\u014f":"o","\u022f":"o","\u0231":"o","\u00f6":"o","\u022b":"o","\u1ecf":"o","\u0151":"o","\u01d2":"o","\u020d":"o","\u020f":"o","\u01a1":"o","\u1edd":"o","\u1edb":"o","\u1ee1":"o","\u1edf":"o","\u1ee3":"o","\u1ecd":"o","\u1ed9":"o","\u01eb":"o","\u01ed":"o","\u00f8":"o","\u01ff":"o","\u0254":"o","\ua74b":"o","\ua74d":"o","\u0275":"o","\u01a3":"oi","\u0223":"ou","\ua74f":"oo","\u24df":"p","\uff50":"p","\u1e55":"p","\u1e57":"p","\u01a5":"p","\u1d7d":"p","\ua751":"p","\ua753":"p",
"\ua755":"p","\u24e0":"q","\uff51":"q","\u024b":"q","\ua757":"q","\ua759":"q","\u24e1":"r","\uff52":"r","\u0155":"r","\u1e59":"r","\u0159":"r","\u0211":"r","\u0213":"r","\u1e5b":"r","\u1e5d":"r","\u0157":"r","\u1e5f":"r","\u024d":"r","\u027d":"r","\ua75b":"r","\ua7a7":"r","\ua783":"r","\u24e2":"s","\uff53":"s","\u00df":"s","\u015b":"s","\u1e65":"s","\u015d":"s","\u1e61":"s","\u0161":"s","\u1e67":"s","\u1e63":"s","\u1e69":"s","\u0219":"s","\u015f":"s","\u023f":"s","\ua7a9":"s","\ua785":"s","\u1e9b":"s",
"\u24e3":"t","\uff54":"t","\u1e6b":"t","\u1e97":"t","\u0165":"t","\u1e6d":"t","\u021b":"t","\u0163":"t","\u1e71":"t","\u1e6f":"t","\u0167":"t","\u01ad":"t","\u0288":"t","\u2c66":"t","\ua787":"t","\ua729":"tz","\u24e4":"u","\uff55":"u","\u00f9":"u","\u00fa":"u","\u00fb":"u","\u0169":"u","\u1e79":"u","\u016b":"u","\u1e7b":"u","\u016d":"u","\u00fc":"u","\u01dc":"u","\u01d8":"u","\u01d6":"u","\u01da":"u","\u1ee7":"u","\u016f":"u","\u0171":"u","\u01d4":"u","\u0215":"u","\u0217":"u","\u01b0":"u","\u1eeb":"u",
"\u1ee9":"u","\u1eef":"u","\u1eed":"u","\u1ef1":"u","\u1ee5":"u","\u1e73":"u","\u0173":"u","\u1e77":"u","\u1e75":"u","\u0289":"u","\u24e5":"v","\uff56":"v","\u1e7d":"v","\u1e7f":"v","\u028b":"v","\ua75f":"v","\u028c":"v","\ua761":"vy","\u24e6":"w","\uff57":"w","\u1e81":"w","\u1e83":"w","\u0175":"w","\u1e87":"w","\u1e85":"w","\u1e98":"w","\u1e89":"w","\u2c73":"w","\u24e7":"x","\uff58":"x","\u1e8b":"x","\u1e8d":"x","\u24e8":"y","\uff59":"y","\u1ef3":"y","\u00fd":"y","\u0177":"y","\u1ef9":"y","\u0233":"y",
"\u1e8f":"y","\u00ff":"y","\u1ef7":"y","\u1e99":"y","\u1ef5":"y","\u01b4":"y","\u024f":"y","\u1eff":"y","\u24e9":"z","\uff5a":"z","\u017a":"z","\u1e91":"z","\u017c":"z","\u017e":"z","\u1e93":"z","\u1e95":"z","\u01b6":"z","\u0225":"z","\u0240":"z","\u2c6c":"z","\ua763":"z"};s=e(document);var Q=1;A=function(){return Q++};s.on("mousemove",function(a){x.x=a.pageX;x.y=a.pageY});s=C(Object,{bind:function(a){var b=this;return function(){a.apply(b,arguments)}},init:function(a){var b,c;this.opts=a=this.prepareOpts(a);
this.id=a.id;void 0!==a.element.data("select2")&&null!==a.element.data("select2")&&a.element.data("select2").destroy();this.container=this.createContainer();this.containerId="s2id_"+(a.element.attr("id")||"autogen"+A());this.containerSelector="#"+this.containerId.replace(/([;&,\.\+\*\~':"\!\^#$%@\[\]\(\)=>\|])/g,"\\$1");this.container.attr("id",this.containerId);var d=!1,g;this.body=function(){!1===d&&(g=a.element.closest("body"),d=!0);return g};z(this.container,this.opts.element,this.opts.adaptContainerCssClass);
this.container.attr("style",a.element.attr("style"));this.container.css(o(a.containerCss));this.container.addClass(o(a.containerCssClass));this.elementTabIndex=this.opts.element.attr("tabindex");this.opts.element.data("select2",this).attr("tabindex","-1").before(this.container).on("click.select2",j);this.container.data("select2",this);this.dropdown=this.container.find(".select2-drop");z(this.dropdown,this.opts.element,this.opts.adaptDropdownCssClass);this.dropdown.addClass(o(a.dropdownCssClass));
this.dropdown.data("select2",this);this.dropdown.on("click",j);this.results=b=this.container.find(".select2-results");this.search=c=this.container.find("input.select2-input");this.resultsPage=this.queryCount=0;this.context=null;this.initContainer();this.container.on("click",j);this.results.on("mousemove",function(a){(void 0===x||x.x!==a.pageX||x.y!==a.pageY)&&e(a.target).trigger("mousemove-filtered",a)});this.dropdown.on("mousemove-filtered touchstart touchmove touchend",".select2-results",this.bind(this.highlightUnderEvent));
var h=this.results,l=H(80,function(a){h.trigger("scroll-debounced",a)});h.on("scroll",function(a){0<=k(a.target,h.get())&&l(a)});this.dropdown.on("scroll-debounced",".select2-results",this.bind(this.loadMoreIfNeeded));e(this.container).on("change",".select2-input",function(a){a.stopPropagation()});e(this.dropdown).on("change",".select2-input",function(a){a.stopPropagation()});e.fn.mousewheel&&b.mousewheel(function(a,c,d,g){c=b.scrollTop();0<g&&0>=c-g?(b.scrollTop(0),j(a)):0>g&&b.get(0).scrollHeight-
b.scrollTop()+g<=b.height()&&(b.scrollTop(b.get(0).scrollHeight-b.height()),j(a))});G(c);c.on("keyup-change input paste",this.bind(this.updateResults));c.on("focus",function(){c.addClass("select2-focused")});c.on("blur",function(){c.removeClass("select2-focused")});this.dropdown.on("mouseup",".select2-results",this.bind(function(a){0<e(a.target).closest(".select2-result-selectable").length&&(this.highlightUnderEvent(a),this.selectHighlighted(a))}));this.dropdown.on("click mouseup mousedown",function(a){a.stopPropagation()});
e.isFunction(this.opts.initSelection)&&(this.initSelection(),this.monitorSource());null!==a.maximumInputLength&&this.search.attr("maxlength",a.maximumInputLength);var i=a.element.prop("disabled");void 0===i&&(i=!1);this.enable(!i);i=a.element.prop("readonly");void 0===i&&(i=!1);this.readonly(i);if(!(i=F)){i=e("<div class='select2-measure-scrollbar'></div>");i.appendTo("body");var f={width:i.width()-i[0].clientWidth,height:i.height()-i[0].clientHeight};i.remove();i=f}F=i;this.autofocus=a.element.prop("autofocus");
a.element.prop("autofocus",!1);this.autofocus&&this.focus();this.nextSearchTerm=void 0},destroy:function(){var a=this.opts.element,b=a.data("select2");this.close();this.propertyObserver&&(delete this.propertyObserver,this.propertyObserver=null);void 0!==b&&(b.container.remove(),b.dropdown.remove(),a.removeClass("select2-offscreen").removeData("select2").off(".select2").prop("autofocus",this.autofocus||!1),this.elementTabIndex?a.attr({tabindex:this.elementTabIndex}):a.removeAttr("tabindex"),a.show())},
optionToData:function(a){if(a.is("option"))return{id:a.prop("value"),text:a.text(),element:a.get(),css:a.attr("class"),disabled:a.prop("disabled"),locked:m(a.attr("locked"),"locked")||m(a.data("locked"),!0)};if(a.is("optgroup"))return{text:a.attr("label"),children:[],element:a.get(),css:a.attr("class")}},prepareOpts:function(a){var b,c,d,g=this;b=a.element;"select"===b.get(0).tagName.toLowerCase()&&(this.select=c=a.element);c&&e.each("id multiple ajax query createSearchChoice initSelection data tags".split(" "),
function(){if(this in a)throw Error("Option '"+this+"' is not allowed for Select2 when attached to a <select> element.");});a=e.extend({},{populateResults:function(b,c,d){var f,t=this.opts.id;f=function(b,c,h){var l,j,m,k,o,u,q,b=a.sortResults(b,c,d);l=0;for(j=b.length;l<j;l=l+1){m=b[l];o=m.disabled===true;k=!o&&t(m)!==void 0;u=m.children&&m.children.length>0;q=e("<li></li>");q.addClass("select2-results-dept-"+h);q.addClass("select2-result");q.addClass(k?"select2-result-selectable":"select2-result-unselectable");
o&&q.addClass("select2-disabled");u&&q.addClass("select2-result-with-children");q.addClass(g.opts.formatResultCssClass(m));k=e(document.createElement("div"));k.addClass("select2-result-label");o=a.formatResult(m,k,d,g.opts.escapeMarkup);o!==void 0&&k.html(o);q.append(k);if(u){u=e("<ul></ul>");u.addClass("select2-result-sub");f(m.children,u,h+1);q.append(u)}q.data("select2-data",m);c.append(q)}};f(c,b,0)}},e.fn.select2.defaults,a);"function"!==typeof a.id&&(d=a.id,a.id=function(a){return a[d]});if(e.isArray(a.element.data("select2Tags"))){if("tags"in
a)throw"tags specified as both an attribute 'data-select2-tags' and in options of Select2 "+a.element.attr("id");a.tags=a.element.data("select2Tags")}if(c)a.query=this.bind(function(a){var c={results:[],more:false},d=a.term,e,f,p;p=function(b,c){var e;if(b.is("option"))a.matcher(d,b.text(),b)&&c.push(g.optionToData(b));else if(b.is("optgroup")){e=g.optionToData(b);b.children().each2(function(a,b){p(b,e.children)});e.children.length>0&&c.push(e)}};e=b.children();if(this.getPlaceholder()!==void 0&&
e.length>0)(f=this.getPlaceholderOption())&&(e=e.not(f));e.each2(function(a,b){p(b,c.results)});a.callback(c)}),a.id=function(a){return a.id},a.formatResultCssClass=function(a){return a.css};else if(!("query"in a))if("ajax"in a){if((c=a.element.data("ajax-url"))&&0<c.length)a.ajax.url=c;a.query=K.call(a.element,a.ajax)}else if("data"in a)a.query=L(a.data);else if("tags"in a&&(a.query=M(a.tags),void 0===a.createSearchChoice&&(a.createSearchChoice=function(a){return{id:e.trim(a),text:e.trim(a)}}),void 0===
a.initSelection))a.initSelection=function(b,c){var d=[];e(B(b.val(),a.separator)).each(function(){var b={id:this,text:this},c=a.tags;e.isFunction(c)&&(c=c());e(c).each(function(){if(m(this.id,b.id)){b=this;return false}});d.push(b)});c(d)};if("function"!==typeof a.query)throw"query function not defined for Select2 "+a.element.attr("id");return a},monitorSource:function(){var a=this.opts.element,b,c;a.on("change.select2",this.bind(function(){!0!==this.opts.element.data("select2-change-triggered")&&
this.initSelection()}));b=this.bind(function(){var b=a.prop("disabled");void 0===b&&(b=!1);this.enable(!b);b=a.prop("readonly");void 0===b&&(b=!1);this.readonly(b);z(this.container,this.opts.element,this.opts.adaptContainerCssClass);this.container.addClass(o(this.opts.containerCssClass));z(this.dropdown,this.opts.element,this.opts.adaptDropdownCssClass);this.dropdown.addClass(o(this.opts.dropdownCssClass))});a.on("propertychange.select2",b);void 0===this.mutationCallback&&(this.mutationCallback=function(a){a.forEach(b)});
c=window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver;void 0!==c&&(this.propertyObserver&&(delete this.propertyObserver,this.propertyObserver=null),this.propertyObserver=new c(this.mutationCallback),this.propertyObserver.observe(a.get(0),{attributes:!0,subtree:!1}))},triggerSelect:function(a){a=e.Event("select2-selecting",{val:this.id(a),object:a});this.opts.element.trigger(a);return!a.isDefaultPrevented()},triggerChange:function(a){a=a||{};a=e.extend({},a,{type:"change",
val:this.val()});this.opts.element.data("select2-change-triggered",!0);this.opts.element.trigger(a);this.opts.element.data("select2-change-triggered",!1);this.opts.element.click();this.opts.blurOnChange&&this.opts.element.blur()},isInterfaceEnabled:function(){return!0===this.enabledInterface},enableInterface:function(){var a=this._enabled&&!this._readonly;if(a===this.enabledInterface)return!1;this.container.toggleClass("select2-container-disabled",!a);this.close();this.enabledInterface=a;return!0},
enable:function(a){void 0===a&&(a=!0);this._enabled!==a&&(this._enabled=a,this.opts.element.prop("disabled",!a),this.enableInterface())},disable:function(){this.enable(!1)},readonly:function(a){void 0===a&&(a=!1);if(this._readonly===a)return!1;this._readonly=a;this.opts.element.prop("readonly",a);this.enableInterface();return!0},opened:function(){return this.container.hasClass("select2-dropdown-open")},positionDropdown:function(){var a=this.dropdown,b=this.container.offset(),c=this.container.outerHeight(!1),
d=this.container.outerWidth(!1),g=a.outerHeight(!1),h=e(window),f=h.width(),i=h.height(),n=h.scrollLeft()+f,j=h.scrollTop()+i,c=b.top+c,p=b.left,j=c+g<=j,m=b.top-g>=this.body().scrollTop(),k=a.outerWidth(!1),r=p+k<=n,s;a.hasClass("select2-drop-above")?(g=!0,!m&&j&&(s=!0,g=!1)):(g=!1,!j&&m&&(g=s=!0));s&&(a.hide(),b=this.container.offset(),c=this.container.outerHeight(!1),d=this.container.outerWidth(!1),a.outerHeight(!1),n=h.scrollLeft()+f,h.scrollTop(),c=b.top+c,p=b.left,k=a.outerWidth(!1),r=p+k<=
n,a.show());this.opts.dropdownAutoWidth?(h=e(".select2-results",a)[0],a.addClass("select2-drop-auto-width"),a.css("width",""),k=a.outerWidth(!1)+(h.scrollHeight===h.clientHeight?0:F.width),k>d?d=k:k=d,r=p+k<=n):this.container.removeClass("select2-drop-auto-width");"static"!==this.body().css("position")&&(n=this.body().offset(),c-=n.top,p-=n.left);r||(p=b.left+d-k);d={left:p,width:d};g?(d.bottom=i-b.top,d.top="auto",this.container.addClass("select2-drop-above"),a.addClass("select2-drop-above")):(d.top=
c,d.bottom="auto",this.container.removeClass("select2-drop-above"),a.removeClass("select2-drop-above"));d=e.extend(d,o(this.opts.dropdownCss));a.css(d)},shouldOpen:function(){var a;if(this.opened()||!1===this._enabled||!0===this._readonly)return!1;a=e.Event("select2-opening");this.opts.element.trigger(a);return!a.isDefaultPrevented()},clearDropdownAlignmentPreference:function(){this.container.removeClass("select2-drop-above");this.dropdown.removeClass("select2-drop-above")},open:function(){if(!this.shouldOpen())return!1;
this.opening();return!0},opening:function(){var a=this.containerId,b="scroll."+a,c="resize."+a,d="orientationchange."+a;this.container.addClass("select2-dropdown-open").addClass("select2-container-active");this.clearDropdownAlignmentPreference();this.dropdown[0]!==this.body().children().last()[0]&&this.dropdown.detach().appendTo(this.body());a=e("#select2-drop-mask");0==a.length&&(a=e(document.createElement("div")),a.attr("id","select2-drop-mask").attr("class","select2-drop-mask"),a.hide(),a.appendTo(this.body()),
a.on("mousedown touchstart click",function(a){var b=e("#select2-drop");0<b.length&&(b=b.data("select2"),b.opts.selectOnBlur&&b.selectHighlighted({noFocus:!0}),b.close({focus:!0}),a.preventDefault(),a.stopPropagation())}));this.dropdown.prev()[0]!==a[0]&&this.dropdown.before(a);e("#select2-drop").removeAttr("id");this.dropdown.attr("id","select2-drop");a.show();this.positionDropdown();this.dropdown.show();this.positionDropdown();this.dropdown.addClass("select2-drop-active");var g=this;this.container.parents().add(window).each(function(){e(this).on(c+
" "+b+" "+d,function(){g.positionDropdown()})})},close:function(){if(this.opened()){var a=this.containerId,b="scroll."+a,c="resize."+a,d="orientationchange."+a;this.container.parents().add(window).each(function(){e(this).off(b).off(c).off(d)});this.clearDropdownAlignmentPreference();e("#select2-drop-mask").hide();this.dropdown.removeAttr("id");this.dropdown.hide();this.container.removeClass("select2-dropdown-open").removeClass("select2-container-active");this.results.empty();this.clearSearch();this.search.removeClass("select2-active");
this.opts.element.trigger(e.Event("select2-close"))}},externalSearch:function(a){this.open();this.search.val(a);this.updateResults(!1)},clearSearch:function(){},getMaximumSelectionSize:function(){return o(this.opts.maximumSelectionSize)},ensureHighlightVisible:function(){var a=this.results,b,c,d,g;c=this.highlight();0>c||(0==c?a.scrollTop(0):(b=this.findHighlightableChoices().find(".select2-result-label"),d=e(b[c]),g=d.offset().top+d.outerHeight(!0),c===b.length-1&&(b=a.find("li.select2-more-results"),
0<b.length&&(g=b.offset().top+b.outerHeight(!0))),b=a.offset().top+a.outerHeight(!0),g>b&&a.scrollTop(a.scrollTop()+(g-b)),g=d.offset().top-a.offset().top,0>g&&"none"!=d.css("display")&&a.scrollTop(a.scrollTop()+g)))},findHighlightableChoices:function(){return this.results.find(".select2-result-selectable:not(.select2-disabled, .select2-selected)")},moveHighlight:function(a){for(var b=this.findHighlightableChoices(),c=this.highlight();-1<c&&c<b.length;){var c=c+a,d=e(b[c]);if(d.hasClass("select2-result-selectable")&&
!d.hasClass("select2-disabled")&&!d.hasClass("select2-selected")){this.highlight(c);break}}},highlight:function(a){var b=this.findHighlightableChoices();if(0===arguments.length)return k(b.filter(".select2-highlighted")[0],b.get());a>=b.length&&(a=b.length-1);0>a&&(a=0);this.removeHighlight();b=e(b[a]);b.addClass("select2-highlighted");this.ensureHighlightVisible();(b=b.data("select2-data"))&&this.opts.element.trigger({type:"select2-highlight",val:this.id(b),choice:b})},removeHighlight:function(){this.results.find(".select2-highlighted").removeClass("select2-highlighted")},
countSelectableResults:function(){return this.findHighlightableChoices().length},highlightUnderEvent:function(a){a=e(a.target).closest(".select2-result-selectable");if(0<a.length&&!a.is(".select2-highlighted")){var b=this.findHighlightableChoices();this.highlight(b.index(a))}else 0==a.length&&this.removeHighlight()},loadMoreIfNeeded:function(){var a=this.results,b=a.find("li.select2-more-results"),c,d=this.resultsPage+1,e=this,h=this.search.val(),f=this.context;0!==b.length&&(c=b.offset().top-a.offset().top-
a.height(),c<=this.opts.loadMorePadding&&(b.addClass("select2-active"),this.opts.query({element:this.opts.element,term:h,page:d,context:f,matcher:this.opts.matcher,callback:this.bind(function(c){e.opened()&&(e.opts.populateResults.call(this,a,c.results,{term:h,page:d,context:f}),e.postprocessResults(c,!1,!1),!0===c.more?(b.detach().appendTo(a).text(e.opts.formatLoadMore(d+1)),window.setTimeout(function(){e.loadMoreIfNeeded()},10)):b.remove(),e.positionDropdown(),e.resultsPage=d,e.context=c.context,
this.opts.element.trigger({type:"select2-loaded",items:c}))})})))},tokenize:function(){},updateResults:function(a){function b(){d.removeClass("select2-active");i.positionDropdown()}function c(a){g.html(a);b()}var d=this.search,g=this.results,h=this.opts,f,i=this;f=d.val();var n=e.data(this.container,"select2-last-term"),j;if(!(!0!==a&&n&&m(f,n))&&(e.data(this.container,"select2-last-term",f),!(!0!==a&&(!1===this.showSearchInput||!this.opened())))){j=++this.queryCount;n=this.getMaximumSelectionSize();
if(1<=n&&(f=this.data(),e.isArray(f)&&f.length>=n&&r(h.formatSelectionTooBig,"formatSelectionTooBig"))){c("<li class='select2-selection-limit'>"+h.formatSelectionTooBig(n)+"</li>");return}d.val().length<h.minimumInputLength?(r(h.formatInputTooShort,"formatInputTooShort")?c("<li class='select2-no-results'>"+h.formatInputTooShort(d.val(),h.minimumInputLength)+"</li>"):c(""),a&&this.showSearch&&this.showSearch(!0)):h.maximumInputLength&&d.val().length>h.maximumInputLength?r(h.formatInputTooLong,"formatInputTooLong")?
c("<li class='select2-no-results'>"+h.formatInputTooLong(d.val(),h.maximumInputLength)+"</li>"):c(""):(h.formatSearching&&0===this.findHighlightableChoices().length&&c("<li class='select2-searching'>"+h.formatSearching()+"</li>"),d.addClass("select2-active"),this.removeHighlight(),f=this.tokenize(),void 0!=f&&null!=f&&d.val(f),this.resultsPage=1,h.query({element:h.element,term:d.val(),page:this.resultsPage,context:null,matcher:h.matcher,callback:this.bind(function(f){var l;j==this.queryCount&&(this.opened()?
(this.context=void 0===f.context?null:f.context,this.opts.createSearchChoice&&""!==d.val()&&(l=this.opts.createSearchChoice.call(i,d.val(),f.results),void 0!==l&&null!==l&&void 0!==i.id(l)&&null!==i.id(l)&&0===e(f.results).filter(function(){return m(i.id(this),i.id(l))}).length&&f.results.unshift(l)),0===f.results.length&&r(h.formatNoMatches,"formatNoMatches"))?c("<li class='select2-no-results'>"+h.formatNoMatches(d.val())+"</li>"):(g.empty(),i.opts.populateResults.call(this,g,f.results,{term:d.val(),
page:this.resultsPage,context:null}),!0===f.more&&r(h.formatLoadMore,"formatLoadMore")&&(g.append("<li class='select2-more-results'>"+i.opts.escapeMarkup(h.formatLoadMore(this.resultsPage))+"</li>"),window.setTimeout(function(){i.loadMoreIfNeeded()},10)),this.postprocessResults(f,a),b(),this.opts.element.trigger({type:"select2-loaded",items:f})):this.search.removeClass("select2-active"))})}))}},cancel:function(){this.close()},blur:function(){this.opts.selectOnBlur&&this.selectHighlighted({noFocus:!0});
this.close();this.container.removeClass("select2-container-active");this.search[0]===document.activeElement&&this.search.blur();this.clearSearch();this.selection.find(".select2-search-choice-focus").removeClass("select2-search-choice-focus")},focusSearch:function(){var a=this.search;a[0]!==document.activeElement&&window.setTimeout(function(){var b=a[0],c=a.val().length;a.focus();a.is(":visible")&&b===document.activeElement&&(b.setSelectionRange?b.setSelectionRange(c,c):b.createTextRange&&(b=b.createTextRange(),
b.collapse(!1),b.select()))},0)},selectHighlighted:function(a){var b=this.highlight(),c=this.results.find(".select2-highlighted").closest(".select2-result").data("select2-data");c?(this.highlight(b),this.onSelect(c,a)):a&&a.noFocus&&this.close()},getPlaceholder:function(){var a;return this.opts.element.attr("placeholder")||this.opts.element.attr("data-placeholder")||this.opts.element.data("placeholder")||this.opts.placeholder||(void 0!==(a=this.getPlaceholderOption())?a.text():void 0)},getPlaceholderOption:function(){if(this.select){var a=
this.select.children("option").first();if(void 0!==this.opts.placeholderOption)return"first"===this.opts.placeholderOption&&a||"function"===typeof this.opts.placeholderOption&&this.opts.placeholderOption(this.select);if(""===a.text()&&""===a.val())return a}},initContainerWidth:function(){var a=function(){var a,c,d,g;if("off"===this.opts.width)return null;if("element"===this.opts.width)return 0===this.opts.element.outerWidth(!1)?"auto":this.opts.element.outerWidth(!1)+"px";if("copy"===this.opts.width||
"resolve"===this.opts.width){a=this.opts.element.attr("style");if(void 0!==a){a=a.split(";");d=0;for(g=a.length;d<g;d+=1)if(c=a[d].replace(/\s/g,""),c=c.match(/^width:(([-+]?([0-9]*\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/i),null!==c&&1<=c.length)return c[1]}return"resolve"===this.opts.width?(a=this.opts.element.css("width"),0<a.indexOf("%")?a:0===this.opts.element.outerWidth(!1)?"auto":this.opts.element.outerWidth(!1)+"px"):null}return e.isFunction(this.opts.width)?this.opts.width():this.opts.width}.call(this);
null!==a&&this.container.css("width",a)}});D=C(s,{createContainer:function(){return e(document.createElement("div")).attr({"class":"select2-container"}).html("<a href='javascript:void(0)' onclick='return false;' class='select2-choice' tabindex='-1'>   <span class='select2-chosen'>&nbsp;</span><abbr class='select2-search-choice-close'></abbr>   <span class='select2-arrow'><b></b></span></a><input class='select2-focusser select2-offscreen' type='text'/><div class='select2-drop select2-display-none'>   <div class='select2-search'>       <input type='text' autocomplete='off' autocorrect='off' autocapitalize='off' spellcheck='false' class='select2-input'/>   </div>   <ul class='select2-results'>   </ul></div>")},
enableInterface:function(){this.parent.enableInterface.apply(this,arguments)&&this.focusser.prop("disabled",!this.isInterfaceEnabled())},opening:function(){var a,b;0<=this.opts.minimumResultsForSearch&&this.showSearch(!0);this.parent.opening.apply(this,arguments);!1!==this.showSearchInput&&this.search.val(this.focusser.val());this.search.focus();a=this.search.get(0);a.createTextRange?(a=a.createTextRange(),a.collapse(!1),a.select()):a.setSelectionRange&&(b=this.search.val().length,a.setSelectionRange(b,
b));""===this.search.val()&&void 0!=this.nextSearchTerm&&(this.search.val(this.nextSearchTerm),this.search.select());this.focusser.prop("disabled",!0).val("");this.updateResults(!0);this.opts.element.trigger(e.Event("select2-open"))},close:function(a){this.opened()&&(this.parent.close.apply(this,arguments),a=a||{focus:!0},this.focusser.removeAttr("disabled"),a.focus&&this.focusser.focus())},focus:function(){this.opened()?this.close():(this.focusser.removeAttr("disabled"),this.focusser.focus())},isFocused:function(){return this.container.hasClass("select2-container-active")},
cancel:function(){this.parent.cancel.apply(this,arguments);this.focusser.removeAttr("disabled");this.focusser.focus()},destroy:function(){e("label[for='"+this.focusser.attr("id")+"']").attr("for",this.opts.element.attr("id"));this.parent.destroy.apply(this,arguments)},initContainer:function(){var a,b=this.container,c=this.dropdown;0>this.opts.minimumResultsForSearch?this.showSearch(!1):this.showSearch(!0);this.selection=a=b.find(".select2-choice");this.focusser=b.find(".select2-focusser");this.focusser.attr("id",
"s2id_autogen"+A());e("label[for='"+this.opts.element.attr("id")+"']").attr("for",this.focusser.attr("id"));this.focusser.attr("tabindex",this.elementTabIndex);this.search.on("keydown",this.bind(function(a){if(this.isInterfaceEnabled())if(a.which===f.PAGE_UP||a.which===f.PAGE_DOWN)j(a);else switch(a.which){case f.UP:case f.DOWN:this.moveHighlight(a.which===f.UP?-1:1);j(a);break;case f.ENTER:this.selectHighlighted();j(a);break;case f.TAB:this.selectHighlighted({noFocus:!0});break;case f.ESC:this.cancel(a),
j(a)}}));this.search.on("blur",this.bind(function(){document.activeElement===this.body().get(0)&&window.setTimeout(this.bind(function(){this.search.focus()}),0)}));this.focusser.on("keydown",this.bind(function(a){if(this.isInterfaceEnabled()&&!(a.which===f.TAB||f.isControl(a)||f.isFunctionKey(a)||a.which===f.ESC))if(!1===this.opts.openOnEnter&&a.which===f.ENTER)j(a);else if(a.which==f.DOWN||a.which==f.UP||a.which==f.ENTER&&this.opts.openOnEnter)!a.altKey&&(!a.ctrlKey&&!a.shiftKey&&!a.metaKey)&&(this.open(),
j(a));else if(a.which==f.DELETE||a.which==f.BACKSPACE)this.opts.allowClear&&this.clear(),j(a)}));G(this.focusser);this.focusser.on("keyup-change input",this.bind(function(a){0<=this.opts.minimumResultsForSearch&&(a.stopPropagation(),this.opened()||this.open())}));a.on("mousedown","abbr",this.bind(function(a){this.isInterfaceEnabled()&&(this.clear(),a.preventDefault(),a.stopImmediatePropagation(),this.close(),this.selection.focus())}));a.on("mousedown",this.bind(function(a){this.container.hasClass("select2-container-active")||
this.opts.element.trigger(e.Event("select2-focus"));this.opened()?this.close():this.isInterfaceEnabled()&&this.open();j(a)}));c.on("mousedown",this.bind(function(){this.search.focus()}));a.on("focus",this.bind(function(a){j(a)}));this.focusser.on("focus",this.bind(function(){this.container.hasClass("select2-container-active")||this.opts.element.trigger(e.Event("select2-focus"));this.container.addClass("select2-container-active")})).on("blur",this.bind(function(){this.opened()||(this.container.removeClass("select2-container-active"),
this.opts.element.trigger(e.Event("select2-blur")))}));this.search.on("focus",this.bind(function(){this.container.hasClass("select2-container-active")||this.opts.element.trigger(e.Event("select2-focus"));this.container.addClass("select2-container-active")}));this.initContainerWidth();this.opts.element.addClass("select2-offscreen");this.setPlaceholder()},clear:function(a){var b=this.selection.data("select2-data");if(b){var c=e.Event("select2-clearing");this.opts.element.trigger(c);c.isDefaultPrevented()||
(c=this.getPlaceholderOption(),this.opts.element.val(c?c.val():""),this.selection.find(".select2-chosen").empty(),this.selection.removeData("select2-data"),this.setPlaceholder(),!1!==a&&(this.opts.element.trigger({type:"select2-removed",val:this.id(b),choice:b}),this.triggerChange({removed:b})))}},initSelection:function(){if(this.isPlaceholderOptionSelected())this.updateSelection(null),this.close(),this.setPlaceholder();else{var a=this;this.opts.initSelection.call(null,this.opts.element,function(b){void 0!==
b&&null!==b&&(a.updateSelection(b),a.close(),a.setPlaceholder())})}},isPlaceholderOptionSelected:function(){var a;return!this.getPlaceholder()?!1:void 0!==(a=this.getPlaceholderOption())&&a.prop("selected")||""===this.opts.element.val()||void 0===this.opts.element.val()||null===this.opts.element.val()},prepareOpts:function(){var a=this.parent.prepareOpts.apply(this,arguments),b=this;"select"===a.element.get(0).tagName.toLowerCase()?a.initSelection=function(a,d){var e=a.find("option").filter(function(){return this.selected});
d(b.optionToData(e))}:"data"in a&&(a.initSelection=a.initSelection||function(b,d){var g=b.val(),f=null;a.query({matcher:function(b,c,d){(b=m(g,a.id(d)))&&(f=d);return b},callback:!e.isFunction(d)?e.noop:function(){d(f)}})});return a},getPlaceholder:function(){return this.select&&void 0===this.getPlaceholderOption()?void 0:this.parent.getPlaceholder.apply(this,arguments)},setPlaceholder:function(){var a=this.getPlaceholder();this.isPlaceholderOptionSelected()&&void 0!==a&&!(this.select&&void 0===this.getPlaceholderOption())&&
(this.selection.find(".select2-chosen").html(this.opts.escapeMarkup(a)),this.selection.addClass("select2-default"),this.container.removeClass("select2-allowclear"))},postprocessResults:function(a,b,c){var d=0,e=this;this.findHighlightableChoices().each2(function(a,b){if(m(e.id(b.data("select2-data")),e.opts.element.val()))return d=a,!1});!1!==c&&(!0===b&&0<=d?this.highlight(d):this.highlight(0));!0===b&&(b=this.opts.minimumResultsForSearch,0<=b&&this.showSearch(N(a.results)>=b))},showSearch:function(a){this.showSearchInput!==
a&&(this.showSearchInput=a,this.dropdown.find(".select2-search").toggleClass("select2-search-hidden",!a),this.dropdown.find(".select2-search").toggleClass("select2-offscreen",!a),e(this.dropdown,this.container).toggleClass("select2-with-searchbox",a))},onSelect:function(a,b){if(this.triggerSelect(a)){var c=this.opts.element.val(),d=this.data();this.opts.element.val(this.id(a));this.updateSelection(a);this.opts.element.trigger({type:"select2-selected",val:this.id(a),choice:a});this.nextSearchTerm=
this.opts.nextSearchTerm(a,this.search.val());this.close();(!b||!b.noFocus)&&this.focusser.focus();m(c,this.id(a))||this.triggerChange({added:a,removed:d})}},updateSelection:function(a){var b=this.selection.find(".select2-chosen"),c;this.selection.data("select2-data",a);b.empty();null!==a&&(c=this.opts.formatSelection(a,b,this.opts.escapeMarkup));void 0!==c&&b.append(c);a=this.opts.formatSelectionCssClass(a,b);void 0!==a&&b.addClass(a);this.selection.removeClass("select2-default");this.opts.allowClear&&
void 0!==this.getPlaceholder()&&this.container.addClass("select2-allowclear")},val:function(){var a,b=!1,c=null,d=this,e=this.data();if(0===arguments.length)return this.opts.element.val();a=arguments[0];1<arguments.length&&(b=arguments[1]);if(this.select)this.select.val(a).find("option").filter(function(){return this.selected}).each2(function(a,b){c=d.optionToData(b);return!1}),this.updateSelection(c),this.setPlaceholder(),b&&this.triggerChange({added:c,removed:e});else if(!a&&0!==a)this.clear(b);
else{if(void 0===this.opts.initSelection)throw Error("cannot call val() if initSelection() is not defined");this.opts.element.val(a);this.opts.initSelection(this.opts.element,function(a){d.opts.element.val(!a?"":d.id(a));d.updateSelection(a);d.setPlaceholder();b&&d.triggerChange({added:a,removed:e})})}},clearSearch:function(){this.search.val("");this.focusser.val("")},data:function(a){var b,c=!1;if(0===arguments.length)return b=this.selection.data("select2-data"),void 0==b&&(b=null),b;1<arguments.length&&
(c=arguments[1]);a?(b=this.data(),this.opts.element.val(!a?"":this.id(a)),this.updateSelection(a),c&&this.triggerChange({added:a,removed:b})):this.clear(c)}});E=C(s,{createContainer:function(){return e(document.createElement("div")).attr({"class":"select2-container select2-container-multi"}).html("<ul class='select2-choices'>  <li class='select2-search-field'>    <input type='text' autocomplete='off' autocorrect='off' autocapitalize='off' spellcheck='false' class='select2-input'>  </li></ul><div class='select2-drop select2-drop-multi select2-display-none'>   <ul class='select2-results'>   </ul></div>")},
prepareOpts:function(){var a=this.parent.prepareOpts.apply(this,arguments),b=this;"select"===a.element.get(0).tagName.toLowerCase()?a.initSelection=function(a,d){var e=[];a.find("option").filter(function(){return this.selected}).each2(function(a,c){e.push(b.optionToData(c))});d(e)}:"data"in a&&(a.initSelection=a.initSelection||function(b,d){var g=B(b.val(),a.separator),f=[];a.query({matcher:function(b,c,d){(b=e.grep(g,function(b){return m(b,a.id(d))}).length)&&f.push(d);return b},callback:!e.isFunction(d)?
e.noop:function(){for(var b=[],c=0;c<g.length;c++)for(var e=g[c],j=0;j<f.length;j++){var k=f[j];if(m(e,a.id(k))){b.push(k);f.splice(j,1);break}}d(b)}})});return a},selectChoice:function(a){var b=this.container.find(".select2-search-choice-focus");if(!b.length||!(a&&a[0]==b[0]))b.length&&this.opts.element.trigger("choice-deselected",b),b.removeClass("select2-search-choice-focus"),a&&a.length&&(this.close(),a.addClass("select2-search-choice-focus"),this.opts.element.trigger("choice-selected",a))},destroy:function(){e("label[for='"+
this.search.attr("id")+"']").attr("for",this.opts.element.attr("id"));this.parent.destroy.apply(this,arguments)},initContainer:function(){var a;this.searchContainer=this.container.find(".select2-search-field");this.selection=a=this.container.find(".select2-choices");var b=this;this.selection.on("click",".select2-search-choice:not(.select2-locked)",function(){b.search[0].focus();b.selectChoice(e(this))});this.search.attr("id","s2id_autogen"+A());e("label[for='"+this.opts.element.attr("id")+"']").attr("for",
this.search.attr("id"));this.search.on("input paste",this.bind(function(){this.isInterfaceEnabled()&&(this.opened()||this.open())}));this.search.attr("tabindex",this.elementTabIndex);this.keydowns=0;this.search.on("keydown",this.bind(function(b){var d,g;if(this.isInterfaceEnabled()){++this.keydowns;var h=a.find(".select2-search-choice-focus"),l=h.prev(".select2-search-choice:not(.select2-locked)"),i=h.next(".select2-search-choice:not(.select2-locked)");d=this.search;d=e(d)[0];var k=0;g=0;"selectionStart"in
d?(k=d.selectionStart,g=d.selectionEnd-k):"selection"in document&&(d.focus(),k=document.selection.createRange(),g=document.selection.createRange().text.length,k.moveStart("character",-d.value.length),k=k.text.length-g);d=k;if(h.length&&(b.which==f.LEFT||b.which==f.RIGHT||b.which==f.BACKSPACE||b.which==f.DELETE||b.which==f.ENTER))g=h,b.which==f.LEFT&&l.length?g=l:b.which==f.RIGHT?g=i.length?i:null:b.which===f.BACKSPACE?(this.unselect(h.first()),this.search.width(10),g=l.length?l:i):b.which==f.DELETE?
(this.unselect(h.first()),this.search.width(10),g=i.length?i:null):b.which==f.ENTER&&(g=null),this.selectChoice(g),j(b),(!g||!g.length)&&this.open();else if((b.which===f.BACKSPACE&&1==this.keydowns||b.which==f.LEFT)&&0==d&&!g)this.selectChoice(a.find(".select2-search-choice:not(.select2-locked)").last()),j(b);else{this.selectChoice(null);if(this.opened())switch(b.which){case f.UP:case f.DOWN:this.moveHighlight(b.which===f.UP?-1:1);j(b);return;case f.ENTER:this.selectHighlighted();j(b);return;case f.TAB:this.selectHighlighted({noFocus:!0});
this.close();return;case f.ESC:this.cancel(b);j(b);return}b.which===f.TAB||f.isControl(b)||f.isFunctionKey(b)||b.which===f.BACKSPACE||b.which===f.ESC||b.which===f.ENTER&&(!1===this.opts.openOnEnter||b.altKey||b.ctrlKey||b.shiftKey||b.metaKey)||(this.open(),(b.which===f.PAGE_UP||b.which===f.PAGE_DOWN)&&j(b),b.which===f.ENTER&&j(b))}}}));this.search.on("keyup",this.bind(function(){this.keydowns=0;this.resizeSearch()}));this.search.on("blur",this.bind(function(a){this.container.removeClass("select2-container-active");
this.search.removeClass("select2-focused");this.selectChoice(null);this.opened()||this.clearSearch();a.stopImmediatePropagation();this.opts.element.trigger(e.Event("select2-blur"))}));this.container.on("click",".select2-choices",this.bind(function(a){this.isInterfaceEnabled()&&!(0<e(a.target).closest(".select2-search-choice").length)&&(this.selectChoice(null),this.clearPlaceholder(),this.container.hasClass("select2-container-active")||this.opts.element.trigger(e.Event("select2-focus")),this.open(),
this.focusSearch(),a.preventDefault())}));this.container.on("focus",".select2-choices",this.bind(function(){this.isInterfaceEnabled()&&(this.container.hasClass("select2-container-active")||this.opts.element.trigger(e.Event("select2-focus")),this.container.addClass("select2-container-active"),this.dropdown.addClass("select2-drop-active"),this.clearPlaceholder())}));this.initContainerWidth();this.opts.element.addClass("select2-offscreen");this.clearSearch()},enableInterface:function(){this.parent.enableInterface.apply(this,
arguments)&&this.search.prop("disabled",!this.isInterfaceEnabled())},initSelection:function(){""===this.opts.element.val()&&""===this.opts.element.text()&&(this.updateSelection([]),this.close(),this.clearSearch());if(this.select||""!==this.opts.element.val()){var a=this;this.opts.initSelection.call(null,this.opts.element,function(b){if(b!==void 0&&b!==null){a.updateSelection(b);a.close();a.clearSearch()}})}},clearSearch:function(){var a=this.getPlaceholder(),b=this.getMaxSearchWidth();void 0!==a&&
0===this.getVal().length&&!1===this.search.hasClass("select2-focused")?(this.search.val(a).addClass("select2-default"),this.search.width(0<b?b:this.container.css("width"))):this.search.val("").width(10)},clearPlaceholder:function(){this.search.hasClass("select2-default")&&this.search.val("").removeClass("select2-default")},opening:function(){this.clearPlaceholder();this.resizeSearch();this.parent.opening.apply(this,arguments);this.focusSearch();this.updateResults(!0);this.search.focus();this.opts.element.trigger(e.Event("select2-open"))},
close:function(){this.opened()&&this.parent.close.apply(this,arguments)},focus:function(){this.close();this.search.focus()},isFocused:function(){return this.search.hasClass("select2-focused")},updateSelection:function(a){var b=[],c=[],d=this;e(a).each(function(){0>k(d.id(this),b)&&(b.push(d.id(this)),c.push(this))});a=c;this.selection.find(".select2-search-choice").remove();e(a).each(function(){d.addSelectedChoice(this)});d.postprocessResults()},tokenize:function(){var a=this.search.val(),a=this.opts.tokenizer.call(this,
a,this.data(),this.bind(this.onSelect),this.opts);null!=a&&void 0!=a&&(this.search.val(a),0<a.length&&this.open())},onSelect:function(a,b){this.triggerSelect(a)&&(this.addSelectedChoice(a),this.opts.element.trigger({type:"selected",val:this.id(a),choice:a}),(this.select||!this.opts.closeOnSelect)&&this.postprocessResults(a,!1,!0===this.opts.closeOnSelect),this.opts.closeOnSelect?(this.close(),this.search.width(10)):0<this.countSelectableResults()?(this.search.width(10),this.resizeSearch(),0<this.getMaximumSelectionSize()&&
this.val().length>=this.getMaximumSelectionSize()&&this.updateResults(!0),this.positionDropdown()):(this.close(),this.search.width(10)),this.triggerChange({added:a}),(!b||!b.noFocus)&&this.focusSearch())},cancel:function(){this.close();this.focusSearch()},addSelectedChoice:function(a){var b=!a.locked,c=e("<li class='select2-search-choice'>    <div></div>    <a href='#' onclick='return false;' class='select2-search-choice-close' tabindex='-1'></a></li>"),d=e("<li class='select2-search-choice select2-locked'><div></div></li>"),
c=b?c:d,d=this.id(a),f=this.getVal(),h;h=this.opts.formatSelection(a,c.find("div"),this.opts.escapeMarkup);void 0!=h&&c.find("div").replaceWith("<div>"+h+"</div>");h=this.opts.formatSelectionCssClass(a,c.find("div"));void 0!=h&&c.addClass(h);if(b)c.find(".select2-search-choice-close").on("mousedown",j).on("click dblclick",this.bind(function(a){this.isInterfaceEnabled()&&(e(a.target).closest(".select2-search-choice").fadeOut("fast",this.bind(function(){this.unselect(e(a.target));this.selection.find(".select2-search-choice-focus").removeClass("select2-search-choice-focus");
this.close();this.focusSearch()})).dequeue(),j(a))})).on("focus",this.bind(function(){this.isInterfaceEnabled()&&(this.container.addClass("select2-container-active"),this.dropdown.addClass("select2-drop-active"))}));c.data("select2-data",a);c.insertBefore(this.searchContainer);f.push(d);this.setVal(f)},unselect:function(a){var b=this.getVal(),c,d,a=a.closest(".select2-search-choice");if(0===a.length)throw"Invalid argument: "+a+". Must be .select2-search-choice";if(c=a.data("select2-data")){for(;0<=
(d=k(this.id(c),b));)b.splice(d,1),this.setVal(b),this.select&&this.postprocessResults();b=e.Event("select2-removing");b.val=this.id(c);b.choice=c;this.opts.element.trigger(b);b.isDefaultPrevented()||(a.remove(),this.opts.element.trigger({type:"select2-removed",val:this.id(c),choice:c}),this.triggerChange({removed:c}))}},postprocessResults:function(a,b,c){var d=this.getVal(),b=this.results.find(".select2-result"),e=this.results.find(".select2-result-with-children"),f=this;b.each2(function(a,b){var c=
f.id(b.data("select2-data"));0<=k(c,d)&&(b.addClass("select2-selected"),b.find(".select2-result-selectable").addClass("select2-selected"))});e.each2(function(a,b){!b.is(".select2-result-selectable")&&0===b.find(".select2-result-selectable:not(.select2-selected)").length&&b.addClass("select2-selected")});-1==this.highlight()&&!1!==c&&f.highlight(0);!this.opts.createSearchChoice&&0<!b.filter(".select2-result:not(.select2-selected)").length&&(!a||a&&!a.more&&0===this.results.find(".select2-no-results").length)&&
r(f.opts.formatNoMatches,"formatNoMatches")&&this.results.append("<li class='select2-no-results'>"+f.opts.formatNoMatches(f.search.val())+"</li>")},getMaxSearchWidth:function(){return this.selection.width()-(this.search.outerWidth(!1)-this.search.width())},resizeSearch:function(){var a,b,c,d,f=this.search.outerWidth(!1)-this.search.width();a=this.search;v||(c=a[0].currentStyle||window.getComputedStyle(a[0],null),v=e(document.createElement("div")).css({position:"absolute",left:"-10000px",top:"-10000px",
display:"none",fontSize:c.fontSize,fontFamily:c.fontFamily,fontStyle:c.fontStyle,fontWeight:c.fontWeight,letterSpacing:c.letterSpacing,textTransform:c.textTransform,whiteSpace:"nowrap"}),v.attr("class","select2-sizer"),e("body").append(v));v.text(a.val());a=v.width()+10;b=this.search.offset().left;c=this.selection.width();d=this.selection.offset().left;b=c-(b-d)-f;b<a&&(b=c-f);40>b&&(b=c-f);0>=b&&(b=a);this.search.width(Math.floor(b))},getVal:function(){var a;if(this.select)return a=this.select.val(),
null===a?[]:a;a=this.opts.element.val();return B(a,this.opts.separator)},setVal:function(a){var b;this.select?this.select.val(a):(b=[],e(a).each(function(){0>k(this,b)&&b.push(this)}),this.opts.element.val(0===b.length?"":b.join(this.opts.separator)))},buildChangeDetails:function(a,b){for(var b=b.slice(0),a=a.slice(0),c=0;c<b.length;c++)for(var d=0;d<a.length;d++)m(this.opts.id(b[c]),this.opts.id(a[d]))&&(b.splice(c,1),0<c&&c--,a.splice(d,1),d--);return{added:b,removed:a}},val:function(a,b){var c,
d=this;if(0===arguments.length)return this.getVal();c=this.data();c.length||(c=[]);if(!a&&0!==a)this.opts.element.val(""),this.updateSelection([]),this.clearSearch(),b&&this.triggerChange({added:this.data(),removed:c});else{this.setVal(a);if(this.select)this.opts.initSelection(this.select,this.bind(this.updateSelection)),b&&this.triggerChange(this.buildChangeDetails(c,this.data()));else{if(void 0===this.opts.initSelection)throw Error("val() cannot be called if initSelection() is not defined");this.opts.initSelection(this.opts.element,
function(a){var f=e.map(a,d.id);d.setVal(f);d.updateSelection(a);d.clearSearch();b&&d.triggerChange(d.buildChangeDetails(c,d.data()))})}this.clearSearch()}},onSortStart:function(){if(this.select)throw Error("Sorting of elements is not supported when attached to <select>. Attach to <input type='hidden'/> instead.");this.search.width(0);this.searchContainer.hide()},onSortEnd:function(){var a=[],b=this;this.searchContainer.show();this.searchContainer.appendTo(this.searchContainer.parent());this.resizeSearch();
this.selection.find(".select2-search-choice").each(function(){a.push(b.opts.id(e(this).data("select2-data")))});this.setVal(a);this.triggerChange()},data:function(a,b){var c=this,d,f;if(0===arguments.length)return this.selection.find(".select2-search-choice").map(function(){return e(this).data("select2-data")}).get();f=this.data();a||(a=[]);d=e.map(a,function(a){return c.opts.id(a)});this.setVal(d);this.updateSelection(a);this.clearSearch();b&&this.triggerChange(this.buildChangeDetails(f,this.data()))}});
e.fn.select2=function(){var a=Array.prototype.slice.call(arguments,0),b,c,d,f,h,j="val destroy opened open close focus isFocused container dropdown onSortStart onSortEnd enable disable readonly positionDropdown data search".split(" "),i=["opened","isFocused","container","dropdown"],m=["val","data"],o={search:"externalSearch"};this.each(function(){if(0===a.length||"object"===typeof a[0])b=0===a.length?{}:e.extend({},a[0]),b.element=e(this),"select"===b.element.get(0).tagName.toLowerCase()?h=b.element.prop("multiple"):
(h=b.multiple||!1,"tags"in b&&(b.multiple=h=!0)),c=h?new E:new D,c.init(b);else if("string"===typeof a[0]){if(0>k(a[0],j))throw"Unknown method: "+a[0];f=void 0;c=e(this).data("select2");if(void 0!==c&&(d=a[0],"container"===d?f=c.container:"dropdown"===d?f=c.dropdown:(o[d]&&(d=o[d]),f=c[d].apply(c,a.slice(1))),0<=k(a[0],i)||k(a[0],m)&&1==a.length))return!1}else throw"Invalid arguments to select2 plugin: "+a;});return void 0===f?this:f};e.fn.select2.defaults={width:"copy",loadMorePadding:0,closeOnSelect:!0,
openOnEnter:!0,containerCss:{},dropdownCss:{},containerCssClass:"",dropdownCssClass:"",formatResult:function(a,b,c,d){b=[];I(a.text,c.term,b,d);return b.join("")},formatSelection:function(a,b,c){return a?c(a.text):void 0},sortResults:function(a){return a},formatResultCssClass:function(){},formatSelectionCssClass:function(){},formatNoMatches:function(){return"No matches found"},formatInputTooShort:function(a,b){var c=b-a.length;return"Please enter "+c+" more character"+(1==c?"":"s")},formatInputTooLong:function(a,
b){var c=a.length-b;return"Please delete "+c+" character"+(1==c?"":"s")},formatSelectionTooBig:function(a){return"You can only select "+a+" item"+(1==a?"":"s")},formatLoadMore:function(){return"Loading more results..."},formatSearching:function(){return"Searching..."},minimumResultsForSearch:0,minimumInputLength:0,maximumInputLength:null,maximumSelectionSize:0,id:function(a){return a.id},matcher:function(a,b){return 0<=w(""+b).toUpperCase().indexOf(w(""+a).toUpperCase())},separator:",",tokenSeparators:[],
tokenizer:P,escapeMarkup:J,blurOnChange:!1,selectOnBlur:!1,adaptContainerCssClass:function(a){return a},adaptDropdownCssClass:function(){return null},nextSearchTerm:function(){}};e.fn.select2.ajaxDefaults={transport:e.ajax,params:{type:"GET",cache:!1,dataType:"json"}};window.Select2={query:{ajax:K,local:L,tags:M},util:{debounce:H,markMatch:I,escapeMarkup:J,stripDiacritics:w},"class":{"abstract":s,single:D,multi:E}}}return{}}.call(this);
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.auiplugin:internal-@atlassian-aui-src-js-aui-select2', location = 'node_modules/@atlassian/aui/src/js/aui/select2.js' */
("undefined"===typeof window?global:window).__bbb27ea36c055f1d1f9619a67388f866=function(){"use strict";var b=__2fd777cca7fe187ff4048afabed6a6b5,d=b&&b.__esModule?b:{"default":b};__1f8266a045326897dc01ded64d3814fa;var e=d.default.fn.select2;d.default.fn.auiSelect2=function(b){var c;if(d.default.isPlainObject(b)){var a=d.default.extend({},b);c=a.hasAvatar?" aui-has-avatar":"";a.containerCssClass="aui-select2-container"+c+(a.containerCssClass?" "+a.containerCssClass:"");a.dropdownCssClass="aui-select2-drop aui-dropdown2 aui-style-default"+
c+(a.dropdownCssClass?" "+a.dropdownCssClass:"");c=Array.prototype.slice.call(arguments,1);c.unshift(a)}else c=arguments.length?arguments:[{containerCssClass:"aui-select2-container",dropdownCssClass:"aui-select2-drop aui-dropdown2 aui-style-default"}];return e.apply(this,c)};return{}}.call(this);
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:space-page-picker', location = '/js/space-page-picker.js' */
define("confluence-ui-components/js/space-page-picker",["underscore","ajs","jquery"],function(J,s,y){var H={conf_all:"\u0412\u0441\u0435 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0430",conf_favorites:"\u0418\u0437\u0431\u0440\u0430\u043d\u043d\u044b\u0435 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0430",conf_global:"\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0430 \u0441\u0430\u0439\u0442\u0430",conf_personal:"\u041b\u0438\u0447\u043d\u044b\u0435 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0430",conf_current:"\u0422\u0435\u043a\u0443\u0449\u0435\u0435 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u043e"};var i={"currentContent()":"\u0422\u0435\u043a\u0443\u0449\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430"};var A={data:null,suggestCategories:null};var r="SPACE-PAGE-TRIGGER-VALUE";var m={placeholder:"\u0412\u044b\u0431\u043e\u0440 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0430 \u0438\u043b\u0438 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b",multiple:true,formatInputTooShort:function(){return "\u041d\u0430\u0447\u043d\u0438\u0442\u0435 \u043d\u0430\u0431\u0438\u0440\u0430\u0442\u044c \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430"},formatResult:function(M,O,R){if(M.children){O.addClass("space-page-picker-result-category");return y.fn.select2.defaults.formatResult.apply(this,arguments)}else{if(M.id){O.attr("title",M.text);O.addClass("space-page-picker-result-label-with-icon");var L=y("<span/>").addClass(M.className+" item-text").html(y.fn.select2.defaults.formatResult.apply(this,arguments));var Q=(M.subText)?y("<span/>").addClass("space-name").html(M.subText):y("");var N=y("<span/>").attr(e(M.id),M.id).append(L).append(Q);var P=y("<span/>").append(N);return P}else{O.addClass(M.className);return y.fn.select2.defaults.formatResult.apply(this,arguments)}}},formatSelection:function(M,N){N.addClass("space-page-picker-selected-item");N.attr("title",M.text);var L=y("<span/>").attr(e(M.id),M.id).addClass(M.className+" item-text").html(y.fn.select2.defaults.formatSelection.apply(this,arguments));N.append(L)},escapeMarkup:function(L){return L},formatResultCssClass:function(L){return(L.children||L.id)?"":"select2-result-space-page-separator"},containerCssClass:"space-page-picker-container",dropdownCssClass:"space-page-picker-drop"};var p=function(L,N){var M=L.data("select2").opts.manualInit;if(M===true){return}C(L.val(),L,N)};function K(N,M,L){var O=J.map(N,function(P){return M[P]});return(L)?O:((O.length>0)?O[0]:null)}var q=function(L){var N;if(L.suggestCategories){var O={text:"\u041f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0435 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438",children:J.map(L.suggestCategories,function(P){return g(P)})}}if(L.suggestedContentFunctions){var M=J.map(L.suggestedContentFunctions,function(P){return x(P)})}return function(Q){if(N){Q.callback(N);return}var P=[];N={results:[]};if(a(L)){var S=y.getJSON(s.contextPath()+"/rest/recentlyviewed/1.0/recent/spaces").done(function(T){var U=(O)?[O]:[];(T.length>0)&&U.push({text:"\u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0430",children:J.map(T,function(V){return z(V.key,J.escape(V.name),null,true)})});(U.length>0)&&(N.results=N.results.concat(U))}).fail(function(){s.debug("Couldn't fetch recent spaces");var T=(O)?[O]:[];(T.length>0)&&(N.results=N.results.concat(T))});P.push(S)}if(n(L)){var R=y.getJSON(s.contextPath()+"/rest/recentlyviewed/1.0/recent/pages",{noTrashedContent:true}).done(function(T){if(T.length>0||M){var U=[];if(M){U=U.concat(M)}if(T.length>0){U=U.concat(J.map(T,function(V){return t(V.id,J.escape(V.title),J.escape(V.space),"content-type-page",true)}))}N.results.push({text:"\u041f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b",children:U})}}).fail(function(){s.debug("Couldn't fetch recent pages")});P.push(R)}y.when.apply(y,J.map(P,function(U){var T=y.Deferred();U.always(function(){T.resolve()});return T})).done(function(){if(N.results.length===0){N.results=[{text:"",children:[]}]}Q.callback(N)})}};var u=function(L){var M="";if(!L||L.length===2&&L.indexOf("space")>=0&&L.indexOf("page")>=0){M="type=spacedesc&type=personalspacedesc&type=page"}else{if(L.length===1&&L[0]==="space"){M="type=spacedesc&type=personalspacedesc"}else{if(L.length===1&&L[0]==="page"){M="type=page"}else{return}}}return window.Select2.query.ajax({url:s.contextPath()+"/rest/quicknav/1/search?"+M,data:function(N,O){return{query:N,maxPerCategory:25}},quietMillis:250,results:function(Q,U){var T=Q.contentNameMatches;if(T.length<=1){return{results:[]}}else{var V=[];var O=function(W){return G(W.spaceKey,W.spaceName,W.id,W.name,W.className)};for(var R=0;R<T.length-1;R++){var S=[];for(var P=0;P<T[R].length;P++){var N=O(T[R][P]);if(N){S.push(N)}}if(S.length>0){V=V.concat(S);V.push({id:"",text:"",subText:"",className:"",disabled:true})}}return{results:[{text:"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u043f\u043e\u0438\u0441\u043a\u0430",children:V}]}}}})};var I=function(M){var L=u(M.contentType);var N=q(M);return function(O){if(O.term.length<2){N(O)}else{L(O)}}};function e(L){return(L.indexOf("page:")===0)?"data-item-id":"data-item-key"}function z(L,O,M,N){M=(M)?M:((L.indexOf("~")===0)?"content-type-personalspacedesc":"content-type-spacedesc");return h("space",L,O,"",M,N)}function g(L){var M=H[L];return h("space-cat",L,M,"","content-type-space-category",M)}function x(L){var M=i[L];return h("content-function",L,M,"","content-type-page",M)}function t(P,O,L,M,N){return h("page",P,O,L,M,N)}function h(R,O,Q,N,M,P){var L=f(R,O);Q=(!Q)?O:Q;M=(P)?M:(M+" content-not-found");return{id:L,text:Q,subText:N,className:M,disabled:(P?false:true)}}function k(L){return"space-cat:"+L}function j(L){return"content-function:"+L}function v(L){return"space:"+L}function w(L){return"page:"+L}function G(P,M,Q,N,O){var L;if(O==="content-type-spacedesc"||O==="content-type-personalspacedesc"){L=z(P,M,O,true)}else{if(O==="content-type-page"){L=t(Q,N,M,O,true)}}return L}function f(){var L=Array.prototype.slice.apply(arguments);return L.join(":")}function a(L){return((!L.contentType||L.contentType.length===0||L.contentType.indexOf("space")>=0)&&L.showRecentlyViewedSpaces!==false)}function n(L){return((!L.contentType||L.contentType.length===0||L.contentType.indexOf("page")>=0)&&L.showRecentlyViewedPages!==false)}function E(M,L){var N=c("SpaceCat",M,L.inputSpaceCatId,(L.inputSpaceCatName)?L.inputSpaceCatName:L.inputSpaceCatId);return B(M,N.id,N.name)}function F(M,L){var O=L.inputContentFunctionId||"legacy-macro-param-content-funcs";var N=c("ContentFunction",M,O,L.inputContentFunctionName||O);return B(M,N.id,N.name)}function l(M,L){var N=c("Space",M,L.inputSpaceId,(L.inputSpaceName)?L.inputSpaceName:L.inputSpaceId);return B(M,N.id,N.name)}function o(M,L){var N=c("Page",M,L.inputPageId,(L.inputPageName)?L.inputPageName:L.inputPageId);return B(M,N.id,N.name)}function c(P,N,Q,M){var L;if(!Q){L=N.attr("id");if(!L){return null}Q=L+P}if(!M){var O=N.attr("name")||L;M=O+P}return{id:Q,name:M}}function B(M,O,L){var N=y("#"+O);if(N.length===0){N=y(Confluence.UI.Components.templates.hiddenField({id:O,name:L}));M.after(N)}return N}function b(M,O,N){if(!M){return}var L=J.filter(O,function(P){return P.indexOf(N)===0});L=J.map(L,function(P){return P.substring(N.length,P.length)});M.val(L.join(","))}function d(S,N,O,L){O=(O)?(J.isArray(O)?O:O.split(",")):[];L=(L)?L.split(","):[];var R=J.union(O,L);var M=J.map(R,function(U){return N+U});var P=S.val();var T=P?P.split(","):[];var Q=J.union(T,M);if(Q.length>0){S.val(Q.join(","))}}function D(M){var L=J.extend({},A,m,M);if(!M.data){L=J.extend({},{initSelection:p,query:I(L)},L)}var N=y(L.orgElement);if(!N||N.length!==1){return L}if(!N.val()&&!L.manualInit){N.val(r)}N.addClass("select2-input");return L}function C(R,U,N){var M=U.data("select2").opts;var P=M.placeholder||U.data("placeholder");var T=E(U,M);var W=F(U,M);var L=l(U,M);var X=o(U,M);U.on("change",function(ad){b(T,ad.val,"space-cat:");b(W,ad.val,"content-function:");b(L,ad.val,"space:");b(X,ad.val,"page:")});U.val("");var ab=(U["0"].tagName==="SELECT")?(U.context.multiple):(M.multiple);var V=[];var Y=[];var ac=[];var O=[];var aa={};var Q=(R)?R.split(","):[];Q=J.filter(Q,function(ad){var ae=ad.split(":");if(ae.length===2){return true}else{if(ae.length<0||ae.length>=3||(ae.length===1&&(ae[0]!==r&&ae[0]!==P))){s.debug("Error value: "+ae)}}});R=Q.join(",");U.val(R);d(U,"space-cat:",M.spaceCatKeys,(T)?T.val():"");d(U,"content-function:",M.pageCatKeys,(W)?W.val():"");d(U,"space:",M.spaceKeys,(L)?L.val():"");d(U,"page:",M.pageIds,(X)?X.val():"");R=U.val();Q=(R)?R.split(","):[];b(T,Q,"space-cat:");b(W,Q,"content-function:");b(L,Q,"space:");b(X,Q,"page:");if(Q.length===0){return}J.each(Q,function(ad,ae){var ah=ad.split(":");if(ah.length===2){var ag=ah[0];var af=ah[1];if(ag==="space-cat"){V.push(af)}else{if(ag==="content-function"){ac.push(af)}else{if(ag==="space"){Y.push(af)}else{if(ag==="page"){O.push(af)}}}}}});J.each(V,function(ad){aa[k(ad)]=g(ad)});J.each(ac,function(ad){aa[j(ad)]=x(ad)});var Z=[];if(Y.length>0){var S=y.getJSON(s.contextPath()+"/rest/prototype/1/space",{spaceKey:Y}).done(function(af){var ad=[];J.each(af.space,function(ag){aa[v(ag.key)]=z(ag.key,J.escape(ag.name),null,true);ad.push(ag.key)});var ae=J.difference(Y,ad);J.each(ae,function(ag){aa[v(ag)]=z(ag,ag,null,false)})}).fail(function(){s.debug("Couldn't resolve spaceKeys:",Y);J.each(Y,function(ad){aa[v(ad)]=z(ad,ad,null,false)})});Z.push(S)}J.each(O,function(ad){var ae=y.getJSON(s.contextPath()+"/rest/api/content/"+ad,{expand:"space"}).done(function(af){aa[w(af.id)]=t(af.id,J.escape(af.title),J.escape(af.space.name),"content-type-page",true)}).fail(function(){s.debug("Couldn't resolve pageId:",ad);aa[w(ad)]=t(ad,ad,"","content-type-page",false)});Z.push(ae)});y.when.apply(y,J.map(Z,function(ae){var ad=new y.Deferred();ae.always(function(){ad.resolve()});return ad.promise()})).done(function(){N(K(Q,aa,ab))})}return{build:D,setValue:function(M,L){C(M,L,function(N){L.auiSelect2("data",N)})}}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:space-page-picker', location = '/js/internal/space-page-picker-legacy.js' */
window.Confluence.UI.Components.SpacePagePicker=require("confluence-ui-components/js/space-page-picker");AJS.deprecate.prop(window.Confluence.UI.Components.SpacePagePicker,"build",{sinceVersion:"1.4.34",extraInfo:"Use require('confluence-ui-components/js/space-page-picker')"});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:space-page-picker', location = '/soy/space-page-picker.soy' */
// This file was automatically generated from space-page-picker.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace Confluence.UI.Components.templates.
 */

if (typeof Confluence == 'undefined') { var Confluence = {}; }
if (typeof Confluence.UI == 'undefined') { Confluence.UI = {}; }
if (typeof Confluence.UI.Components == 'undefined') { Confluence.UI.Components = {}; }
if (typeof Confluence.UI.Components.templates == 'undefined') { Confluence.UI.Components.templates = {}; }


Confluence.UI.Components.templates.hiddenField = function(opt_data, opt_ignored) {
  return '<input type="hidden" id="' + soy.$$escapeHtml(opt_data.id) + '" name="' + soy.$$escapeHtml(opt_data.name) + '" />';
};
if (goog.DEBUG) {
  Confluence.UI.Components.templates.hiddenField.soyTemplateName = 'Confluence.UI.Components.templates.hiddenField';
}

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:page-picker', location = '/js/page-picker.js' */
define("confluence-ui-components/js/page-picker",["ajs","confluence-ui-components/js/space-page-picker"],function(a,b){return{build:function(c){c.placeholder="\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443";c.contentType=["page"];c.showRecentlyViewedSpaces=false;c.spaceCatKeys=[];c.spaceKeys=[];return b.build(c)}}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:page-picker', location = '/js/internal/page-picker-legacy.js' */
window.Confluence.UI.Components.PagePicker=require("confluence-ui-components/js/page-picker");AJS.deprecate.prop(window.Confluence.UI.Components.PagePicker,"build",{sinceVersion:"1.4.34",extraInfo:"Use require('confluence-ui-components/js/page-picker')"});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:label-picker', location = '/js/label-picker.js' */
define("confluence-ui-components/js/label-picker",["ajs","confluence/legacy","jquery","underscore"],function(g,i,e,j){var a=/[;,\.\?&\[\(\)#\^\*@!<>\]]/g;function l(m){var n=j.uniq(m.match(a));return n.join(" ")}function b(m){return{id:m.name,text:m.name}}function c(m){if(!m||!m.length){return null}var n=j.map(m,b);return j.sortBy(n,function(o){return o.text.toLowerCase()})}function k(o){var n=o.contentNameMatches;var p=c(n[0]);var m=c(n[1]);if(p&&m){return[{text:"\u041f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u043e",children:p},{text:"\u0414\u0440\u0443\u0433\u043e\u0435",children:m}]}return p||m||[]}function f(m){return function(n){return e.extend({query:n,ignoreRelated:true,maxResults:10},m)}}var d={placeholder:"\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043c\u0435\u0442\u043a\u0438",multiple:true,minimumInputLength:1,maximumSelectionSize:20,tokenSeparators:[" ",","],formatInputTooShort:function(n,m){return "\u0414\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u043c\u0435\u0442\u043e\u043a \u043d\u0430\u0447\u043d\u0438\u0442\u0435 \u043d\u0430\u0431\u0438\u0440\u0430\u0442\u044c \u0442\u0435\u043a\u0441\u0442"},formatSelectionTooBig:function(m){return g.format("\u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u0432\u043e\u0434\u0438\u043c\u044b\u0445 \u043c\u0435\u0442\u043e\u043a: {0} ",m)},formatResult:function(m){return i.UI.Components.LabelPicker.templates.labelResult({label:{labelName:m.text,isNew:m.isNew}})},formatNoMatches:function(n){var m=l(n);if(m){return i.UI.Components.LabelPicker.templates.labelInvalid({inputValue:n,invalidCharacters:m})}return this.noMatches},createSearchChoice:function(n){if(!n){return null}var m=l(n);if(m){return null}return{id:n,text:n,isNew:true}},ajax:{data:f(),dataType:"json",url:i.getContextPath()+"/labels/autocompletelabel.action",results:function(m){return{results:k(m)}},quietMillis:300},dropdownCssClass:"labels-dropdown",containerCssClass:"labels-autocomplete",initSelection:function(m,p){var o=m.val().split(",");var n=j.map(o,function(q){return{id:q,text:q}});p(n)}};function h(n){var m=e.extend({},d,n);if(n&&n.queryOpts){m.ajax.data=f(n.queryOpts);delete m.queryOpts}if(!n||!n.noMatches){m.noMatches=m.placeholder}return m}return{build:h}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:label-picker', location = '/js/label-picker-legacy.js' */
window.Confluence.UI.Components.LabelPicker=require("confluence-ui-components/js/label-picker");AJS.deprecate.prop(window.Confluence.UI.Components.LabelPicker,"build",{sinceVersion:"1.4.18",extraInfo:"Use require('confluence-ui-components/js/label-picker')"});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:label-picker', location = '/soy/label-picker.soy' */
// This file was automatically generated from label-picker.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace Confluence.UI.Components.LabelPicker.templates.
 */

if (typeof Confluence == 'undefined') { var Confluence = {}; }
if (typeof Confluence.UI == 'undefined') { Confluence.UI = {}; }
if (typeof Confluence.UI.Components == 'undefined') { Confluence.UI.Components = {}; }
if (typeof Confluence.UI.Components.LabelPicker == 'undefined') { Confluence.UI.Components.LabelPicker = {}; }
if (typeof Confluence.UI.Components.LabelPicker.templates == 'undefined') { Confluence.UI.Components.LabelPicker.templates = {}; }


Confluence.UI.Components.LabelPicker.templates.labelResult = function(opt_data, opt_ignored) {
  return '' + ((opt_data.label.isNew) ? soy.$$escapeHtml(AJS.format("\x22{0}\x22 - \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043d\u043e\u0432\u0443\u044e \u043c\u0435\u0442\u043a\u0443",opt_data.label.labelName)) : soy.$$escapeHtml(opt_data.label.labelName));
};
if (goog.DEBUG) {
  Confluence.UI.Components.LabelPicker.templates.labelResult.soyTemplateName = 'Confluence.UI.Components.LabelPicker.templates.labelResult';
}


Confluence.UI.Components.LabelPicker.templates.labelInvalid = function(opt_data, opt_ignored) {
  var output = '';
  var inputValueHtml__soy9 = '<b>' + soy.$$escapeHtml(opt_data.inputValue) + '</b>';
  var invalidCharactersHtml__soy13 = '<b>' + soy.$$escapeHtml(opt_data.invalidCharacters) + '</b>';
  output += soy.$$filterNoAutoescape(AJS.format("{0} \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b {1}",inputValueHtml__soy9,invalidCharactersHtml__soy13));
  return output;
};
if (goog.DEBUG) {
  Confluence.UI.Components.LabelPicker.templates.labelInvalid.soyTemplateName = 'Confluence.UI.Components.LabelPicker.templates.labelInvalid';
}

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:include-exclude-picker', location = '/js/include-exclude-picker.js' */
define("confluence-ui-components/js/include-exclude-picker",["jquery","underscore"],function(d,j){var e="";function c(k){var l=k.charAt(0);if(j.contains(["-"],l)){e=l;k=k.substring(1)}else{e=""}return k}function h(k){var l=d.extend({},k);if(l.children){l.children=j.map(l.children,h)}else{l.id=e+l.id;l.text=e+l.text}return l}function b(k){return function(l){l=c(l);return k(l)}}function f(k){return function(m){var l=k?k(m):m;if(e){l.results=j.map(l.results,h)}return l}}function a(k){return function(l){return k(l,c,h)}}function g(k){var l=k.text.charAt(0);if(l==="-"){return"select2-search-choice-subtle"}return}function i(l){var k=d.extend({formatSelectionCssClass:g},l);if(k.query){k.query=a(k.query);return k}else{k.ajax=d.extend({},k.ajax);k.ajax.data=b(k.ajax.data);k.ajax.results=f(k.ajax.results);return k}}return{build:i}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:user-group-select2', location = '/js/user-group-select2.js' */
define("confluence-ui-components/js/user-group-select2",["ajs","confluence/legacy","jquery"],function(a,d,b){function c(f){f=f||document.body;var e=function(){var g=b(".select2-drop-active > .select2-results");if(g.children(".select2-result-selectable").length===0&&g.children(".select2-disabled").length){g.append('<li class="select2-no-results">'+a.escapeHtml("\u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0439 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e")+"</li>")}};b("input.autocomplete-multiusergroup[data-autocomplete-bound != 'true']",f).each(function(){var g=b(this);g.attr("data-autocomplete-bound","true");var h=g.attr("data-include-groups");g.auiSelect2({multiple:true,minimumInputLength:2,formatInputTooShort:function(){return h?"\u041d\u0430\u0447\u043d\u0438\u0442\u0435 \u0432\u0432\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438\u043b\u0438 \u0433\u0440\u0443\u043f\u043f\u044b":"\u041d\u0430\u0447\u0438\u043d\u0430\u0439\u0442\u0435 \u0432\u0432\u043e\u0434\u0438\u0442\u044c \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f"},ajax:{transport:function(l){var m=l.success;delete l.success;return b.ajax.apply(b.ajax,arguments).done(m).done(e)},data:function(l){return{"max-results":6,query:l}},dataType:"json",url:d.getContextPath()+"/rest/prototype/1/search/user"+(h?"-or-group":"")+".json",results:function(m){var l=[];b.each(m.result,function(){if(this.type=="user"){l.push({id:this.username,text:this.title,imgSrc:this.thumbnailLink.href,entity:this})}else{l.push({id:this.name,text:this.name,imgSrc:a.contextPath()+"/images/icons/avatar_group_48.png",entity:this})}});return{results:l}},quietMillis:300},formatResult:function(l){return d.UI.Components.UserGroupSelect2.avatarWithName({size:"small",displayName:l.text,userId:l.id,avatarImageUrl:l.imgSrc})},escapeMarkup:function(l){return l},formatSelection:function(l){return d.UI.Components.UserGroupSelect2.avatarWithName({size:"xsmall",displayName:l.text,userId:l.id,avatarImageUrl:l.imgSrc})},dropdownCssClass:"users-dropdown",containerCssClass:"users-autocomplete",hasAvatar:true});if(!g.data("autofill-user")){return}var k=a.Meta.get("remote-user"),j=a.Meta.get("current-user-fullname"),i=a.Meta.get("current-user-avatar-uri-reference");if(k&&j&&i){g.auiSelect2("data",[{id:k,text:j,imgSrc:i}])}})}return{bind:c}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:user-group-select2', location = '/soy/user-group-select2.soy' */
// This file was automatically generated from user-group-select2.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace Confluence.UI.Components.UserGroupSelect2.
 */

if (typeof Confluence == 'undefined') { var Confluence = {}; }
if (typeof Confluence.UI == 'undefined') { Confluence.UI = {}; }
if (typeof Confluence.UI.Components == 'undefined') { Confluence.UI.Components = {}; }
if (typeof Confluence.UI.Components.UserGroupSelect2 == 'undefined') { Confluence.UI.Components.UserGroupSelect2 = {}; }


Confluence.UI.Components.UserGroupSelect2.avatarWithName = function(opt_data, opt_ignored) {
  return '' + aui.avatar.avatar({size: opt_data.size, avatarImageUrl: opt_data.avatarImageUrl, accessibilityText: opt_data.displayName, title: opt_data.displayName, extraAttributes: {'data-username': opt_data.userId}}) + soy.$$escapeHtml(opt_data.displayName);
};
if (goog.DEBUG) {
  Confluence.UI.Components.UserGroupSelect2.avatarWithName.soyTemplateName = 'Confluence.UI.Components.UserGroupSelect2.avatarWithName';
}

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:cql', location = 'soy/cql/cql-component.soy' */
// This file was automatically generated from cql-component.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace Confluence.UI.Components.CQL.Templates.
 */

if (typeof Confluence == 'undefined') { var Confluence = {}; }
if (typeof Confluence.UI == 'undefined') { Confluence.UI = {}; }
if (typeof Confluence.UI.Components == 'undefined') { Confluence.UI.Components = {}; }
if (typeof Confluence.UI.Components.CQL == 'undefined') { Confluence.UI.Components.CQL = {}; }
if (typeof Confluence.UI.Components.CQL.Templates == 'undefined') { Confluence.UI.Components.CQL.Templates = {}; }


Confluence.UI.Components.CQL.Templates.container = function(opt_data, opt_ignored) {
  return '<div class="cql-container"><div class="cql-error-container"></div><div class="cql-fields"></div></div>';
};
if (goog.DEBUG) {
  Confluence.UI.Components.CQL.Templates.container.soyTemplateName = 'Confluence.UI.Components.CQL.Templates.container';
}

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:cql', location = 'soy/cql/cql-filter-field.soy' */
// This file was automatically generated from cql-filter-field.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace Confluence.UI.Components.CQLFilters.Templates.
 */

if (typeof Confluence == 'undefined') { var Confluence = {}; }
if (typeof Confluence.UI == 'undefined') { Confluence.UI = {}; }
if (typeof Confluence.UI.Components == 'undefined') { Confluence.UI.Components = {}; }
if (typeof Confluence.UI.Components.CQLFilters == 'undefined') { Confluence.UI.Components.CQLFilters = {}; }
if (typeof Confluence.UI.Components.CQLFilters.Templates == 'undefined') { Confluence.UI.Components.CQLFilters.Templates = {}; }


Confluence.UI.Components.CQLFilters.Templates.baseFilterField = function(opt_data, opt_ignored) {
  var output = '<div class="cql-filter cql-field-' + soy.$$escapeHtml(opt_data.field.fieldName) + ' cql-type-' + soy.$$escapeHtml(opt_data.field.uiSupport.valueType) + '">';
  var id__soy8 = 'cql-field-' + soy.$$escapeHtml(opt_data.field.fieldName) + '-' + soy.$$escapeHtml(opt_data.counter);
  output += '<div class=\'cql-field-heading\'><label for="' + soy.$$escapeHtml(id__soy8) + '">' + soy.$$escapeHtml(opt_data.label) + ((! opt_data.field.fixed) ? '<span class="aui-icon aui-icon-small aui-iconfont-remove" title="' + soy.$$escapeHtml("\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0444\u0438\u043b\u044c\u0442\u0440") + '"></span>' : '') + '</label></div><div class=\'cql-filter-field-input-container\'><input type="text" class="cql-field-input text" id="' + soy.$$escapeHtml(id__soy8) + '"></div></div>';
  return output;
};
if (goog.DEBUG) {
  Confluence.UI.Components.CQLFilters.Templates.baseFilterField.soyTemplateName = 'Confluence.UI.Components.CQLFilters.Templates.baseFilterField';
}

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:cql', location = 'soy/cql/cql-filter-select.soy' */
// This file was automatically generated from cql-filter-select.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace Confluence.UI.Components.CQL.FilterSelect.Templates.
 */

if (typeof Confluence == 'undefined') { var Confluence = {}; }
if (typeof Confluence.UI == 'undefined') { Confluence.UI = {}; }
if (typeof Confluence.UI.Components == 'undefined') { Confluence.UI.Components = {}; }
if (typeof Confluence.UI.Components.CQL == 'undefined') { Confluence.UI.Components.CQL = {}; }
if (typeof Confluence.UI.Components.CQL.FilterSelect == 'undefined') { Confluence.UI.Components.CQL.FilterSelect = {}; }
if (typeof Confluence.UI.Components.CQL.FilterSelect.Templates == 'undefined') { Confluence.UI.Components.CQL.FilterSelect.Templates = {}; }


Confluence.UI.Components.CQL.FilterSelect.Templates.container = function(opt_data, opt_ignored) {
  return '<div class="cql-add-filter-container"><button type="button" class="aui-button aui-button-link">' + soy.$$escapeHtml("\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0444\u0438\u043b\u044c\u0442\u0440") + '</button><div class="input-wrapper hidden"><input class="select2-input" type="text" /></div></div>';
};
if (goog.DEBUG) {
  Confluence.UI.Components.CQL.FilterSelect.Templates.container.soyTemplateName = 'Confluence.UI.Components.CQL.FilterSelect.Templates.container';
}

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:cql', location = 'soy/date-picker.soy' */
// This file was automatically generated from date-picker.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace Confluence.UI.Components.DatePicker.templates.
 */

if (typeof Confluence == 'undefined') { var Confluence = {}; }
if (typeof Confluence.UI == 'undefined') { Confluence.UI = {}; }
if (typeof Confluence.UI.Components == 'undefined') { Confluence.UI.Components = {}; }
if (typeof Confluence.UI.Components.DatePicker == 'undefined') { Confluence.UI.Components.DatePicker = {}; }
if (typeof Confluence.UI.Components.DatePicker.templates == 'undefined') { Confluence.UI.Components.DatePicker.templates = {}; }


Confluence.UI.Components.DatePicker.templates.input = function(opt_data, opt_ignored) {
  return '<div class="aui-navgroup-vertical"><ul class="aui-nav"><li class="aui-nav-selected"><a data-value="">' + soy.$$escapeHtml("\u041b\u044e\u0431\u0430\u044f \u0434\u0430\u0442\u0430") + '</a></li><li><a data-value="now(\'-1d\')">' + soy.$$escapeHtml("\u041f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0435  24 \u0447\u0430\u0441\u0430") + '</a></li><li><a data-value="now(\'-1w\')">' + soy.$$escapeHtml("\u041f\u043e\u0441\u043b\u0435\u0434\u043d\u044e\u044e \u043d\u0435\u0434\u0435\u043b\u044e") + '</a></li><li><a data-value="now(\'-1M\')">' + soy.$$escapeHtml("\u041f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u043c\u0435\u0441\u044f\u0446") + '</a></li><li><a data-value="now(\'-1y\')">' + soy.$$escapeHtml("\u041f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u0433\u043e\u0434") + '</a></li><li><a data-value="custom">' + soy.$$escapeHtml("\u041e\u0431\u044b\u0447\u043d\u044b\u0439") + '</a><span class="absolute-date-pickers"><input class="from-date-picker text" type="date" /><span>&ndash;</span><input class="to-date-picker text" type="date" /></span></li></ul></div>';
};
if (goog.DEBUG) {
  Confluence.UI.Components.DatePicker.templates.input.soyTemplateName = 'Confluence.UI.Components.DatePicker.templates.input';
}

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:cql', location = 'soy/cql/cql-type-picker.soy' */
// This file was automatically generated from cql-type-picker.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace Confluence.UI.Components.CQL.TypePicker.templates.
 */

if (typeof Confluence == 'undefined') { var Confluence = {}; }
if (typeof Confluence.UI == 'undefined') { Confluence.UI = {}; }
if (typeof Confluence.UI.Components == 'undefined') { Confluence.UI.Components = {}; }
if (typeof Confluence.UI.Components.CQL == 'undefined') { Confluence.UI.Components.CQL = {}; }
if (typeof Confluence.UI.Components.CQL.TypePicker == 'undefined') { Confluence.UI.Components.CQL.TypePicker = {}; }
if (typeof Confluence.UI.Components.CQL.TypePicker.templates == 'undefined') { Confluence.UI.Components.CQL.TypePicker.templates = {}; }


Confluence.UI.Components.CQL.TypePicker.templates.suggestions = function(opt_data, opt_ignored) {
  var output = '<div class="aui-navgroup-vertical"><ul class="aui-nav">';
  var typeList4 = opt_data.types;
  var typeListLen4 = typeList4.length;
  for (var typeIndex4 = 0; typeIndex4 < typeListLen4; typeIndex4++) {
    var typeData4 = typeList4[typeIndex4];
    output += '<li ' + ((typeIndex4 == 0) ? ' class="aui-nav-selected"' : '') + '><a data-value="' + soy.$$escapeHtml(typeData4.type) + '">' + soy.$$escapeHtml(typeData4.label) + '</a></li>';
  }
  output += '<li><a data-value="custom">' + soy.$$escapeHtml("\u041e\u0431\u044b\u0447\u043d\u044b\u0439") + '</a></li></ul></div>';
  return output;
};
if (goog.DEBUG) {
  Confluence.UI.Components.CQL.TypePicker.templates.suggestions.soyTemplateName = 'Confluence.UI.Components.CQL.TypePicker.templates.suggestions';
}

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:cql', location = 'soy/cql/cql-space-field.soy' */
// This file was automatically generated from cql-space-field.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace Confluence.UI.Components.CQL.SpaceField.templates.
 */

if (typeof Confluence == 'undefined') { var Confluence = {}; }
if (typeof Confluence.UI == 'undefined') { Confluence.UI = {}; }
if (typeof Confluence.UI.Components == 'undefined') { Confluence.UI.Components = {}; }
if (typeof Confluence.UI.Components.CQL == 'undefined') { Confluence.UI.Components.CQL = {}; }
if (typeof Confluence.UI.Components.CQL.SpaceField == 'undefined') { Confluence.UI.Components.CQL.SpaceField = {}; }
if (typeof Confluence.UI.Components.CQL.SpaceField.templates == 'undefined') { Confluence.UI.Components.CQL.SpaceField.templates = {}; }


Confluence.UI.Components.CQL.SpaceField.templates.archivedSpacesOption = function(opt_data, opt_ignored) {
  return '<span><input type="checkbox" value="true" id="search-filter-include-archived" name="includeArchivedSpaces"><label for="search-filter-include-archived">Search archived spaces</label></span>';
};
if (goog.DEBUG) {
  Confluence.UI.Components.CQL.SpaceField.templates.archivedSpacesOption.soyTemplateName = 'Confluence.UI.Components.CQL.SpaceField.templates.archivedSpacesOption';
}

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:cql', location = 'js/cql/internal/cql-special-spaces.js' */
define("confluence-ui-components/js/cql/internal/cql-special-spaces",["underscore"],function(c){var b={conf_current:"currentSpace()",conf_favorites:"favourite",conf_global:"global",conf_personal:"personal"};var f=c.invert(b);function d(g){if(g==="search-screen"){return c.omit(b,"conf_current")}return b}function a(g){return c.keys(d(g))}function e(g){return f[g]}return{getMap:d,getKeys:a,getUIValue:e}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:cql', location = 'js/cql/internal/cql-ajax.js' */
define("confluence-ui-components/js/cql/internal/cql-ajax",["jquery","underscore","ajs"],function(d,c,b){var g;function f(){if(!g){g=d.Deferred();var j=function(l){var m=c.values(l);if(!m.length){throw Error("Unknown CQL field data returned from server - cannot initialise CQL fields.")}var k=c.union.apply(c,m);k=c.sortBy(k,"fieldName");g.resolve(k)};var i=function(){g.reject()};d.getJSON(b.contextPath()+"/rest/cql/fields?filter=withUiSupport").done(j).fail(i)}return g.promise()}function e(i){return d.getJSON(b.contextPath()+"/rest/cql/expressions?cql="+encodeURIComponent(i))}function a(){return d.getJSON(b.contextPath()+"/rest/cql/contenttypes?category=content")}function h(){return d.getJSON(b.contextPath()+"/rest/cql/contenttypes?category=all")}return{getFields:f,parseClauses:e,getTypes:h,getContentTypes:a}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:cql', location = 'js/cql/internal/cql-date-picker.js' */
define("confluence-ui-components/js/cql/internal/cql-date-picker",["ajs","jquery"],function(a,b){function c(k){var h=b(Confluence.UI.Components.DatePicker.templates.input());var d=h.find(".aui-nav li");var g=h.find(".absolute-date-pickers").hide();var f=h.find(".from-date-picker");var i=h.find(".to-date-picker");var e=function(){};this.onChange=function(l){e=l;f.change(l);i.change(l)};h.on("click",".aui-nav a",function(){var l=d.filter("li.aui-nav-selected");var m=b(this).closest("li");if(l[0]!=m[0]){d.not(m).removeClass("aui-nav-selected");m.addClass("aui-nav-selected");e()}if(b(this).data("value")==="custom"){g.slideDown("fast")}else{g.slideUp("fast")}});var j={overrideBrowserDefault:true};a.DatePicker(f,j);a.DatePicker(i,j);f.attr("placeholder","\u041e\u0442");i.attr("placeholder","\u041f\u043e");k.replaceWith(h);return{getSelectedOption:function(){var l=d.filter(".aui-nav-selected").find("a");return l.data("value")},selectOption:function(m){var l=d.find('a[data-value="'+m+'"]');l.click()},getFromDate:function(){return f.val()},getToDate:function(){return i.val()},setFromDate:function(l){f.val(l);d.find("a[data-value='custom']").click()},setToDate:function(l){i.val(l);d.find("a[data-value='custom']").click()}}}return{build:c}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:cql', location = 'js/cql/internal/cql-type-picker.js' */
define("confluence-ui-components/js/cql/internal/cql-type-picker",["jquery","underscore","ajs","confluence-ui-components/js/cql/internal/cql-ajax","confluence-ui-components/js/include-exclude-picker","confluence/legacy","confluence-ui-components/js/cql/internal/cql-set-value-helper"],function(e,k,g,a,c,j,f){var b;var d=[];function m(n){d=k.map(n,function(o){return{id:o.type,text:o.label}})}function l(){b=null;d=[]}function h(o,n){if(o.length===0){return""}if(o.length==1&&k.contains(k.pluck(n,"type"),o[0])){return o[0]}return"custom"}function i(o,s){var u,n,q,t=[];if(!b){b=s?a.getContentTypes():a.getTypes();b.done(m)}b.done(function(){if(o.length){var v=k.pluck(d,"id");t=[].concat(d);o.forEach(function(w){if(w.type!==""&&!k.contains(v,w.type)){t.push({id:w.type,text:w.label})}})}else{t=d}});var r={query:function(v,x,w){b.done(function(){x(v.term);var y=window.Select2.query.local({results:k.map(t,w)});y(v)})},initSelection:function(w,z){var v=w.val().split(",");var y="";var x=k.map(v,function(A){var B=A.charAt(0);if(B==="-"){y="-";return A.substring(1)}return A});b.done(function(){var A=k.filter(t,function(B){return k.contains(x,B.id)});z(k.map(A,function(B){return{id:y+B.id,text:y+B.text}}))})},multiple:true,placeholder:"\u0412\u0441\u0435 \u0442\u0438\u043f\u044b \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0433\u043e"};function p(v){u=v;if(g.trace){u.on("change",function(){g.trace("type.field.changed")})}if(o.length){var w=e(j.UI.Components.CQL.TypePicker.templates.suggestions({types:o}));n=w.find(".aui-nav li");u.before(w);w.on("click",".aui-nav a",function(){var A=e(this).closest("li");var z=n.filter(".aui-nav-selected");if(A[0]===z[0]){return}z.removeClass("aui-nav-selected");A.addClass("aui-nav-selected");var y=e(this).attr("data-value");if(y=="custom"){q.slideDown("fast")}else{q.hide()}var x=true;u.select2("val",[y],x)})}u.auiSelect2(c.build(r));if(o.length){q=u.closest(".cql-filter").find(".select2-container");q.hide()}}return{setupInput:p,setValues:function(v){if(n){var w=h(v,o);var y=n.find('[data-value="'+w+'"]').parent();n.not(y).removeClass("aui-nav-selected");y.addClass("aui-nav-selected");if(w==="custom"){q.show()}}var x=e.Deferred();b.done(function(){f.setValues(u,v).done(function(){x.resolve()})});return x}}}return{build:i,_clearCache:l,_getPicklistKey:h}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:cql', location = 'js/cql/internal/cql-field-model.js' */
define("confluence-ui-components/js/cql/internal/cql-field-model",[],function(){function a(b){return b.uiSupport.label.translation}return{getLabel:a}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:cql', location = 'js/cql/internal/cql-space-expression-adjuster.js' */
define("confluence-ui-components/js/cql/internal/cql-space-expression-adjuster",["underscore","confluence-ui-components/js/cql/internal/cql-special-spaces"],function(c,a){function b(f){var e=f.functionValues;if(!e||!e.length){return f}var d=[];c.each(e,function(g){if(g.functionName==="currentSpace"){d.push(a.getUIValue("currentSpace()"))}else{throw new Error(g.functionName+" is not a known function")}});f.values=d.concat(f.values);return f}return{convertFunctionValues:b}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:cql', location = 'js/cql/internal/filterfields/cql-autocomplete-filter-field.js' */
define("confluence-ui-components/js/cql/internal/filterfields/cql-autocomplete-filter-field",["jquery","ajs","confluence/legacy","confluence-ui-components/js/cql/internal/cql-expression-builder","confluence-ui-components/js/cql/internal/cql-set-value-helper"],function(d,h,j,b,f){function k(m){var n=m.suggestedResults;var l=m.searchResults;if(!n.length){return l}if(!l.length){return n}return[{text:"\u041f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u044f",children:n},{text:"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u043f\u043e\u0438\u0441\u043a\u0430",children:l}]}function a(l){return{query:l,searchContext:JSON.stringify({spaceKey:h.Meta.get("space-key"),contentId:h.Meta.get("content-id")})}}var c={placeholder:"\u041d\u0430\u0447\u043d\u0438\u0442\u0435 \u043d\u0430\u0431\u0438\u0440\u0430\u0442\u044c \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430",multiple:true,tokenSeparators:[" ",","],createSearchChoice:function(l){if(!l){return null}return{id:l,text:"New result: "+l,isNew:true}},createSearchChoicePosition:"bottom",ajax:{data:a,results:function(l){return{results:k(l)}},quietMillis:300},initSelection:function(l,o){var n=l.val().split(",");var m=n.map(function(p){return{id:p,text:p}});o(m)}};function e(l){return l.indexOf("http://")===0||l.indexOf("https://")===0}function g(l){if(e(l)){return l}else{return j.getContextPath()+l}}function i(l){var m;return{setupInput:function(n){m=n;var p=d.extend({},c.ajax,{url:g(l.uiSupport.dataUri)});var o=d.extend({},c,{ajax:p});n.auiSelect2(o)},asCqlFunc:function(){var n=this.input.val().trim();if(!n){return undefined}return b.buildEqualityExpressionFromValuesString(this.fieldName,n)},setValues:function(n){return f.setValues(m,n.values)}}}return{build:i,_getUrl:g,_ajaxData:a}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:cql', location = 'js/cql/internal/filterfields/cql-content-filter-field.js' */
define("confluence-ui-components/js/cql/internal/filterfields/cql-content-filter-field",["jquery","confluence-ui-components/js/page-picker","confluence-ui-components/js/cql/internal/cql-expression-builder","confluence-ui-components/js/cql/internal/cql-set-value-helper"],function(d,h,a,b){function e(i){return"page:"+i}function c(i){return"content-function:"+i.functionName+"()"}function g(i){return i.values.map(e).concat(i.functionValues.map(c))}function f(){var i;return{setupInput:function(j){i=j;var k={multiple:this.fieldName!=="parent",suggestedContentFunctions:["currentContent()"]};j.auiSelect2(h.build(k))},asCqlFunc:function(){var k=this.input.val().trim();if(!k){return undefined}var j=k.replace(/[a-z\-]+:/g,"");return a.buildEqualityExpressionFromValuesString(this.fieldName,j)},_addValuePrefixes:g,setValues:function(k){var j=g(k);return b.setValues(i,j)}}}return{build:f}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:cql', location = 'js/cql/internal/filterfields/cql-type-suggestions.js' */
define("confluence-ui-components/js/cql/internal/filterfields/cql-type-suggestions",["ajs"],function(b){var c=[{type:"",label:"\u0412\u0441\u0451 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435"},{type:"page",label:"\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b"},{type:"blogpost",label:"\u041d\u043e\u0432\u043e\u0441\u0442\u0438"},{type:"attachment",label:"\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f"},{type:"space",label:"\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0430"}];function a(){return c}return{getList:a}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:cql', location = 'js/cql/internal/filterfields/cql-type-filter-field.js' */
define("confluence-ui-components/js/cql/internal/filterfields/cql-type-filter-field",["confluence-ui-components/js/cql/internal/cql-type-picker","confluence-ui-components/dark-features","confluence-ui-components/js/cql/internal/filterfields/cql-type-suggestions"],function(a,b,c){function d(f){var e;return{setupInput:function(g,h){var j=[];var i=true;if((h.environment==="search-screen"&&h.searchType=="all")||b.isEnabled("cql.force.full.search.mode")){j=c.getList();i=false}e=a.build(j,i);e.setupInput(g)},setValues:function(g){return e.setValues(g.values)}}}return{build:d}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:cql', location = 'js/cql/internal/filterfields/cql-date-filter-field.js' */
define("confluence-ui-components/js/cql/internal/filterfields/cql-date-filter-field",["ajs","underscore","confluence-ui-components/js/cql/internal/cql-date-picker"],function(b,c,a){function d(g){var h=g.fieldName;var f;function e(){var j=f.getFromDate();var i=f.getToDate();var l,k;if(j){l=h+' >= "'+j+'"'}if(i){k=h+' <= "'+i+'"'}if(l&&k){return l+" and "+k}return l||k||""}return{setupInput:function(i){f=a.build.call(this,i)},setValues:function(k){if(!f){b.warn("DatePicker not set yet, can't set values");return}var j=k.expressions;if(j.length<1||j.length>2){b.warn("Can't set date value with expressions.length: "+j.length);return}if(j.length===1&&j[0].functionValues.length===1&&j[0].functionValues[0].functionName==="now"){if(j[0].operator!==">="){b.warn("Unsupported date picker relative date operator: "+j[0].operator);return}var i=j[0].functionValues[0].parameters[0];f.selectOption("now('"+i+"')")}else{c.each(j,function(m){if(m.values.length===1){var l=m.values[0];if(m.operator===">="){f.setFromDate(l)}else{if(m.operator==="<="){f.setToDate(l)}}}})}},asCqlFunc:function(){if(!f){b.warn("DatePicker not set yet, can't get CQL");return}var i=f.getSelectedOption();if(!i){return""}if(i==="custom"){return e()}return h+" >= "+i}}}return{build:d}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:cql', location = 'js/cql/internal/filterfields/cql-label-filter-field.js' */
define("confluence-ui-components/js/cql/internal/filterfields/cql-label-filter-field",["jquery","ajs","confluence-ui-components/js/label-picker","confluence-ui-components/js/include-exclude-picker","confluence-ui-components/js/cql/internal/cql-set-value-helper"],function(d,c,a,e,b){function f(){var g;return{setupInput:function(h){g=h;h.auiSelect2(e.build(a.build({noMatches:"\u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043c\u0435\u0442\u043e\u043a \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e"})))},setValues:function(h){return b.setValues(g,h.values)}}}return{build:f}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:cql', location = 'js/cql/internal/filterfields/cql-space-filter-field.js' */
define("confluence-ui-components/js/cql/internal/filterfields/cql-space-filter-field",["jquery","confluence-ui-components/js/space-picker","confluence-ui-components/js/include-exclude-picker","confluence-ui-components/js/cql/internal/cql-special-spaces","confluence-ui-components/js/cql/internal/cql-space-expression-adjuster","confluence-ui-components/js/cql/internal/cql-space-expression-builder","confluence-ui-components/js/cql/internal/cql-set-value-helper","confluence/legacy"],function(b,e,a,d,i,f,c,h){function g(){var j;return{setupInput:function(k,l){j=k;k.auiSelect2(a.build(e.build({multiple:true,suggestCategories:d.getKeys(l.environment),disableMixedSpaceTypes:true})));if(l.environment==="search-screen"){var m=b(h.UI.Components.CQL.SpaceField.templates.archivedSpacesOption());j.after(m);this.onChange=function(o){var n=m.find("#search-filter-include-archived");n.change(o);j.change(o)}}},asCqlFunc:function(){return f.buildExpressionFromValuesString(this.input.val())},setValues:function(k){i.convertFunctionValues(k);return c.setValues(j,k.values)}}}return{build:g}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:cql', location = 'js/cql/internal/filterfields/cql-user-filter-field.js' */
define("confluence-ui-components/js/cql/internal/filterfields/cql-user-filter-field",["jquery","ajs","confluence-ui-components/js/user-group-select2"],function(c,b,a){function d(){var f;function e(h){var g=h[0].result[0];return{id:g.username,text:g.title,imgSrc:g.thumbnailLink.href}}return{setupInput:function(g){f=g;g.addClass("select2-input autocomplete-multiusergroup");a.bind(g.parent())},setValues:function(j){var h=j.values;if(!h||!h[0]){return}var i=h.map(function(k){return c.getJSON(b.contextPath()+"/rest/prototype/1/search/user.json?query="+encodeURI(k))});function g(){var l=i.length>1?arguments:[arguments];var k=l.map(e);f.auiSelect2("data",k)}return c.when.apply(c,i).done(g)}}}return{build:d}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:cql', location = 'js/cql/internal/filterfields/cql-filter-field-configs.js' */
define("confluence-ui-components/js/cql/internal/filterfields/cql-filter-field-configs",["confluence-ui-components/js/cql/internal/filterfields/cql-autocomplete-filter-field","confluence-ui-components/js/cql/internal/filterfields/cql-content-filter-field","confluence-ui-components/js/cql/internal/filterfields/cql-type-filter-field","confluence-ui-components/js/cql/internal/filterfields/cql-date-filter-field","confluence-ui-components/js/cql/internal/filterfields/cql-label-filter-field","confluence-ui-components/js/cql/internal/filterfields/cql-space-filter-field","confluence-ui-components/js/cql/internal/filterfields/cql-user-filter-field"],function(b,h,a,g,c,f,e){var d={contentId:h,contentType:a,date:g,label:c,space:f,user:e};return{getConfig:function(j){var i=j.uiSupport;if(i.dataUri){return b.build(j)}if(d[i.valueType]){return d[i.valueType].build(j)}return{}}}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:cql', location = 'js/cql/internal/cql-filter-field.js' */
define("confluence-ui-components/js/cql/internal/cql-filter-field",["jquery","underscore","ajs","confluence-ui-components/js/cql/internal/cql-field-model","confluence-ui-components/js/cql/internal/cql-expression-builder","confluence-ui-components/js/cql/internal/filterfields/cql-filter-field-configs"],function(d,j,h,g,c,a){var e=window.Confluence.UI.Components.CQLFilters.Templates;var f=0;function b(n){var l=g.getLabel(n);var m=d(e.baseFilterField({label:l,field:n,counter:f++}));var k=m.find("input");m.data("fieldName",n.fieldName);return d.extend({input:k,element:m,onChange:function(o){k.change(o)}},n)}function i(p,o){var n=p.uiSupport;var r=n.valueType;var q=p.fieldName;if(!r){throw new Error("Can't create filter without valueType.")}if(!q){throw new Error("Can't create filter without fieldName.")}var m=a.getConfig(p);var k=b(p);k.asCql=j.bind(m.asCqlFunc||function(){return c.buildExpression(k,this.input.val())},k);var l=k.element.find("input");if(typeof m.setupInput==="function"){k.setupInput=m.setupInput;k.setupInput(l,o.context)}k.setValues=m.setValues||function(s){l.val(s.values.join(","))};k.element.find(".aui-iconfont-remove").click(function(){k.element.remove();o.removeField(k)});return k}return{build:i}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:cql', location = 'js/cql/internal/cql-filter-select.js' */
define("confluence-ui-components/js/cql/internal/cql-filter-select",["jquery","underscore","ajs","confluence-ui-components/js/cql/internal/cql-ajax","confluence-ui-components/js/cql/internal/cql-field-model"],function(f,c,a,e,b){var d=window.Confluence.UI.Components.CQL.FilterSelect.Templates;function g(t){var r=t.cqlContainer;var m=r.find(".cql-fields");var i=t.onSelection;if(!i){throw Error("An onSelection callback must be provided to the FilterSelect.")}var s=f(d.container());var n=s.children("button");var q=s.find(".input-wrapper");var p=s.find("input");function j(u){u.preventDefault();q.removeClass("hidden");n.hide();s.find(".select2-choice").mousedown()}n.click(j);function h(){q.addClass("hidden");n.show()}p.bind("select2-close",function(){a.debug("CQL Field selector closed");h();setTimeout(function(){a.log("Checking CQL Field selector focus");if(!f(document.activeElement).closest(".cql-filter").length){a.debug("Setting CQL Field selector focus");n.focus()}},1)});r.append(s);function o(u){if(!u.added){return}p.auiSelect2("val","");i(u.added);a.debug("CQL Field selection made");h()}function k(u){if(t.context.environment!=="search-screen"&&!a.DarkFeatures.isEnabled("cql.search.screen")){u=c.reject(u,function(w){return w.type==="date"})}u=c.reject(u,function(w){return c.contains(t.ignoredFields,w.fieldName)});function v(){if(!m[0]){throw new Error("Why no cql-container?")}var x=m.find(".cql-filter").map(function(){return f(this).data("fieldName")});var w=c.reject(u,function(y){return c.contains(x,y.fieldName)&&!c.contains(["label"],y.fieldName)});return{results:w,text:b.getLabel}}p.auiSelect2({id:"fieldName",data:v,formatResult:b.getLabel,formatSelection:b.getLabel,placeholder:"\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0444\u0438\u043b\u044c\u0442\u0440"}).change(o)}function l(){a.log("Couldn't fetch CQL fields - unable to initialise CQL field picker")}e.getFields().done(k).fail(l);return p}return{build:g}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:cql', location = 'js/cql/internal/cql-space-expression-builder.js' */
define("confluence-ui-components/js/cql/internal/cql-space-expression-builder",["jquery","underscore","confluence-ui-components/js/cql/internal/cql-special-spaces","confluence-ui-components/js/cql/internal/cql-expression-builder"],function(d,c,b,a){function e(k){var l=k.trim();if(!l){return undefined}var g=l.split(",");var m=b.getKeys();var f=[];var j=[];c.each(g,function(n){if(n==="conf_current"){f.push("currentSpace()")}else{if(c.contains(m,n)){j.push(n)}else{f.push(n)}}});var h=[];if(j.length){var i=b.getMap();j=c.map(j,function(n){return i[n]});h.push(a.buildEqualityExpressionFromValuesArray("space.type",j))}if(f.length){h.push(a.buildEqualityExpressionFromValuesArray("space",f))}if(h.length===1){return h[0]}return"("+h.join(" or ")+")"}return{buildExpressionFromValuesString:e}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:cql', location = 'js/cql/internal/cql-expression-builder.js' */
define("confluence-ui-components/js/cql/internal/cql-expression-builder",["jquery","underscore"],function(e,j){function c(n){if(j.contains(["currentContent()","currentSpace()"],n)){return n}return'"'+a(n)+'"'}function a(n){return n.replace(/"/g,'\\"')}function i(n,p){var o=p.trim();if(!o){return undefined}return n+" ~ "+c(o)}function f(n){var o={"+":[],"-":[],"":[]};j.each(n,function(q){var p=q.charAt(0);if(p==="+"){o["+"].push(q.substring(1))}else{if(p==="-"){o["-"].push(q.substring(1))}else{o[""].push(q)}}});return o}function d(p,n){var o=j.map(n,function(q){return p+" = "+c(q)});return o.join(" AND ")}function m(s,p,n){if(p.length===0){return""}var q=j.map(p,c);var o;if(q.length===1){o=n?" = ":" != ";return s+o+q[0]}var r=q.join(",");o=n?" in ":" not in ";return s+o+"("+r+")"}function l(o,n){return m(o,n,false)}function h(o,n){return m(o,n,true)}function k(t,q){var r=f(q);var n=[];var s=d(t,r["+"]);if(s){n.push(s)}var o=h(t,r[""]);if(o){n.push(o)}var p=l(t,r["-"]);if(p){n.push(p)}return n.join(" AND ")}function b(q,o){var p=o.trim();if(!p){return undefined}var n=p.split(",");n=j.map(n,function(r){return r.trim()});return k(q,n)}function g(o,n){if(o.type==="equality"){return b(o.fieldName,n)}if(o.type==="text"){return i(o.fieldName,n)}throw new Error("buildExpression does not yet support type: "+o.type)}return{buildExpression:g,buildEqualityExpressionFromValuesString:b,buildEqualityExpressionFromValuesArray:k,makeValueMap:f,makePlusCql:d,makeMinusCql:l,makeRegularCql:h}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:cql', location = 'js/cql/internal/cql-space-type-expression-converter.js' */
define("confluence-ui-components/js/cql/internal/cql-space-type-expression-converter",["underscore","confluence-ui-components/js/cql/internal/cql-special-spaces"],function(b,a){function c(g,d){var e=b.clone(d);var f=b.map(g.values,a.getUIValue);return{field:e,values:f,negate:g.negate}}return{convert:c}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:cql', location = 'js/cql/internal/cql-space-expression-aggregator.js' */
define("confluence-ui-components/js/cql/internal/cql-space-expression-aggregator",["underscore","confluence-ui-components/js/cql/internal/cql-space-type-expression-converter"],function(b,d){function c(h,f){var g=b.filter(h,function(j){return j.field.fieldName==="space.type"});if(g.length===0){return h}if(g.length>1){throw Error("Only a single space.type expression is supported.")}var e=d.convert(g[0],f);var i=b.filter(h,function(j){return j.field.fieldName==="space"});h=b.difference(h,g);if(i.length){i[0]=a(i[0],e)}else{h.push(e)}return h}function a(f,e){f.values=f.values.concat(e.values);return f}return{aggregate:c,combineSpaceExpressions:a}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:cql', location = 'js/cql/internal/cql-set-value-helper.js' */
define("confluence-ui-components/js/cql/internal/cql-set-value-helper",["jquery"],function(b){function a(f,c){var e=b.Deferred();f.on("change",function(){e.resolve()});var d=true;f.select2("val",c,d);return e}return{setValues:a}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:cql', location = 'js/cql/internal/cql-date-expression-aggregator.js' */
define("confluence-ui-components/js/cql/internal/cql-date-expression-aggregator",["underscore","confluence-ui-components/js/cql/internal/cql-space-type-expression-converter"],function(a){function c(d){return{field:d.field,expressions:[d]}}function b(f){var d=[];var e={};f.forEach(function(h){var i=h.field.fieldName;if(h.field.type!=="date"){d.push(h)}else{if(!e[i]){var g=c(h);e[i]=g;d.push(g)}else{e[i].expressions.push(h)}}});return d}return{aggregate:b}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:cql', location = 'js/cql/internal/cql-negation-converter.js' */
define("confluence-ui-components/js/cql/internal/cql-negation-converter",["underscore"],function(a){function b(d){d.values=a.map(d.values,function(e){return"-"+e})}function c(e){var d=$.extend({},e);if(d.field.type==="equality"){if(d.operator==="!="){d.operator="=";b(d)}else{if(d.operator==="notin"){d.operator="in";b(d)}}}return d}return{convert:c}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:cql', location = 'js/cql/internal/cql-negation-aggregator.js' */
define("confluence-ui-components/js/cql/internal/cql-negation-aggregator",["underscore","confluence-ui-components/js/cql/internal/cql-negation-converter"],function(a,d){function b(i){var h=[];var g={};var f={};i.forEach(function(k){var l=k.field.fieldName;if(!a.contains(h,l)){h.push(l);g[l]=[];f[l]=[]}var j=d.convert(k);if(j.operator!==k.operator){f[l].push(j)}else{g[l].push(j)}});var e=[];h.forEach(function(k){var j=c(g[k],f[k]);e=e.concat(j)});return e}function c(g,e){if(!e.length){return g}var f=g[0];if(!f){f=e[0];e=a.rest(e)}e.forEach(function(h){f.values=f.values.concat(h.values)});if(f.operator==="="&&f.values.length>1){f.operator="in"}return[f].concat(a.rest(g))}return{aggregate:b}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:cql', location = 'js/cql/internal/cql-ignored-field-expression-converter.js' */
define("confluence-ui-components/js/cql/internal/cql-ignored-field-expression-converter",[],function(){function a(f,e,d){if(e){f=f.filter(function(g){if(e.indexOf(g.field.fieldName)>-1){return d}return !d})}return f}function c(e,d){return a(e,d,true)}function b(e,d){return a(e,d,false)}return{removeFieldsByName:b,getFieldsByName:c}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-ui-components:cql', location = 'js/cql/cql-component.js' */
define("confluence-ui-components/js/cql/cql-component",["jquery","underscore","ajs","confluence-ui-components/js/cql/internal/cql-ajax","confluence-ui-components/js/cql/internal/cql-filter-field","confluence-ui-components/js/cql/internal/cql-filter-select","confluence-ui-components/js/cql/internal/cql-space-expression-aggregator","confluence-ui-components/js/cql/internal/cql-date-expression-aggregator","confluence-ui-components/js/cql/internal/cql-negation-aggregator","confluence-ui-components/js/cql/internal/cql-ignored-field-expression-converter"],function(c,m,i,a,f,n,d,b,h,l){var j=window.Confluence.UI.Components.CQL.Templates;function e(o){var p=[];m.each(o,function(q){q.forEach(function(s){if(!s){return}var r=s.asCql();if(r){p.push(r)}})});return p.join(" and ")}function g(o,p){return m.find(o,function(q){return q.fieldName===p})}function k(s){var p=s.context||{environment:"macro-browser"};var F=s.defaultFieldNames;if(!F){F=s.defaultFields?s.defaultFields.split(","):[]}var x=c(j.container());if(s.container){c(s.container).append(x)}var G=x.find(".cql-fields");var C;var H=s.value||s.defaultValue;if(H){C=a.parseClauses(H)}else{C=new c.Deferred();C.resolve()}var v={};var w={};var u=new c.Deferred();var I=s.onChange||function(){};function o(t){var K=t.fieldName;v[K]=m.without(v[K],t);if(v[K].length===0){delete v[K];I()}}var B={element:x,loading:u,context:s.context||{environment:"macro-browser",searchType:"content"},getValue:function(){return e(v)},getIgnoredFields:function(){return w},removeField:o,fieldArrays:v,fieldRegistry:v};function A(L){var K=f.build(L,B);K.onChange(I);var M=L.fieldName;v[M]=v[M]||[];v[M].push(K);x.trigger("cql-field-adding",K);var t=G.find(".cql-field-"+M+":last");if(t.length){t.after(K.element)}else{G.append(K.element)}return K}function E(K,t){t=t||0;var L=K.fieldName;return v[L]&&v[L][t]}var D;function z(O){var K=c.Deferred();if(!O){K.resolve();return K}var N={};function L(Q){var P=N[Q];if(typeof P==="number"){N[Q]=P+1}else{N[Q]=0}return N[Q]}var t=m.findWhere(D,{fieldName:"space"});O=d.aggregate(O,t);O=b.aggregate(O);O=h.aggregate(O);w=l.getFieldsByName(O,s.ignoredFields);O=l.removeFieldsByName(O,s.ignoredFields);var M=[];m.each(O,function(T){var U=T.field.fieldName;var S=g(D,U);var Q=L(U);var P=E(S,Q)||A(S);var R=P.setValues(T);if(R){M.push(R)}});c.when.apply(c,M).then(function(){K.resolve()});return K}function r(K){var L,t;if(K){var M=m.escape(K);L="\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u0444\u0438\u043b\u044c\u0442\u0440\u044b";t=i.format("\u0423\u0432\u044b \u043d\u0430\u043c! \u0412\u043e\u0437\u043d\u0438\u043a\u043b\u0430 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u0441 \u00ab{0}\u00bb. \u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u043e\u0434\u043d\u0430\u043a\u043e \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u0442\u0440\u0435\u0431\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u044b\u0439 \u0432\u0432\u043e\u0434 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u043c\u0430\u043a\u0440\u043e\u0441\u0430.",M)}else{L="\u041d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u043c\u0430\u043a\u0440\u043e\u0441";t="\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u0438 \u043c\u044b \u0434\u0430\u0434\u0438\u043c \u0435\u0439 \u0435\u0449\u0435 \u043e\u0434\u0438\u043d \u0448\u0430\u043d\u0441."}i.messages.error(".cql-error-container",{title:L,body:t,closeable:true})}function J(t){var K;if(t.element.find(".aui-nav-selected").length!==0){return}if(t.element.find(".select2-container-multi").length!==0){K=t.element.find("input.select2-input");K.focus().click()}else{K=t.element.find("a.select2-choice.select2-default");if(!K.length){K=c(":input:visible",t.element).first()}if(!K.length){i.log("Unable to focus CQL field: "+t.fieldName)}K.focus().mousedown()}}function y(L){var K=c.extend({},L,{fixed:false});var t=A(K);J(t)}function q(t){D=t;F.forEach(function(M){var L=g(D,M);if(!L){throw Error("Unknown fieldname: "+M)}var K=c.extend({fixed:true},L);A(K)});n.build({onSelection:y,cqlContainer:x,context:p,ignoredFields:s.ignoredFields});C.done(function(K){z(K).done(function(){u.resolve()})}).fail(function(){if(p.environment==="search-screen"){i.log("Error parsing CQL param from search screen URL: "+s.value)}else{r(s.value)}u.resolve()})}a.getFields().done(q).fail(function(){r()});return B}return{build:k}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-create-content-plugin:user-select2', location = 'user-select2/avatar.soy' */
// This file was automatically generated from avatar.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace CreateContent.avatar.
 */

if (typeof CreateContent == 'undefined') { var CreateContent = {}; }
if (typeof CreateContent.avatar == 'undefined') { CreateContent.avatar = {}; }


CreateContent.avatar.avatarWithName = function(opt_data, opt_ignored) {
  return '' + aui.avatar.avatar({size: opt_data.size, avatarImageUrl: opt_data.avatarImageUrl, accessibilityText: opt_data.displayName, title: opt_data.displayName, extraAttributes: {'data-username': opt_data.userId}}) + soy.$$escapeHtml(opt_data.displayName);
};
if (goog.DEBUG) {
  CreateContent.avatar.avatarWithName.soyTemplateName = 'CreateContent.avatar.avatarWithName';
}

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-create-content-plugin:user-select2', location = 'user-select2/user-multiselect.js' */
Confluence.Binder.autocompleteMultiUser=function(b){b=b||document.body;var c=AJS.$;var a=function(){var d=c(".select2-drop-active > .select2-results");if(d.children(".select2-result-selectable").length===0&&d.children(".select2-disabled").length){d.append('<li class="select2-no-results">'+AJS.escapeHtml("\u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0439 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e")+"</li>")}};c("input.autocomplete-multiuser[data-autocomplete-bound != 'true']",b).each(function(){var d=c(this);d.auiSelect2({multiple:true,minimumInputLength:2,formatInputTooShort:function(){return "\u041d\u0430\u0447\u0438\u043d\u0430\u0439\u0442\u0435 \u0432\u0432\u043e\u0434\u0438\u0442\u044c \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f"},ajax:{transport:function(h){var i=h.success;delete h.success;return c.ajax.apply(c.ajax,arguments).done(i).done(a)},data:function(h){return{"max-results":6,query:h}},dataType:"json",url:Confluence.getContextPath()+"/rest/prototype/1/search/user.json",results:function(i){var h=[];c.each(i.result,function(){h.push({id:this.username,text:this.title,imgSrc:this.thumbnailLink.href})});return{results:h}},quietMillis:300},formatResult:function(h){return CreateContent.avatar.avatarWithName({size:"small",displayName:h.text,userId:h.id,avatarImageUrl:h.imgSrc})},escapeMarkup:function(h){return h},formatSelection:function(h){return CreateContent.avatar.avatarWithName({size:"xsmall",displayName:h.text,userId:h.id,avatarImageUrl:h.imgSrc})},dropdownCssClass:"users-dropdown",containerCssClass:"users-autocomplete",hasAvatar:true});if(!d.data("autofill-user")){return}var g=AJS.Meta.get("remote-user"),f=AJS.Meta.get("current-user-fullname"),e=AJS.Meta.get("current-user-avatar-url");if(g&&f&&e){d.auiSelect2("data",[{id:g,text:f,imgSrc:AJS.contextPath()+e}])}})};
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-macro-browser:macro-browser-js', location = 'js/macro-parameter-serializer.js' */
define("confluence-macro-browser/macro-parameter-serializer",["jquery"],function(h){function e(d){return d.replace(/\\/g,"\\\\").replace(/=/g,"\\=").replace(/[|]/g,"\\|")}return{serialize:function(d){var a=[],b;for(b in d)a.push(e(b)+"="+e(d[b]));return a.join("|")},deserialize:function(d){function a(f,d){for(var c=[],b=[],a,f=f||"",g=0,e=f.length;g<e;g++)a=f[g],"\\"==a?c.push(a+(g+1!=f.length?f[++g]:"")):a==d?(b.push(c.join("")),c=[]):c.push(a);b.push(c.join(""));return b}var b={};h.each(a(d||"",
"|"),function(d,e){var c=a(e,"=");2===c.length&&c[0]&&(b[c[0].replace(/\\(.)/g,"$1")]=c[1].replace(/\\(.)/g,"$1"))});return b}}});require("confluence/module-exporter").exportModuleAsGlobal("confluence-macro-browser/macro-parameter-serializer","Confluence.MacroParameterSerializer");
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-macro-browser:macro-browser-js', location = 'js/macro-browser-fields.js' */
define("confluence-macro-browser/macro-browser-fields",["ajs","jquery","underscore","confluence/legacy"],function(g,e,o,i){function n(j,h,l){return function(k,b){if(k.multiple)return j.string(k,b);var a=e(i.Templates.MacroBrowser.macroParameterSelect()),c=e("select",a),b=b||{};b.setValue=b.setValue||function(a){var b=!1;c.find("option").each(function(){if(this.value==a)return b=!0,!1});b?delete c.tempValue:(c.append(e("<option/>").attr("value",a).text(a+" ("+"\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e"+
")")),c.tempValue=a);try{c.val(a)}catch(m){g.logError(m)}c.change()};a=h(a,c,b);a.updateDependencies=l;a.getData=function(a){if(a.title&&a.spaceKey||a.pageId||a.draftId){var f=c.tempValue||c.val();b.fileTypes&&(a.fileTypes=b.fileTypes);var m=g.contextPath()+(a.draftId?"/json/draftattachmentsearch.action":"/json/attachmentsearch.action");e.getJSON(m,a,function(a){if(!a.error){e("option",c).remove();a=a.attachments;if(!a||!a.length){c.append(e("<option/>").attr("value","").html("\u041d\u0435\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u0432\u043b\u043e\u0436\u0435\u043d\u0438\u0439"));
c.tempValue&&b.setValue(c.tempValue)}else{for(var d=0,m=a.length;d<m;d++)c.append(e("<option/>").attr("value",a[d].name).text(a[d].name));f=f||c.tempValue;b.setValue(f||a[0].name)}c.attr("style","")}})}else g.log("Not enough parameters to send attachmentsearch request")};return a}}return function(j){var h=function(b,a,c){var c=c||{},d=c.setValue||function(b){a.val(b)},e=c.getValue||function(){return a.val()};a.change(c.onchange||j.paramChanged);return{paramDiv:b,input:a,setValue:d,getValue:e}},l=
function(b,a,c){if(a&&a.length)for(var d=0,e=a.length;d<e;d++)j.fields[a[d]]&&j.fields[a[d]].dependencyUpdated(b,c)},k={updateDependencies:l,username:function(b,a){var a=a||{},c=b.multiple?"autocomplete-multiuser":"autocomplete-user",d=e(i.Templates.MacroBrowser.macroParameter()),f=e("input[type='text']",d);f.addClass(c).attr("data-none-message","\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e");b.required&&f.keyup(j.processRequiredParameters);b.multiple?(i.Binder.autocompleteMultiUser(d),a.setValue=
function(a){f.val(a);for(var a=a.split(","),b=[],c=[],d=0,h=a.length;d<h;d++)b.push(function(a){return e.getJSON(g.contextPath()+"/rest/prototype/1/user/non-system/"+a).done(function(a){a&&a.name&&c.push({id:a.name,text:a.displayName,imgSrc:a.avatarUrl})}).fail(function(b){g.logError("Cannot parse user data for macro browser field with: "+b);c.push({id:a,text:g.format("\u041d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u044b\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c ({0})",a),imgSrc:g.contextPath()+"/images/icons/profilepics/default.png"})})}(a[d]));e.when.apply(e,o.map(b,function(a){var b=
e.Deferred();a.always(function(){b.resolve()});return b.promise()})).done(function(){c.length&&f.auiSelect2("data",c)})}):(f.bind("selected.autocomplete-content",function(c,d){if(a.onselect)a.onselect(d.selection);else a.setValue?a.setValue(d.content.username):(l(b.name,a.dependencies,f.val()),"function"===typeof a.onchange&&a.onchange.apply(f))}),g.Confluence.Binder.autocompleteUserOrGroup(d));return h(d,f,a)},spacekey:function(b,a){if(b.multiple)return k.string(b,a);var a=a||{},c=e(i.Templates.MacroBrowser.macroParameter()),
d=e("input[type='text']",c);d.addClass("autocomplete-space").attr("data-template","{key}").attr("data-none-message","\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e");b.required&&d.keyup(j.processRequiredParameters);d.bind("selected.autocomplete-content",function(c,e){if(a.onselect)a.onselect(e.selection);else a.setValue?a.setValue(e.content.key):(l(b.name,a.dependencies,d.val()),"function"===typeof a.onchange&&a.onchange.apply(d))});g.Confluence.Binder.autocompleteSpace(c);return h(c,d)},attachment:n(k,
h,l),full_attachment:n(k,h,l),"confluence-content":function(b,a){if(b.multiple)return k.string(b,a);a=a||{};b.options=b.options||{};var c=e(i.Templates.MacroBrowser.macroParameter()),d=e("input[type='text']",c).attr("data-none-message","\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e").attr("data-template","");b.required&&d.keyup(j.processRequiredParameters);a.onchange=a.onchange||function(){var c=d.val();l(b.name,a.dependencies,c)};a.setValue=a.setValue||function(b){d.val(b);"function"===typeof a.onchange&&
a.onchange.apply(d)};d.bind("selected.autocomplete-content",function(c,e){var f="";"true"==b.options.includeDatePath&&"blogpost"===e.content.type&&(f=e.content.createdDate.date.split("-"),f="/"+f[0]+"/"+f[1]+"/"+f[2].substring(0,2)+"/");var h=e.content.space&&e.content.space.key,i=h&&h!=g.Meta.get("space-key");-1!==e.content.title.indexOf(":")&&(i=!0);f=(i?h+":":"")+f+e.content.title;d.val(f);if(a.onselect)a.onselect(e.selection);else a.setValue(f,d)});b.options.spaceKey&&("@self"===b.options.spaceKey.toLowerCase()&&
(b.options.spaceKey=g.Meta.get("space-key")),d.attr("data-spacekey",b.options.spaceKey));var f=b.options.type;if("string"===typeof f)if("page"==f)d.addClass("autocomplete-page"),g.Confluence.Binder.autocompletePage(c);else if("blogpost"==f)d.addClass("autocomplete-blogpost"),g.Confluence.Binder.autocompleteBlogpost(c);else{if("attachment"===f||"full_attachment"===f)d.addClass("autocomplete-attachment"),g.Confluence.Binder.autocompleteAttachment(c)}else d.addClass("autocomplete-confluence-content"),
g.Confluence.Binder.autocompleteConfluenceContent(c);return h(c,d,a)},string:function(b,a){var c=e(i.Templates.MacroBrowser.macroParameter()),d=e("input",c);b.required&&d.keyup(j.processRequiredParameters);return h(c,d,a)},"boolean":function(b,a){var c=e(i.Templates.MacroBrowser.macroParameterBoolean()),d=e("input",c),a=a||{};a.setValue=a.setValue||function(a){(/true/i.test(a)||/true/i.test(b.defaultValue)&&!/false/i.test(a))&&d.prop("checked",!0)};return h(c,d,a)},"enum":function(b,a){if(b.multiple)return k.string(b,
a);var c=e(i.Templates.MacroBrowser.macroParameterSelect()),d=e("select",c);!b.required&&!b.defaultValue&&d.append(e("<option/>").attr("value",""));e(b.enumValues).each(function(){d.append(e("<option/>").attr("value",this).html(""+this))});return h(c,d,a)},_hidden:function(b,a){var c=e(i.Templates.MacroBrowser.macroParameterHidden()).hide(),d=e("input",c);return h(c,d,a)}};return{Field:h,ParameterFields:k}}});require("confluence/module-exporter").safeRequire("confluence-macro-browser/macro-browser-fields");
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-macro-browser:macro-browser-js', location = 'js/macro-browser-smartfields.js' */
define("confluence-macro-browser/macro-browser-smartfields",["ajs","confluence/macro-js-overrides"],function(c,f){return function(h,d){var e=function(a){this.fileTypes=a};e.prototype.beforeParamsSet=function(a){!a.page&&(!a.date&&!a.space)&&("page"==c.params.contentType||"blogpost"==c.params.contentType?a.page=c.Editor.getCurrentTitle():"comment"==c.params.contentType&&(a.page=c.params.pageTitle));if(a.date){var b=a.date.split("/");a.page=["",b[2],b[0],b[1],a.page].join("/")}a.space&&(a.page=a.space+
":"+a.page);return a};e.prototype.beforeParamsRetrieved=function(a){if(a.page){var b=a.page.split(":");1<b.length&&(a.space=b[0],a.page=b[1]);b=a.page.split("/");1<b.length&&(a.date=[b[2],b[3],b[1]].join("/"),a.page=b[4]);(("page"==c.params.contentType||"blogpost"==c.params.contentType)&&a.page==c.Editor.getCurrentTitle()||"comment"==c.params.contentType&&a.page==c.params.pageTitle)&&delete a.page}return a};e.prototype.fields={attachment:function(a){a=d.attachment(a,{fileTypes:this.fileTypes});a.dependencyUpdated=
function(a,g){c.debug("attachment:dependencyUpdated called: "+a+", "+g);var d=e.prototype.fields._parsePageLink(g);this.getData(d)};return a},full_attachment:function(a){a=d.full_attachment(a,{fileTypes:this.fileTypes});a.dependencyUpdated=function(a,d){c.debug("attachment:dependencyUpdated called: "+a+", "+d);var f=e.prototype.fields._parsePageLink(d);this.getData(f)};return a},"confluence-content":function(a){return d["confluence-content"](a,{dependencies:["name"]})},_parsePageLink:function(a){var b=
{},a=a.split(":",2);b.spaceKey=2===a.length&&a[0]||c.Meta.get("space-key");b.title=a[a.length-1];0===b.title.indexOf("/")&&(b.postingDay=b.title.substr(1,10),b.title=b.title.substr(12));b.title===c.Editor.getCurrentTitle()&&(b.title="");b.title||(c.params.newPage?b.draftId=c.Meta.get("content-id"):b.pageId=c.params.pageId);return b}};h.activateSmartFieldsAttachmentsOnPage=function(a,b){f.put(a,new e(b))}}});require("confluence/module-exporter").safeRequire("confluence-macro-browser/macro-browser-smartfields");
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-macro-browser:macro-browser-js', location = 'js/macro-browser-utils.js' */
define("confluence-macro-browser/macro-browser-utils",["jquery"],function(a){return{makeDefaultKey:function(){return a.makeArray(arguments).join(".")}}});require("confluence/module-exporter").safeRequire("confluence-macro-browser/macro-browser-utils");
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-macro-browser:macro-browser-js', location = 'js/macro-browser-cql.js' */
define("confluence-macro-browser/macro-browser-cql",["ajs","underscore","confluence/templates","confluence-ui-components/js/cql/cql-component","jquery"],function(i,g,m,n,d){function j(b){var a=b.param;return d.extend({},b,a.options,{defaultValue:a.defaultValue||a.options.defaultValue})}function k(b){return d(m.MacroBrowser.CQL.sections({hasRenderParameters:0<b.renderParams.length}))}return{build:function(b){var a=k(b),e=b.container;e.append(a);e.bind("cql-field-adding",function(b,c){c.element.addClass("macro-param-div");
c.element.find(".cql-field-input").addClass("macro-param-input")});e.addClass("loading");a.filter(".cql-render-heading").find("button").click(function(){var b=d(this),c=b.closest(".cql-render-heading").next(),a=c.is(":visible");a?c.slideUp(300):(c.removeClass("hidden").show(),c=d(".cql-render-heading").position().top,d(".macro-input-fields").animate({scrollTop:c},300));a=a?"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c":"\u0421\u043a\u0440\u044b\u0442\u044c";
b.text(a)});var f,h={param:b.cqlParam,value:b.cqlValue,container:a.filter(".cql-filter-fields")},h=j(h);f=n.build(h);e.data("cqlComponent",f);var l=d.Deferred();f.loading.done(function(){var a=b.cqlParam.options.requiredFields;if(a){var c=a.split(",");g.each(f.fieldRegistry||f.fieldArrays,function(a){var d=!1;g.each(a,function(a){!d&&g.contains(c,a.fieldName)&&(b.flagRequiredParam(a.element),d=!0,a.onChange(b.paramChanged))})})}e.removeClass("loading");l.resolve()});return{elements:a,loading:l}},
_makeCqlComponentOptions:j,_renderCqlSections:k}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-macro-browser:macro-browser-js', location = 'soy/macro-browser-cql.soy' */
// This file was automatically generated from macro-browser-cql.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace Confluence.Templates.MacroBrowser.CQL.
 */

if (typeof Confluence == 'undefined') { var Confluence = {}; }
if (typeof Confluence.Templates == 'undefined') { Confluence.Templates = {}; }
if (typeof Confluence.Templates.MacroBrowser == 'undefined') { Confluence.Templates.MacroBrowser = {}; }
if (typeof Confluence.Templates.MacroBrowser.CQL == 'undefined') { Confluence.Templates.MacroBrowser.CQL = {}; }


Confluence.Templates.MacroBrowser.CQL.sections = function(opt_data, opt_ignored) {
  return '<div class="cql-filter-fields"></div>' + ((opt_data.hasRenderParameters) ? '<h4 class="cql-render-heading"><span>' + soy.$$escapeHtml("\u041e\u043f\u0446\u0438\u0438") + '</span>' + aui.buttons.button({type: 'link', text: "\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c", extraAttributes: {type: 'button'}}) + '</h4><div class="cql-render-fields hidden"></div>' : '');
};
if (goog.DEBUG) {
  Confluence.Templates.MacroBrowser.CQL.sections.soyTemplateName = 'Confluence.Templates.MacroBrowser.CQL.sections';
}

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-macro-browser:macro-browser-js', location = 'js/macro-browser-editor.js' */
define("confluence-macro-browser/macro-browser-editor","ajs jquery confluence/legacy confluence-macro-browser/macro-browser-cql confluence/macro-js-overrides underscore".split(" "),function(q,d,p,u,r,s){return function(k){function o(g){var a=d("#macro-insert-container").find(".macro-name").val(),b,c=k,e={},f;f={};for(var h=0,l=g.formDetails.parameters.length;h<l;h++){var i=g.formDetails.parameters[h],j;if(i.type&&i.type.name==="cql")j=d(".macro-input-fields form").data("cqlComponent").getValue();
else{j=d("#macro-param-"+i.name);var n=j.val();j.attr("type")=="checkbox"&&(n=""+j.prop("checked"));j=n}if(j){i.shared&&(e[i.name]=j);if(i.hidden||!i.defaultValue||i.defaultValue!=j)f[i.name]=j}}f[""]&&(b=f[""]);d.extend(f,c.unknownParams);(h=r.getFunction(a,"beforeParamsRetrieved"))&&(f=h(f,g,e));return{name:a,bodyHtml:c.getMacroBody(),params:f,defaultParameterValue:b}}function v(g,a,b){var c=k,e,f=a.type.name;if(b){var h=b.fields&&b.fields[f];h&&typeof h!=="function"&&(h=h[a.name]);typeof h==="function"&&
(e=h.call(b,a))}if(!e){f in c.ParameterFields&&typeof c.ParameterFields[f]==="function"||(f="string");e=c.ParameterFields[f](a)}c.fields[a.name]=e;b=e.paramDiv;c=e.input;e="macro-param-"+a.name;b.attr("id","macro-param-div-"+a.name);c.addClass("macro-param-input").attr("id",e);a.hidden&&b.hide();c=g.pluginKey;if(a.displayName==k.Utils.makeDefaultKey(c,g.macroName,"param",a.name,"label"))a.displayName=a.name;if(a.description==k.Utils.makeDefaultKey(c,g.macroName,"param",a.name,"desc"))a.description=
"";d("label",b).attr("for",e).text(a.displayName);a.required&&t(b);a.description&&b.append(p.Templates.MacroBrowser.macroParameterDesc({description:a.description}));return b}function t(d){var a=d.find("label"),b=a.text()+" *";a.text(b);d.addClass("required")}return{loadMacroInBrowser:function(g){if(!g||!g.formDetails){q.trigger("analytics",{name:"macro-browser.unknown-macro-error"});alert("\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u044b\u0439 \u043c\u0430\u043a\u0440\u043e\u0441 \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440 \u043c\u0430\u043a\u0440\u043e\u0441\u043e\u0432.")}else{var a=require("tinymce"),b=k,c=g.formDetails,e=c.macroName,
f=r.get(e),h=b.settings.selectedMacro,l=a.confluence.macrobrowser.editedMacroDiv;if(f&&typeof f.opener==="function"){b.close();f.opener({name:e})}else{var a=c.parameters,i=s.find(a,function(a){return a.type.name==="cql"});d("#save-warning-span").addClass("hidden");d("#macro-insert-container .macro-name").val(e);var j=d("#macro-insert-container .macro-input-fields form");j.empty();var n=g.extendedDescription||g.description;if(i)c.documentationLink&&b.UI.setHelpLink(b.dialog,{href:c.documentationLink});
else if(n||c.documentationLink){n=d(p.Templates.MacroBrowser.macroDescription({descriptionHtml:n,documentationLink:c.documentationLink}));j.append(n)}if(c.body&&c.body.bodyType!="NONE"&&l&&d(l).hasClass("editor-inline-macro")){l=g.pluginKey;if(c.body.label==k.Utils.makeDefaultKey(l,e,"body","label"))c.body.label="";if(c.body.description==k.Utils.makeDefaultKey(l,e,"body","desc"))c.body.description="";c=c.body;l=b.selectedMacroDefinition;n=k;e=d(p.Templates.MacroBrowser.macroBody());l=l?l.body:n.settings.selectedText;
d("textarea",e).val(l||"");c.label&&d("label",e).text(c.label);c.description&&e.append(p.Templates.MacroBrowser.macroParameterDesc({description:c.description}));c.hidden&&e.hide();e&&j.append(e)}var m=h?d.extend({},h.params):{},o=j;if(i){a=s.without(a,i);i=u.build({cqlParam:i,renderParams:a,cqlValue:m.cql,container:j,flagRequiredParam:t,paramChanged:k.paramChanged});delete m.cql;o=i.elements.filter(".cql-render-fields");i.loading.done(function(){k.paramChanged();k.Preview.previewMacro(g,h);k.UI.focusOnMacroDetailsFirstInput()})}d(a).each(function(){o.append(v(g,
this,f))});f&&typeof f.beforeParamsSet==="function"&&(m=f.beforeParamsSet(m,!h));d(a).each(function(){var a;a=this.name==""?b.selectedMacroDefinition?b.selectedMacroDefinition.defaultParameterValue:this.defaultValue:m[this.name];a!=null?delete m[this.name]:d(this.aliases).each(function(){if(m[this]){a=m[this];delete m[this]}});if(a==null)a=this.defaultValue;a!=null&&b.fields[this.name].setValue(a)});b.unknownParams=m;d("a",j).click(function(){window.open(this.href,"_blank").focus();return false});
d("#macro-browser-dialog:visible").length||b.showBrowserDialog();a={};d.extend(true,a,g);if(!a.formDetails)a.formDetails={};if(!a.formDetails.body)a.formDetails.body={};b.dialog.activeMetadata=a;a.formDetails.body.content=b.settings.selectedMacro?b.settings.selectedMacro.body:a.formDetails.body.bodyType&&a.formDetails.body.bodyType.toLowerCase()==="plain_text"?b.settings.selectedText:b.settings.selectedHtml}}},getMacroParametersFromForm:function(d){return o(d).params},getMacroDefinitionFromForm:o,
processRequiredParameters:function(){if(d(".macro-input-fields form").is(".loading")){q.log("Form still loading - cannot processRequiredParameters");return false}var g=d("#macro-insert-container .macro-param-div.required .macro-param-input").not(".select2-container").filter(function(){var a=d(this).val();return a===null||a===""}).length===0,a=g?"":"disabled",b=a?"addClass":"removeClass";d("#macro-browser-dialog button.ok").prop("disabled",a);d("#macro-browser-dialog .macro-preview-header .refresh-link").prop("disabled",
a)[b]("disabled");return g}}}});require("confluence/module-exporter").safeRequire("confluence-macro-browser/macro-browser-editor");
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-macro-browser:macro-browser-js', location = 'js/macro-browser-preview.js' */
define("confluence-macro-browser/macro-browser-preview",["jquery","ajs","confluence/legacy","confluence/macro-js-overrides"],function(e,b,m,n){return function(d){function h(){return e("#macro-insert-container .macro-preview")}function l(){h().html("")}function i(b){b?(d.UI.showPreviewSpinner(!0),f.disable()):(d.UI.showPreviewSpinner(!1),f.enable())}var f={disable:function(){e("#macro-browser-preview-link").attr("disabled",!0).addClass("disabled")},enable:function(){e("#macro-browser-preview-link").removeAttr("disabled").removeClass("disabled")}};
return{previewMacro:function(j,g){var k=d;l();if(!d.Editor.processRequiredParameters())return b.trigger("analytics",{name:"macro-browser.missing-params-error"}),b.log("previewMacro: missing required params"),!1;"object"!==typeof g&&(g=d.Editor.getMacroDefinitionFromForm(j));var a=g.params,f=n.getFunction(j.macroName,"updateMacroParametersForPreview");f&&(a=f(a));a[""]&&delete a[""];k={contentId:m.getContentId(),macroName:j.macroName,params:a,body:k.getMacroBody(),defaultParameterValue:g.defaultParameterValue,
successCallback:function(a){var c=h().find("iframe")[0],c=c.contentDocument||c.contentWindow.document;c.write(a);c.close();e(c).ready(function(){b.trigger("macro-browser.preview-ready")});e("div.error span.error",c).length&&b.logError("Error rendering macro definition : ");setTimeout(function(){i(!1)},1E3)},errorCallback:function(a){b.logError(a);i(!1)}};a=b.params.staticResourceUrlPrefix+"/blank.html";h().html('<iframe src="'+a+'" frameborder="0" name="macro-browser-preview-frame" id="macro-preview-iframe"></iframe>');
i(!0);d.Rest.fetchMacroPreviewData(k)},removePreviewContainer:l}}});require("confluence/module-exporter").safeRequire("confluence-macro-browser/macro-browser-preview");
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-macro-browser:macro-browser-js', location = 'js/macro-browser-model.js' */
define("confluence-macro-browser/macro-browser-model",["ajs"],function(h){return function(f){function g(a){a.title==f.Utils.makeDefaultKey(a.pluginKey,a.macroName,"label")&&(a.title=a.macroName.charAt(0).toUpperCase()+a.macroName.substring(1).replace(/-/g," "));a.description==f.Utils.makeDefaultKey(a.pluginKey,a.macroName,"desc")&&(a.description="");a.id="macro-"+(a.alternateId||a.macroName);var b=[a.macroName,a.title].concat(a.aliases||[]);a.keywordsNoDesc=b.join(",");var d=a.description&&a.description.replace(/,/g,
" ")||"";b.push(d);a.keywords=b.join(",");return a}return{loadMacros:function(a){if(a){var b=f;b.metadataList=[];b.aliasMap={};for(var d=0,i=a.length;d<i;d++){var c=a[d],c=g(c);if(c.aliases)for(var e=0,j=c.aliases.length;e<j;e++)c.aliases[e]=c.aliases[e].toLowerCase(),b.aliasMap[c.aliases[e]]=c.macroName.toLowerCase();b.metadataList.push(c)}b.metadataList.sort(function(a,b){return a.title.toLowerCase()>b.title.toLowerCase()?1:-1})}else h.log("AJS.MacroBrowser.loadModel - no macro data, aborting")},
transformMetaDataDefault:g}}});require("confluence/module-exporter").safeRequire("confluence-macro-browser/macro-browser-model");
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-macro-browser:macro-browser-js', location = 'js/macro-browser-rest.js' */
define("confluence-macro-browser/macro-browser-rest",["jquery","ajs","wrm","confluence/api/constants"],function(b,f,g,d){function c(a){f.logError(a)}var h=g.data.claim("confluence.macro.metadata.provider:macro-browser-metadata-resources.macro-meta-client-cache-key");return{loadMacroMetadata:function(a){a.data=a.data||{};a.data.macroMetadataClientCacheKey=h;return b.ajax({type:"GET",cache:!0,timeout:a.timeout||3E4,dataType:"json",url:(a.context||d.CONTEXT_PATH)+"/plugins/macrobrowser/browse-macros.action",
data:a.data,success:a.successCallback,error:a.errorCallback||c}).promise()},fetchMacroMetadataDetails:function(a){var e={id:a.id};a.alternateId&&(e.alternateId=a.alternateId);b.ajax({type:"GET",dataType:"json",url:(a.context||d.CONTEXT_PATH)+"/plugins/macrobrowser/browse-macros-details.action",data:e,success:a.successCallback,error:a.errorCallback||c})},fetchMacroPreviewData:function(a){if(!a.contentId||!a.macroName)return(a.errorCallback||c)("invalid parameters");b.ajax({type:"POST",contentType:"application/json; charset=utf-8",
url:(a.context||d.CONTEXT_PATH)+"/rest/tinymce/1/macro/preview",data:b.toJSON({contentId:a.contentId,macro:{name:a.macroName,body:a.body,params:a.params,defaultParameterValue:a.defaultParameterValue}}),dataType:"html",success:a.successCallback,error:a.errorCallback||c})}}});require("confluence/module-exporter").safeRequire("confluence-macro-browser/macro-browser-rest");
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-macro-browser:macro-browser-js', location = 'js/macro-browser-UI.js' */
define("confluence-macro-browser/macro-browser-UI",["jquery","ajs","confluence/legacy","confluence/api/constants"],function(f,c,j,o){return function(k){function m(a){return f(j.Templates.MacroBrowser.macroSummaryList({category:a}))}function p(a,b){var g=f(j.Templates.MacroBrowser.macroSummaryItem());if(a.icon){var e=(a.icon.relative?c.params.staticResourceUrlPrefix:"")+a.icon.location;!a.icon.relative&&f.browser.msie&&!window.location.href.indexOf("https")&&e.indexOf("https")?g.prepend("<span class='macro-icon-holder icon-"+
a.macroName+"'></span>"):g.prepend("<img src='"+e+"' alt='icon' width='"+a.icon.width+"' height='"+a.icon.height+"' title='"+a.title+"'/>")}else g.prepend("<span class='macro-icon-holder icon-"+a.macroName+"'></span>");f(".macro-title",g).text(a.title);f(".macro-desc",g).prepend(a.description);if("gadget"==a.macroName&&(e=a.gadgetUrl))e.match("^https?://.*")||(e=o.CONTEXT_PATH+"/"+e),f(".macro-title",g).after(j.Templates.MacroBrowser.gadgetLink({url:e}));g.click(function(c){b(c,a)});return g}function q(a,
b){var c;c=b?j.Templates.Dialog.helpLink(b):j.Templates.MacroBrowser.helpLink();a.getPage(a.curpage).element.find(".dialog-title").prepend(c)}return{createDialog:function(a){for(var b=a.macros,g=a.onClickMacroSummary,e={all:m("all")},h=0,r=b.length;h<r;h++){var i=b[h];if(i.hidden)if(k.isHiddenMacroShown(i))i.categories.push("hidden-macros");else continue;e.all.append(p(i,g).attr("id",i.id));for(var n=0,s=i.categories.length;n<s;n++){var l=i.categories[n];e[l]=e[l]||m(l);e[l].append(p(i,g).attr("id",
l+"-"+i.id))}}var d=c.ConfluenceDialog({width:a.width||865,height:a.height||530,id:"macro-browser-dialog",onSubmit:a.onSubmit,onCancel:a.onCancel});d.popup.element.on("keydown",".aui-button",function(a){a.stopPropagation()});d.getPage(0).element.attr("id","select-macro-page");d.addHeader(a.title);d.addPanel("\u0412\u0441\u0435",e.all,"all","category-button-all").getPanel(0).setPadding(0);b=0;for(g=a.categories.length;b<g;b++)h=a.categories[b],d.addPanel(h.displayName,e[h.name]||
m(h.name),h.name,"category-button-"+h.name).getPanel(b+1).setPadding(0);d.addCancel("\u041e\u0442\u043c\u0435\u043d\u0438\u0442\u044c",a.onCancel);q(d);"VANILLA"==c.Meta.get("confluence-flavour")?d.addHelpText("<a href='{0}' id='marketplace-link'><span class='icon icon-marketplace'/>{1}</a>",[o.CONTEXT_PATH+"/plugins/servlet/upm/marketplace/featured?category=Macros&source=macro_browser","\u041d\u0430\u0439\u0442\u0438 \u0435\u0449\u0435 \u043c\u0430\u043a\u0440\u043e\u0441\u044b..."]):d.addHelpText("Hint: type \u0022\u003cstrong\u003e{\u003c/strong\u003e\u0022 in the Editor to insert macros on the page.");e=f(j.Templates.MacroBrowser.insertMacroPanel());
e.find("form").submit(function(a){k.complete();return c.stopEvent(a)});f("#macro-browser-preview-link",e).click(function(a){f(this).prop("disabled")||k.previewMacro(d.activeMetadata);return c.stopEvent(a)});d.addPage().addPanel("X",e,"macro-input-panel").addLink("\u0412\u044b\u0431\u043e\u0440 \u043c\u0430\u043a\u0440\u043e\u0441\u0430",function(a){a.prevPage();a.searcher.focus()},"dialog-back-link").addButton("insert.name",function(){k.complete()},"ok").addCancel("\u041e\u0442\u043c\u0435\u043d\u0438\u0442\u044c",function(){return a.onCancel()}).getPanel(0).setPadding(0);
d.getPage(1).element.attr("id","macro-details-page");f("#macro-browser-dialog .dialog-button-panel .ok").before("<span id='save-warning-span' class='hidden'/>");d.searcher=j.DomFilterField({items:"#macro-browser-dialog .dialog-panel-body #category-all .macro-list-item",formId:"macro-browser-search-form",inputId:"macro-browser-search",searcher:function(a,c){var b=null;if(""!=c){d.getCurrentPanel()!=d.getPanel(0)&&d.gotoPanel(0);var e=k.searchSummaries(c),b={};f.each(e,function(){b[this.id]=this})}a.each(function(){!b||
this.id in b?f(this).show():f(this).hide()})},submitCallback:function(a,b){""!=b&&1===a.length&&a.click()}});d.page[0].header.append(d.searcher.form);d.page[0].ontabchange=function(a){a!=d.getPanel(0,0)&&d.searcher.reset()};e=f(j.Templates.MacroBrowser.missingUserMacroMetadataPanel({showAdminMessage:c.Meta.getBoolean("is-admin")}));d.addPage().addPanel("\u041d\u0435\u0442 \u043c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u043c\u0430\u043a\u0440\u043e\u0441\u0430",e,"missing-metadata-panel").addLink("\u041d\u0430\u0437\u0430\u0434",function(a){a.gotoPage(0);
a.searcher.focus()},"dialog-back-link").addCancel("\u041e\u0442\u043c\u0435\u043d\u0438\u0442\u044c",function(){return a.onCancel()});d.gotoPage(2);d.addHeader("\u041d\u0435\u0442 \u043c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u043c\u0430\u043a\u0440\u043e\u0441\u0430");d.gotoPanel(0,0);d.ready=!0;return d},showBrowserSpinner:function(a){var b=f("#macro-browser-dialog");a?b.spin("large"):b.spinStop()},showPreviewSpinner:function(a){var b=f("#macro-browser-preview");a?b.spin("large"):b.spinStop()},updateButtonText:function(a){var b=f("#macro-browser-dialog .dialog-button-panel .ok");
"edit"==a?b.text("\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c"):b.text("\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c")},enableSaveButton:function(a){f("#macro-browser-dialog .dialog-button-panel .ok").prop("disabled",!a)},focusOnMacroDetailsFirstInput:function(){var a=f("#macro-insert-container").find(".macro-input-fields :input:visible:not(button,.select2-offscreen)").first();if(a.length){if(a.hasClass("select2-input")){var b=a.closest(".select2-container").parent().find(".select2-offscreen");if("function"!==typeof b.select2){c.log("select2Hidden is not a select2 hidden input, skipping focus attempt.");
return}b.select2("open");b.select2("close")}else a.focus();!k.selectedMacroDefinition&&""!==a.val()&&a.select()}else c.log("No input to focus")},setHelpLink:q}}});require("confluence/module-exporter").safeRequire("confluence-macro-browser/macro-browser-UI");
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-macro-browser:macro-browser-js', location = 'js/macro-browser.js' */
define("confluence-macro-browser/macro-browser","window jquery ajs confluence-macro-browser/macro-browser-utils confluence-macro-browser/macro-browser-editor confluence-macro-browser/macro-browser-fields confluence-macro-browser/macro-browser-model confluence-macro-browser/macro-browser-preview confluence-macro-browser/macro-browser-rest confluence-macro-browser/macro-browser-UI confluence-macro-browser/macro-browser-smartfields confluence-macro-browser/macro-parameter-serializer confluence/macro-js-overrides underscore".split(" "),
function(k,f,d,m,n,l,o,p,q,r,s,t,h){var a={},l=l(a);a.ParameterFields=l.ParameterFields;a.Field=l.Field;s(a,a.ParameterFields);a.Utils=m;a.Editor=n(a);a.Preview=p(a);a.Model=o(a);a.Rest=q;a.UI=r(a);var g,i=function(b,c){var e={id:b.macroName,successCallback:function(b){if(b&&b.details)b.details=a.Model.transformMetaDataDefault(b.details);a.Editor.loadMacroInBrowser(b.details,c);i.displayDetails();a.Preview.previewMacro(b.details)},errorCallback:function(){d.trigger("analytics",{name:"macro-browser.fetch-metadata-error"});
k.alert("\u041f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0430 \u043c\u0430\u043a\u0440\u043e\u0441\u043e\u0432. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0441\u043d\u043e\u0432\u0430 \u0438\u043b\u0438 \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u0435\u0441\u044c \u043a \u0432\u0430\u0448\u0435\u043c\u0443 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u043e\u043c\u0443 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0443.");i.displayDetails()}};if(b.alternateId)e.alternateId=b.alternateId;i.setUI(c,b.title);a.Rest.fetchMacroMetadataDetails(e)};i.setUI=function(b,c){var e=b=="edit"?a.editTitle:a.insertTitle;f("#macro-insert-container").hide();a.UI.updateButtonText(b);a.UI.enableSaveButton(false);a.dialog.gotoPage(1).addHeader(e.replace(/\{0\}/,c));a.dialog.show();a.UI.showBrowserSpinner(true)};i.displayDetails=function(){a.UI.showBrowserSpinner(false);a.UI.enableSaveButton(false);
f("#macro-insert-container").show();a.UI.focusOnMacroDetailsFirstInput()};a.reset=function(){g&&g.resolve&&g.resolve();g=null;a.initMacroBrowserAfterRequest=null;a.initData=null;a.hasInit=false;a.metadataList=[];a.aliasMap={};a.fields={};h.reset();a.Macros=h.elements()};a.getMacroJsOverride=h.get;a.setMacroJsOverride=h.put;a.Macros=h.elements();a.hasInit=false;a.metadataList=[];a.aliasMap={};a.fields={};a.processRequiredParameters=function(){return a.Editor.processRequiredParameters()};a.paramChanged=
function(){a.Editor.processRequiredParameters()};a.loadMacroInBrowser=function(b,c){a.Editor.loadMacroInBrowser(b,c)};a.getMacroDefinitionFromForm=function(b){a.Editor.getMacroDefinitionFromForm(b)};a.getMacroParametersFromForm=function(b){a.Editor.getMacroParametersFromForm(b)};a.previewMacro=function(b){a.Preview.previewMacro(b)};a.previewOnload=function(b){var c=h.getFunction(a.dialog.activeMetadata.macroName,"postPreview");c&&c(f("#macro-preview-iframe")[0],a.dialog.activeMetadata);d.Editor.disableFrame(b);
f(b).click(function(a){if(a.target.tagName.toLowerCase()==="a"){(a=f(a.target).attr("href"))&&(a.indexOf("#")!=0&&a.indexOf(k.location)==-1)&&k.open(a,"_blank").focus();return false}})};a.getMacroMetadata=function(b){for(var c=0,e=a.metadataList.length;c<e;c++){var d=a.metadataList[c];if(d.macroName==b)return d}return null};a.getMetadataPromise=function(){return g};a.open=function(b){if(!b){b={};d.log("No settings to open the macro browser.")}var c=b.selectedMacro;!c&&b.presetMacroMetadata&&(c={name:b.presetMacroMetadata.macroName});
if(c&&c.name){var e=h.getFunction(c.name,"opener");if(e){e(c);return}}if(!a.hasInit){d.debug("init macro browser");a.UI.showBrowserSpinner(true);if(a.initData!==null&&f.isEmptyObject(a.initData)){d.trigger("analytics",{name:"macro-browser.init-reattempt"});d.logError("Macro browser preload failed. Trying again...");a.initMacroBrowserAfterRequest=b;a.preLoadMacro();return}if(a.initData)a.initBrowser();else{d.trigger("analytics",{name:"macro-browser.init-overlap"});d.debug("Waiting for macro browser preloading...");
a.initMacroBrowserAfterRequest=b;return}}a.openMacroBrowser(b)};a.openMacroBrowser=function(b){a.settings=b;a.selectedMacroDefinition=b.selectedMacro;var c=a.selectedMacroDefinition&&a.selectedMacroDefinition.name||b.presetMacroName;if(b.presetMacroName)b.presetMacroMetadata=a.getMacroMetadata(b.presetMacroName);var e=b.presetMacroMetadata;if(!e){var j=b.selectedMacro;if(j){var c=j.name.toLowerCase(),c=a.aliasMap[c]||c,g=h.getFunction(c,"updateSelectedMacro"),i=h.getFunction(c,"getMacroDetailsFromSelectedMacro");
g&&g(j);i&&(e=i(a.metadataList,j));e||(e=a.getMacroMetadata(c))}}j=f("#macro-browser-dialog").find("button.back");if(e){d.debug("Open macro browser to edit macro: "+e.macroName);j.hide();a.replicateSelectMacro(e,b.mode||"edit")}else if(c){j.show();a.dialog.overrideLastTab();a.dialog.gotoPage(2);a.showBrowserDialog()}else{j.show();if(b.selectedCategory){c=f("#select-macro-page .dialog-page-menu button").index(f("#category-button-"+b.selectedCategory));c<0&&(c=0);a.dialog.overrideLastTab();a.dialog.gotoPanel(0,
c)}else a.dialog.gotoPage(0);a.showBrowserDialog();a.dialog.searcher.focusAndSearch(b.searchText)}};a.showBrowserDialog=function(){a.dialog.show();a.UI.showBrowserSpinner(false)};a.complete=function(){if(f("#macro-browser-dialog .dialog-button-panel .ok").is(":visible:not(:disabled)")){var b=a.dialog.activeMetadata,c=h.getFunction(b.macroName,"manipulateMarkup");c&&c(b);b=a.Editor.getMacroDefinitionFromForm(b);a.close();if(a.settings.onComplete)a.settings.onComplete(b)}};a.cancel=function(){a.close();
if(typeof a.settings.onCancel=="function")a.settings.onCancel();return false};a.close=function(){this.unknownParams={};this.fields={};a.Preview.removePreviewContainer();this.dialog.hide()};a.replicateSelectMacro=function(a,c){i(a,c)};a.initBrowser=function(){var b=a.initData;if(!b.categories||!a.metadataList.length){d.trigger("analytics",{name:"macro-browser.init-browser-error"});k.alert("\u041f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0430 \u043c\u0430\u043a\u0440\u043e\u0441\u043e\u0432. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0441\u043d\u043e\u0432\u0430 \u0438\u043b\u0438 \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u0435\u0441\u044c \u043a \u0432\u0430\u0448\u0435\u043c\u0443 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u043e\u043c\u0443 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0443.");a.UI.showBrowserSpinner(false);return false}a.editTitle=b.editTitle;
a.insertTitle=b.insertTitle;var c;b.categories=f.map(b.categories,function(a){if(a.name=="hidden-macros"){c=a;return null}return a});b.categories.sort(function(a,b){return a.displayName.toLowerCase()>b.displayName.toLowerCase()?1:-1});c&&d.params.showHiddenUserMacros&&b.categories.push(c);a.dialog=a.UI.createDialog({title:b.title,categories:b.categories,macros:a.metadataList,onClickMacroSummary:function(a,b){a.preventDefault();i(b,"insert")},onSubmit:a.complete,onCancel:a.cancel});return a.hasInit=
true};a.searchSummaries=function(b,c){c=f.extend({splitRegex:/[\s\-]+/},c);return d.filterBySearch(a.metadataList,b,c)};a.getMacroBody=function(){var b="";if(f("#macro-insert-container .macro-body-div textarea").length)b=f("#macro-insert-container .macro-body-div textarea").val();else if(a.selectedMacroDefinition){if(a.selectedMacroDefinition.body)b=a.selectedMacroDefinition.body}else if(a.dialog.activeMetadata)b=a.dialog.activeMetadata.formDetails.body.content;return b};a.getMacroParams=function(a){return t.deserialize(a.getAttribute("data-macro-parameters"))};
a.getMacroName=function(a){return!a.hasAttribute("data-macro-name")?void 0:a.getAttribute("data-macro-name")};a.isHiddenMacroShown=function(a){return d.params.showHiddenUserMacros&&a.pluginKey=="_-user-macro-_"};a.hasRequiredParameters=function(a){return a.anyParameterRequired};a.setWhitelist=function(b){a.whitelist=b};a.preLoadMacro=function(){a.initData=null;if(g&&g.state()==="pending")return g;g=a.Rest.loadMacroMetadata({data:a.whitelist?{whitelist:a.whitelist}:{detailed:false},successCallback:function(b){a.initData=
b;a.Model.loadMacros(b.macros);if(a.initMacroBrowserAfterRequest){a.initBrowser();a.openMacroBrowser(a.initMacroBrowserAfterRequest)}},errorCallback:function(b){d.trigger("analytics",{name:"macro-browser.preload-error"});d.logError("Error requesting macro browser metadata:");d.logError(b);a.initData={}}})};return a});require("confluence/module-exporter").exportModuleAsGlobal("confluence-macro-browser/macro-browser","AJS.MacroBrowser");
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-macro-browser:macro-browser-js', location = 'soy/macro-browser.soy' */
// This file was automatically generated from macro-browser.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace Confluence.Templates.MacroBrowser.
 */

if (typeof Confluence == 'undefined') { var Confluence = {}; }
if (typeof Confluence.Templates == 'undefined') { Confluence.Templates = {}; }
if (typeof Confluence.Templates.MacroBrowser == 'undefined') { Confluence.Templates.MacroBrowser = {}; }


Confluence.Templates.MacroBrowser.macroSummaryList = function(opt_data, opt_ignored) {
  return '<ol id="category-' + soy.$$escapeHtml(opt_data.category) + '" class="macro-list"></ol>';
};
if (goog.DEBUG) {
  Confluence.Templates.MacroBrowser.macroSummaryList.soyTemplateName = 'Confluence.Templates.MacroBrowser.macroSummaryList';
}


Confluence.Templates.MacroBrowser.macroSummaryItem = function(opt_data, opt_ignored) {
  return '<li class="macro-list-item"><h4 class="macro-title"></h4>' + Confluence.Templates.MacroBrowser.macroDescription({description: ''}) + '</li>';
};
if (goog.DEBUG) {
  Confluence.Templates.MacroBrowser.macroSummaryItem.soyTemplateName = 'Confluence.Templates.MacroBrowser.macroSummaryItem';
}


Confluence.Templates.MacroBrowser.macroDescription = function(opt_data, opt_ignored) {
  opt_data = opt_data || {};
  return '<div class="macro-desc">' + ((opt_data.descriptionHtml) ? soy.$$filterNoAutoescape(opt_data.descriptionHtml) : '') + ((opt_data.documentationLink) ? ' <a href="' + soy.$$escapeHtml(opt_data.documentationLink) + '" class="macro-doco-link">' + soy.$$escapeHtml("\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f") + '</a>' : '') + '</div>';
};
if (goog.DEBUG) {
  Confluence.Templates.MacroBrowser.macroDescription.soyTemplateName = 'Confluence.Templates.MacroBrowser.macroDescription';
}


Confluence.Templates.MacroBrowser.insertMacroPanel = function(opt_data, opt_ignored) {
  return '<div id="macro-insert-container"><input class="macro-name" type="hidden"/><div class="macro-input-fields dialog-panel"><form action="#" class="aui"></form></div><div class="macro-preview-container dialog-panel"><div class="macro-preview-header"><ul class="macro-preview-links"><li><a id="macro-browser-preview-link" class="refresh-link icon icon-refresh" href="#">' + soy.$$escapeHtml("\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c") + '</a></li></ul><span>' + soy.$$escapeHtml("\u041f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440") + '</span></div><div id="macro-browser-preview" class="macro-preview"></div></div></div>';
};
if (goog.DEBUG) {
  Confluence.Templates.MacroBrowser.insertMacroPanel.soyTemplateName = 'Confluence.Templates.MacroBrowser.insertMacroPanel';
}


Confluence.Templates.MacroBrowser.missingUserMacroMetadataPanel = function(opt_data, opt_ignored) {
  return '<div id="macro-missing-metadata-container"><p>' + "\u0414\u043b\u044f \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043c\u0430\u043a\u0440\u043e\u0441\u0430 \u043d\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d\u044b \u043c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u0435; \u044d\u0442\u043e \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u0437\u0434\u0435\u0441\u044c \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u044d\u043a\u0440\u0430\u043d \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438." + '</p>' + ((opt_data.showAdminMessage) ? '<p>' + AJS.format("\u0415\u0441\u043b\u0438 \u044d\u0442\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u043c\u0430\u043a\u0440\u043e\u0441, \u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u0435 \u043a \u0448\u0430\u0431\u043b\u043e\u043d\u0443 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043a\u043e\u043d\u0441\u043e\u043b\u0438 \x3ca href\x3d\x22{0}\x22 target\x3d\x22_blank\x22\x3e\u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0445 \u043c\u0430\u043a\u0440\u043e\u0441\u043e\u0432\x3c/a\x3e.","/wiki" + '/admin/usermacros.action') + '</p>' : '<p>' + "\u0412\u0430\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0441\u0432\u044f\u0437\u0430\u0442\u044c\u0441\u044f \u0441 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u043e\u043c \u0434\u043b\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u044d\u0442\u043e\u0433\u043e \u043c\u0430\u043a\u0440\u043e\u0441\u0430." + '</p>') + '</div>';
};
if (goog.DEBUG) {
  Confluence.Templates.MacroBrowser.missingUserMacroMetadataPanel.soyTemplateName = 'Confluence.Templates.MacroBrowser.missingUserMacroMetadataPanel';
}


Confluence.Templates.MacroBrowser.macroParameter = function(opt_data, opt_ignored) {
  return '<div class="macro-param-div"><label></label><input type="text" class="text"/></div>';
};
if (goog.DEBUG) {
  Confluence.Templates.MacroBrowser.macroParameter.soyTemplateName = 'Confluence.Templates.MacroBrowser.macroParameter';
}


Confluence.Templates.MacroBrowser.macroParameterBoolean = function(opt_data, opt_ignored) {
  return '<div class="checkbox macro-param-div boolean-param"><input class="checkbox" type="checkbox" value="true"/><label></label></div>';
};
if (goog.DEBUG) {
  Confluence.Templates.MacroBrowser.macroParameterBoolean.soyTemplateName = 'Confluence.Templates.MacroBrowser.macroParameterBoolean';
}


Confluence.Templates.MacroBrowser.macroParameterSelect = function(opt_data, opt_ignored) {
  return '<div class="macro-param-div"><label></label><select class="select"></select></div>';
};
if (goog.DEBUG) {
  Confluence.Templates.MacroBrowser.macroParameterSelect.soyTemplateName = 'Confluence.Templates.MacroBrowser.macroParameterSelect';
}


Confluence.Templates.MacroBrowser.macroParameterHidden = function(opt_data, opt_ignored) {
  return '<div class="macro-param-div"><input type="hidden"/></div>';
};
if (goog.DEBUG) {
  Confluence.Templates.MacroBrowser.macroParameterHidden.soyTemplateName = 'Confluence.Templates.MacroBrowser.macroParameterHidden';
}


Confluence.Templates.MacroBrowser.macroParameterDesc = function(opt_data, opt_ignored) {
  return '<div class="macro-param-desc">' + soy.$$filterNoAutoescape(opt_data.description) + '</div>';
};
if (goog.DEBUG) {
  Confluence.Templates.MacroBrowser.macroParameterDesc.soyTemplateName = 'Confluence.Templates.MacroBrowser.macroParameterDesc';
}


Confluence.Templates.MacroBrowser.macroBody = function(opt_data, opt_ignored) {
  return '<div class="macro-body-div"><label>' + soy.$$escapeHtml("\u041e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u0442\u0435\u043a\u0441\u0442") + '</label><textarea class="monospaceInput textarea" type="text" rows="10"></textarea></div>';
};
if (goog.DEBUG) {
  Confluence.Templates.MacroBrowser.macroBody.soyTemplateName = 'Confluence.Templates.MacroBrowser.macroBody';
}


Confluence.Templates.MacroBrowser.helpLink = function(opt_data, opt_ignored) {
  return '' + Confluence.Templates.Dialog.helpLink({href: "https://docs.atlassian.com/confluence/docs-510/Macros"});
};
if (goog.DEBUG) {
  Confluence.Templates.MacroBrowser.helpLink.soyTemplateName = 'Confluence.Templates.MacroBrowser.helpLink';
}


Confluence.Templates.MacroBrowser.gadgetLink = function(opt_data, opt_ignored) {
  return '<a class=\'macro-uri\' href="' + soy.$$escapeHtml(opt_data.url) + '" title="' + soy.$$escapeHtml(opt_data.url) + '" target=\'_blank\'>' + soy.$$escapeHtml("URL \u0433\u0430\u0434\u0436\u0435\u0442\u0430") + '</a>';
};
if (goog.DEBUG) {
  Confluence.Templates.MacroBrowser.gadgetLink.soyTemplateName = 'Confluence.Templates.MacroBrowser.gadgetLink';
}

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-macro-browser:macro-browser-js', location = 'js/macro-browser-preload.js' */
define("confluence-macro-browser/macro-browser-preload",["jquery","ajs","window"],function(a,b,c){return{macroBrowserPreload:function(){a(c).bind("render-content-loaded",function(c,d){a("#macro-preview-iframe").contents().find("body")[0]==d&&b.MacroBrowser.previewOnload(d)});b.MacroBrowser.preLoadMacro()}}});require("confluence/module-exporter").safeRequire("confluence-macro-browser/macro-browser-preload",function(a){require("ajs").toInit(a.macroBrowserPreload)});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'confluence.web.resources:moment', location = '/includes/js/dist/moment.js' */
(function(){function R(a,b){return function(c){return k(a.call(this,c),b)}}function pa(a,b){return function(c){return this.lang().ordinal(a.call(this,c),b)}}function S(){}function B(a){T(a);m(this,a)}function C(a){var a=U(a),b=a.year||0,c=a.month||0,d=a.week||0,f=a.day||0;this._milliseconds=+(a.millisecond||0)+1E3*(a.second||0)+6E4*(a.minute||0)+36E5*(a.hour||0);this._days=+f+7*d;this._months=+c+12*b;this._data={};this._bubble()}function m(a,b){for(var c in b)b.hasOwnProperty(c)&&(a[c]=b[c]);b.hasOwnProperty("toString")&&
(a.toString=b.toString);b.hasOwnProperty("valueOf")&&(a.valueOf=b.valueOf);return a}function s(a){return 0>a?Math.ceil(a):Math.floor(a)}function k(a,b,c){for(var d=Math.abs(a)+"";d.length<b;)d="0"+d;return(0<=a?c?"+":"":"-")+d}function D(a,b,c,d){var f=b._milliseconds,i=b._days,b=b._months,g,h;f&&a._d.setTime(+a._d+f*c);if(i||b)g=a.minute(),h=a.hour();i&&a.date(a.date()+i*c);b&&a.month(a.month()+b*c);f&&!d&&e.updateOffset(a);if(i||b)a.minute(g),a.hour(h)}function E(a){return"[object Array]"===Object.prototype.toString.call(a)}
function V(a,b,c){var d=Math.min(a.length,b.length),f=Math.abs(a.length-b.length),e=0,g;for(g=0;g<d;g++)(c&&a[g]!==b[g]||!c&&h(a[g])!==h(b[g]))&&e++;return e+f}function l(a){if(a)var b=a.toLowerCase().replace(/(.)s$/,"$1"),a=qa[a]||ra[b]||b;return a}function U(a){var b={},c,d;for(d in a)a.hasOwnProperty(d)&&(c=l(d))&&(b[c]=a[d]);return b}function sa(a){var b,c;if(0===a.indexOf("week"))b=7,c="day";else if(0===a.indexOf("month"))b=12,c="month";else return;e[a]=function(d,f){var i,g,h=e.fn._lang[a],
j=[];"number"===typeof d&&(f=d,d=void 0);g=function(a){a=e().utc().set(c,a);return h.call(e.fn._lang,a,d||"")};if(null!=f)return g(f);for(i=0;i<b;i++)j.push(g(i));return j}}function h(a){var a=+a,b=0;0!==a&&isFinite(a)&&(b=0<=a?Math.floor(a):Math.ceil(a));return b}function F(a){return 0===a%4&&0!==a%100||0===a%400}function T(a){var b;if(a._a&&-2===a._pf.overflow){b=0>a._a[t]||11<a._a[t]?t:1>a._a[q]||a._a[q]>(new Date(Date.UTC(a._a[o],a._a[t]+1,0))).getUTCDate()?q:0>a._a[n]||23<a._a[n]?n:0>a._a[u]||
59<a._a[u]?u:0>a._a[x]||59<a._a[x]?x:0>a._a[y]||999<a._a[y]?y:-1;if(a._pf._overflowDayOfYear&&(b<o||b>q))b=q;a._pf.overflow=b}}function W(a){a._pf={empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1}}function X(a){null==a._isValid&&(a._isValid=!isNaN(a._d.getTime())&&0>a._pf.overflow&&!a._pf.empty&&!a._pf.invalidMonth&&!a._pf.nullInput&&!a._pf.invalidFormat&&!a._pf.userInvalidated,a._strict&&(a._isValid=a._isValid&&
0===a._pf.charsLeftOver&&0===a._pf.unusedTokens.length));return a._isValid}function G(a){return a?a.toLowerCase().replace("_","-"):a}function H(a,b){return b._isUTC?e(a).zone(b._offset||0):e(a).local()}function p(a){var b=0,c,d,f,i,g=function(a){if(!v[a]&&Y)try{require("./lang/"+a)}catch(b){}return v[a]};if(!a)return e.fn._lang;if(!E(a)){if(d=g(a))return d;a=[a]}for(;b<a.length;){i=G(a[b]).split("-");c=i.length;for(f=(f=G(a[b+1]))?f.split("-"):null;0<c;){if(d=g(i.slice(0,c).join("-")))return d;if(f&&
f.length>=c&&V(i,f,!0)>=c-1)break;c--}b++}return e.fn._lang}function I(a,b){if(!a.isValid())return a.lang().invalidDate();b=Z(b,a.lang());if(!J[b]){var c=J,d=b,f=b,e=f.match($),g,h;g=0;for(h=e.length;g<h;g++)e[g]=r[e[g]]?r[e[g]]:e[g].match(/\[[\s\S]/)?e[g].replace(/^\[|\]$/g,""):e[g].replace(/\\/g,"");c[d]=function(a){var b="";for(g=0;g<h;g++)b+=e[g]instanceof Function?e[g].call(a,f):e[g];return b}}return J[b](a)}function Z(a,b){function c(a){return b.longDateFormat(a)||a}var d=5;for(z.lastIndex=
0;0<=d&&z.test(a);)a=a.replace(z,c),z.lastIndex=0,d-=1;return a}function ta(a,b){var c=b._strict;switch(a){case "DDDD":return aa;case "YYYY":case "GGGG":case "gggg":return c?ua:va;case "YYYYYY":case "YYYYY":case "GGGGG":case "ggggg":return c?wa:xa;case "S":if(c)return ba;case "SS":if(c)return ca;case "SSS":case "DDD":return c?aa:ya;case "MMM":case "MMMM":case "dd":case "ddd":case "dddd":return za;case "a":case "A":return p(b._l)._meridiemParse;case "X":return Aa;case "Z":case "ZZ":return K;case "T":return Ba;
case "SSSS":return Ca;case "MM":case "DD":case "YY":case "GG":case "gg":case "HH":case "hh":case "mm":case "ss":case "ww":case "WW":return c?ca:da;case "M":case "D":case "d":case "H":case "h":case "m":case "s":case "w":case "W":case "e":case "E":return c?ba:da;default:var c=RegExp,d;d=a.replace("\\","").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(a,b,c,d,e){return b||c||d||e}).replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&");return new c(d)}}function ea(a){var a=(a||"").match(K)||[],a=((a[a.length-
1]||[])+"").match(Da)||["-",0,0],b=+(60*a[1])+h(a[2]);return"+"===a[0]?-b:b}function L(a){var b,c=[],d,f,i,g,j;if(!a._d){d=new Date;d=a._useUTC?[d.getUTCFullYear(),d.getUTCMonth(),d.getUTCDate()]:[d.getFullYear(),d.getMonth(),d.getDate()];a._w&&(null==a._a[q]&&null==a._a[t])&&(b=function(b){var c=parseInt(b,10);return b?3>b.length?68<c?1900+c:2E3+c:c:null==a._a[o]?e().weekYear():a._a[o]},f=a._w,null!=f.GG||null!=f.W||null!=f.E?b=fa(b(f.GG),f.W||1,f.E,4,1):(i=p(a._l),g=null!=f.d?ga(f.d,i):null!=f.e?
parseInt(f.e,10)+i._week.dow:0,j=parseInt(f.w,10)||1,null!=f.d&&g<i._week.dow&&j++,b=fa(b(f.gg),j,g,i._week.doy,i._week.dow)),a._a[o]=b.year,a._dayOfYear=b.dayOfYear);if(a._dayOfYear){b=null==a._a[o]?d[o]:a._a[o];if(a._dayOfYear>(F(b)?366:365))a._pf._overflowDayOfYear=!0;b=ha(b,0,a._dayOfYear);a._a[t]=b.getUTCMonth();a._a[q]=b.getUTCDate()}for(b=0;3>b&&null==a._a[b];++b)a._a[b]=c[b]=d[b];for(;7>b;b++)a._a[b]=c[b]=null==a._a[b]?2===b?1:0:a._a[b];c[n]+=h((a._tzm||0)/60);c[u]+=h((a._tzm||0)%60);a._d=
(a._useUTC?ha:Ea).apply(null,c)}}function M(a){a._a=[];a._pf.empty=!0;var b=p(a._l),c=""+a._i,d,f,e,g,j=c.length,k=0;f=Z(a._f,b).match($)||[];for(b=0;b<f.length;b++){e=f[b];if(d=(c.match(ta(e,a))||[])[0])g=c.substr(0,c.indexOf(d)),0<g.length&&a._pf.unusedInput.push(g),c=c.slice(c.indexOf(d)+d.length),k+=d.length;if(r[e]){d?a._pf.empty=!1:a._pf.unusedTokens.push(e);g=a;var m=void 0,l=g._a;switch(e){case "M":case "MM":null!=d&&(l[t]=h(d)-1);break;case "MMM":case "MMMM":m=p(g._l).monthsParse(d);null!=
m?l[t]=m:g._pf.invalidMonth=d;break;case "D":case "DD":null!=d&&(l[q]=h(d));break;case "DDD":case "DDDD":null!=d&&(g._dayOfYear=h(d));break;case "YY":l[o]=h(d)+(68<h(d)?1900:2E3);break;case "YYYY":case "YYYYY":case "YYYYYY":l[o]=h(d);break;case "a":case "A":g._isPm=p(g._l).isPM(d);break;case "H":case "HH":case "h":case "hh":l[n]=h(d);break;case "m":case "mm":l[u]=h(d);break;case "s":case "ss":l[x]=h(d);break;case "S":case "SS":case "SSS":case "SSSS":l[y]=h(1E3*("0."+d));break;case "X":g._d=new Date(1E3*
parseFloat(d));break;case "Z":case "ZZ":g._useUTC=!0;g._tzm=ea(d);break;case "w":case "ww":case "W":case "WW":case "d":case "dd":case "ddd":case "dddd":case "e":case "E":e=e.substr(0,1);case "gg":case "gggg":case "GG":case "GGGG":case "GGGGG":e=e.substr(0,2),d&&(g._w=g._w||{},g._w[e]=d)}}else a._strict&&!d&&a._pf.unusedTokens.push(e)}a._pf.charsLeftOver=j-k;0<c.length&&a._pf.unusedInput.push(c);a._isPm&&12>a._a[n]&&(a._a[n]+=12);!1===a._isPm&&12===a._a[n]&&(a._a[n]=0);L(a);T(a)}function Ea(a,b,c,
d,f,e,g){b=new Date(a,b,c,d,f,e,g);1970>a&&b.setFullYear(a);return b}function ha(a){var b=new Date(Date.UTC.apply(null,arguments));1970>a&&b.setUTCFullYear(a);return b}function ga(a,b){if("string"===typeof a)if(isNaN(a)){if(a=b.weekdaysParse(a),"number"!==typeof a)return null}else a=parseInt(a,10);return a}function Fa(a,b,c,d,e){return e.relativeTime(b||1,!!c,a,d)}function A(a,b,c){b=c-b;c-=a.day();c>b&&(c-=7);c<b-7&&(c+=7);a=e(a).add("d",c);return{week:Math.ceil(a.dayOfYear()/7),year:a.year()}}function fa(a,
b,c,d,e){var i=(new Date(k(a,6,!0)+"-01-01")).getUTCDay(),b=7*(b-1)+((null!=c?c:e)-e)+(e-i+(i>d?7:0))+1;return{year:0<b?a:a-1,dayOfYear:0<b?b:(F(a-1)?366:365)+b}}function ia(a){var b=a._i,c=a._f;"undefined"===typeof a._pf&&W(a);if(null===b)return e.invalid({nullInput:!0});"string"===typeof b&&(a._i=b=p().preparse(b));if(e.isMoment(b))a=m({},b),a._d=new Date(+b._d);else if(c)if(E(c)){var b=a,d,f,i,g;if(0===b._f.length)b._pf.invalidFormat=!0,b._d=new Date(NaN);else{for(c=0;c<b._f.length;c++)if(g=0,
d=m({},b),W(d),d._f=b._f[c],M(d),X(d)&&(g+=d._pf.charsLeftOver,g+=10*d._pf.unusedTokens.length,d._pf.score=g,null==i||g<i))i=g,f=d;m(b,f||d)}}else M(a);else if(d=a,f=d._i,i=Ga.exec(f),void 0===f)d._d=new Date;else if(i)d._d=new Date(+i[1]);else if("string"===typeof f)if(i=d._i,b=Ha.exec(i)){d._pf.iso=!0;for(f=4;0<f;f--)if(b[f]){d._f=Ia[f-1]+(b[6]||" ");break}for(f=0;4>f;f++)if(ja[f][1].exec(i)){d._f+=ja[f][0];break}i.match(K)&&(d._f+="Z");M(d)}else d._d=new Date(i);else E(f)?(d._a=f.slice(0),L(d)):
"[object Date]"===Object.prototype.toString.call(f)||f instanceof Date?d._d=new Date(+f):"object"===typeof f?d._d||(f=U(d._i),d._a=[f.year,f.month,f.day,f.hour,f.minute,f.second,f.millisecond],L(d)):d._d=new Date(f);return new B(a)}function ka(a,b){e.fn[a]=e.fn[a+"s"]=function(a){var d=this._isUTC?"UTC":"";return null!=a?(this._d["set"+d+b](a),e.updateOffset(this),this):this._d["get"+d+b]()}}function Ja(a){e.duration.fn[a]=function(){return this._data[a]}}function la(a,b){e.duration.fn["as"+a]=function(){return+this/
b}}function N(a){var b=!1,c=e;"undefined"===typeof ender&&(a?(O.moment=function(){!b&&(console&&console.warn)&&(b=!0,console.warn("Accessing Moment through the global scope is deprecated, and will be removed in an upcoming release."));return c.apply(null,arguments)},m(O.moment,c)):O.moment=e)}for(var e,O=this,w=Math.round,j,o=0,t=1,q=2,n=3,u=4,x=5,y=6,v={},Y="undefined"!==typeof module&&module.exports&&"undefined"!==typeof require,Ga=/^\/?Date\((\-?\d+)/i,Ka=/(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/,
La=/^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/,$=/(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|X|zz?|ZZ?|.)/g,z=/(\[[^\[]*\])|(\\)?(LT|LL?L?L?|l{1,4})/g,da=/\d\d?/,ya=/\d{1,3}/,va=/\d{1,4}/,xa=/[+\-]?\d{1,6}/,Ca=/\d+/,za=/[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i,
K=/Z|[\+\-]\d\d:?\d\d/gi,Ba=/T/i,Aa=/[\+\-]?\d+(\.\d{1,3})?/,ba=/\d/,ca=/\d\d/,aa=/\d{3}/,ua=/\d{4}/,wa=/[+\-]?\d{6}/,Ha=/^\s*\d{4}-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,Ia=["YYYY-MM-DD","GGGG-[W]WW","GGGG-[W]WW-E","YYYY-DDD"],ja=[["HH:mm:ss.SSSS",/(T| )\d\d:\d\d:\d\d\.\d{1,3}/],["HH:mm:ss",/(T| )\d\d:\d\d:\d\d/],["HH:mm",/(T| )\d\d:\d\d/],["HH",/(T| )\d\d/]],Da=/([\+\-]|\d\d)/gi,P=["Date","Hours","Minutes","Seconds","Milliseconds"],
Q={Milliseconds:1,Seconds:1E3,Minutes:6E4,Hours:36E5,Days:864E5,Months:2592E6,Years:31536E6},qa={ms:"millisecond",s:"second",m:"minute",h:"hour",d:"day",D:"date",w:"week",W:"isoWeek",M:"month",y:"year",DDD:"dayOfYear",e:"weekday",E:"isoWeekday",gg:"weekYear",GG:"isoWeekYear"},ra={dayofyear:"dayOfYear",isoweekday:"isoWeekday",isoweek:"isoWeek",weekyear:"weekYear",isoweekyear:"isoWeekYear"},J={},ma="DDD w W M D d".split(" "),na="MDHhmswW".split(""),r={M:function(){return this.month()+1},MMM:function(a){return this.lang().monthsShort(this,
a)},MMMM:function(a){return this.lang().months(this,a)},D:function(){return this.date()},DDD:function(){return this.dayOfYear()},d:function(){return this.day()},dd:function(a){return this.lang().weekdaysMin(this,a)},ddd:function(a){return this.lang().weekdaysShort(this,a)},dddd:function(a){return this.lang().weekdays(this,a)},w:function(){return this.week()},W:function(){return this.isoWeek()},YY:function(){return k(this.year()%100,2)},YYYY:function(){return k(this.year(),4)},YYYYY:function(){return k(this.year(),
5)},YYYYYY:function(){var a=this.year();return(0<=a?"+":"-")+k(Math.abs(a),6)},gg:function(){return k(this.weekYear()%100,2)},gggg:function(){return this.weekYear()},ggggg:function(){return k(this.weekYear(),5)},GG:function(){return k(this.isoWeekYear()%100,2)},GGGG:function(){return this.isoWeekYear()},GGGGG:function(){return k(this.isoWeekYear(),5)},e:function(){return this.weekday()},E:function(){return this.isoWeekday()},a:function(){return this.lang().meridiem(this.hours(),this.minutes(),!0)},
A:function(){return this.lang().meridiem(this.hours(),this.minutes(),!1)},H:function(){return this.hours()},h:function(){return this.hours()%12||12},m:function(){return this.minutes()},s:function(){return this.seconds()},S:function(){return h(this.milliseconds()/100)},SS:function(){return k(h(this.milliseconds()/10),2)},SSS:function(){return k(this.milliseconds(),3)},SSSS:function(){return k(this.milliseconds(),3)},Z:function(){var a=-this.zone(),b="+";0>a&&(a=-a,b="-");return b+k(h(a/60),2)+":"+
k(h(a)%60,2)},ZZ:function(){var a=-this.zone(),b="+";0>a&&(a=-a,b="-");return b+k(h(a/60),2)+k(h(a)%60,2)},z:function(){return this.zoneAbbr()},zz:function(){return this.zoneName()},X:function(){return this.unix()},Q:function(){return this.quarter()}},oa=["months","monthsShort","weekdays","weekdaysShort","weekdaysMin"];ma.length;)j=ma.pop(),r[j+"o"]=pa(r[j],j);for(;na.length;)j=na.pop(),r[j+j]=R(r[j],2);r.DDDD=R(r.DDD,3);m(S.prototype,{set:function(a){var b,c;for(c in a)b=a[c],"function"===typeof b?
this[c]=b:this["_"+c]=b},_months:"January February March April May June July August September October November December".split(" "),months:function(a){return this._months[a.month()]},_monthsShort:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "),monthsShort:function(a){return this._monthsShort[a.month()]},monthsParse:function(a){var b,c;this._monthsParse||(this._monthsParse=[]);for(b=0;12>b;b++)if(this._monthsParse[b]||(c=e.utc([2E3,b]),c="^"+this.months(c,"")+"|^"+this.monthsShort(c,""),
this._monthsParse[b]=RegExp(c.replace(".",""),"i")),this._monthsParse[b].test(a))return b},_weekdays:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),weekdays:function(a){return this._weekdays[a.day()]},_weekdaysShort:"Sun Mon Tue Wed Thu Fri Sat".split(" "),weekdaysShort:function(a){return this._weekdaysShort[a.day()]},_weekdaysMin:"Su Mo Tu We Th Fr Sa".split(" "),weekdaysMin:function(a){return this._weekdaysMin[a.day()]},weekdaysParse:function(a){var b,c;this._weekdaysParse||
(this._weekdaysParse=[]);for(b=0;7>b;b++)if(this._weekdaysParse[b]||(c=e([2E3,1]).day(b),c="^"+this.weekdays(c,"")+"|^"+this.weekdaysShort(c,"")+"|^"+this.weekdaysMin(c,""),this._weekdaysParse[b]=RegExp(c.replace(".",""),"i")),this._weekdaysParse[b].test(a))return b},_longDateFormat:{LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D YYYY",LLL:"MMMM D YYYY LT",LLLL:"dddd, MMMM D YYYY LT"},longDateFormat:function(a){var b=this._longDateFormat[a];!b&&this._longDateFormat[a.toUpperCase()]&&(b=this._longDateFormat[a.toUpperCase()].replace(/MMMM|MM|DD|dddd/g,
function(a){return a.slice(1)}),this._longDateFormat[a]=b);return b},isPM:function(a){return"p"===(a+"").toLowerCase().charAt(0)},_meridiemParse:/[ap]\.?m?\.?/i,meridiem:function(a,b,c){return 11<a?c?"pm":"PM":c?"am":"AM"},_calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},calendar:function(a,b){var c=this._calendar[a];return"function"===typeof c?c.apply(b):c},_relativeTime:{future:"in %s",
past:"%s ago",s:"a few seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},relativeTime:function(a,b,c,d){var e=this._relativeTime[c];return"function"===typeof e?e(a,b,c,d):e.replace(/%d/i,a)},pastFuture:function(a,b){var c=this._relativeTime[0<a?"future":"past"];return"function"===typeof c?c(b):c.replace(/%s/i,b)},ordinal:function(a){return this._ordinal.replace("%d",a)},_ordinal:"%d",preparse:function(a){return a},
postformat:function(a){return a},week:function(a){return A(a,this._week.dow,this._week.doy).week},_week:{dow:0,doy:6},_invalidDate:"Invalid date",invalidDate:function(){return this._invalidDate}});e=function(a,b,c,d){"boolean"===typeof c&&(d=c,c=void 0);return ia({_i:a,_f:b,_l:c,_strict:d,_isUTC:!1})};e.utc=function(a,b,c,d){"boolean"===typeof c&&(d=c,c=void 0);return ia({_useUTC:!0,_isUTC:!0,_l:c,_i:a,_f:b,_strict:d}).utc()};e.unix=function(a){return e(1E3*a)};e.duration=function(a,b){var c=a,d=
null,f;if(e.isDuration(a))c={ms:a._milliseconds,d:a._days,M:a._months};else if("number"===typeof a)c={},b?c[b]=a:c.milliseconds=a;else if(d=Ka.exec(a))f="-"===d[1]?-1:1,c={y:0,d:h(d[q])*f,h:h(d[n])*f,m:h(d[u])*f,s:h(d[x])*f,ms:h(d[y])*f};else if(d=La.exec(a))f="-"===d[1]?-1:1,c=function(a){a=a&&parseFloat(a.replace(",","."));return(isNaN(a)?0:a)*f},c={y:c(d[2]),M:c(d[3]),d:c(d[4]),h:c(d[5]),m:c(d[6]),s:c(d[7]),w:c(d[8])};d=new C(c);e.isDuration(a)&&a.hasOwnProperty("_lang")&&(d._lang=a._lang);return d};
e.version="2.5.0";e.defaultFormat="YYYY-MM-DDTHH:mm:ssZ";e.updateOffset=function(){};e.lang=function(a,b){if(!a)return e.fn._lang._abbr;if(b){var c=G(a);b.abbr=c;v[c]||(v[c]=new S);v[c].set(b)}else null===b?(delete v[a],a="en"):v[a]||p(a);return(e.duration.fn._lang=e.fn._lang=p(a))._abbr};e.langData=function(a){a&&(a._lang&&a._lang._abbr)&&(a=a._lang._abbr);return p(a)};e.isMoment=function(a){return a instanceof B};e.isDuration=function(a){return a instanceof C};for(j=oa.length-1;0<=j;--j)sa(oa[j]);
e.normalizeUnits=function(a){return l(a)};e.invalid=function(a){var b=e.utc(NaN);null!=a?m(b._pf,a):b._pf.userInvalidated=!0;return b};e.parseZone=function(a){return e(a).parseZone()};m(e.fn=B.prototype,{clone:function(){return e(this)},valueOf:function(){return+this._d+6E4*(this._offset||0)},unix:function(){return Math.floor(+this/1E3)},toString:function(){return this.clone().lang("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")},toDate:function(){return this._offset?new Date(+this):this._d},toISOString:function(){var a=
e(this).utc();return 0<a.year()&&9999>=a.year()?I(a,"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]"):I(a,"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]")},toArray:function(){return[this.year(),this.month(),this.date(),this.hours(),this.minutes(),this.seconds(),this.milliseconds()]},isValid:function(){return X(this)},isDSTShifted:function(){return this._a?this.isValid()&&0<V(this._a,(this._isUTC?e.utc(this._a):e(this._a)).toArray()):!1},parsingFlags:function(){return m({},this._pf)},invalidAt:function(){return this._pf.overflow},
utc:function(){return this.zone(0)},local:function(){this.zone(0);this._isUTC=!1;return this},format:function(a){a=I(this,a||e.defaultFormat);return this.lang().postformat(a)},add:function(a,b){var c;c="string"===typeof a?e.duration(+b,a):e.duration(a,b);D(this,c,1);return this},subtract:function(a,b){var c;c="string"===typeof a?e.duration(+b,a):e.duration(a,b);D(this,c,-1);return this},diff:function(a,b,c){var a=H(a,this),d=6E4*(this.zone()-a.zone()),f,b=l(b);"year"===b||"month"===b?(f=432E5*(this.daysInMonth()+
a.daysInMonth()),d=12*(this.year()-a.year())+(this.month()-a.month()),d+=(this-e(this).startOf("month")-(a-e(a).startOf("month")))/f,d-=6E4*(this.zone()-e(this).startOf("month").zone()-(a.zone()-e(a).startOf("month").zone()))/f,"year"===b&&(d/=12)):(f=this-a,d="second"===b?f/1E3:"minute"===b?f/6E4:"hour"===b?f/36E5:"day"===b?(f-d)/864E5:"week"===b?(f-d)/6048E5:f);return c?d:s(d)},from:function(a,b){return e.duration(this.diff(a)).lang(this.lang()._abbr).humanize(!b)},fromNow:function(a){return this.from(e(),
a)},calendar:function(){var a=H(e(),this).startOf("day"),a=this.diff(a,"days",!0);return this.format(this.lang().calendar(-6>a?"sameElse":-1>a?"lastWeek":0>a?"lastDay":1>a?"sameDay":2>a?"nextDay":7>a?"nextWeek":"sameElse",this))},isLeapYear:function(){return F(this.year())},isDST:function(){return this.zone()<this.clone().month(0).zone()||this.zone()<this.clone().month(5).zone()},day:function(a){var b=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=a?(a=ga(a,this.lang()),this.add({d:a-
b})):b},month:function(a){var b=this._isUTC?"UTC":"",c;if(null!=a){if("string"===typeof a&&(a=this.lang().monthsParse(a),"number"!==typeof a))return this;c=this.date();this.date(1);this._d["set"+b+"Month"](a);this.date(Math.min(c,this.daysInMonth()));e.updateOffset(this);return this}return this._d["get"+b+"Month"]()},startOf:function(a){a=l(a);switch(a){case "year":this.month(0);case "month":this.date(1);case "week":case "isoWeek":case "day":this.hours(0);case "hour":this.minutes(0);case "minute":this.seconds(0);
case "second":this.milliseconds(0)}"week"===a?this.weekday(0):"isoWeek"===a&&this.isoWeekday(1);return this},endOf:function(a){a=l(a);return this.startOf(a).add("isoWeek"===a?"week":a,1).subtract("ms",1)},isAfter:function(a,b){b="undefined"!==typeof b?b:"millisecond";return+this.clone().startOf(b)>+e(a).startOf(b)},isBefore:function(a,b){b="undefined"!==typeof b?b:"millisecond";return+this.clone().startOf(b)<+e(a).startOf(b)},isSame:function(a,b){b=b||"ms";return+this.clone().startOf(b)===+H(a,this).startOf(b)},
min:function(a){a=e.apply(null,arguments);return a<this?this:a},max:function(a){a=e.apply(null,arguments);return a>this?this:a},zone:function(a){var b=this._offset||0;if(null!=a)"string"===typeof a&&(a=ea(a)),16>Math.abs(a)&&(a*=60),this._offset=a,this._isUTC=!0,b!==a&&D(this,e.duration(b-a,"m"),1,!0);else return this._isUTC?b:this._d.getTimezoneOffset();return this},zoneAbbr:function(){return this._isUTC?"UTC":""},zoneName:function(){return this._isUTC?"Coordinated Universal Time":""},parseZone:function(){this._tzm?
this.zone(this._tzm):"string"===typeof this._i&&this.zone(this._i);return this},hasAlignedHourOffset:function(a){a=a?e(a).zone():0;return 0===(this.zone()-a)%60},daysInMonth:function(){var a=this.year(),b=this.month();return(new Date(Date.UTC(a,b+1,0))).getUTCDate()},dayOfYear:function(a){var b=w((e(this).startOf("day")-e(this).startOf("year"))/864E5)+1;return null==a?b:this.add("d",a-b)},quarter:function(){return Math.ceil((this.month()+1)/3)},weekYear:function(a){var b=A(this,this.lang()._week.dow,
this.lang()._week.doy).year;return null==a?b:this.add("y",a-b)},isoWeekYear:function(a){var b=A(this,1,4).year;return null==a?b:this.add("y",a-b)},week:function(a){var b=this.lang().week(this);return null==a?b:this.add("d",7*(a-b))},isoWeek:function(a){var b=A(this,1,4).week;return null==a?b:this.add("d",7*(a-b))},weekday:function(a){var b=(this.day()+7-this.lang()._week.dow)%7;return null==a?b:this.add("d",a-b)},isoWeekday:function(a){return null==a?this.day()||7:this.day(this.day()%7?a:a-7)},get:function(a){a=
l(a);return this[a]()},set:function(a,b){a=l(a);if("function"===typeof this[a])this[a](b);return this},lang:function(a){if(void 0===a)return this._lang;this._lang=p(a);return this}});for(j=0;j<P.length;j++)ka(P[j].toLowerCase().replace(/s$/,""),P[j]);ka("year","FullYear");e.fn.days=e.fn.day;e.fn.months=e.fn.month;e.fn.weeks=e.fn.week;e.fn.isoWeeks=e.fn.isoWeek;e.fn.toJSON=e.fn.toISOString;m(e.duration.fn=C.prototype,{_bubble:function(){var a=this._milliseconds,b=this._days,c=this._months,d=this._data;
d.milliseconds=a%1E3;a=s(a/1E3);d.seconds=a%60;a=s(a/60);d.minutes=a%60;a=s(a/60);d.hours=a%24;b+=s(a/24);d.days=b%30;c+=s(b/30);d.months=c%12;b=s(c/12);d.years=b},weeks:function(){return s(this.days()/7)},valueOf:function(){return this._milliseconds+864E5*this._days+2592E6*(this._months%12)+31536E6*h(this._months/12)},humanize:function(a){var b=+this,c;c=!a;var d=this.lang(),e=w(Math.abs(b)/1E3),i=w(e/60),g=w(i/60),h=w(g/24),j=w(h/365),e=45>e&&["s",e]||1===i&&["m"]||45>i&&["mm",i]||1===g&&["h"]||
22>g&&["hh",g]||1===h&&["d"]||25>=h&&["dd",h]||45>=h&&["M"]||345>h&&["MM",w(h/30)]||1===j&&["y"]||["yy",j];e[2]=c;e[3]=0<b;e[4]=d;c=Fa.apply({},e);a&&(c=this.lang().pastFuture(b,c));return this.lang().postformat(c)},add:function(a,b){var c=e.duration(a,b);this._milliseconds+=c._milliseconds;this._days+=c._days;this._months+=c._months;this._bubble();return this},subtract:function(a,b){var c=e.duration(a,b);this._milliseconds-=c._milliseconds;this._days-=c._days;this._months-=c._months;this._bubble();
return this},get:function(a){a=l(a);return this[a.toLowerCase()+"s"]()},as:function(a){a=l(a);return this["as"+a.charAt(0).toUpperCase()+a.slice(1)+"s"]()},lang:e.fn.lang,toIsoString:function(){var a=Math.abs(this.years()),b=Math.abs(this.months()),c=Math.abs(this.days()),d=Math.abs(this.hours()),e=Math.abs(this.minutes()),h=Math.abs(this.seconds()+this.milliseconds()/1E3);return!this.asSeconds()?"P0D":(0>this.asSeconds()?"-":"")+"P"+(a?a+"Y":"")+(b?b+"M":"")+(c?c+"D":"")+(d||e||h?"T":"")+(d?d+"H":
"")+(e?e+"M":"")+(h?h+"S":"")}});for(j in Q)Q.hasOwnProperty(j)&&(la(j,Q[j]),Ja(j.toLowerCase()));la("Weeks",6048E5);e.duration.fn.asMonths=function(){return(+this-31536E6*this.years())/2592E6+12*this.years()};e.lang("en",{ordinal:function(a){var b=a%10,b=1===h(a%100/10)?"th":1===b?"st":2===b?"nd":3===b?"rd":"th";return a+b}});Y?(module.exports=e,N(!0)):"function"===typeof define&&define.amd?define("moment",function(a,b,c){c.config&&(c.config()&&!0!==c.config().noGlobal)&&N(void 0===c.config().noGlobal);
return e}):N()}).call(this);
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'confluence.web.resources:moment', location = '/includes/js/amd/shim/moment-amd.js' */
define("moment",function(){return moment});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:page-editor-js', location = 'editor/page-editor-message.js' */
/*eslint-env browser*/
define('confluence-editor/editor/page-editor-message', [
    'jquery',
    'ajs',
    'aui/flag',
    'document',
    'underscore'
], function (
    $,
    AJS,
    Flag,
    document,
    _) {
    'use strict';

    // map of message types
    var messageTypes = Object.create(null);
    var suppressedMessages = Object.create(null);

    // Remove message from array when it is closed.
    document.addEventListener('aui-flag-close', function (e) {
        if (e && e.target) {
            messageTypes = _.filter(Object.keys(messageTypes), function (groupMessage) {
                return !$(e.target).find('span').hasClass(groupMessage);
            });
        }
    });

    return {
        /**
         * Creates an Aui flag in the confluence editor.
         * @param groupMessage the message key
         * @param options options used to create the Flag
         * @param callback callback function to execute
         */
        handleMessage: function (groupMessage, options, callback) {
            if (messageTypes[groupMessage]) {
                return;
            }

            if (suppressedMessages[groupMessage]) {
                delete suppressedMessages[groupMessage];
                return;
            }

            if (options) {
                messageTypes[groupMessage] = Flag({
                    title: options.title ? options.title : '',
                    type: options.type,
                    close: options.close ? options.close : 'manual',
                    persistent: false,
                    body: "<span class='" + groupMessage + "'>" + options.message + "</span>"
                });

                if (callback) {
                    callback();
                }
            }
        },

        /**
         * Closes message flag windows.
         * @param groupMessages an array of strings indicating the messages to be closed.
         */
        closeMessages: function (groupMessages) {
            _.each(groupMessages, function (messageKey) {
                if (messageTypes[messageKey]) {
                    messageTypes[messageKey].close();
                    delete messageTypes[messageKey];
                }
            });
        },

        /**
         * Indicates whether a message flag with a particular key is open.
         * @param groupMessage message key to ask about
         * @returns {boolean} true or false
         */
        isDisplayed: function (groupMessage) {
            return groupMessage in messageTypes;
        },

        /**
         * Returns the keys for all currently displayed messages.
         * @returns {Array} of strings
         */
        displayedErrors: function () {
            return Object.keys(messageTypes);
        },

        /**
         * Marks a message key to not be displayed the next time it's attempted.
         */
        suppressMessage: function(groupMessage) {
            suppressedMessages[groupMessage] = {};
        }
    };
});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:page-editor-js', location = 'editor/page-editor.js' */
define('confluence-editor/editor/page-editor', [
    'ajs',
    'confluence/legacy',
    'jquery',
    'document',
    'window',
    'confluence/meta',
    'confluence/api/constants',
    'confluence-editor/editor/page-editor-message'
], function(
    AJS,
    Confluence,
    $,
    document,
    window,
    Meta,
    CONSTANTS,
    Message
) {
    "use strict";

    var isEditorAjaxSaveEnable = AJS.DarkFeatures.isEnabled('editor.ajax.save') &&
            !AJS.DarkFeatures.isEnabled('editor.ajax.save.disable') &&
            Meta.get('remote-user') !== '';
    // Cancel handlers. These handlers are retained so they can conveniently all be removed.
    var cancelHandlers = [];

    // The handlers for the save button
    var saveHandlers = [];

    // Submit handlers. These handlers are retained so they can conveniently all be removed.
    var submitHandlers = [];

    var deferredBindingRequired = false;
    var numConcurrentEditors = 1;

    var showErrorMessage = function(options) {
        var messageKey = options.messageKey || "editor-error-message";
        var message = options.message || "\u0427\u0442\u043e-\u0442\u043e \u043f\u043e\u0448\u043b\u043e \u043d\u0435 \u0442\u0430\u043a \u0441 \u0440\u0435\u0434\u0430\u043a\u0442\u043e\u0440\u043e\u043c. \u0421\u043a\u043e\u043f\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u0430\u0448\u0438 \u043d\u0435\u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u043d\u044b\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0438 \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0434\u043b\u044f \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0435\u043d\u0438\u044f \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f.";
        Message.handleMessage(messageKey, {
                type: "error",
                message: message
        },
            function(){
                if (options.disablePublish) {
                    Confluence.Editor.UI.setButtonState(false, Confluence.Editor.UI.saveButton);
                    Confluence.Editor.UI.setButtonState(false, Confluence.Editor.UI.previewButton);
                    Confluence.Editor.UI.setButtonState(false, Confluence.Editor.UI.discardButton);
                }
            }
        );
    };

    var handleFallbackTransition = function(isFallbackModeEnabled) {
        if (isFallbackModeEnabled !== AJS.Meta.getBoolean('fallback-mode')) {
            AJS.Meta.set('fallback-mode', isFallbackModeEnabled);

            var message;

            if (AJS.Meta.getBoolean('fallback-mode')) {
                message = "\u0421\u043e\u0432\u043c\u0435\u0441\u0442\u043d\u043e\u0435 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0435\u0439\u0447\u0430\u0441 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432\u043d\u0435 \u0441\u0435\u0442\u0438. \u0421\u043a\u043e\u043f\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u0430\u0448\u0443 \u0440\u0430\u0431\u043e\u0442\u0443? \u0421\u043a\u043e\u043f\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u0430\u0448\u0443 \u0440\u0430\u0431\u043e\u0442\u0443, \u0437\u0430\u0442\u0435\u043c \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0434\u043b\u044f \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0435\u043d\u0438\u044f \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f.";
            } else {
                message = "\u0421\u043e\u0432\u043c\u0435\u0441\u0442\u043d\u043e\u0435 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0431\u044b\u043b\u043e \u043e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u043e, \u043d\u043e \u043e\u043d\u043e \u0441\u043d\u043e\u0432\u0430 \u043c\u043e\u0436\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f. \u0421\u043a\u043e\u043f\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u0430\u0448\u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0438 \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u044c \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435.";
            }

            showErrorMessage({
                messageKey: "fallback-mode-transition",
                message: message,
                disablePublish: true
            });
        }
    };

    var isFallbackModeEnabled = function() {
        return AJS.Meta.getBoolean('fallback-mode');
    };

    var onSave = function(e) {
        var saveAllowed = true;

        Message.closeMessages(["offline-before-save-error"]);

        for (var i = 0; i < saveHandlers.length; i++) {
            if (saveHandlers[i](e) === false) { //'undefined' means ok
                saveAllowed = false;
            }

            if(e.isImmediatePropagationStopped()) {
                break;
            }
        }

        if (!saveAllowed || e.isDefaultPrevented() || e.isPropagationStopped()) {
            return false;
        }

        // We prevent the default and execute whatever before save function is registered
        e.preventDefault();

        beforeSave(e)
                .done(doSave)
                .fail(doFail);
    };

    var doFail = function (e) {

        showErrorMessage({
            messageKey: "offline-before-save-error",
            message: "\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443. \u0412 \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0438\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c.",
            disablePublish: false
        });

        if (e) {
            AJS.trigger('analytics', { name: 'editor.save.error.' + e.origin + '.' + e.cause, data: {
                message: e.message
            }});
        }

        Confluence.Editor.UI.toggleSavebarBusy(false);
        // When clicking save, we unbind the unload message
        // If there has been an error saving, we must rebind it
        Confluence.Editor.Drafts.bindUnloadMessage();
    };

    // By default do nothing, but we allow to override this for Synchrony sync ack
    var beforeSave = function(e) {
        var deferred = $.Deferred();
        deferred.resolve();
        return deferred.promise();
    };

    // By default submit the form, but we allow to override this for reliable save
    var defaultDoSave = function() {
        $(Confluence.Editor.getCurrentForm()).submit();
    };

    var doSave = defaultDoSave;

    function showBlanket() {
        //only one of these should exist
        var pageForm = $('#editpageform, #createpageform');
        pageForm.addClass('editor-loading editor-loading-spinner');
        pageForm.attr('aria-busy', true);
        $('#content-title').attr('tabindex', -1);
        $('#wysiwygTextarea_ifr').attr('tabindex', -1);
        $('.aui-toolbar2-primary').addClass('editor-loading');
    }

    function hideBlanket() {
        var pageForm = $('#editpageform, #createpageform');
        pageForm.removeClass('editor-loading editor-loading-spinner');
        pageForm.attr('aria-busy', false);
        $('#rte').css('opacity', 1).addClass('ease-in');
        $('#content-title').attr('tabindex', 1);
        $('#wysiwygTextarea_ifr').attr('tabindex', 100);
        $('#content-title-div').css('opacity', 1).addClass('ease-in');
        $('.aui-toolbar2-primary').removeClass('editor-loading');
    }

    var applyBlanket = function() {
        if (AJS.Meta.getBoolean('shared-drafts') && !AJS.Meta.getBoolean('fallback-mode') && AJS.Meta.get("content-type") !== 'comment') {
            // show a comfort blankey till synchrony has bound and set editor contents
            var startTime = new Date().getTime();
            showBlanket();
            var deferred = $.Deferred();

            deferred.done(function() {
                hideBlanket();
            }).fail(function() {
                showErrorMessage({
                    messageKey: "collaborative-editor-load-failure",
                    message: "\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0440\u0435\u0434\u0430\u043a\u0442\u043e\u0440\u0430 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0431\u043e\u043b\u044c\u0448\u0435 \u0432\u0440\u0435\u043c\u0435\u043d\u0438, \u0447\u0435\u043c \u043e\u0431\u044b\u0447\u043d\u043e... \u041f\u043e\u0434\u043e\u0436\u0434\u0438\u0442\u0435 \u043d\u0435\u043c\u043d\u043e\u0433\u043e, \u0438 \u0435\u0441\u043b\u0438 \u043e\u043d \u0432\u0441\u0435 \u0435\u0449\u0435 \u043d\u0435 \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442\u0441\u044f, \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u0435 \u0432\u0430\u0448\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443. \u0415\u0441\u043b\u0438 \u044d\u0442\u043e \u043d\u0435 \u043f\u043e\u043c\u043e\u0436\u0435\u0442, \u0441\u0432\u044f\u0436\u0438\u0442\u0435\u0441\u044c \u0441 \u0432\u0430\u0448\u0438\u043c \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u043e\u043c Confluence.",
                    disablePublish: false
                });
            });

            AJS.bind('synchrony.connected', function () {
                if (deferred.isRejected()) {
                    hideBlanket();
                    Message.closeMessages(["collaborative-editor-load-failure"]);
                } else {
                    deferred.resolve();
                }
                var endTime = new Date().getTime();
                AJS.trigger('analyticsEvent', {
                    name: 'confluence.synchrony.editor.loaded',
                    data: {durationMillis: (endTime - startTime)}
                });
            });

            setTimeout(function() {
                if (!deferred.isResolved()) {
                    // a timeout here could be for a number of reasons. Plugin not configured correctly, plugin disabled, or a failure to connect to synchrony, or a very long response from synchrony.
                    AJS.trigger('analyticsEvent', {
                        name: 'confluence.synchrony.editor.load.timeout'
                    });
                    deferred.reject();
                }
            }, 30000);

            return deferred;
        } else {
            $('#rte').css('opacity', 1);
            $('#content-title-div').css('opacity', 1);
        }
    };

    AJS.bind("rte-ready", function() {
        Confluence.Editor.UI.saveButton.bind("click", onSave);
        applyBlanket();
    });

    AJS.bind("editor.error.message", function(e, data) {
        showErrorMessage(data);
    });

    var deferredBinder = function() {
        var i;
        for (i = 0; i < cancelHandlers.length; i++) {
            Confluence.Editor.UI.cancelButton.click(cancelHandlers[i]);
        }

        var $form = $(Confluence.Editor.getCurrentForm());
        for (i = 0; i < submitHandlers.length; i++) {
            $form.submit(submitHandlers[i]);
        }

        $.unbind("init.rte", this);
    };

    var addHandler = function($component, event, handler, handlerList) {
        // is the editor initialised already (i.e. is the component available)
        handlerList.push(handler);

        if (AJS.Rte && AJS.Rte.BootstrapManager && AJS.Rte.BootstrapManager.isInitComplete()) {
            $component.bind(event, handler);
        } else if (!deferredBindingRequired) {
            deferredBindingRequired = true;
            $.bind("init.rte", deferredBinder);
        }
    };

    var removeAllHandlers = function($component, event, handlerList) {
        var unbindFunction = null;
        if (AJS.Rte && AJS.Rte.BootstrapManager && AJS.Rte.BootstrapManager.isInitComplete()) {
            unbindFunction = function($c, e, h) {
                $c.unbind(e, h);
            };
        }

        var handler = handlerList.pop();
        while (handler) {
            unbindFunction && unbindFunction($component, event, handler);
            handler = handlerList.pop();
        }
    };

    function concurrentEditingIsSupported() {
        var isSharedDraftsDarkFeatureEnabled = Meta.getBoolean('shared-drafts');
        var contentTypeSupportsConcurrentEditing = Meta.get('content-type') === 'page' || Meta.get('content-type') === 'blogpost';
        var isExistingContent = AJS.params.pageId !== '0';

        return contentTypeSupportsConcurrentEditing && (isExistingContent || isSharedDraftsDarkFeatureEnabled);
    }

    /**
     * Updates the page xsrf token
     * Currently, we persist this token in many different places:
     * - hidden form input field (so it can be submitted in saving post request)
     * - atl-token meta params. Used by plugins like "drag and drop"
     * - atlassian-token meta params. Used by some other plugins like the "like" plugin
     * @param xsrfToken
     */
    function updateXSRFToken(xsrfToken) {
        $('#editpageform').find("input[name='atl_token']").val(xsrfToken);
        Meta.set('atl-token', xsrfToken);
        Meta.set('atlassian-token', xsrfToken);
        $('#atlassian-token').attr('content', xsrfToken); // since Meta doesn't actually modify the original value from the META tag
        // and we are still reading it directly in some places (like in AJS.safe.ajax)
    }

    return {
        bookmark : '',
        MODE_RICHTEXT: "richtext",
        MODE_SOURCE: "source",
        MODE_PREVIEW: "preview",
        PREVIEW_OUTPUT_TYPE: "PREVIEW",

        currentEditMode: null,
        contentHasChangedSinceLastSave: false,
        sourceInitialValue: false,

        // Stops the drafts from saving if the form is submitting.
        isSubmitting: false,

        // true if the editor is in the process of being cancelled.
        isCancelling: false,

        isFallbackModeEnabled: isFallbackModeEnabled,

        // This is currently for Synchrony and should return a Promise.
        // Don't use this if you don't know what you are doing
        // If more plugins need to do stuff before saving, we need something more sophisticated
        overrideBeforeSave: function(beforeSaveFunction) {
            beforeSave = beforeSaveFunction;
        },

        // This is currently for reliable save.
        // Don't use this if you don't know what you are doing
        overrideSave: function(saveFunction) {
            doSave = saveFunction;
        },

        restoreDefaultSave: function(){
            doSave = defaultDoSave;
        },

        getNumConcurrentEditors: function() {
            return numConcurrentEditors; //Will only be accurate after first heartbeat
        },

        /**
         * Add a function to be called when the editor's cancel operation is activated.
         *
         * @param handler the handler function taking a single event parameter
         */
        addCancelHandler: function(handler) {
            addHandler(Confluence.Editor.UI.cancelButton, "click", handler, cancelHandlers);
        },

        /**
         * Add a function to be called when the editor's save button is clicked.
         *
         * @param handler the handler function taking a single event parameter
         */
        addSaveHandler: function(handler) {
            saveHandlers.push(handler);
        },

        /**
         * Add a function to be called when the editor form is submitted. Please note that both cancel and
         * save are submit operations on the editor (only in page edit)
         *
         * @param handler the handler function taking a single event parameter
         * @return
         */
        addSubmitHandler: function(handler) {
            addHandler($(Confluence.Editor.getCurrentForm()), "submit", handler, submitHandlers);
        },

        /**
         * Remove all the cancel handlers that have been bound.
         */
        removeAllCancelHandlers: function() {
            removeAllHandlers(Confluence.Editor.UI.cancelButton, "click", cancelHandlers);
        },

        /**
         * Remove all the save button handlers that have been bound.
         */
        removeAllSaveHandlers: function() {
            removeAllHandlers(Confluence.Editor.UI.saveButton, "click", saveHandlers);
        },

        /**
         * Remove all the submit handlers that have been bound.
         */
        removeAllSubmitHandlers: function() {
            removeAllHandlers($(Confluence.Editor.getCurrentForm()), "submit", submitHandlers);
        },

        hasContentChanged: function() {
            if (!this.inRichTextMode() && !this.contentHasChangedSinceLastSave) {
                return false;
            }
            return this.editorHasContentChanged();
        },

        editorHasContentChanged: function() {
            //TODO bit of a hack, dies during init otherwise sometimes
            // AJS.Rte lives in the atlassian-editor-plugin so should not be used here.
            if (AJS.Rte.getEditor() == null) {
                AJS.debug("Confluence.Editor: editorHasContentChanged - No active editor present. Returning false.");
                return false;
            }
            return AJS.Rte.Content.editorHasContentChanged();
        },

        /**
         * @returns true if there is no content (other than whitespace). False if there is content.
         */
        isEmpty: function() {
            var content = $(AJS.Rte.getEditor().getContent()).text();
            return !$.trim(content);
        },

        /**
         * Returns a relative URL to resume the draft saved for this page
         */
        getResumeDraftUrl: function() {
            var urlParts = [];
            urlParts.push(CONSTANTS.CONTEXT_PATH);
            urlParts.push("/pages/" + (AJS.params.newPage ? "create" : "edit") + AJS.params.draftType + ".action");
            urlParts.push("?useDraft=true");
            urlParts.push("&pageId=" + AJS.params.pageId);
            urlParts.push("&contentChanged=" + this.hasContentChanged());
            this.getCurrentForm().spaceKey && urlParts.push("&spaceKey=" + Meta.get('space-key'));
            return urlParts.join("");
        },

        /**
         * Returns the currently entered title.
         *
         * @return the current editor title, null if not in edit mode, or editing a comment (i.e. something without a title)
         */
        getCurrentTitle : function() {
            return $('#content-title') && $('#content-title').val();
        },

        /* This function will be invoked when the form gets submitted. */
        contentFormSubmit: function(e) {
            if (isFallbackModeEnabled() || !Confluence.Editor.Drafts.isSharedDraftsEnabled()) {
                Confluence.Editor.Drafts.unBindUnloadMessage();
            }
            // CONF-12750 Disable the title field outside the form
            // to prevent Safari 2.0 from sending the "title" field twice
            $(".editable-title #content-title").prop("disabled", true);

            return true;
        },

        concurrentEditingIsSupported: concurrentEditingIsSupported,

        /**
         * When editing a page then heartbeats will double up in function and also detect concurrent edits.
         * When creating a new page 'concurrent edit' is a bit meaningless so the heartbeat will serve just
         * the single purpose of keeping the session alive.
         */
        heartbeat: function() {
            var data = {
                dataType: "json",
                contentId: Confluence.Editor.Drafts.isNewContent() ? AJS.params.draftId :  AJS.params.pageId,
                draftType: AJS.params.draftType,
                spaceKey: AJS.params.spaceKey
            };


            if (!concurrentEditingIsSupported()) { // just keep session active.
                AJS.safe.post(CONSTANTS.CONTEXT_PATH + "/json/heartbeat.action", {} , function(data){
                            if (data && data.atlToken) {
                                updateXSRFToken(data.atlToken);
                            }
                            AJS.trigger("rte.heartbeat", data);
                        },
                        "json").fail(function(xhr, status, err) {
                            if(xhr.status >= 500 || xhr.status === 0) { // server/network is down (normal response with reset it).
                                Confluence.Editor.heartbeatType.recovery();
                            }
                            AJS.trigger("rte.heartbeat-error", xhr);
                        });
            } else { // keep session active and check for concurrent editors
                AJS.safe.post(CONSTANTS.CONTEXT_PATH + "/json/startheartbeatactivity.action", data, function(resultData) {

                            if (!resultData || !resultData.atlToken || !(resultData.activityResponses instanceof Array)){
                                // We need to be defensive here until CONFDEV-28680 gets resolved, as even after CONFDEV-28371
                                // actions get intercepted and we may not get the expected response
                                AJS.trigger("rte.heartbeat-error", 'Invalid server response');
                                AJS.logError('Unexpected server response for heartbeat:');
                                AJS.log(resultData);
                                return;
                            }

                            var activityResponses = resultData.activityResponses;
                            updateXSRFToken(resultData.atlToken);
                            Confluence.Editor.heartbeatType.normal();
                            AJS.trigger("rte.heartbeat", activityResponses);
                            numConcurrentEditors = (activityResponses.length || 0) + 1;
                            if (numConcurrentEditors > 1) {
                                var $otherUsersEditingMessage = !isEditorAjaxSaveEnable ? $("#other-users-span") : $("#reliable-other-users-span").length === 0 ? $("<span id='reliable-other-users-span'></span>") : $("#reliable-other-users-span");
                                $otherUsersEditingMessage.empty();
                                for (var i = 0; i < numConcurrentEditors-1; ++i) {
                                    if (i > 0) {
                                        $otherUsersEditingMessage.append(", ");
                                    }

                                    var activityResponse = activityResponses[i];
                                    $otherUsersEditingMessage.append(AJS('a').attr('href', CONSTANTS.CONTEXT_PATH + '/display/~' + encodeURIComponent(activityResponse.userName)).text(activityResponse.fullName));
                                    if (activityResponse.lastEditMessage != null) {
                                        $otherUsersEditingMessage.append(" ").append(AJS('span').addClass('smalltext').text(activityResponse.lastEditMessage));
                                    }
                                }
                                if (isEditorAjaxSaveEnable) {
                                     if(!Message.isDisplayed(["heartBeat"]) && $otherUsersEditingMessage.html().trim() !== "") {
                                        Message.handleMessage("heartBeat", {
                                            type: "info",
                                            message: AJS.format("\u042d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0442\u0430\u043a\u0436\u0435 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u0443\u0435\u0442 {0}. \u041f\u0440\u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0431\u0443\u0434\u0443\u0442 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u044b.", "<span id='reliable-other-users-span'>" + $otherUsersEditingMessage.html() + "</span>")
                                        });
                                    }
                                }
                                if (!AJS.isVisible('#heartbeat-div')) { //Avoid sending the event on every heartbeat
                                    AJS.Confluence.Analytics.publish('rte.notification.concurrent-editing', {numEditors: numConcurrentEditors, pageId: AJS.params.pageId, draftType: AJS.params.draftType});
                                }
                            }

                            if (isEditorAjaxSaveEnable && numConcurrentEditors <= 1) {
                                 Message.closeMessages(["heartBeat"]);
                            }

                            AJS.setVisible("#heartbeat-div", numConcurrentEditors > 1);
                            $(document).trigger("resize.resizeplugin");

                            AJS.trigger('editor-heartbeat', resultData);

                            handleFallbackTransition(resultData.isFallbackModeEnabled);
                        },
                        "json").fail(function(xhr, status, err) {
                            if(xhr.status >= 500 || xhr.status === 0) { // server/network is down (normal response with reset it).
                                Confluence.Editor.heartbeatType.recovery();
                            }
                            if (xhr.status === 403 || xhr.status === 401){
                                AJS.logError('Heartbeat error: Unauthorized');
                            }
                            else {
                                AJS.logError('Server error on heartbeat request:');
                                AJS.log(err);
                            }
                            AJS.trigger("rte.heartbeat-error", xhr);
                        });
            }
        },

        /**
         * Allow adjusting of the heartbeat type. normal() for the default scheduling, or recovery() for initially
         * faster scheduling but with exponential backoff (e.g. if the network is down and we want to recover).
         *
         * Recovery mode is used after a 5xx http response is returned.
         */
        heartbeatType: (function() {
            var currentScheduler;

            function schedule(scheduler) {
                if (currentScheduler === scheduler) {
                    return;
                }

                if (currentScheduler) {
                    currentScheduler.clear();
                }

                scheduler.start(Confluence.Editor.heartbeat);

                currentScheduler = scheduler;
            }

            var defaultPeriod = Meta.getNumber('heartbeat-interval') || 30000;

            var normalScheduler = function () {
                var intervalId;

                return {
                    start: function (fn) {
                        AJS.debug('Changing heartbeat to the normal scheduler');

                        intervalId = setInterval(fn, defaultPeriod);
                    },
                    clear: function () {
                        clearInterval(intervalId);
                    }
                };
            }();

            var recoveryScheduler = function () {
                var baseRecoveryPeriod = Math.max(defaultPeriod / 5, 5000); // 6 seconds

                var timeoutId;
                var retryNumber;

                return {
                    start: function (fn) {
                        AJS.debug('Changing heartbeat to the recovery scheduler');

                        retryNumber = 0;

                        var invoker = function () {
                            fn();
                            var sleep = baseRecoveryPeriod * Math.pow(2, retryNumber);

                            // Max 5 min sleep.  It will hit this cap on the 7th attempt
                            timeoutId = setTimeout(invoker, Math.min(sleep, 1000*60*5));
                            retryNumber++;
                        };
                        timeoutId = setTimeout(invoker, baseRecoveryPeriod);
                    },
                    clear: function () {
                        clearTimeout(timeoutId);
                    }
                };
            }();

            return {
                normal: function() {
                    schedule(normalScheduler);
                },
                recovery: function() {
                    schedule(recoveryScheduler);
                },

                /**
                 * Used for tests to force the timer to fully reset, so it's at a known state and we can measure timing.
                 */
                reset: function() {
                    if (currentScheduler) {
                        currentScheduler.clear();
                    }

                    currentScheduler = normalScheduler;
                    currentScheduler.start(Confluence.Editor.heartbeat);
                }
            };
        }()),

        disableFrame: function(body) {
            //disable all forms, buttons and links in the iframe
            $("form", body).each(function() {
                $(this).unbind();
                this.onsubmit = function() {
                    return false;
                };
            });
            $("a", body).each(function() {
                $(this).attr("target", "_top").unbind();
            });
            $("input, img", body).each(function() {
                $(this).unbind();
            });
        },

        /* This function should be invoked when the preview frame has finished loading its content.
         * It is responsible for updating the height of frame body to the actual content's height.
         */
        previewFrameOnload: function(body, iframe) {
            var tinymce = require('tinymce');

            Confluence.Editor.setMode(Confluence.Editor.MODE_PREVIEW);
            tinymce.activeEditor.setProgressState(false);
            Confluence.Editor.disableFrame(body);
            var content = $("#main", body)[0];

            if(Meta.get("content-type") !== "comment" && $(content).find("#main-header").length === 0) {
                var $titleHeading = $('#title-heading');
                var classes = $titleHeading.attr("class");
                $(content).prepend('<div id="preview-header"><div id="title-heading" class="' + classes + '">' + $titleHeading.html() + "</div></div>");
            }

            if ($(AJS.Rte.getEditor().getBody()).hasClass('resizable')) {
                var $iframe = $(iframe || "#previewArea iframe");
                var prevHeight = 0;
                var counter = 0;
                var timer;
                var originalHeight = $iframe.height();
                content && (function heightCheck() {
                    var height = $(content).outerHeight(true);
                    if (prevHeight !== height) {
                        if (height !== $iframe.height()) {
                            $iframe.height(0).height(Math.max(height, originalHeight));
                        }
                        prevHeight = height;
                        counter = 0;
                    } else {
                        counter++;
                    }

                    // upper limit check for content height changes
                    if (counter < 500) {
                        timer = setTimeout(heightCheck, 500);
                    }
                })();
                $(document).one("mode-changed.resize-editor", function (_, mode) {
                    if (mode !== Confluence.Editor.MODE_PREVIEW) {
                        timer && clearTimeout(timer);
                    }
                });
                //This is only needed for IE/Opera where our 100% height solution does not work with CSS alone.
            } else if (tinymce.isIE || tinymce.isOpera) {
                var windowHeight = $(window).height();
                var headerHeight = $("#header-precursor").height() + $("#header").height() + $("#editor-precursor").height();
                var footerHeight = $("#savebar-container").height();
                var magicNumber = 4; //HACK - CONF41 BN The bottom of the preview iframe is off by this much (no idea why).

                $("#preview iframe").height(windowHeight - headerHeight - footerHeight - magicNumber);

                // Reset the value used by the editor.
                $("#content.edit").height("auto");
            }
        },

        showRichText: function(show) {
            var tinymce = require('tinymce');

            AJS.setVisible("#wysiwyg", show);
            $(".toolbar-group-preview").toggleClass("assistive", !show);
            $(".toolbar-group-edit").toggleClass("assistive", show);

            $("#main").toggleClass("active-richtext", show);

            // CONFDEV-5601 - When the visibility of the editor is toggled in Firefox, the
            // arrow keys erroneously scroll instead of moving the cursor position. Toggling
            // the contenteditable state is a hack fix for buggy browser behaviour.
            if (tinymce.isGecko && show) {
                AJS.Rte.fixEditorFocus(Confluence.Editor.bookmark);
            }
        },

        showPreview: function(show) {
            // update the display title for preview
            if (Meta.get("content-type") !== "comment") {
                var $contentTitle = $("#content-title");
                if($contentTitle.hasClass("placeholded")){
                    $("#preview-title-text").text("");
                    $("#title-text").text("");
                }else{
                    $("#preview-title-text").text($contentTitle.val());
                    $("#title-text").text($contentTitle.val());
                }
            }

            AJS.setVisible("#preview", show);

            $(".toolbar-group-preview").toggleClass("assistive", show);
            $(".toolbar-group-edit").toggleClass("assistive", !show);

            $("#main").toggleClass("active-preview", show);
            !!$("#full-height-container").length && $("#full-height-container").toggleClass("active-preview", show);
        },

        showSource: function(show) {
            if (show) {
                this.showSourceArea();
            } else {
                this.hideSourceArea();
            }
            $("#main")[show ? "addClass" : "removeClass"]("active-source");
        },

        /**
         * Set up the page for rich text or markup editing
         */
        setMode: function(mode) {
            AJS.debug("Set mode: " + mode);
            if (mode === Confluence.Editor.MODE_RICHTEXT) {
                this.showRichText(true);
                this.showPreview(false);
                this.showSource(false);
            } else if (mode === Confluence.Editor.MODE_SOURCE) {
                this.showSource(true);
                this.showRichText(false);
                this.showPreview(false);
            } else if (mode === Confluence.Editor.MODE_PREVIEW) {
                this.showPreview(true);
                this.showRichText(false);
                this.showSource(false);

                Confluence.Editor.UI.spinner.removeClass('aui-icon-wait');
            }

            //hack to force UI to redraw after toolbar is modified. For some reason it redraws incorrectly the first time.
            setTimeout(function(){
                var preview = $(".toolbar-group-preview");
                preview.height(0);
                preview.height();
                preview.height('auto');
            }, 1);

            this.currentEditMode = mode;
            $(document).trigger("mode-changed", [mode]);
        },

        /**
         * @Deprecated: see confluence-webapp/src/main/webapp/includes/js/root.js
         */
        getContentId: function() {
            return Confluence.getContentId();
        },

        addErrorMessage: function (id, message, showInAllModes) {
            var container = $("#" + id);
            var appendToId = (showInAllModes ? "#all-messages" : "#editor-messages");
            if (container.length) {
                container.empty();
            } else {
                container = $("<div></div>").attr("id", id).appendTo(appendToId);
            }
            AJS.messages.error(container, {
                closeable: true,
                body: message
            });
        },

        changeMode: function(newMode, options) {
            var tinymce = require('tinymce');

            AJS.debug("Change mode: " + newMode);
            options = options || {};
            // Only allow the mode to be changed if the editor has been initialised
            if (this.inRichTextMode() && !AJS.Rte.BootstrapManager.isInitComplete()) {
                return false;
            }
            if (this.currentEditMode === newMode) {
                return false;
            }

            var prevMode = this.currentEditMode;

            // expose rte change mode event
            // Important: this needs to be called before this.currentEditMode gets assigned or
            // Confluence.Editor.hasContentChanged() will return something different to what you expect.
            // lots of technical debt to be paid around this area :/
            AJS.trigger('rte-changeMode', newMode);

            if (newMode === Confluence.Editor.MODE_PREVIEW) {
                var editor = AJS.Rte.getEditor();

                if (prevMode === Confluence.Editor.MODE_SOURCE) {
                    Confluence.Editor.transferSourceToEditor();
                }

                if (tinymce.isGecko && (prevMode === Confluence.Editor.MODE_RICHTEXT) && !Confluence.Editor.bookmark) { // CONFDEV-5601
                    Confluence.Editor.bookmark = tinymce.activeEditor.selection.getBookmark();
                }

                this.currentEditMode = newMode;
                var queryParams = {
                    "contentId": Confluence.getContentId(),
                    "contentType": Meta.get('content-type'),
                    "spaceKey": Meta.get('space-key'),
                    "xHtml": editor.getContent(),
                    "outputType": Confluence.Editor.PREVIEW_OUTPUT_TYPE
                };

                AJS.safe.ajax({
                    type: "POST",
                    url: CONSTANTS.CONTEXT_PATH + "/pages/rendercontent.action",
                    data: queryParams,
                    success: Confluence.Editor.replysetPreviewArea,
                    timeout: 20000,
                    error: function() {
                        AJS.trigger("rte-preview-action-selected");
                        AJS.trigger("rte.preview.error", { status: 0 });
                        Message.closeMessages(["server-offline"]);
                        showErrorMessage({
                            messageKey: "server-offline",
                            message: "\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0441\u0432\u044f\u0437\u0430\u0442\u044c\u0441\u044f \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c. \u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a \u0418\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u0443 \u0438 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u043b\u0438 Confluence \u0432 \u0440\u0430\u0431\u043e\u0447\u0435\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0438.",
                            disablePublish: false
                        });
                        Confluence.Editor.currentEditMode = prevMode;
                        options.errorCallback && options.errorCallback();
                    }
                });
            } else {
                this.setMode(newMode);
            }
            if (newMode === Confluence.Editor.MODE_RICHTEXT) {
                $(document).trigger("resize.resizeplugin");
            }

            return false;
        },

        replysetPreviewArea: function(html) {
            var tinymce = require('tinymce');

            AJS.trigger("rte-preview-action-selected");
            $("#preview-error").remove();
            // Set the iframe source to an empty JS statement to avoid secure/insecure warnings on HTTPS, without
            // needing a back-end call.
            var src = AJS.params.staticResourceUrlPrefix + "/blank.html";
            tinymce.activeEditor.setProgressState(true);

            $("#previewArea").html('<iframe id="editor-preview-iframe" src="' + src + '" scrolling="yes" frameborder="0"></iframe>');
            var iframe = $("#previewArea iframe")[0];
            var doc = iframe.contentDocument || iframe.contentWindow.document;
            doc.write(html);
            doc.close(); // for firefox
        },

        inRichTextMode: function() {
            return this.currentEditMode === Confluence.Editor.MODE_RICHTEXT;
        },

        isNewPage: function() {
            return $("#createpageform, #createpagetemplate").length > 0;
        },

        onInit: function() {
            var tinymce = require('tinymce');

            Confluence.Editor.setMode(Confluence.Editor.MODE_RICHTEXT);
            tinymce.activeEditor.onClick.add(function(ed, e) {
                var picker = Confluence.Editor.UI.postingDatePicker;
                picker && picker.hide();
            });
        },

        contentChangeHandler: function() {
            this.contentHasChangedSinceLastSave = true;
        },

        getCurrentForm: function() {
            var tinymce = require('tinymce');
            return tinymce.activeEditor.formElement;
        },

        transferSourceToEditor: function () {
            var ed = Confluence.Editor;
            if (ed.sourceInitialValue) {
                var newContent = ed.getSourceAreaVal();
                if (newContent !== ed.sourceInitialValue) {
                    var tinymce = require('tinymce');
                    var editor = tinymce.activeEditor;
                    editor.setContent(newContent);
                    editor.setDirty(newContent);
                }
            }
            ed.sourceInitialValue = false;
        },

        hideSourceArea: function() {
            $("#editor-html-source-container").addClass("hidden");
            this.setToolBarInactive(false);
            this.transferSourceToEditor();
            $("#rte-button-source-mode").removeClass("active");
            $("#rte-button-publish").unbind('click.source-save');
        },

        showSourceArea: function() {
            var tinymce = require('tinymce');

            $("#editor-html-source-container").removeClass("hidden");
            this.setSourceAreaHeight();
            this.setToolBarInactive(true);
            this.sourceInitialValue = tinymce.activeEditor.getContent();
            this.setSourceAreaVal(this.sourceInitialValue);
            $("#rte-button-source-mode").addClass("active");
            $("#rte-button-publish").bind("click.source-save", Confluence.Editor.transferSourceToEditor);
        },

        getSourceAreaVal: function() {
            return $("#editor-html-source").val();
        },

        setSourceAreaVal: function(val) {
            $("#editor-html-source").val(val);
        },

        setSourceAreaHeight: function() {
            //TODOXHTML doing this properly is difficult and inefficient, hack for now
            var height = AJS.Rte.getTinyMceEditorMinHeight();
            AJS.debug("HTML source height= " + height);
            var scrollHeight = $("#editor-html-source")[0].scrollHeight;
            if (scrollHeight > height) {
                height = scrollHeight;
                AJS.debug("ACTUAL HEIGHT " + scrollHeight);
            }
            $("#editor-html-source-container").height(height + "px");
        },

        setToolBarInactive: function(val) {
            $("#rte-toolbar").toggleClass("disabled", val);
        },

        /**
         * Check if any of the top level containers from atlassian-editor.vm are visible. More
         * explicitly if the editor, preview or source view are visible.
         *
         * It you only care whether the actual editor is visible it is suggested that you
         * make use of the AJS.Rte object.
         *
         * @returns true if any of the top level containers for the Confluence Editor are visible.
         */
        isVisible: function() {
            return ($("#wysiwyg:visible").length > 0) || ($("#editor-html-source-container:visible").length > 0) || ($("#preview:visible").length > 0);
        },

        applyBlanket: applyBlanket
    };

});

require('confluence/module-exporter').safeRequire('confluence-editor/editor/page-editor', function(PageEditor) {
    var Confluence = require('confluence/legacy');
    var $ = require('jquery');
    var AJS = require('ajs');

    Confluence.Editor = $.extend(Confluence.Editor || {}, PageEditor);

    AJS.toInit(function($) {
        // Initialisation
        // We should note here that the content has NOT finished loading
        AJS.bind("init.rte", Confluence.Editor.onInit);
    });

    /**
     * @deprecated since 4.0, Use Confluence.Editor instead.
     */
    AJS.Editor = Confluence.Editor;
});


}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:page-editor-js', location = 'editor/page-editor-ui.js' */
/**
 * This file encapsulates Confluence.Editor.UI related logic
 * (which is has been extracted from a big page-editor.js)
 *
 * Still some known issues about this approach (that need to be fixed):
 *
 * - "init.rte" event happens *after* all the plugins are initialised,
 * so you can not rely on the tinymce plugin initialisation onInit event to access
 * Confluence.Editor.UI (it won't be ready yet). Instead, what we do in some plugins
 * is to bind to editor init using "init.rte" so we can guarantee that we can access
 * Confluence.Editor.UI components at that time. This is wrong and we need to fix it.
 * While that happens, let's walk step by step towards a more maintainable editor code base.
 */

define('confluence-editor/editor/page-editor-ui', [
    'jquery',
    'confluence/templates',
    'ajs',
    'confluence/legacy',
    'window',
    'moment',
    'document',
    'confluence/api/constants',
    'confluence-editor/editor/page-editor-message'
], function(
    $,
    Templates,
    AJS,
    Confluence,
    window,
    moment,
    document,
    CONSTANTS,
    Message
) {
    "use strict";

    return function () {
        var View = {};

        var setButtonsState = function(enable) {
            for(var i = 0; i < View.buttons.length; i++) {
                setButtonState(enable, View.buttons[i]);
            }
        };

        var setExplicitButtonsState = function(enable, buttons) {
            buttons.forEach(function(button) {
                setButtonState(enable, button);
            });
        };

        var setButtonState = function(enable, $button) {
            if(!$button){
                return;
            }

            if(enable) {
                $button.removeAttr('aria-disabled');
                $button.removeAttr('disabled');
            } else {
                $button.attr('aria-disabled', 'true');
                $button.attr('disabled', 'disabled');
            }
        };

        var isButtonEnabled = function($button) {
            // We check $button.length == true to determine if the jquery selector represents an element.
            return $button.length && $button.attr('aria-disabled') !== 'true';
        };

        var replaceWithHtml = function(selector, template) {
            $(selector).replaceWith(template);
            return $(selector); // need to reselect node after the replacement
        };

        var configureSaveButton = function() {
            return replaceWithHtml('#rte-button-publish',
                Templates.Editor.Page.saveButton({
                    contentType: AJS.Meta.get('content-type'),
                    sharedDraftsEnabled: AJS.Meta.getBoolean('shared-drafts')
                })
            );
        };

        var configureCancelButton = function() {
            var html = "";
            if (AJS.DarkFeatures.isEnabled("editor.done.button") ||
                AJS.Meta.get('content-type') === "comment" ||
                !AJS.Meta.getBoolean("shared-drafts")){

                html = Templates.Editor.Page.cancelButton({
                    contentType: AJS.Meta.get('content-type'),
                    sharedDraftsEnabled: AJS.Meta.getBoolean('shared-drafts')
                });
            }
            return replaceWithHtml('#rte-button-cancel', html);
        };

        var isNewPage = function() {
            return AJS.Meta.get('new-page');
        };

        var getPageTitlePrefix = function() {
            var prefix = "";

            if (!isNewPage()) {
                prefix = "\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c" + " - ";
            }

            return prefix;
        };

        View.spinner = $('#rte-spinner');
        View.saveButton = configureSaveButton();
        View.overwriteButton = $('#rte-button-overwrite');
        View.editButton = $('#rte-button-edit');
        View.previewButton = $('#rte-button-preview');
        View.cancelButton = configureCancelButton();
        View.discardButton = $('#rte-button-discard');
        View.discardDialog = {
            showDiffDialog: {}
        };
        View.discardDialog.closeButton = $('#discard-changes-dialog-close-button');
        View.discardDialog.submitButton = $('#discard-changes-dialog-submit-button');
        View.discardDialog.showDiffButton = $('#discard-changes-dialog-show-diff-button');
        View.discardDialog.showDiffDialog.closeButton = $('#show-diff-dialog-close-button');
        View.discardDialog.showDiffDialog.submitButton = $('#show-diff-dialog-submit-button');

        View.watchPageCheckbox = $('#watchPage');
        View.watchPageToolbarGroup = $('.toolbar-group-watch-page');
        View.buttons = [ View.saveButton, View.overwriteButton, View.editButton,
            View.previewButton, View.cancelButton ];

        if (AJS.DarkFeatures.isEnabled("editor.done.button") &&
                AJS.Meta.get("content-type") !== "comment" &&
                AJS.Meta.getBoolean("shared-drafts")) {
            $("#rte-savebar").addClass("done-button-enabled");
        }

        /**
         *
         * @param enabled if true then all the Editor 'chrome' buttons should be enabled. If false then disabled.
         */
        View.setButtonsState = setButtonsState;
        View.setButtonState = setButtonState;
        View.isButtonEnabled = isButtonEnabled;

        View.registerFormButton = function (name, button) {
            View[name] = button;
            View.buttons.push(button);
        };

        View.postingDatePicker = null;

        View.isFormEnabled = function () {
            for (var i = 0; i < View.buttons.length; i++) {
                if (isButtonEnabled(View.buttons[i])) { return true; }
            }
            return false;
        };

        /**
         * Called when the editor is in the process of saving or cancelling and is responsible for
         * ensuring no other operations can be instigated (on the save bar).
         *
         * @param setBusy if true then set busy; if false then set to available
         * @return true if the editor has been set to the required state, or false if it hasn't (because it
         * is already in that state).
         */
        View.toggleSavebarBusy = function (setBusy) {
            if (setBusy) {
                // If the savebar is already busy, nothing to do here.
                if (!View.isFormEnabled()) { return false; }

                View.spinner.addClass('aui-icon-wait');
                setButtonsState(false);
            } else {
                View.spinner.removeClass('aui-icon-wait');
                setButtonsState(true);
            }
            return true;
        };

        View.init = function() {
            /***
             * CONFDEV-36296 Add the default save handler to prevent a user from triggering these other save handlers if Save/Publish button was disabled.
             */
            Confluence.Editor.addSaveHandler(function(e) {
                if (View.isButtonEnabled(View.saveButton)) {
                    View.toggleSavebarBusy(true);
                    AJS.trigger('confluence.editor.on.save');
                } else {
                    e.stopImmediatePropagation();
                    e.preventDefault();
                }
            });

            AJS.trigger("rte.init.ui");

            if(Confluence.Editor.isNewPage()) {
                $("#content-title").focus().select();
            }

            Confluence.Editor.addCancelHandler(function() {
                if(Confluence.Editor.getNumConcurrentEditors() > 1) {
                    AJS.Confluence.Analytics.publish('rte.notification.concurrent-editing.cancel', {numEditors: Confluence.Editor.getNumConcurrentEditors(), pageId: AJS.params.pageId, draftType: AJS.params.draftType});
                }
            });

            /**
             * This handler is conditionally injected in order to include the empty comment warning for slow editors.
             */
            if (AJS.Meta.get('content-type') === "comment") {
                Confluence.Editor.addSaveHandler(function () {
                    if (AJS.Rte.Content.isEmpty()) {
                        AJS.Confluence.EditorNotification.notify("warning", "\u0422\u0435\u043a\u0441\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f \u043f\u0443\u0441\u0442\u043e\u0439. \u041d\u0435\u043b\u044c\u0437\u044f \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0443\u0441\u0442\u043e\u0439 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439.");
                        View.toggleSavebarBusy(false);
                        return false;
                    }
                });
            }

            /**
             * This handler is conditionally injected in order to include the cancel confirmation dialog for slow editors, including the template editor for CONFDEV-31248.
             */
            if ((AJS.Meta.get('content-type') === "comment") || (AJS.Meta.get('content-type') === "template")) {
                Confluence.Editor.addCancelHandler(function (e) {
                    if (View.isFormEnabled() && Confluence.Editor.hasContentChanged() && !Confluence.Editor.isEmpty()){
                        var i18ContentLostString = AJS.Meta.get('content-type') === "comment" ? "\u0412\u0430\u0448 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 \u0431\u0443\u0434\u0435\u0442 \u0443\u0442\u0435\u0440\u044f\u043d." : "\u041d\u0435\u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u043d\u044b\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0448\u0430\u0431\u043b\u043e\u043d\u0430 \u0431\u0443\u0434\u0443\u0442 \u0443\u0442\u0435\u0440\u044f\u043d\u044b.";
                        if (!window.confirm(i18ContentLostString)) {
                            //CONFDEV-36296 Stop the following cancel handlers to be executed
                            e.stopImmediatePropagation();
                            return false;
                        }
                    }
                });
            }

            Confluence.Editor.addSaveHandler(function() {
                if(Confluence.Editor.getNumConcurrentEditors() > 1) {
                    AJS.Confluence.Analytics.publish('rte.notification.concurrent-editing.save', {numEditors: Confluence.Editor.getNumConcurrentEditors(), pageId: AJS.params.pageId, draftType: AJS.params.draftType});
                }
            });

            /**
             * When the form gets submitted "old school" (slow comment, and page edit (whatever it is quick or slow edit))
             */
            Confluence.Editor.addSubmitHandler(function(e) {
                return Confluence.Editor.contentFormSubmit(e);
            });

            this.currentEditMode = this.MODE_RICHTEXT;

            View.editButton.click(function(e) {
                var tinymce = require('tinymce');

                if(View.isFormEnabled()) {
                    Confluence.Editor.changeMode(Confluence.Editor.MODE_RICHTEXT);
                    // TODO CONFDEV-29060 Focus not restored in Chrome the first time
                    setTimeout(function() {
                        AJS.Rte.getEditor().focus();
                        if(tinymce.isGecko && Confluence.Editor.bookmark) {
                            AJS.Rte.getEditor().selection.moveToBookmark(Confluence.Editor.bookmark);
                        }
                    }, 0);
                    View.cancelButton.enable();
                }
                e.preventDefault();
            });

            if (Confluence.Editor.isFallbackModeEnabled()) {
                Confluence.Editor.UI.setButtonState(false, View.discardButton);
            }

            View.discardButton.click(function (e) {
                Confluence.Editor.Drafts.save({forceSave: true});
                AJS.trigger('analyticsEvent', {
                    name: 'confluence.synchrony.editor.discard-changes-dialog.show-warning-clicked'
                });
                AJS.dialog2('#discard-changes-dialog').show();
            });

            View.discardDialog.closeButton.click(function (e) {
                AJS.dialog2('#discard-changes-dialog').hide();
            });

            View.discardDialog.showDiffDialog.closeButton.click(function (e) {
                AJS.dialog2('#discard-changes-dialog').hide();
            });

            function discardChangesSincePublish() {
                // suppress the message from synchrony-editor.js that indicates a different user performed a revert
                Message.suppressMessage('editor.synchrony.revert-page');
                $.ajax({
                    url: CONSTANTS.CONTEXT_PATH + '/rest/synchrony/1.0/content/' + AJS.Meta.get('page-id') + '/changes/unpublished',
                    type: 'DELETE'
                }).done(function() {
                    Message.handleMessage('collaborative-editor-discard-error', {
                        type: 'success',
                        close: 'auto',
                        message: "\u0423\u0441\u043f\u0435\u0448\u043d\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u043e \u043a \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u043e\u0439 \u0432\u0435\u0440\u0441\u0438\u0438"
                    });
                    AJS.trigger('analyticsEvent', {
                        name: 'confluence.synchrony.editor.discard-changes-dialog.discard-success'
                    });
                }).fail(function() {
                    Message.handleMessage('collaborative-editor-discard-error', {
                        type: 'error',
                        title: "\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0432\u0435\u0440\u043d\u0443\u0442\u044c\u0441\u044f \u043a \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u043e\u0439 \u0432\u0435\u0440\u0441\u0438\u0438",
                        message: "\u0412 \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f \u043c\u044b \u043d\u0435 \u043c\u043e\u0436\u0435\u043c \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044e\u044e \u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0432\u0435\u0440\u0441\u0438\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b. \u041f\u043e\u0434\u043e\u0436\u0434\u0438\u0442\u0435 \u043d\u0435\u043c\u043d\u043e\u0433\u043e, \u0437\u0430\u0442\u0435\u043c \u043f\u043e\u043f\u044b\u0442\u0430\u0439\u0442\u0435\u0441\u044c \u043e\u0442\u043c\u0435\u043d\u0438\u0442\u044c \u0447\u0435\u0440\u043d\u043e\u0432\u0438\u043a \u0441\u043d\u043e\u0432\u0430."
                    });
                    AJS.trigger('analyticsEvent', {
                        name: 'confluence.synchrony.editor.discard-changes-dialog.discard-error'
                    });
                }).always(function() {
                    //re-enable buttons
                    setButtonState(true, View.discardDialog.showDiffDialog.submitButton);
                    setButtonState(true, View.discardDialog.submitButton);
                    AJS.dialog2('#discard-changes-dialog').hide();
                });
            }

            View.discardDialog.submitButton.click(function (e) {
                setButtonState(false, View.discardDialog.submitButton);
                AJS.trigger('analyticsEvent', {
                    name: 'confluence.synchrony.editor.discard-changes-dialog.submit-from-warning-dialog'
                });

                 discardChangesSincePublish();
            });

            View.discardDialog.showDiffDialog.submitButton.click(function (e) {
                setButtonState(false, View.discardDialog.showDiffDialog.submitButton);
                AJS.trigger('analyticsEvent', {
                    name: 'confluence.synchrony.editor.discard-changes-dialog.submit-from-show-diff-dialog'
                });
                discardChangesSincePublish();
            });

            View.discardDialog.showDiffButton.click(function (e) {
                AJS.trigger('analyticsEvent', {
                    name: 'confluence.synchrony.editor.discard-changes-dialog.show-diff-clicked'
                });
                $('#show-diff-body').fadeIn(0);
                $('#show-diff-footer').fadeIn(0);
                $('#discard-warning-footer').fadeOut(0);
                $('#discard-changes-dialog').removeClass('aui-dialog2-small').addClass('aui-dialog2-xlarge');
                $.ajax({
                    url: CONSTANTS.CONTEXT_PATH + '/rest/tinymce/1/content/' + AJS.Meta.get('page-id') + '/draft/diff',
                    type: 'GET'
                }).success(function (response) {
                    var contentBody = $('#show-diff-dialog-content-body');
                    contentBody.html(response);

                    //move up the diff bar thing over the hr if it's the first element
                    var firstChild = $(contentBody.children()[0]);
                    if (firstChild.hasClass('diff-context-placeholder')) {
                        firstChild.css('margin-top', '-10px');
                    }
                });
            });

            // reset state of the discard dialog
            AJS.dialog2('#discard-changes-dialog').on('hide', function() {
                AJS.trigger('analyticsEvent', {
                    name: 'confluence.synchrony.editor.discard-changes-dialog.dialog-closed'
                });
                $('#show-diff-dialog-content-body').html('');
                $('#discard-changes-dialog').removeClass('aui-dialog2-xlarge').addClass('aui-dialog2-small');
                $('#show-diff-body').css('display', 'none');
                $('#show-diff-footer').css('display', 'none');
                $('#discard-warning-footer').css('display', 'block');
                View.discardButton.blur();
            });

            View.previewButton.click(function(e) {
                var tinymce = require('tinymce');

                if(View.isFormEnabled() && Confluence.Editor.currentEditMode !== Confluence.Editor.MODE_PREVIEW) {
                    setButtonsState(false);
                    View.spinner.addClass('aui-icon-wait');

                    if(tinymce.isGecko && !Confluence.Editor.bookmark) {
                        Confluence.Editor.bookmark = tinymce.activeEditor.selection.getBookmark();
                    }

                    Confluence.Editor.changeMode(Confluence.Editor.MODE_PREVIEW, {
                        errorCallback: function() {
                            // preview load failed
                            setButtonsState(true);
                            View.spinner.removeClass('aui-icon-wait');
                        }
                    });
                    View.cancelButton.disable();
                }
                e.preventDefault();
            });

            $("#editor-html-source").change(Confluence.Editor.setSourceAreaHeight).keyup(Confluence.Editor.setSourceAreaHeight);

            $("#rte-button-labels").bind("updateLabel", function() {
                var numLabels = +AJS.Meta.get("num-labels") || 0;
                var labelName = "\u041c\u0435\u0442\u043a\u0438";
                if (numLabels === 1) {
                    labelName = AJS.format("{0} \u041c\u0435\u0442\u043a\u0430", numLabels);
                } else if (numLabels > 1) {
                    labelName = AJS.format("{0} \u043c\u0435\u0442\u043a\u0438", numLabels);
                }

                $("#rte-button-labels").attr('data-tooltip', labelName);
            });

            //init the date picker for the blog post stuff
            var $postingDate = $("#PostingDate");
            if ($postingDate.length) {
                $postingDate.attr("max", moment().format('YYYY-MM-DD'));
                View.postingDatePicker = $postingDate.datePicker({overrideBrowserDefault: true});
                View.postingDatePicker.hide();
            }

            // CONFDEV-4913 if the user clicks on the spinner put the focus on the editor
            $("#wysiwygTextarea_parent .mceProgress, #wysiwygTextarea_parent .mceBlocker").on("click", function() {
                AJS.Rte.getEditor().focus();
            });

            // bind the function to be run when the preview frame is loaded
            $(window).bind("render-content-loaded", function(e, body) {
                var iframe = $("#previewArea iframe");
                if (iframe.contents().find("body")[0] == body) {
                    Confluence.Editor.previewFrameOnload(body, iframe);

                    setExplicitButtonsState(true, [ View.saveButton, View.overwriteButton, View.editButton, View.previewButton]);

                    iframe.focus();
                    window.focus(); // focus on the window to fix 'e' shortcut in Chrome

                    //This tells AUI that we have added a new iframe. In particular it makes whenitype.js pass through
                    //keypress events from the iframe to the parent, which makes our keyboard shortcuts work.
                    $(document).trigger("iframeAppended", iframe);
                }
            });

            //This bug probably played a part in CONFDEV-13020 (increase of number of session timeouts since heartbeat was not hitting the server).
            if (AJS.Meta.get('heartbeat')) {
                Confluence.Editor.heartbeat();
                Confluence.Editor.heartbeatType.normal();
            }

            // bind to the watch events so we can modify the 'watch' checkbox in the editor as appropriate
            AJS.bind("watchpage.pageoperation", function() {
                View.toggleWatchPage(false);
            });

            AJS.bind("unwatchpage.pageoperation", function() {
                View.toggleWatchPage(true);
            });

            // append prefix "Edit - " to the title in quick edit mode.
            if (isNewPage() && AJS.Meta.get('form-name') === "inlinecommentform") {
                document.title = "\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c" + document.title;
            }

            var originalPageTitle = document.title;

            if (isNewPage() && $.trim($("input#content-title").val())) {
                document.title = getPageTitlePrefix() + $("input#content-title").val() + " - " + AJS.Meta.get('space-name') + " - " + AJS.Meta.get('site-title');
            }

            // change the title when editing (or adding) the page title (CONFDEV-25413)
            $("input#content-title").on('change input', function() {

                // don't handle title change for template page
                if (AJS.Meta.get('content-type') === "template") {
                    return;
                }

                var prefix = getPageTitlePrefix();

                // case of page title is not empty
                if ($.trim(this.value)) {
                    document.title = prefix + this.value + " - " + AJS.Meta.get('space-name') + " - " + AJS.Meta.get('site-title');
                    return;
                }

                // case of page title is empty
                document.title = originalPageTitle;
            });

            AJS.trigger("init.rte-control");
        };

        /**
         * Toggle the watch page checkbox between being visible or hidden. This checkbox should only be visible in the
         * comment editor.
         *
         * @param show if true then show, if false
         */
        View.toggleWatchPage = function (show) {
            if (show && AJS.Meta.get("content-type") === "comment") {
                View.watchPageToolbarGroup.show();

                // The user has just chosen to no longer watch the page
                // so default the check box to inactive.
                if (View.watchPageCheckbox.length) {
                    View.watchPageCheckbox[0].checked = false;
                }
            } else {
                View.watchPageToolbarGroup.hide();
            }
        };

        return View;
    };
});

require('confluence/module-exporter').safeRequire('confluence-editor/editor/page-editor-ui', function(ConfluenceEditorView) {
    var Confluence = require('confluence/legacy');
    require('ajs').bind("init.rte", function() {
        var confluenceEditorView = ConfluenceEditorView();

        // now that the editor is loaded we can create the Javascript object
        // to represent the UI 'chrome'.
        Confluence.Editor.UI = confluenceEditorView;

        confluenceEditorView.init();
    });
});


}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:page-editor-js', location = 'tinymce3/plugins/insertwiki/insert-wiki-markup.soy' */
// This file was automatically generated from insert-wiki-markup.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace Confluence.Templates.InsertWiki.
 */

if (typeof Confluence == 'undefined') { var Confluence = {}; }
if (typeof Confluence.Templates == 'undefined') { Confluence.Templates = {}; }
if (typeof Confluence.Templates.InsertWiki == 'undefined') { Confluence.Templates.InsertWiki = {}; }


Confluence.Templates.InsertWiki.originalDefaultTempWikiMarkupDialog = function(opt_data, opt_ignored) {
  return '<form action=\'#\' method=\'post\' id="insert-wiki-markup-form" class="aui"><textarea class=\'monospaceInput textarea originalDefault\' id=\'insert-wiki-textarea\' name=\'wikitext\'/></form>';
};
if (goog.DEBUG) {
  Confluence.Templates.InsertWiki.originalDefaultTempWikiMarkupDialog.soyTemplateName = 'Confluence.Templates.InsertWiki.originalDefaultTempWikiMarkupDialog';
}


Confluence.Templates.InsertWiki.previewWikiIframeContent = function(opt_data, opt_ignored) {
  return '<!DOCTYPE html><html class="insert-wiki-markup-dialog"><head></head><body class="wiki-content previewWiki"></body></html>';
};
if (goog.DEBUG) {
  Confluence.Templates.InsertWiki.previewWikiIframeContent.soyTemplateName = 'Confluence.Templates.InsertWiki.previewWikiIframeContent';
}


Confluence.Templates.InsertWiki.wikiMarkupDialog = function(opt_data, opt_ignored) {
  return '<p id="insert-wiki-info-title">' + soy.$$escapeHtml("\u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u0440\u0430\u0437\u043c\u0435\u0442\u043a\u0443 \u0432 \u0441\u0442\u0438\u043b\u0435 wiki \u0438\u043b\u0438 markdown. Confluence \u0441\u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u044d\u0442\u043e \u0432 \u0444\u043e\u0440\u043c\u0430\u0442 \u0440\u0435\u0434\u0430\u043a\u0442\u043e\u0440\u0430 \u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u0442 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443.") + '</p><form action=\'#\' method=\'post\' id="insert-wiki-markup-form" class="aui"><h3 class="wiki-title"><span id="insert-wiki-insert-title">' + soy.$$escapeHtml("\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c") + '</span><span id="insert-wiki-preview-title">' + soy.$$escapeHtml("\u041f\u0440\u0435\u0434\u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440") + '</span></h3><textarea class=\'monospaceInput textarea\' id=\'insert-wiki-textarea\' name=\'wikitext\'/><!-- --><div class=\'example-container\' id=\'insert-wiki-textarea-preview\'></div></form>';
};
if (goog.DEBUG) {
  Confluence.Templates.InsertWiki.wikiMarkupDialog.soyTemplateName = 'Confluence.Templates.InsertWiki.wikiMarkupDialog';
}


Confluence.Templates.InsertWiki.wikiErrorSubDialog = function(opt_data, opt_ignored) {
  return '<p class=\'warning\'>' + soy.$$escapeHtml(opt_data.warningMessage) + '</p><p class=\'exception-report\'><span class=\'exceptionMessage\'>' + soy.$$escapeHtml(opt_data.exceptionMessage) + '</span></p>';
};
if (goog.DEBUG) {
  Confluence.Templates.InsertWiki.wikiErrorSubDialog.soyTemplateName = 'Confluence.Templates.InsertWiki.wikiErrorSubDialog';
}


Confluence.Templates.InsertWiki.wikiParserSelector = function(opt_data, opt_ignored) {
  var output = '<span class="wiki-parser-selector"><form action="#" method="post" id="d" class="aui"><select class="select medium-field" id="wiki-parser-selection-tool" name="wiki-parser-selection-tool" title="wiki parser selector"><option value="' + soy.$$escapeHtml(opt_data.DEFAULT.val) + '">' + soy.$$escapeHtml(opt_data.DEFAULT.label) + '</option>';
  var wikiLangList26 = soy.$$getMapKeys(opt_data.WIKI);
  var wikiLangListLen26 = wikiLangList26.length;
  for (var wikiLangIndex26 = 0; wikiLangIndex26 < wikiLangListLen26; wikiLangIndex26++) {
    var wikiLangData26 = wikiLangList26[wikiLangIndex26];
    output += (opt_data.WIKI[wikiLangData26].val != opt_data.DEFAULT.val) ? '<option value="' + soy.$$escapeHtml(opt_data.WIKI[wikiLangData26].val) + '">' + soy.$$escapeHtml(opt_data.WIKI[wikiLangData26].label) + '</option>' : '';
  }
  output += '</select></form></span>';
  return output;
};
if (goog.DEBUG) {
  Confluence.Templates.InsertWiki.wikiParserSelector.soyTemplateName = 'Confluence.Templates.InsertWiki.wikiParserSelector';
}

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:page-editor-js', location = 'editor/page-editor.soy' */
// This file was automatically generated from page-editor.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace Confluence.Templates.Editor.Page.
 */

if (typeof Confluence == 'undefined') { var Confluence = {}; }
if (typeof Confluence.Templates == 'undefined') { Confluence.Templates = {}; }
if (typeof Confluence.Templates.Editor == 'undefined') { Confluence.Templates.Editor = {}; }
if (typeof Confluence.Templates.Editor.Page == 'undefined') { Confluence.Templates.Editor.Page = {}; }


Confluence.Templates.Editor.Page.saveButton = function(opt_data, opt_ignored) {
  return '<button id="rte-button-publish" class="aui-button aui-button-primary" type="submit" name="confirm" value="Save"' + ((opt_data.contentType == 'blogpost') ? 'title="' + soy.$$escapeHtml("\u041e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u0442\u044c \u0432\u0430\u0448 \u043e\u0442\u0432\u0435\u0442 \u0432 \u0431\u043b\u043e\u0433") + '"' : (opt_data.contentType == 'page') ? (opt_data.sharedDraftsEnabled) ? 'title="' + soy.$$escapeHtml("\u041e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u0442\u044c \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f") + '"' : 'title="' + soy.$$escapeHtml("\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0412\u0430\u0448\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443") + '"' : 'title="' + soy.$$escapeHtml("\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c") + '"') + 'tabindex="101">' + ((opt_data.contentType == 'blogpost') ? '<span class="trigger-text">' + soy.$$escapeHtml("\u041f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u0442\u044c") + '</span>' : '<span class="trigger-text">' + soy.$$escapeHtml("\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c") + '</span>') + '</button>';
};
if (goog.DEBUG) {
  Confluence.Templates.Editor.Page.saveButton.soyTemplateName = 'Confluence.Templates.Editor.Page.saveButton';
}


Confluence.Templates.Editor.Page.cancelButton = function(opt_data, opt_ignored) {
  return '<button class="toolbar-item-link aui-button aui-button-link ' + ((opt_data.sharedDraftsEnabled && opt_data.contentType != 'comment') ? 'done-button-enabled' : '') + '" type="submit" id="rte-button-cancel" name="cancel" value="cancel"><span class="trigger-text">' + ((opt_data.contentType == 'page' || opt_data.contentType == 'blogpost') ? (opt_data.sharedDraftsEnabled) ? soy.$$escapeHtml("\u0417\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u043e") : soy.$$escapeHtml("\u0417\u0430\u043a\u0440\u044b\u0442\u044c") : soy.$$escapeHtml("\u041e\u0442\u043c\u0435\u043d\u0438\u0442\u044c")) + '</span></button>';
};
if (goog.DEBUG) {
  Confluence.Templates.Editor.Page.cancelButton.soyTemplateName = 'Confluence.Templates.Editor.Page.cancelButton';
}

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:page-editor-js', location = 'insert-image-dialog/insert-image-dialog.js' */
define('confluence-editor/insert-image-dialog/insert-image-dialog', [
    'jquery',
    'ajs',
    'underscore',
    'confluence/legacy'
], function(
    $,
    AJS,
    _,
    Confluence
) {
    "use strict";

    var ImageDialog = {
        /**
         * Listeners called just before the image dialog is shown
         */
        beforeShowListeners: [],

        /**
         * Component that creates and maintains a panel.
         *
         * Structure:
         * {
         *      id: unique identifier for the component
         *      createPanel: function(context) {...},
         *      refresh: (optional) - can be called to reload the contents of the panel
         * }
         */
        panelComponent: []
    };

    ImageDialog.sizeToFit = function () {
        this.each(function () {
            var content = this;
            var container = $(this).parent();
            var outerHeight = container.height();
            container.children().each(function () {
                if (this !== content && $(this).is(":visible")) {
                    outerHeight -= $(this).outerHeight();
                }
            });
            var paddingAndBorderHeight = $(this).outerHeight() - $(this).height();
            $(this).css("height", Math.max(0, outerHeight - paddingAndBorderHeight) + "px");
        });
        return this;
    };

    ImageDialog.defaultInsertImageDialog = function () {
        var insertCallback = function (placeholderRequest) {
            var tinymce = require('tinymce');

            AJS.Rte.BookmarkManager.restoreBookmark();

            var properties = {};
            if (placeholderRequest.url) {
                properties = {
                    url: placeholderRequest.url,
                    filename: placeholderRequest.url,
                    contentId: placeholderRequest.contentId
                };
                tinymce.confluence.ImageUtils.insertFromProperties(properties);
            }
            else {
                var isAllImage = true;
                // do not show properties panel when insert multiple files
                var hidePropertiesPanel = placeholderRequest.selectItems.length > 1;

                _.each(placeholderRequest.selectItems, function (fileModel) {
                    if (fileModel.isImage() ) {
                        properties = {
                            filename: fileModel.getFileName(),
                            contentId: fileModel.get("ownerId")
                        };
                        tinymce.confluence.ImageUtils.insertFromProperties(properties, hidePropertiesPanel);
                    }
                    else {
                        isAllImage = false;
                        if (AJS.MacroBrowser.getMacroMetadata('view-file')) {
                            ImageDialog._insertFilePlaceholderToEditor(fileModel);
                        }
                        else {
                            ImageDialog._insertLinkToEditor(fileModel);
                        }
                    }
                });

                require(["conf/confluence-drag-and-drop/analytics/files-upload-analytics"],
                        function (filesUploadAnalytics) {
                            filesUploadAnalytics.triggerEvent("confluence.insert-files-dialog.insert", placeholderRequest.selectItems, isAllImage);
                        });
            }

            // CONFDEV-5203 - Prevent cursor loss when using arrow keys after inserting an
            // image. This is a FF-specific issue that occurs when adding or editing comments.
            if (!!$("#comments-section").length) {
                AJS.Rte.fixEditorFocus();
            }
        };
        var cancelCallback = function () {
            AJS.Rte.BookmarkManager.restoreBookmark();
        };

        AJS.Rte.BookmarkManager.storeBookmark();
        ImageDialog.insertImageDialog(insertCallback, cancelCallback);
    };

    /**
     * Finds and returns the first panelComponent matching the specified id, or null if not found.
     *
     * @param id the panelComponent.id to find.
     */
    ImageDialog.findPanelComponentById = function (id) {
        var panels = Confluence.Editor.ImageDialog.panelComponent;
        for (var i = 0, ii = panels.length; i < ii; i++) {
            if (panels[i].id == id) {
                return panels[i];
            }
        }
        return undefined; // just making it obvious
    };

    ImageDialog.insertImageDialog = function (insertCallback, cancelCallback) {
        var dialog = new Confluence.Editor.FileDialog.FileDialogView({
            submitCallback: insertCallback,
            cancelCallback: cancelCallback,
            beforeShowListeners: ImageDialog.beforeShowListeners,
            panelComponents: ImageDialog.panelComponent
        });
        dialog.render();

        return dialog;
    };

    ImageDialog._insertLinkToEditor = function (fileModel) {
        var linkObj = Confluence.Link.fromREST(fileModel.attributes);
        //fileModel.getOwnerId() will return id of page which attachment file is belong to
        linkObj.attrs["data-linked-resource-container-id"] = fileModel.get("ownerId");

        // Need to check that the href leads to the download path for the attachment.
        linkObj.attrs.href = fileModel.get("downloadUrl");
        linkObj.insert();
    };

    ImageDialog._insertFilePlaceholderToEditor = function (fileModel) {
        var params = {
            name: fileModel.get("fileName"),
            page: fileModel.get("parentTitle"),
            space: fileModel.get("space") ? fileModel.get("space").key : "",
            date: fileModel.get("datePath"),
            ownerId: fileModel.get("ownerId")
        };

        require(["confluence-editor/utils/attachments-insert-utils"], function (AttachmentsInsertUtils) {
            AttachmentsInsertUtils.insertFilePlaceholder(params);
        });
    };

    return ImageDialog;
});

require('confluence/module-exporter').safeRequire('confluence-editor/insert-image-dialog/insert-image-dialog', function(ImageDialog) {
    var $ = require('jquery');
    var Confluence = require('confluence/legacy');

    $.fn.sizeToFit = ImageDialog.sizeToFit;
    Confluence.Editor.ImageDialog = ImageDialog;
    Confluence.Editor.defaultInsertImageDialog = ImageDialog.defaultInsertImageDialog;
    Confluence.Editor.ImageDialog.findPanelComponentById = ImageDialog.findPanelComponentById;
    Confluence.Editor.insertImageDialog = ImageDialog.insertImageDialog;
    Confluence.Editor.ImageDialog._insertLinkToEditor = ImageDialog._insertLinkToEditor;
    Confluence.Editor.ImageDialog._insertFilePlaceholderToEditor = ImageDialog._insertFilePlaceholderToEditor;
});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:page-editor-js', location = 'panel-components/panel-components-init.js' */
define('confluence-editor/panel-components/panel-components-init', [
    'confluence/legacy',
    'ajs'
], function(
    Confluence,
    AJS
) {
    "use strict";

    return function () {
        if (!Confluence.Editor ||
                !Confluence.Editor.ImageDialog ||
                !Confluence.Editor.ImageDialog.panelComponent) {
            return;
        }

        var eventListener = Confluence.Editor.FileDialog.eventListener;
        var ExternalPanelView = Confluence.Editor.FileDialog.ExternalPanelView;
        var SearchPanelView = Confluence.Editor.FileDialog.SearchPanelView;
        var AttachmentsPanelView = Confluence.Editor.FileDialog.AttachmentsPanelView;
        var panelComponents = Confluence.Editor.ImageDialog.panelComponent;

        if(AJS.Meta.get("content-type") !== "template") {
            var attachmentPanelComponent = new AttachmentsPanelView({
                eventListener: eventListener
            });
            panelComponents.push(attachmentPanelComponent);
        }

        panelComponents.push(new ExternalPanelView());

        panelComponents.push(new SearchPanelView());
    };
});

require('confluence/module-exporter').safeRequire('confluence-editor/panel-components/panel-components-init', function(PanelComponents) {
    require('ajs').toInit(PanelComponents);
});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:page-editor-js', location = 'drafts/page-editor-drafts.js' */
define('confluence-editor/page-editor-drafts', [
    'jquery',
    'ajs',
    'confluence/legacy',
    'confluence/api/constants',
    'confluence-editor/editor/page-editor-message'
], function(
    $,
    AJS,
    Confluence,
    CONSTANTS,
    Message
) {
    var draftSaved = false;
    var draftManuallySaved = false;
    var pendingChanges = false;

    var isCurrentUserNonAnonymous = AJS.Meta.get('remote-user') !== '';
    var isEditorAjaxSaveEnabled = AJS.DarkFeatures.isEnabled('editor.ajax.save') &&
            !AJS.DarkFeatures.isEnabled('editor.ajax.save.disable');

    var addHiddenElement = function(name, value, appendTo) {
        $("<input>").attr({type: "hidden",name: name, value: value}).appendTo(appendTo);
    };

    var jsTime = function (date) { // dodgy time function
        var h = date.getHours();
        var m = date.getMinutes();
        var ampm = h > 11 ? "PM" : "AM";
        h = h % 12;
        return (h == 0 ? "12" : h) + ":" + (m < 10 ? "0" : "") + m + " " + ampm;
    };

    var isSharedDraftsEnabled = function() {
        return AJS.Meta.getBoolean('shared-drafts');
    };

    // function to send the form to discard/use the draft
    var sendFormDraft = function(hiddenInput, draftId) {
        Confluence.Editor.Drafts.unBindUnloadMessage();
        var form = Confluence.Editor.getCurrentForm();
        addHiddenElement(hiddenInput, "true", form);
        addHiddenElement("contentChanged", "" + Confluence.Editor.hasContentChanged(), form);
        addHiddenElement("pageId", AJS.params.pageId, form);
        $("#draftId", Confluence.Editor.getCurrentForm()).val(draftId);

        if (!form.spaceKey) {
            addHiddenElement("spaceKey", AJS.Meta.get('space-key'), form);
        }

        form.action =  CONSTANTS.CONTEXT_PATH + '/pages/' + (AJS.params.newPage ? "create" : "edit") + AJS.params.draftType + ".action";
        form.submit();
    };

    return {

        /**
         * Returns true if a draft has been saved.
         */
        isDraftSaved : function() {
            return draftSaved;
        },

        isDraftManuallySaved : function() {
            return draftManuallySaved;
        },

        isDraftBlank : function() {
            return AJS.Rte.Content.isEmpty() && !$.trim(Confluence.Editor.getCurrentTitle());
        },

        /**
         * Returns true if editing a draft which has never been published
         */
        isNewContent : function() {
            return AJS.Rte.getEditor() &&
                    AJS.Meta.get('page-id') == 0 &&
                    AJS.Meta.get('draft-id') > 0;
        },

        /**
         * Returns a message to be presented to the user (usually in a way of confirmation dialog when leaving the page) in the following cases:
         * - The editor has content changes.
         * - OR - if a draft has been saved automatically (only if we are editing a page/blog post - drafts on comments are not supported)
         * TODO: remove Selenium dependency.
         * @returns {string} message
         */
        unloadMessage: function() {
            var saveOrDiscardBlank = function() {

                if(Confluence.Editor.Drafts.isDraftBlank() && !isSharedDraftsEnabled()) {
                    Confluence.Editor.Drafts.discardDraft(AJS.Meta.get('draft-id'));
                }
                else {
                    Confluence.Editor.Drafts.save({
                        // Skip error handler because it shows a BRIGHT RED draft save ERROR due to the browser
                        // cancelling in-flight ajax requests during page unload even if the server received the
                        // draft request and saved it successfully but did not respond in time.
                        skipErrorHandler: true
                    });
                }
            };

            if (typeof seleniumAlert !== "undefined" ) { // TODO: Find a better way to detect Selenium.
                //this is not particularly pretty but has to be done
                //unless we want to unload it then bind a specific selenium event for this.
                //this mimics the behaviour close enough
                saveOrDiscardBlank();
                return;
            }

            // You can't rely on the draft being saved before this.
            if (Confluence.Editor.isFallbackModeEnabled() || !isSharedDraftsEnabled()) {
                // Old behavior for legacy drafts and fallback mode
                if (Confluence.Editor.hasContentChanged() ||
                    (Confluence.Editor.Drafts.isDraftSaved()
                    && !Confluence.Editor.Drafts.isDraftManuallySaved())) {
                    saveOrDiscardBlank();
                    return "\u0427\u0435\u0440\u043d\u043e\u0432\u0438\u043a \u0431\u0443\u0434\u0435\u0442 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d. \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u0435\u0440\u043d\u0443\u0442\u044c\u0441\u044f \u043a \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e \u0432 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0440\u0430\u0437 \u043e\u0442\u043a\u0440\u044b\u0432 \u0440\u0435\u0434\u0430\u043a\u0442\u043e\u0440 \u0438\u043b\u0438 \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0432 \u0432\u0441\u0435 \u0441\u0432\u043e\u0438 \u0447\u0435\u0440\u043d\u043e\u0432\u0438\u043a\u0438 \u0432 \u043f\u0440\u043e\u0444\u0438\u043b\u0435.";
                }
            } else {
                // New behavior for Collaborative Editing
                saveOrDiscardBlank();
                if (pendingChanges) {
                    return "\u041c\u044b \u043d\u0435 \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0432\u0430\u0448\u0438\u0445 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439. \u0415\u0441\u043b\u0438 \u0432\u044b \u0432\u044b\u0439\u0434\u0435\u0442\u0435 \u0434\u043e \u0442\u043e\u0433\u043e, \u043a\u0430\u043a \u0443\u0432\u0438\u0434\u0438\u0442\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0022\u0427\u0435\u0440\u043d\u043e\u0432\u0438\u043a \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0022, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u0442\u0435\u0440\u044f\u0442\u044c \u0432\u0430\u0448\u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f.";
                }
            }
        },

        hasPendingChanges: function() {
            return pendingChanges;
        },

        isSharedDraftsEnabled: isSharedDraftsEnabled,

        bindUnloadMessage: function() {
            // Bind Synchrony events to the pendingChanges variable
            if (!Confluence.Editor.isFallbackModeEnabled() && isSharedDraftsEnabled()) {
                AJS.bind('synchrony.entity.ack', function (e, data) {
                    if (!data.pendingChanges) {
                        pendingChanges = false;
                    }
                });

                AJS.bind('editor.local.change', function() {
                    pendingChanges = true;
                });
            }
            $(window).bind('beforeunload', Confluence.Editor.Drafts.unloadMessage);
        },

        unBindUnloadMessage: function() {
            $(window).unbind('beforeunload');
        },

        useDraft: function() {
            sendFormDraft("useDraft", AJS.Meta.get('existing-draft-id'));
        },
        discardDraft: function(draftId) {
            return AJS.safe.ajax({
                url: CONSTANTS.CONTEXT_PATH + "/json/deletedraft.action",
                type: "GET",
                dataType: "json",
                data: {
                    draftId: draftId
                },
                success: function(data) {
                    if (data.actionErrors) {
                        var errorHtml = ["<ul>"];
                        var errors = data.actionErrors;

                        for (var i = 0; i < errors.length; i++) {
                            AJS.log("error: " + (errors[i]));
                            errorHtml.push("<li>" + errors[i] + "</li>");
                        }
                        errorHtml.push("</ul>");

                        AJS.messages.error("#editor-messages", {
                            title: "Error",
                            body: "There were errors discarding your draft: " + errorHtml.join("\n")
                        });
                    } else {
                        $("#draft-messages").remove();
                        AJS.messages.success("#editor-messages", {
                            body: "Your draft has been discarded."
                        });
                    }
                },
                error: function(data) {
                    AJS.messages.error({
                        title: "Error",
                        body: data["errors"] || "An unknown error has occurred. Please check your logs."
                    });
                }
            });
        },

        /**
         * Saves a draft, if content has changed and displays the draft saved message.
         * @param options
         *      onSuccessHandler : callback that is invoked on draft save success. Function should be formatted like this: function (responseData) {}
         *      onErrorHandler : callback that is invoked on draft save error. Function should be formatted like this: function (errorMessage) {}
         *      forceSave : forces a draft save even if there are no content changes (that is, AJS.Editor.hasContentChanged() == false)
         */
        save: function (options) {
            options = options || {};

            // Notes: ideally, Confluence.Editor.Drafts.save() should just do what it says and save the draft without no extra
            // checks (also ideally returning a promise that will be resolved or rejected according to the server response)
            // It should be responsability of the caller to do whatever checks are necessary before.
            // now that we are abstracting all the calls to Confluence.Editor.Drafts.save() into the confluencedrafts plugin
            // this should become an easier task.
            if (Confluence.Editor.isSubmitting || (!Confluence.Editor.hasContentChanged() && !options.forceSave)) {
                AJS.debug("skipping draft save");
                return;
            }

            AJS.debug("preparing to save editor draft");
            var titleField = $("#content-title");
            var newSpaceKey = $("#newSpaceKey");
            var originalVersion = $("#originalVersion");
            var resetWysiwygContent = Confluence.Editor.inRichTextMode();

            var draftData = {
                draftId : AJS.Meta.get('draft-id'),
                pageId : AJS.params.pageId,
                type : AJS.params.draftType,
                syncRev: $("#syncRev").val(),
                title : titleField.hasClass("placeholded") ? "" : titleField.val(),
                spaceKey: newSpaceKey.length ? newSpaceKey.val() : encodeURIComponent(AJS.Meta.get('space-key')),
                content : AJS.Rte.getEditor().getContent()

            };

            if (originalVersion.length) {
                draftData.pageVersion = parseInt(originalVersion.val(), 10);
            }

            var saveDraftCallback = function (data) {
                if(data == null) {
                    //webkit seems to do some odd things with the existing event queue when you unload(), despite the readystate changing to 4 and the data being present
                    //responsetext is always an empty string, however the request was a sucess so we can just fail silently.
                    return;
                }

                var isSessionTimeout = isCurrentUserNonAnonymous && data.draftId === 0;
                if (isSessionTimeout && isEditorAjaxSaveEnabled) {
                    //if reliable save is enabled and session is timeout, we should not update the existed metadata with the
                    //data get from server side, to prevent draft-id from being replaced to '0'
                    //and we cannot retrieve the previous draft-id after reconnect successfully.
                    return;
                }

                Confluence.Editor.contentHasChangedSinceLastSave = false;
                if (resetWysiwygContent) {
                    AJS.Rte.Content.editorResetContentChanged();
                }
                draftSaved = true;
                draftManuallySaved = !!options.manualSave;

                // CONFDEV-33892 - Here we need to cast the return values as strings to avoid setting the Meta values to integers.
                AJS.Meta.set('draft-id', data.draftId + "");
                $("#draftId", Confluence.Editor.getCurrentForm()).val(data.draftId);

                $("#draft-error").remove();

                // If we are using synchrony the draft saved message will be provided by the
                // confluence-collaborative-editor-plugin.
                if (!AJS.Meta.get("synchrony-dark-enabled")) {
                    var draftStatus = $("#draft-status");
                    var time = data.time || jsTime(new Date());
                    var draftMessage;
                    var draftBody;

                    if (draftManuallySaved) {
                        draftMessage = AJS.format("\u0427\u0435\u0440\u043d\u043e\u0432\u0438\u043a \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d \u0432  {0}", time);
                    }
                    else {
                        draftMessage = AJS.format("\u0427\u0435\u0440\u043d\u043e\u0432\u0438\u043a \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d \u0432 {0}", time);
                    }

                    // on new pages the draft message should not be a diff link
                    draftBody = AJS.params.newPage ? draftMessage : "<a id='view-diff-link-heartbeat' class='view-diff-link' href='#'>" + draftMessage + "</a>";

                    // adding tooltip
                    draftStatus.attr("data-tooltip", draftMessage);
                    draftStatus.html(draftBody);
                }

                if (!+AJS.Meta.get('content-id')) {
                    // Saved draft for a new page.
                    AJS.Meta.set('content-id', data.pageId + "");
                }

                if ($.isFunction(options.onSuccessHandler)) {
                    options.onSuccessHandler(data);
                }

                Confluence.Editor.Drafts.lastSaveTime = time;

                AJS.trigger('rte-draft-saved', { draftId: data.draftId });
            };

            var saveDraftErrorHandler = function (request, textStatus) {
                var showDefaultError = function () {
                    Confluence.Editor.addErrorMessage("draft-error",
                        Confluence.Editor.Drafts.lastSaveTime ? AJS.format("\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0438 \u0447\u0435\u0440\u043d\u043e\u0432\u0438\u043a\u0430. \u041f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u0447\u0435\u0440\u043d\u043e\u0432\u0438\u043a \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d \u0432 {0}", Confluence.Editor.Drafts.lastSaveTime) : "\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0438 \u0447\u0435\u0440\u043d\u043e\u0432\u0438\u043a\u0430. \u0421\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u043e \u0431\u0435\u0437 \u0447\u0435\u0440\u043d\u043e\u0432\u0438\u043a\u0430.",
                        true // show in all modes
                    );
                };

                if (options.skipErrorHandler || AJS.Meta.getBoolean('shared-drafts')) {
                    return;
                }
                if (request.status === 400) {
                    if (request.responseText.indexOf("Legacy drafts deprecated") >= 0) {
                        if (AJS.params.newPage) {
                            Message.handleMessage("legacy-draft-deprecated", {
                                type: "error",
                                message: AJS.format("\u0421\u043e\u0432\u043c\u0435\u0441\u0442\u043d\u043e\u0435 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0437\u0434\u0435\u0441\u044c! \u0427\u0442\u043e\u0431\u044b \u0432\u044b \u043c\u043e\u0433\u043b\u0438 \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u0443 \u043d\u0430 \u044d\u0442\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435, \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u0441\u0442\u0438\u0442\u044c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0434\u043b\u044f \u0432\u0430\u0441 \u0432 \u043d\u043e\u0432\u044b\u0439 \u0447\u0435\u0440\u043d\u043e\u0432\u0438\u043a.\u003cbr\u003e \u003ca href={0}\u003e\u041f\u0435\u0440\u0435\u043c\u0435\u0441\u0442\u0438\u0442\u044c \u0441\u0435\u0439\u0447\u0430\u0441\u003c/a\u003e",
                                    CONSTANTS.CONTEXT_PATH + '/pages/resumedraft.action?draftId=' + AJS.params.draftId)
                            });
                        } else {
                            Message.handleMessage("legacy-draft-deprecated", {
                                type: "error",
                                message: "\u0421\u043e\u0432\u043c\u0435\u0441\u0442\u043d\u043e\u0435 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0437\u0434\u0435\u0441\u044c! \u042d\u0442\u043e \u0437\u043d\u0430\u0447\u0438\u0442, \u0447\u0442\u043e \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e, \u0447\u0442\u043e\u0431\u044b \u0432\u044b \u043d\u0430\u043c \u043d\u0435\u043c\u043d\u043e\u0433\u043e \u043f\u043e\u043c\u043e\u0433\u043b\u0438, \u0447\u0442\u043e\u0431\u044b \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0432\u0430\u0448\u0443 \u0441\u0435\u0441\u0441\u0438\u044e \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. \u0412\u0441\u0435 \u0447\u0442\u043e \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c, \u044d\u0442\u043e \u0441\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435, \u0441\u043d\u043e\u0432\u0430 \u043e\u0442\u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u0437\u0430\u0442\u0435\u043c \u0432\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0435\u0433\u043e \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c."
                            });
                        }
                    } else {
                        showDefaultError();
                    }
                } else {
                    showDefaultError();
                }

                if ($.isFunction(options.onErrorHandler)) {
                    options.onErrorHandler(textStatus);
                }
            };

            $.ajax({
                type: "POST",
                url: CONSTANTS.CONTEXT_PATH + "/rest/tinymce/1/drafts",
                data : $.toJSON(draftData),
                contentType : "application/json",
                dataType : "text json", // "text json" instead of "json" is critical to solve CONFDEV-4799. Please read comments on this ticket if you want to change this.,
                success : saveDraftCallback,
                error : saveDraftErrorHandler,
                timeout: 30000 // 30 seconds
            });
        }
    };
});

require('confluence/module-exporter').exportModuleAsGlobal('confluence-editor/page-editor-drafts', 'Confluence.Editor.Drafts');
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:page-editor-js', location = 'editor/page-editor-permissions.js' */
define('confluence-editor/editor/page-editor-permissions', [
    'ajs',
    'jquery'
], function(
    AJS,
    $
) {
    "use strict";

    var PageEditorPermissions = {};

    /**
     * Updates the icon of the restrictions button in the editor
     * Both hasExplicitRestrictions and hasInheritedRestrictions refer to view restrictions only.
     */
    PageEditorPermissions.updateEditPageRestrictions =
            function (hasExplicitRestrictions, hasInheritedRestrictions, hasAnyExplicitRestrictions, restrictionsHash) {
        var restrictionButton = $("#rte-button-restrictions");
        var icon = restrictionButton.find(".icon");
        var labelName = '';
        var allLockIconClasses = "aui-iconfont-locked aui-iconfont-unlocked icon-red";

        if (hasExplicitRestrictions || hasInheritedRestrictions) {
            var lockIconClass = hasExplicitRestrictions ? "aui-iconfont-locked icon-red" : "aui-iconfont-unlocked icon-red";
            icon.removeClass(allLockIconClasses).addClass(lockIconClass);
            labelName = "\u041f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0439";
        } else {
            icon.removeClass(allLockIconClasses).addClass("aui-iconfont-unlocked");
            labelName = hasAnyExplicitRestrictions ?
                    "\u041f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0439" : "\u041d\u0435\u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u043d\u044b\u0439";
        }

        restrictionButton.attr('data-tooltip', labelName);
        restrictionButton.data('explicit-restrictions', hasExplicitRestrictions);
        restrictionButton.data('inherited-restrictions', hasInheritedRestrictions);
        restrictionButton.data('restrictionsHash', restrictionsHash);
    };

    PageEditorPermissions.handleHeartbeat = function (event, data) {
        if (typeof data.restrictionsHash === 'undefined') { return; }

        var restrictionButton = $("#rte-button-restrictions");

        if (restrictionButton.data('restrictionsHash') !== data.restrictionsHash) {
            var restrictionDialog = $('#update-page-restrictions-dialog');

            if (restrictionDialog.is(':visible') && AJS.PagePermissions.updateRestrictionsDialog) {
                AJS.PagePermissions.updateRestrictionsDialog();
                restrictionButton.data('restrictionsHash', data.restrictionsHash);
            } else {
                var hasAnyExplicitRestrictions = data.restrictionsHash !== "";
                var hasExplicitRestrictions = data.hasViewRestrictions;
                var hasInheritedRestriction = !!restrictionButton.data('inherited-restrictions');

                PageEditorPermissions.updateEditPageRestrictions(hasExplicitRestrictions, hasInheritedRestriction, hasAnyExplicitRestrictions, data.restrictionsHash);
            }
        }
    };

    PageEditorPermissions.init = function ($) {
        /**
         * Catches any heartbeat event and checks if the restrictions hash has changed. A new hash triggers the client to request
         * the new restrictions data from the server
         */
        AJS.bind("editor-heartbeat", PageEditorPermissions.handleHeartbeat);

        /**
         * Catches any changes in page permissions from the editor and updates the restrictions button icon where necessary
         */
        var handleEditPageRestrictionsUpdated = function(event, data) {
            PageEditorPermissions.updateEditPageRestrictions(data.hasExplicitRestrictions, data.hasInheritedRestrictions, data.hasAnyExplicitRestrictions, data.restrictionsHash);
        };
        AJS.bind("edit-page-restrictions-updated", handleEditPageRestrictionsUpdated);
    };

    return PageEditorPermissions;
});

require('confluence/module-exporter').safeRequire('confluence-editor/editor/page-editor-permissions', function(PageEditorPermissions) {
    var AJS = require('ajs');
    var $ = require('jquery');

    AJS.PagePermissions = AJS.PagePermissions || {};

    $.extend(AJS.PagePermissions, {
        updateEditPageRestrictions: PageEditorPermissions.updateEditPageRestrictions
    });

    AJS.toInit(PageEditorPermissions.init);
});

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.auiplugin:internal-@atlassian-aui-src-js-aui-progress-indicator', location = 'node_modules/@atlassian/aui/src/js/aui/progress-indicator.js' */
("undefined"===typeof window?global:window).__1c558839792cc96767a648eae1c96903=function(){function g(a,b,c){(0,h.recomputeStyle)(a);a.css("width",100*c+"%");b.attr("data-value",c)}var d={};"use strict";Object.defineProperty(d,"__esModule",{value:!0});var a=__2fd777cca7fe187ff4048afabed6a6b5,i=a&&a.__esModule?a:{"default":a},h=__e3af25d9bced0eef741f71bd383fd36d,a=(a=__dd0dee18d8910035abf3563b0855343d)&&a.__esModule?a:{"default":a},j={update:function(a,b){var c=(0,i.default)(a).first(),d=c.children(".aui-progress-indicator-value"),
e=c.attr("data-value"),f=parseFloat(e)||0;if(!(e&&f===b))return e||d.css("width",0),"number"===typeof b&&(1>=b&&0<=b)&&(c.trigger("aui-progress-indicator-before-update",[f,b]),e=(document.body||document.documentElement).style,"string"===typeof e.transition||"string"===typeof e.WebkitTransition?(d.one("transitionend webkitTransitionEnd",function(){c.trigger("aui-progress-indicator-after-update",[f,b])}),g(d,c,b)):(g(d,c,b),c.trigger("aui-progress-indicator-after-update",[f,b]))),c},setIndeterminate:function(a){var a=
(0,i.default)(a).first(),b=a.children(".aui-progress-indicator-value");a.removeAttr("data-value");(0,h.recomputeStyle)(a);b.css("width","100%")}};(0,a.default)("progressBars",j);d.default=j;return d=d["default"]}.call(this);
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'confluence.web.resources:draft-changes-js', location = '/includes/js/draft-changes.js' */
define("confluence/draft-changes",["jquery","ajs","window","confluence/legacy"],function(f,a,l,c){return{init:function(){var e,k=function(e){var c="\u0412\u044b \u0443\u0432\u0435\u0440\u0435\u043d\u044b, \u0447\u0442\u043e \u0445\u043e\u0442\u0438\u0442\u0435 \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u044d\u0442\u043e\u0442 \u0447\u0435\u0440\u043d\u043e\u0432\u0438\u043a?";return confirm(c)?(a.safe.ajax({url:a.contextPath()+"/json/deletedraft.action",type:"GET",dataType:"json",data:{draftId:e},success:function(d){if(d.actionErrors){for(var c=["<ul>"],d=d.actionErrors,b=0;b<d.length;b++)a.log("error: "+d[b]),c.push("<li>"+d[b]+"</li>");c.push("</ul>");a.messages.error("#errors",
{title:"\u041e\u0448\u0438\u0431\u043a\u0430",body:"\u0412\u043e\u0437\u043d\u0438\u043a\u043b\u0438 \u043e\u0448\u0438\u0431\u043a\u0438 \u043f\u0440\u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0438 \u0412\u0430\u0448\u0435\u0433\u043e \u0447\u0435\u0440\u043d\u043e\u0432\u0438\u043a\u0430."+" "+c.join("\n")})}else c=f("#draft-"+e),d=c.closest("table"),b=d.closest(".drafts-container"),c.remove(),0===d.find("tbody tr").length&&b.append('<span id="no-drafts-message">'+"\u0427\u0435\u0440\u043d\u043e\u0432\u0438\u043a\u0438 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u044b."+"</span>")},error:function(c){a.messages.error({title:"Error",body:c.errors||"\u041f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430\u044f \u043e\u0448\u0438\u0431\u043a\u0430. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u0412\u0430\u0448 \u0436\u0443\u0440\u043d\u0430\u043b."})}}),!0):!1};f("body").on("click",".view-diff-link",function(m){var j=
this.id,d=f(this);if(!e){var h="view-diff-link-notification"===j;e=new a.Dialog(860,530,"view-diff-draft-dialog");var b="\u041d\u0435\u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0434\u043b\u044f  \u0027{0}\u0027";e.addHeader(b.replace(/\{0\}/,""));b=f(c.Templates.DraftChanges.dialogContent());e.addPanel("Diff",b);h&&(e.addButton("\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c",function(){e.hide();c.Editor&&c.Editor.Drafts?c.Editor.Drafts.useDraft():l.location=f(this).attr("data-href")},"resume-diff-link"),e.addButton("\u0423\u0434\u0430\u043b\u0438\u0442\u044c",function(){if(a.DarkFeatures.isEnabled("editor.ajax.save")&&
!a.DarkFeatures.isEnabled("editor.ajax.save.disable")&&""!==a.Meta.get("remote-user"))c.Editor.SafeSave.Draft.discardDraft(a.params.pageId,a.Meta.get("existing-draft-id")).done(c.Editor.SafeSave.Draft.onSuccessDiscardDraft).fail(c.Editor.SafeSave.Draft.onErrorDiscardDraft),e.hide();else if(c.Editor&&c.Editor.Drafts)e.hide(),c.Editor.Drafts.discardDraft(a.Meta.get("existing-draft-id")),a.Confluence.Analytics.publish("rte.notification.draft.discard");else{var b=f(this).data("draftid");k(b)&&e.hide()}},
"discard-diff-link"));e.addCancel("\u0417\u0430\u043a\u0440\u044b\u0442\u044c",function(){e.hide();return false});b.removeClass("hidden")}e.addHeader("\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430");f("#diff-view").html("<tr><td id='draft-changes-waiting-icon'>Loading...</td></tr>");var i,b=d.attr("class"),g=/draftPageId:([^ ]*)/.exec(b),d=g?g[1]:a.Meta.get("page-id"),h=(g=/username:([^ ]*)/.exec(b))?g[1]:a.Meta.get("remote-user");i=(g=/draftId:([^ ]*)/.exec(b))?g[1]:null;a.safe.ajax({url:a.contextPath()+"/draftchanges/viewdraftchanges.action",
type:"GET",dataType:"json",data:{pageId:d,username:h},success:function(b){if(b.actionErrors){for(var d="",b=b.actionErrors,g=0;g<b.length;g++)a.log("error: "+b[g]),d=d+"<div>"+b[g]+"</div>";f("#diff-view").html(d)}else f("#diff-view").html(b.htmlDiff),d=a.format("\u041d\u0435\u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0434\u043b\u044f  \u0027\u0027{0}\u0027\u0027",a.escapeHtml(b.title)),e.addHeader(d),e.popup.element.find(".dialog-title").prepend(c.Templates.DraftChanges.helpLink()),d=a.contextPath(),f(".resume-diff-link").attr("data-href",d+"/pages/resumedraft.action?draftId="+
i),f(".discard-diff-link").data("draftid",i),a.setVisible("#merge-warning",b.isMergeRequired)},error:function(a){a=a.errors||"An unknown error has occurred. Please check your logs";f("#diff-view").html(a)}});e.show();a.trigger("analytics",{name:"confluence.editor.view-diff-dialog.open",data:{elementTriggerId:j}});return a.stopEvent(m)});f(".drafts-by-space").on("click",".discard-draft-link",function(c){c.preventDefault();a.Confluence.Analytics.publish("confluence.draft-list.discard");c=f(this).data("draftid");
k(c)}).on("click",".resume-draft-link",function(){a.Confluence.Analytics.publish("confluence.draft-list.resume")})}}});require("confluence/module-exporter").safeRequire("confluence/draft-changes",function(f){require("ajs").toInit(f.init)});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'confluence.web.resources:draft-changes-js', location = '/includes/soy/draft-changes-dialog.soy' */
// This file was automatically generated from draft-changes-dialog.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace Confluence.Templates.DraftChanges.
 */

if (typeof Confluence == 'undefined') { var Confluence = {}; }
if (typeof Confluence.Templates == 'undefined') { Confluence.Templates = {}; }
if (typeof Confluence.Templates.DraftChanges == 'undefined') { Confluence.Templates.DraftChanges = {}; }


Confluence.Templates.DraftChanges.dialogContent = function(opt_data, opt_ignored) {
  return '<div id="draft-changes-dialog" class="hidden"><div id="diff-view" class="wiki-content"></div></div>';
};
if (goog.DEBUG) {
  Confluence.Templates.DraftChanges.dialogContent.soyTemplateName = 'Confluence.Templates.DraftChanges.dialogContent';
}


Confluence.Templates.DraftChanges.helpLink = function(opt_data, opt_ignored) {
  return '' + Confluence.Templates.Dialog.helpLink({href: "https://docs.atlassian.com/confluence/docs-510/Drafts#viewchange"});
};
if (goog.DEBUG) {
  Confluence.Templates.DraftChanges.helpLink.soyTemplateName = 'Confluence.Templates.DraftChanges.helpLink';
}

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.plugins.tinymce:atlassian-rte-javascript-tinymce-core', location = 'jscripts/atlassian-editor-build/atlassian-editor.js' */
(function(e){var j=/^\s*|\s*$/g,i="$1"==="B".replace(/A(.)|B/,"$1"),g={majorVersion:"3",minorVersion:"4.9-atlassian-11",releaseDate:"2012-03-06",_init:function(){function c(b){var k=/editor/.test(b);if(b&&/tiny_mce(|_gzip|_jquery|_prototype|_full)(_dev|_src)?.js/.test(b)||k){/_(src|dev)\.js/g.test(b)&&(a.suffix="_src");if(-1!=(p=b.indexOf("?")))a.query=b.substring(p+1);a.baseURL=k?b.substring(0,b.indexOf("/download/")):b.substring(0,b.lastIndexOf("/"));h&&(-1==a.baseURL.indexOf("://")&&0!==a.baseURL.indexOf("/"))&&
(a.baseURL=h+a.baseURL);k&&(a.baseURL+="/download/resources/com.atlassian.plugins.editor/tinymcesource");return a.baseURL}return null}var a=this,d=document,b=navigator,f=b.userAgent,h,p,l;a.isOpera=e.opera&&opera.buildNumber;a.isWebKit=/WebKit/.test(f);a.isChrome=a.isWebKit&&/Chrome/.test(f);a.isIE11=!!(-1!=f.indexOf("Trident/")&&(-1!=f.indexOf("rv:")||-1!=b.appName.indexOf("Netscape")));a.isIE=!a.isWebKit&&!a.isOpera&&/MSIE/gi.test(f)&&/Explorer/gi.test(b.appName);a.isIE=a.isIE&&/MSIE (\w+)\./.exec(f)[1];
a.isIE=a.isIE||a.isIE11;a.isIE6=a.isIE&&/MSIE [56]/.test(f);a.isIE7=a.isIE&&/MSIE [7]/.test(f);a.isIE8=a.isIE&&/MSIE [8]/.test(f);a.isIE9=a.isIE&&/MSIE [9]/.test(f);a.isIE10=a.isIE&&/MSIE \d\d/.test(f);a.isIE10up=a.isIE&&/MSIE \d\d/.test(f)||a.isIE11;a.isGecko=!a.isWebKit&&!a.isIE11&&/Gecko/.test(f);a.isMac=-1!=f.indexOf("Mac");a.isAir=/adobeair/i.test(f);a.isIDevice=/(iPad|iPhone)/.test(f);a.isIOS5=a.isIDevice&&534<=f.match(/AppleWebKit\/(\d*)/)[1];if(e.tinyMCEPreInit)a.suffix=tinyMCEPreInit.suffix,
a.baseURL=tinyMCEPreInit.base,a.query=tinyMCEPreInit.query;else{a.suffix="";f=d.getElementsByTagName("base");for(b=0;b<f.length;b++)if(l=f[b].href)/^https?:\/\/[^\/]+$/.test(l)&&(l+="/"),h=l?l.match(/.*\//)[0]:"";h||(b=document.location,h=b.protocol+"//"+b.hostname+(b.port?":"+b.port:""));if(b=AJS.Meta.get("rte.src.url"))c(b);else{f=d.getElementsByTagName("script");for(b=0;b<f.length;b++)if(c(f[b].src))return;if(d=d.getElementsByTagName("head")[0]){f=d.getElementsByTagName("script");for(b=0;b<f.length&&
!c(f[b].src);b++);}}}},is:function(c,a){return!a?void 0!==c:"array"==a&&c.hasOwnProperty&&c instanceof Array?!0:typeof c==a},makeMap:function(c,a,d){c=c||[];"string"==typeof c&&(c=c.split(a||","));d=d||{};for(a=c.length;a--;)d[c[a]]={};return d},each:function(c,a,d){var b,f;if(!c)return 0;d=d||c;if(void 0!==c.length){b=0;for(f=c.length;b<f;b++)if(!1===a.call(d,c[b],b,c))return 0}else for(b in c)if(c.hasOwnProperty(b)&&!1===a.call(d,c[b],b,c))return 0;return 1},map:function(c,a){var d=[];g.each(c,
function(b){d.push(a(b))});return d},grep:function(c,a){var d=[];g.each(c,function(b){(!a||a(b))&&d.push(b)});return d},inArray:function(c,a){var d,b;if(c){d=0;for(b=c.length;d<b;d++)if(c[d]===a)return d}return-1},extend:function(c,a){var d,b,f=arguments;d=1;for(b=f.length;d<b;d++)a=f[d],g.each(a,function(a,b){void 0!==a&&(c[b]=a)});return c},trim:function(c){return(c?""+c:"").replace(j,"")},create:function(c,a,d){var b,f,h,p,l,e=0,c=/^((static) )?([\w.]+)(:([\w.]+))?/.exec(c);h=c[3].match(/(^|\.)(\w+)$/i)[2];
f=this.createNS(c[3].replace(/\.\w+$/,""),d);if(!f[h])if("static"==c[2]){if(f[h]=a,this.onCreate)this.onCreate(c[2],c[3],f[h])}else if(a[h]||(a[h]=function(){},e=1),f[h]=a[h],this.extend(f[h].prototype,a),c[5]&&(b=this.resolve(c[5]).prototype,p=c[5].match(/\.(\w+)$/i)[1],l=f[h],f[h]=e?function(){return b[p].apply(this,arguments)}:function(){this.parent=b[p];return l.apply(this,arguments)},f[h].prototype[h]=f[h],this.each(b,function(a,d){f[h].prototype[d]=b[d]}),this.each(a,function(a,d){b[d]?f[h].prototype[d]=
function(){this.parent=b[d];return a.apply(this,arguments)}:d!=h&&(f[h].prototype[d]=a)})),this.each(a["static"],function(a,b){f[h][b]=a}),this.onCreate)this.onCreate(c[2],c[3],f[h].prototype)},walk:function(c,a,d,b){b=b||this;c&&(d&&(c=c[d]),g.each(c,function(f,h){if(!1===a.call(b,f,h,d))return!1;g.walk(f,a,d,b)}))},createNS:function(c,a){var d,b,a=a||e,c=c.split(".");for(d=0;d<c.length;d++)b=c[d],a[b]||(a[b]={}),a=a[b];return a},resolve:function(c,a){var d,b,a=a||e,c=c.split(".");d=0;for(b=c.length;d<
b&&!(a=a[c[d]],!a);d++);return a},addUnload:function(c,a){var d=this,c={func:c,scope:a||this};if(d.unloads)d.unloads.push(c);else{var b=function(){var a=d.unloads,p,c;if(a){for(c in a)(p=a[c])&&p.func&&p.func.call(p.scope,1);e.detachEvent?(e.detachEvent("onbeforeunload",f),e.detachEvent("onunload",b)):e.removeEventListener&&e.removeEventListener("unload",b,!1);d.unloads=w=b=0;e.CollectGarbage&&CollectGarbage()}},f=function(){var a=document;if("interactive"==a.readyState){var d=function(){a.detachEvent("onstop",
d);b&&b();a=0};a&&a.attachEvent("onstop",d);e.setTimeout(function(){a&&a.detachEvent("onstop",d)},0)}};e.attachEvent?(e.attachEvent("onunload",b),e.attachEvent("onbeforeunload",f)):e.addEventListener&&e.addEventListener("unload",b,!1);d.unloads=[c]}return c},removeUnload:function(c){var a=this.unloads,d=null;g.each(a,function(b,f){if(b&&b.func==c)return a.splice(f,1),d=c,!1});return d},explode:function(c,a){return c?g.map(c.split(a||","),g.trim):c},_addVer:function(c){var a;if(!this.query)return c;
a=(-1==c.indexOf("?")?"?":"&")+this.query;return-1==c.indexOf("#")?c+a:c.replace("#",a+"#")},_replace:function(c,a,d){return i?d.replace(c,function(){var b=a,d=arguments,h;for(h=0;h<d.length-2;h++)b=void 0===d[h]?b.replace(RegExp("\\$"+h,"g"),""):b.replace(RegExp("\\$"+h,"g"),d[h]);return b}):d.replace(c,a)}};g._init();e.tinyMCE=e.tinymce=g})(window);
tinymce.create("tinymce.util.Dispatcher",{scope:null,listeners:null,Dispatcher:function(e){this.scope=e||this;this.listeners=[]},add:function(e,j){this.listeners.push({cb:e,scope:j||this.scope});return e},addToTop:function(e,j){this.listeners.unshift({cb:e,scope:j||this.scope});return e},remove:function(e){var j=this.listeners,i=null;tinymce.each(j,function(g,c){if(e==g.cb)return i=e,j.splice(c,1),!1});return i},dispatch:function(){var e,j=arguments,i,g=this.listeners;for(i=0;i<g.length&&!(e=g[i],
e=e.cb.apply(e.scope,0<j.length?j:[e.scope]),!1===e);i++);return e}});
(function(){var e=tinymce.each;tinymce.create("tinymce.util.URI",{URI:function(j,i){var g=this,c,j=tinymce.trim(j),i=g.settings=i||{};if(/^([\w\-]+):([^\/]{2})/i.test(j)||/^\s*#/.test(j))g.source=j;else if(0===j.indexOf("/")&&0!==j.indexOf("//")&&(j=(i.base_uri?i.base_uri.protocol||"http":"http")+"://mce_host"+j),/^[\w-]*:?\/\//.test(j)||(c=i.base_uri?i.base_uri.path:(new tinymce.util.URI(location.href)).directory,j=(i.base_uri&&i.base_uri.protocol||"http")+"://mce_host"+g.toAbsPath(c,j)),j=j.replace(/@@/g,
"(mce_at)"),j=/^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?((?:(([^:@\/]*):?([^:@\/]*))?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/.exec(j),e("source protocol authority userInfo user password host port relative path directory file query anchor".split(" "),function(a,d){var b=j[d];b&&(b=b.replace(/\(mce_at\)/g,"@@"));g[a]=b}),c=i.base_uri){g.protocol||(g.protocol=c.protocol);g.userInfo||(g.userInfo=c.userInfo);!g.port&&"mce_host"==
g.host&&(g.port=c.port);if(!g.host||"mce_host"==g.host)g.host=c.host;g.source=""}},setPath:function(e){e=/^(.*?)\/?(\w+)?$/.exec(e);this.path=e[0];this.directory=e[1];this.file=e[2];this.source="";this.getURI()},toRelative:function(e){var i;if("./"===e)return e;e=new tinymce.util.URI(e,{base_uri:this});if("mce_host"!=e.host&&this.host!=e.host&&e.host||this.port!=e.port||this.protocol!=e.protocol)return e.getURI();i=this.toRelPath(this.path,e.path);e.query&&(i+="?"+e.query);e.anchor&&(i+="#"+e.anchor);
return i},toAbsolute:function(e,i){e=new tinymce.util.URI(e,{base_uri:this});return e.getURI(this.host==e.host&&this.protocol==e.protocol?i:0)},toRelPath:function(e,i){var g,c=0,a="",d,b,e=e.substring(0,e.lastIndexOf("/")),e=e.split("/");g=i.split("/");if(e.length>=g.length){d=0;for(b=e.length;d<b;d++)if(d>=g.length||e[d]!=g[d]){c=d+1;break}}if(e.length<g.length){d=0;for(b=g.length;d<b;d++)if(d>=e.length||e[d]!=g[d]){c=d+1;break}}if(1==c)return i;d=0;for(b=e.length-(c-1);d<b;d++)a+="../";d=c-1;for(b=
g.length;d<b;d++)a=d!=c-1?a+("/"+g[d]):a+g[d];return a},toAbsPath:function(j,i){var g,c=0,a=[],d;d=/\/$/.test(i)?"/":"";j=j.split("/");i=i.split("/");e(j,function(b){b&&a.push(b)});j=a;g=i.length-1;for(a=[];0<=g;g--)0==i[g].length||"."==i[g]||(".."==i[g]?c++:0<c?c--:a.push(i[g]));g=j.length-c;g=0>=g?a.reverse().join("/"):j.slice(0,g).join("/")+"/"+a.reverse().join("/");0!==g.indexOf("/")&&(g="/"+g);d&&g.lastIndexOf("/")!==g.length-1&&(g+=d);return g},getURI:function(e){var i;if(!this.source||e)i=
"",e||(this.protocol&&(i+=this.protocol+"://"),this.userInfo&&(i+=this.userInfo+"@"),this.host&&(i+=this.host),this.port&&(i+=":"+this.port)),this.path&&(i+=this.path),this.query&&(i+="?"+this.query),this.anchor&&(i+="#"+this.anchor),this.source=i;return this.source}})})();
(function(){var e=tinymce.each;tinymce.create("static tinymce.util.Cookie",{getHash:function(j){var j=this.get(j),i;j&&e(j.split("&"),function(e){e=e.split("=");i=i||{};i[unescape(e[0])]=unescape(e[1])});return i},setHash:function(j,i,g,c,a,d){var b="";e(i,function(a,d){b+=(!b?"":"&")+escape(d)+"="+escape(a)});this.set(j,b,g,c,a,d)},get:function(e){var i=document.cookie,g=e+"=",c;if(i){c=i.indexOf("; "+g);if(-1==c){if(c=i.indexOf(g),0!=c)return null}else c+=2;e=i.indexOf(";",c);-1==e&&(e=i.length);
return unescape(i.substring(c+g.length,e))}},set:function(e,i,g,c,a,d){document.cookie=e+"="+escape(i)+(g?"; expires="+g.toGMTString():"")+(c?"; path="+escape(c):"")+(a?"; domain="+a:"")+(d?"; secure":"")},remove:function(e,i){var g=new Date;g.setTime(g.getTime()-1E3);this.set(e,"",g,i,g)}})})();
(function(){function e(j,i){var g,c,a,i=i||'"';if(null==j)return"null";a=typeof j;if("string"==a)return c="\bb\tt\nn\ff\rr\"\"''\\\\",i+j.replace(/([\u0080-\uFFFF\x00-\x1f\"\'\\])/g,function(a,b){if('"'===i&&"'"===a)return a;g=c.indexOf(b);if(g+1)return"\\"+c.charAt(g+1);a=b.charCodeAt().toString(16);return"\\u"+"0000".substring(a.length)+a})+i;if("object"==a){if(j.hasOwnProperty&&j instanceof Array){g=0;for(c="[";g<j.length;g++)c+=(0<g?",":"")+e(j[g],i);return c+"]"}c="{";for(g in j)j.hasOwnProperty(g)&&
(c+="function"!=typeof j[g]?(1<c.length?","+i:i)+g+i+":"+e(j[g],i):"");return c+"}"}return""+j}tinymce.util.JSON={serialize:e,parse:function(e){try{return eval("("+e+")")}catch(i){}}}})();
tinymce.create("static tinymce.util.XHR",{send:function(e){function j(a){i=0;try{i=new ActiveXObject(a)}catch(b){}return i}var i,g=window,c=0;e.scope=e.scope||this;e.success_scope=e.success_scope||e.scope;e.error_scope=e.error_scope||e.scope;e.async=!1===e.async?!1:!0;e.data=e.data||"";if(i=g.XMLHttpRequest?new XMLHttpRequest:j("Microsoft.XMLHTTP")||j("Msxml2.XMLHTTP")){i.overrideMimeType&&i.overrideMimeType(e.content_type);i.open(e.type||(e.data?"POST":"GET"),e.url,e.async);e.content_type&&i.setRequestHeader("Content-Type",
e.content_type);i.setRequestHeader("X-Requested-With","XMLHttpRequest");i.send(e.data);var a=function(){!e.async||4==i.readyState||1E4<c++?(e.success&&1E4>c&&200==i.status?e.success.call(e.success_scope,""+i.responseText,i,e):e.error&&e.error.call(e.error_scope,1E4<c?"TIMED_OUT":"GENERAL",i,e),i=null):g.setTimeout(a,10)};if(!e.async)return a();g.setTimeout(a,10)}}});
(function(){var e=tinymce.extend,j=tinymce.util.JSON,i=tinymce.util.XHR;tinymce.create("tinymce.util.JSONRequest",{JSONRequest:function(g){this.settings=e({},g);this.count=0},send:function(g){var c=g.error,a=g.success,g=e(this.settings,g);g.success=function(d,b){d=j.parse(d);"undefined"==typeof d&&(d={error:"JSON Parse error."});d.error?c.call(g.error_scope||g.scope,d.error,b):a.call(g.success_scope||g.scope,d.result)};g.error=function(a,b){c&&c.call(g.error_scope||g.scope,a,b)};g.data=j.serialize({id:g.id||
"c"+this.count++,method:g.method,params:g.params});g.content_type="application/json";i.send(g)},"static":{sendRPC:function(e){return(new tinymce.util.JSONRequest).send(e)}}})})();(function(e){e.VK={DELETE:46,BACKSPACE:8,ENTER:13,TAB:9,SPACEBAR:32,UP:38,DOWN:40,modifierPressed:function(e){return e.shiftKey||e.ctrlKey||e.altKey}}})(tinymce);
(function(e){function j(a){function d(b){var p=a.dom.create("body"),b=b.cloneContents();p.appendChild(b);return a.selection.serializer.serialize(p,{format:"html"})}a.onKeyDown.addToTop(function(c,e){var k=e.keyCode;if(k==f||k==b){var k=c.selection.getRng(!0),m;if(m=!k.collapsed)k=d(k),m=a.dom.createRng(),m.selectNode(a.getBody()),m=d(m),m=k===m;m&&(c.setContent("",{format:"raw"}),c.nodeChanged(),e.preventDefault())}})}function i(a){a.onKeyDown.add(function(a,d){if(d.keyCode===b&&a.selection.isCollapsed()&&
0===a.selection.getRng(!0).startOffset){var h=a.selection.getNode().previousSibling;h&&(h.nodeName&&"hr"===h.nodeName.toLowerCase())&&(a.dom.remove(h),e.dom.Event.cancel(d))}})}function g(a){function d(a,b,h){var p=/^&nbsp;$|^<br>$/,h=h||b,h=h.parentNode?h.parentNode.childNodes||[]:[],f=!0,c=/TABLE|TH|TD/;return(f=(f=(f=!c.test(b.nodeName))&&b.previousSibling?!c.test(b.previousSibling.nodeName):f)&&b.nextSibling?!c.test(b.nextSibling.nodeName):f)&&(p.test(a)||1<h.length&&"BR"==h[0].nodeName)}function c(a){return a&&
a.innerHTML&&(a.innerHTML.replace(/\uFEFF|\u200B/g,"")||"&nbsp;")}a.onKeyDown.add(function(a,k){var h=a.selection.getNode(),g=h.nextSibling,o;if(a.selection.isCollapsed()&&h!=a.dom.getRoot())if(k.keyCode===b)0===a.selection.getRng(!0).startOffset&&(g=h.previousSibling,o=c(g),g&&d(o,h,g)&&(a.dom.remove(g),e.dom.Event.cancel(k)));else if(k.keyCode==f&&(o=c(h),!(1>=(h.parentNode?h.parentNode.childNodes||[]:[]).length||1<h.childNodes.length)&&g&&d(o,h,g)))a.dom.remove(h),e.dom.Event.cancel(k),h=a.selection,
o=h.getRng(!0),a.focus(),g.focus(),o.setStart(g,0),o.setEnd(g,0),h.setRng(o)})}function c(a){a.onClick.add(function(a,b){b=b.target;/^(IMG|HR)$/.test(b.nodeName)&&a.selection.getSel().setBaseAndExtent(b,0,b,1);"A"==b.nodeName&&a.dom.hasClass(b,"mceItemAnchor")&&a.selection.select(b);a.nodeChanged()})}function c(a){a.onClick.add(function(a,b){b=b.target;/^(IMG|HR)$/.test(b.nodeName)&&a.selection.getSel().setBaseAndExtent(b,0,b,1);"A"==b.nodeName&&a.dom.hasClass(b,"mceItemAnchor")&&a.selection.select(b);
a.nodeChanged()})}function a(){document.body.setAttribute("role","application")}function a(){document.body.setAttribute("role","application")}var d=e.VK,b=d.BACKSPACE,f=d.DELETE;e.create("tinymce.util.Quirks",{Quirks:function(h){if(e.isWebKit){if(e.isChrome){var p=function(a,b){"[object Array]"===toString.call(a)?e.each(a,function(a){a?l.setAttrib(l.select(".non-editable",a),"contenteditable",b):l.setAttrib(e.DOM.select(".non-editable"),"contenteditable",b)}):l.setAttrib(l.select(".non-editable",
a),"contenteditable",b)},l=h.dom,n=h.selection;h.onKeyDown.add(function(a,k){var h,c,m,g=function(){var a=[],b=!1;e.each(c,function(d){d?a=a.concat(l.select("span",d)):b||(a=a.concat(e.DOM.select("span")),b=!0)});return a};if(((m=k.keyCode==f)||k.keyCode==b)&&!d.modifierPressed(k)){k.preventDefault();h=n.getRng();var i;i=l.getParent(h.startContainer,l.isBlock);c=m?[i,l.getNext(i,l.isBlock)]:[l.getPrev(i,l.isBlock),i];e.each(g(),function(a){a.setAttribute("data-mce-mark","1")});(h=!m&&c[1]&&AJS.EditorUtils.isCursorAtStartOf(c[1],
h)||m&&c[0]&&AJS.EditorUtils.isCursorAtEndOf(c[0],h))&&p(c[1],!0);a.getDoc().execCommand(m?"ForwardDelete":"Delete",!1,null);h&&p(c,!1);e.each(g(),function(a){a.getAttribute("data-mce-mark")?a.removeAttribute("data-mce-mark"):a.style.color?l.setAttrib(a,"style","color: "+a.style.color):l.remove(a,!0)})}})}j(h);h.dom.bind(h.getDoc(),"focusin",function(){setTimeout(function(){h&&!h.destroyed&&h.selection.setRng(h.selection.getRng())},0)});c(h);if(e.isIDevice){var k,m;h.dom.bind(h.getDoc(),"selectionchange",
function(){m&&(clearTimeout(m),m=0);m=window.setTimeout(function(){var a=h.selection.getRng();if(!k||!e.dom.RangeUtils.compareRanges(a,k)){h.nodeChanged();k=a}},50)})}g(h)}e.isIE&&(i(h),j(h),a(h),h.onKeyDown.add(function(a,b){var k;if(k=b.keyCode===d.ENTER)if(k=!d.modifierPressed(b))k=a.selection.getNode(),k=a.dom.is(k,"h1,h2,h3,h4,h5,h6")||null!==a.dom.getParent(k,"h1,h2,h3,h4,h5,h6");k&&setTimeout(function(){var b=a.selection.getNode();a.dom.is(b,"p")&&(a.dom.setAttrib(b,"style",null),a.execCommand("mceCleanup"))},
0)}),g(h));e.isGecko&&(i(h),g(h),Range.prototype.getClientRects||h.onMouseDown.add(function(a,b){if(b.target.nodeName==="HTML"){var d=a.getBody();d.blur();setTimeout(function(){d.focus()},0)}}))}})})(tinymce);
(function(e){function j(a,b){var d,k,h,f={};if(a){a=a.split(",");b=b||10;for(d=0;d<a.length;d+=2)k=String.fromCharCode(parseInt(a[d],b)),g[k]||(h="&"+a[d+1]+";",f[k]=h,f[h]=k);return f}}var i,g,c,a=/[&<>\"\u007E-\uD7FF\uE000-\uFFEF]|[\uD800-\uDBFF][\uDC00-\uDFFF]/g,d=/[<>&\u007E-\uD7FF\uE000-\uFFEF]|[\uD800-\uDBFF][\uDC00-\uDFFF]/g,b=/[<>&\"\']/g,f=/&(#x|#)?([\w]+);/g,h={128:"€",130:"‚",131:"ƒ",132:"„",133:"…",134:"†",135:"‡",136:"ˆ",137:"‰",138:"Š",139:"‹",140:"Œ",142:"Ž",145:"‘",146:"’",147:"“",
148:"”",149:"•",150:"–",151:"—",152:"˜",153:"™",154:"š",155:"›",156:"œ",158:"ž",159:"Ÿ"};g={'"':"&quot;","'":"&#39;","<":"&lt;",">":"&gt;","&":"&amp;"};c={"&lt;":"<","&gt;":">","&amp;":"&","&quot;":'"',"&apos;":"'"};i=j("50,nbsp,51,iexcl,52,cent,53,pound,54,curren,55,yen,56,brvbar,57,sect,58,uml,59,copy,5a,ordf,5b,laquo,5c,not,5d,shy,5e,reg,5f,macr,5g,deg,5h,plusmn,5i,sup2,5j,sup3,5k,acute,5l,micro,5m,para,5n,middot,5o,cedil,5p,sup1,5q,ordm,5r,raquo,5s,frac14,5t,frac12,5u,frac34,5v,iquest,60,Agrave,61,Aacute,62,Acirc,63,Atilde,64,Auml,65,Aring,66,AElig,67,Ccedil,68,Egrave,69,Eacute,6a,Ecirc,6b,Euml,6c,Igrave,6d,Iacute,6e,Icirc,6f,Iuml,6g,ETH,6h,Ntilde,6i,Ograve,6j,Oacute,6k,Ocirc,6l,Otilde,6m,Ouml,6n,times,6o,Oslash,6p,Ugrave,6q,Uacute,6r,Ucirc,6s,Uuml,6t,Yacute,6u,THORN,6v,szlig,70,agrave,71,aacute,72,acirc,73,atilde,74,auml,75,aring,76,aelig,77,ccedil,78,egrave,79,eacute,7a,ecirc,7b,euml,7c,igrave,7d,iacute,7e,icirc,7f,iuml,7g,eth,7h,ntilde,7i,ograve,7j,oacute,7k,ocirc,7l,otilde,7m,ouml,7n,divide,7o,oslash,7p,ugrave,7q,uacute,7r,ucirc,7s,uuml,7t,yacute,7u,thorn,7v,yuml,ci,fnof,sh,Alpha,si,Beta,sj,Gamma,sk,Delta,sl,Epsilon,sm,Zeta,sn,Eta,so,Theta,sp,Iota,sq,Kappa,sr,Lambda,ss,Mu,st,Nu,su,Xi,sv,Omicron,t0,Pi,t1,Rho,t3,Sigma,t4,Tau,t5,Upsilon,t6,Phi,t7,Chi,t8,Psi,t9,Omega,th,alpha,ti,beta,tj,gamma,tk,delta,tl,epsilon,tm,zeta,tn,eta,to,theta,tp,iota,tq,kappa,tr,lambda,ts,mu,tt,nu,tu,xi,tv,omicron,u0,pi,u1,rho,u2,sigmaf,u3,sigma,u4,tau,u5,upsilon,u6,phi,u7,chi,u8,psi,u9,omega,uh,thetasym,ui,upsih,um,piv,812,bull,816,hellip,81i,prime,81j,Prime,81u,oline,824,frasl,88o,weierp,88h,image,88s,real,892,trade,89l,alefsym,8cg,larr,8ch,uarr,8ci,rarr,8cj,darr,8ck,harr,8dl,crarr,8eg,lArr,8eh,uArr,8ei,rArr,8ej,dArr,8ek,hArr,8g0,forall,8g2,part,8g3,exist,8g5,empty,8g7,nabla,8g8,isin,8g9,notin,8gb,ni,8gf,prod,8gh,sum,8gi,minus,8gn,lowast,8gq,radic,8gt,prop,8gu,infin,8h0,ang,8h7,and,8h8,or,8h9,cap,8ha,cup,8hb,int,8hk,there4,8hs,sim,8i5,cong,8i8,asymp,8j0,ne,8j1,equiv,8j4,le,8j5,ge,8k2,sub,8k3,sup,8k4,nsub,8k6,sube,8k7,supe,8kl,oplus,8kn,otimes,8l5,perp,8m5,sdot,8o8,lceil,8o9,rceil,8oa,lfloor,8ob,rfloor,8p9,lang,8pa,rang,9ea,loz,9j0,spades,9j3,clubs,9j5,hearts,9j6,diams,ai,OElig,aj,oelig,b0,Scaron,b1,scaron,bo,Yuml,m6,circ,ms,tilde,802,ensp,803,emsp,809,thinsp,80c,zwnj,80d,zwj,80e,lrm,80f,rlm,80j,ndash,80k,mdash,80o,lsquo,80p,rsquo,80q,sbquo,80s,ldquo,80t,rdquo,80u,bdquo,810,dagger,811,Dagger,81g,permil,81p,lsaquo,81q,rsaquo,85c,euro",
32);e.html=e.html||{};e.html.Entities={encodeRaw:function(b,h){return b.replace(h?a:d,function(a){return g[a]||a})},encodeAllRaw:function(a){return(""+a).replace(b,function(a){return g[a]||a})},encodeNumeric:function(b,h){return b.replace(h?a:d,function(a){return 1<a.length?"&#"+(1024*(a.charCodeAt(0)-55296)+(a.charCodeAt(1)-56320)+65536)+";":g[a]||"&#"+a.charCodeAt(0)+";"})},encodeNamed:function(b,h,f){f=f||i;return b.replace(h?a:d,function(a){return g[a]||f[a]||a})},getEncodeFunc:function(b,h){function f(b,
k){return b.replace(k?a:d,function(a){return g[a]||h[a]||"&#"+a.charCodeAt(0)+";"||a})}function k(a,b){return c.encodeNamed(a,b,h)}var c=e.html.Entities,h=j(h)||i,b=e.makeMap(b.replace(/\+/g,","));return b.named&&b.numeric?f:b.named?h?k:c.encodeNamed:b.numeric?c.encodeNumeric:c.encodeRaw},decode:function(a){return a.replace(f,function(a,b,d){if(b)return d=parseInt(d,2===b.length?16:10),65535<d?(d-=65536,String.fromCharCode(55296+(d>>10),56320+(d&1023))):h[d]||String.fromCharCode(d);if(!(b=c[a]))if(!(b=
i[a]))b=document.createElement("div"),b.innerHTML=a,b=b.textContent||b.innerText||a;return b})}}})(tinymce);
tinymce.html.Styles=function(e,j){function i(a,b,d,k){function h(a){a=parseInt(a).toString(16);return 1<a.length?a:"0"+a}return"#"+h(b)+h(d)+h(k)}var g=/rgb\s*\(\s*([0-9]+)\s*,\s*([0-9]+)\s*,\s*([0-9]+)\s*\)/gi,c=/(?:url(?:(?:\(\s*\"([^\"]+)\"\s*\))|(?:\(\s*\'([^\']+)\'\s*\))|(?:\(\s*([^)\s]+)\s*\))))|(?:\'([^\']+)\')|(?:\"([^\"]+)\")/gi,a=/\s*([^:]+):\s*([^;]+);?/g,d=/\s+$/,b,f={},h,e=e||{};h="\\\" \\' \\; \\: ; : ﻿".split(" ");for(b=0;b<h.length;b++)f[h[b]]="﻿"+b,f["﻿"+b]=h[b];return{toHex:function(a){return a.replace(g,
i)},parse:function(b){function h(a,b){var d,k;if(d=q[a+"-top"+b])k=q[a+"-right"+b],d==k&&(d=q[a+"-bottom"+b],k==d&&(k=q[a+"-left"+b],d==k&&(q[a+b]=k,delete q[a+"-top"+b],delete q[a+"-right"+b],delete q[a+"-bottom"+b],delete q[a+"-left"+b])))}function n(a){var b=q[a],d;if(b&&!(0>b.indexOf(" "))){b=b.split(" ");for(d=b.length;d--;)if(b[d]!==b[0])return!1;q[a]=b[0];return!0}}function k(a){A=!0;return f[a]}function m(a,b){A&&(a=a.replace(/\uFEFF[0-9]/g,function(a){return f[a]}));b||(a=a.replace(/\\([\'\";:])/g,
"$1"));return a}var q={},o,s,r,A,j=e.url_converter,u=e.url_converter_scope||this;if(b){for(b=b.replace(/\\[\"\';:\uFEFF]/g,k).replace(/\"[^\"]+\"|\'[^\']+\'/g,function(a){return a.replace(/[;:]/g,k)});o=a.exec(b);){s=o[1].replace(d,"").toLowerCase();r=o[2].replace(d,"");if(s&&0<r.length){if("font-weight"===s&&"700"===r)r="bold";else if("color"===s||"background-color"===s)r=r.toLowerCase();r=r.replace(g,i);r=r.replace(c,function(a,b,d,k,h,f){if(h=h||f)return h=m(h),"'"+h.replace(/\'/g,"\\'")+"'";b=
m(b||d||k);j&&(b=j.call(u,b,"style"));return"url('"+b.replace(/\'/g,"\\'")+"')"});q[s]=A?m(r,!0):r}a.lastIndex=o.index+o[0].length}h("border","");h("border","-width");h("border","-color");h("border","-style");h("padding","");h("margin","");n("border-width")&&(n("border-style")&&n("border-color"))&&(q.border=q["border-width"]+" "+q["border-style"]+" "+q["border-color"],delete q["border-width"],delete q["border-style"],delete q["border-color"]);"medium none"===q.border&&delete q.border}return q},serialize:function(a,
b){function d(b){var h,f,c,m;if(h=j.styles[b]){f=0;for(c=h.length;f<c;f++)b=h[f],m=a[b],void 0!==m&&0<m.length&&(k+=(0<k.length?" ":"")+b+": "+m+";")}}var k="",h,f;if(b&&j&&j.styles)d("*"),d(b);else for(h in a)f=a[h],void 0!==f&&0<f.length&&(k+=(0<k.length?" ":"")+h+": "+f+";");return k}}};
(function(e){function j(a,b){return a.split(b||",")}var i={},g,c,a,d,b={},f,h,p=e.makeMap,l=e.each;c="h1,h2,h3,h4,h5,h6,hr,p,div,address,pre,form,table,tbody,thead,tfoot,th,tr,td,li,ol,ul,caption,blockquote,center,dl,dt,dd,dir,fieldset,noscript,menu,isindex,samp,header,footer,article,section,hgroup";c=p(c,",",p(c.toUpperCase()));var n={Z:"H|K|N|O|P",Y:"X|form|R|Q",ZG:"E|span|width|align|char|charoff|valign",X:"p|T|div|U|W|isindex|fieldset|table",ZF:"E|align|char|charoff|valign",W:"pre|hr|blockquote|address|center|noframes",
ZE:"abbr|axis|headers|scope|rowspan|colspan|align|char|charoff|valign|nowrap|bgcolor|width|height",ZD:"[E][S]",U:"ul|ol|dl|menu|dir",ZC:"p|Y|div|U|W|table|br|span|bdo|object|applet|img|map|K|N|Q",T:"h1|h2|h3|h4|h5|h6",ZB:"X|S|Q",S:"R|P",ZA:"a|G|J|M|O|P",R:"a|H|K|N|O",Q:"noscript|P",P:"ins|del|script",O:"input|select|textarea|label|button",N:"M|L",M:"em|strong|dfn|code|q|samp|kbd|var|cite|abbr|acronym",L:"sub|sup",K:"J|I",J:"tt|i|b|u|s|strike",I:"big|small|font|basefont",H:"G|F",G:"br|span|bdo",F:"object|applet|img|map|iframe",
E:"A|B|C",D:"accesskey|tabindex|onfocus|onblur",C:"onclick|ondblclick|onmousedown|onmouseup|onmouseover|onmousemove|onmouseout|onkeypress|onkeydown|onkeyup",B:"lang|xml:lang|dir",A:"id|class|style|title"},k=function(a){return a.replace(/[A-Z]+/g,function(a){return k(n[a])})},m,q={};for(m in n)n.hasOwnProperty(m)&&(n[m]=k(n[m]));k("script[id|charset|type|language|src|defer|xml:space][]style[B|id|type|media|title|xml:space][]object[E|declare|classid|codebase|data|type|codetype|archive|standby|width|height|usemap|name|tabindex|align|border|hspace|vspace][#|param|Y]param[id|name|value|valuetype|type][]p[E|align][#|S]a[E|D|charset|type|name|href|hreflang|rel|rev|shape|coords|target][#|Z]br[A|clear][]span[E][#|S]bdo[A|C|B][#|S]applet[A|codebase|archive|code|object|alt|name|width|height|align|hspace|vspace][#|param|Y]h1[E|align][#|S]img[E|src|alt|name|longdesc|width|height|usemap|ismap|align|border|hspace|vspace][]map[B|C|A|name][X|form|Q|area]h2[E|align][#|S]iframe[A|longdesc|name|src|frameborder|marginwidth|marginheight|scrolling|align|width|height][#|Y]h3[E|align][#|S]tt[E][#|S]i[E][#|S]b[E][#|S]u[E][#|S]s[E][#|S]strike[E][#|S]big[E][#|S]small[E][#|S]font[A|B|size|color|face][#|S]basefont[id|size|color|face][]em[E][#|S]strong[E][#|S]dfn[E][#|S]code[E][#|S]q[E|cite][#|S]samp[E][#|S]kbd[E][#|S]var[E][#|S]cite[E][#|S]abbr[E][#|S]acronym[E][#|S]sub[E][#|S]sup[E][#|S]input[E|D|type|name|value|checked|disabled|readonly|size|maxlength|src|alt|usemap|onselect|onchange|accept|align][]select[E|name|size|multiple|disabled|tabindex|onfocus|onblur|onchange][optgroup|option]optgroup[E|disabled|label][option]option[E|selected|disabled|label|value][]textarea[E|D|name|rows|cols|disabled|readonly|onselect|onchange][]label[E|for|accesskey|onfocus|onblur][#|S]button[E|D|name|value|type|disabled][#|p|T|div|U|W|table|G|object|applet|img|map|K|N|Q]h4[E|align][#|S]ins[E|cite|datetime][#|Y]h5[E|align][#|S]del[E|cite|datetime][#|Y]h6[E|align][#|S]div[E|align][#|Y]ul[E|type|compact][li]li[E|type|value][#|Y]ol[E|type|compact|start][li]dl[E|compact][dt|dd]dt[E][#|S]dd[E][#|Y]menu[E|compact][li]dir[E|compact][li]pre[E|width|xml:space][#|ZA]hr[E|align|noshade|size|width][]blockquote[E|cite][#|Y]address[E][#|S|p]center[E][#|Y]noframes[E][#|Y]isindex[A|B|prompt][]fieldset[E][#|legend|Y]legend[E|accesskey|align][#|S]table[E|summary|width|border|frame|rules|cellspacing|cellpadding|align|bgcolor][caption|col|colgroup|thead|tfoot|tbody|tr]caption[E|align][#|S]col[ZG][]colgroup[ZG][col]thead[ZF][tr]tr[ZF|bgcolor][th|td]th[E|ZE][#|Y]form[E|action|method|name|enctype|onsubmit|onreset|accept|accept-charset|target][#|X|R|Q]noscript[E][#|Y]td[E|ZE][#|Y]tfoot[ZF][tr]tbody[ZF][tr]area[E|D|shape|coords|href|nohref|alt|target][]base[id|href|target][]body[E|onload|onunload|background|bgcolor|text|link|vlink|alink][#|Y]").replace(/#/g,
"#text").replace(/(\w+)\[([^\]]+)\]\[([^\]]*)\]/g,function(a,b,d,k){d=j(d,"|");q[b]={attributes:p(d),attributesOrder:d,children:p(k,"|",{"#comment":{}})}});i=q;g=p("checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected,autoplay,loop,controls");a=p("area,base,basefont,br,col,frame,hr,img,input,isindex,link,meta,param,embed,source");d=e.extend(p("td,th,iframe,video,audio,object"),a);f=p("pre,script,style,textarea,code");h=p("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr");
e.html.Schema=function(k){function m(a){var b,d,k,h,f,c,l,g,o,n,s,A,i,r,q,v,u,z,t=/^([#+-])?([^\[\/]+)(?:\/([^\[]+))?(?:\[([^\]]+)\])?$/,B=/^([!\-])?(\w+::\w+|[^=:<]+)?(?:([=:<])(.*))?$/,Q=/[*?+]/;if(a){a=j(a);x["@"]&&(v=x["@"].attributes,u=x["@"].attributesOrder);b=0;for(d=a.length;b<d;b++)if(f=t.exec(a[b])){r=f[1];o=f[2];q=f[3];g=f[4];A={};i=[];c={attributes:A,attributesOrder:i};"#"===r&&(c.paddEmpty=!0);"-"===r&&(c.removeEmpty=!0);if(v){for(z in v)A[z]=v[z];i.push.apply(i,u)}if(g){g=j(g,"|");k=
0;for(h=g.length;k<h;k++)if(f=B.exec(g[k]))if(l={},s=f[1],n=f[2].replace(/::/g,":"),r=f[3],f=f[4],"!"===s&&(c.attributesRequired=c.attributesRequired||[],c.attributesRequired.push(n),l.required=!0),"-"===s)delete A[n],i.splice(e.inArray(i,n),1);else{if(r&&("="===r&&(c.attributesDefault=c.attributesDefault||[],c.attributesDefault.push({name:n,value:f}),l.defaultValue=f),":"===r&&(c.attributesForced=c.attributesForced||[],c.attributesForced.push({name:n,value:f}),l.forcedValue=f),"<"===r))l.validValues=
p(f,"?");Q.test(n)?(c.attributePatterns=c.attributePatterns||[],l.pattern=RegExp("^"+n.replace(/([?+*])/g,".$1")+"$"),c.attributePatterns.push(l)):(A[n]||i.push(n),A[n]=l)}}!v&&"@"==o&&(v=A,u=i);q&&(c.outputName=o,x[q]=c);Q.test(o)?(c.pattern=RegExp("^"+o.replace(/([?+*])/g,".$1")+"$"),y.push(c)):x[o]=c}}}function n(a){x={};y=[];m(a);l(i,function(a,b){z[b]=a.children})}function A(a){var d=/^(~)?(.+)$/;a&&l(j(a),function(a){var a=d.exec(a),k="~"===a[1],h=k?"span":"div",f=a[2];z[f]=z[h];b[f]=h;k||(c[f]=
{});l(z,function(a){a[h]&&(a[f]=a[h])})})}function q(a){var b=/^([+\-]?)(\w+)\[([^\]]+)\]$/;a&&l(j(a),function(a){var a=b.exec(a),d,k;a&&(d=(k=a[1])?z[a[2]]:z[a[2]]={"#comment":{}},d=z[a[2]],l(j(a[3],"|"),function(a){"-"===k?delete d[a]:d[a]={}}))})}function u(a){var b=x[a],d;if(b)return b;for(d=y.length;d--;)if(b=y[d],b.pattern.test(a))return b}var x={},z={},y=[],t,B,k=k||{};!1===k.verify_html&&(k.valid_elements="*[*]");k.valid_styles&&(t={},l(k.valid_styles,function(a,b){t[b]=e.explode(a)}));B=
k.whitespace_elements?p(k.whitespace_elements):f;k.valid_elements?n(k.valid_elements):(l(i,function(a,b){x[b]={attributes:a.attributes,attributesOrder:a.attributesOrder};z[b]=a.children}),l(j("strong/b,em/i"),function(a){a=j(a,"/");x[a[1]].outputName=a[0]}),x.img.attributesDefault=[{name:"alt",value:""}],l(j("ol,ul,sub,sup,blockquote,span,font,a,table,tbody,tr"),function(a){x[a].removeEmpty=true}),l(j("p,h1,h2,h3,h4,h5,h6,th,td,pre,div,address,caption"),function(a){x[a].paddEmpty=true}));A(k.custom_elements);
q(k.valid_children);m(k.extended_valid_elements);q("+ol[ul|ol],+ul[ul|ol]");u("span")||m("span[!data-mce-type|*]");k.invalid_elements&&e.each(e.explode(k.invalid_elements),function(a){x[a]&&delete x[a]});this.children=z;this.styles=t;this.getBoolAttrs=function(){return g};this.getBlockElements=function(){return c};this.getShortEndedElements=function(){return a};this.getSelfClosingElements=function(){return h};this.getNonEmptyElements=function(){return d};this.getWhiteSpaceElements=function(){return B};
this.isValidChild=function(a,b){var d=z[a];return!(!d||!d[b])};this.getElementRule=u;this.getCustomElements=function(){return b};this.addValidElements=m;this.setValidElements=n;this.addCustomElements=A;this.addValidChildren=q};e.html.Schema.boolAttrMap=g;e.html.Schema.blockElementsMap=c})(tinymce);
(function(e){e.html.SaxParser=function(j,i){var g=this,c=function(){},j=j||{};g.schema=i=i||new e.html.Schema;!1!==j.fix_self_closing&&(j.fix_self_closing=!0);e.each("comment cdata text start end pi doctype".split(" "),function(a){a&&(g[a]=j[a]||c)});g.parse=function(a){function d(a){var d,k;for(d=g.length;d--;)if(g[d].name===a)break;if(d>=0){for(k=g.length-1;k>=d;k--){a=g[k];a.valid&&b.end(a.name)}g.length=d}}var b=this,f,h=0,c,l,g=[],k,m,q,o,s,r,A,v,u,x,z,y,t,B,G,K,C,D,J,E,L,M,H=0,F=e.html.Entities.decode,
N,O;E=RegExp("<(?:(?:!--([\\w\\W]*?)--\>)|(?:!\\[CDATA\\[([\\w\\W]*?)\\]\\]>)|(?:!DOCTYPE([\\w\\W]*?)>)|(?:\\?([^\\s\\/<>]+) ?([\\w\\W]*?)[?/]>)|(?:\\/([^>]+)>)|(?:([^\\s\\/<>]+)((?:\\s+[^\"'>]+(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>]*))*|\\/)>))","g");L=/([\w:\-]+)(?:\s*=\s*(?:(?:\"((?:\\.|[^\"])*)\")|(?:\'((?:\\.|[^\'])*)\')|([^>\s]+)))?/g;M={script:/<\/script[^>]*>/gi,style:/<\/style[^>]*>/gi,noscript:/<\/noscript[^>]*>/gi};r=i.getShortEndedElements();J=i.getSelfClosingElements();A=i.getBoolAttrs();
v=j.validate;s=j.remove_internals;N=j.fix_self_closing;O=e.isIE;for(t=/^:/;f=E.exec(a);){h<f.index&&b.text(F(a.substr(h,f.index-h)));if(c=f[6]){c=c.toLowerCase();O&&t.test(c)&&(c=c.substr(1));d(c)}else if(c=f[7]){c=c.toLowerCase();O&&t.test(c)&&(c=c.substr(1));h=c in r;N&&(J[c]&&g.length>0&&g[g.length-1].name===c)&&d(c);if(!v||(u=i.getElementRule(c))){x=true;if(v){B=u.attributes;G=u.attributePatterns}if(y=f[8]){(o=y.indexOf("data-mce-type")!==-1)&&s&&(x=false);k=[];k.map={};y.replace(L,function(a,
b,d,h,f){b=b.toLowerCase();d=b in A?b:F(d||h||f||"");if(v&&!o&&b.indexOf("data-")!==0){a=B[b];if(!a&&G){for(h=G.length;h--;){a=G[h];if(a.pattern.test(b))break}h===-1&&(a=null)}if(!a||a.validValues&&!(d in a.validValues))return}k.map[b]=d;k.push({name:b,value:d})})}else{k=[];k.map={}}if(v&&!o){K=u.attributesRequired;C=u.attributesDefault;if(D=u.attributesForced)for(l=D.length;l--;){z=D[l];q=z.name;z=z.value;z==="{$uid}"&&(z="mce_"+H++);k.map[q]=z;k.push({name:q,value:z})}if(C)for(l=C.length;l--;){z=
C[l];q=z.name;if(!(q in k.map)){z=z.value;z==="{$uid}"&&(z="mce_"+H++);k.map[q]=z;k.push({name:q,value:z})}}if(K){for(l=K.length;l--;)if(K[l]in k.map)break;l===-1&&(x=false)}k.map["data-mce-bogus"]&&(x=false)}x&&b.start(c,k,h)}else x=false;if(l=M[c]){l.lastIndex=h=f.index+f[0].length;if(f=l.exec(a)){x&&(m=a.substr(h,f.index-h));h=f.index+f[0].length}else{m=a.substr(h);h=a.length}x&&m.length>0&&b.text(m,true);x&&b.end(c);E.lastIndex=h;continue}h||(!y||y.indexOf("/")!=y.length-1?g.push({name:c,valid:x}):
x&&b.end(c))}else(c=f[1])?b.comment(c):(c=f[2])?b.cdata(c):(c=f[3])?b.doctype(c):(c=f[4])&&b.pi(c,f[5]);h=f.index+f[0].length}h<a.length&&b.text(F(a.substr(h)));for(l=g.length-1;l>=0;l--){c=g[l];c.valid&&b.end(c.name)}}}})(tinymce);
(function(e){function j(a,d,b){var f;f=b?"lastChild":"firstChild";b=b?"prev":"next";if(a[f])return a[f];if(a!==d){if(f=a[b])return f;for(a=a.parent;a&&a!==d;a=a.parent)if(f=a[b])return f}}function i(a,d){this.name=a;this.type=d;1===d&&(this.attributes=[],this.attributes.map={})}var g=/^[ \t\r\n]*$/,c={"#text":3,"#comment":8,"#cdata":4,"#pi":7,"#doctype":10,"#document-fragment":11};e.extend(i.prototype,{replace:function(a){a.parent&&a.remove();this.insert(a,this);this.remove();return this},attr:function(a,
d){var b,f;if("string"!==typeof a){for(f in a)this.attr(f,a[f]);return this}if(b=this.attributes){if(void 0!==d){if(null===d){if(a in b.map){delete b.map[a];for(f=b.length;f--;)if(b[f].name===a){b.splice(f,1);break}}return this}if(a in b.map)for(f=b.length;f--;){if(b[f].name===a){b[f].value=d;break}}else b.push({name:a,value:d});b.map[a]=d;return this}return b.map[a]}},clone:function(){var a=new i(this.name,this.type),d,b,f,h,c;if(f=this.attributes){c=[];c.map={};d=0;for(b=f.length;d<b;d++)h=f[d],
"id"!==h.name&&(c[c.length]={name:h.name,value:h.value},c.map[h.name]=h.value);a.attributes=c}a.value=this.value;a.shortEnded=this.shortEnded;return a},wrap:function(a){this.parent.insert(a,this);a.append(this);return this},unwrap:function(){var a,d;for(a=this.firstChild;a;)d=a.next,this.insert(a,this,!0),a=d;this.remove()},remove:function(){var a=this.parent,d=this.next,b=this.prev;if(a){if(a.firstChild===this){if(a.firstChild=d)d.prev=null}else b.next=d;if(a.lastChild===this){if(a.lastChild=b)b.next=
null}else d.prev=b;this.parent=this.next=this.prev=null}return this},append:function(a){var d;a.parent&&a.remove();(d=this.lastChild)?(d.next=a,a.prev=d,this.lastChild=a):this.lastChild=this.firstChild=a;a.parent=this;return a},insert:function(a,d,b){var f;a.parent&&a.remove();f=d.parent||this;b?(d===f.firstChild?f.firstChild=a:d.prev.next=a,a.prev=d.prev,a.next=d,d.prev=a):(d===f.lastChild?f.lastChild=a:d.next.prev=a,a.next=d.next,a.prev=d,d.next=a);a.parent=f;return a},getAll:function(a){var d,
b=[];for(d=this.firstChild;d;d=j(d,this))d.name===a&&b.push(d);return b},empty:function(){var a,d,b;if(this.firstChild){a=[];for(b=this.firstChild;b;b=j(b,this))a.push(b);for(d=a.length;d--;)b=a[d],b.parent=b.firstChild=b.lastChild=b.next=b.prev=null}this.firstChild=this.lastChild=null;return this},isEmpty:function(a){var a=a||new e.html.Schema,d=this.firstChild,b,f=a.getNonEmptyElements(),h=a.getWhiteSpaceElements();if(d){do{if(1===d.type){if(d.attributes.map["data-mce-bogus"])continue;if(f[d.name])return!1;
for(a=d.attributes.length;a--;)if(b=d.attributes[a].name,"name"===b||0===b.indexOf("data-"))return!1}if(8===d.type||3===d.type&&(!g.test(d.value)||h[this.name]&&d.value&&0<d.value.length&&g.test(d.value)))return!1}while(d=j(d,this))}return!0},walk:function(a){return j(this,null,a)}});e.extend(i,{create:function(a,d){var b,f;b=new i(a,c[a]||1);if(d)for(f in d)b.attr(f,d[f]);return b}});e.html.Node=i})(tinymce);
(function(e){var j=e.html.Node;e.html.DomParser=function(i,g){var c=this,a={},d=[],b={},f={},i=i||{};i.validate="validate"in i?i.validate:!0;i.root_name=i.root_name||"body";c.schema=g=g||new e.html.Schema;c.filterNode=function(h){var c,e,g;e in a&&((g=b[e])?g.push(h):b[e]=[h]);for(c=d.length;c--;)e=d[c].name,e in h.attributes.map&&((g=f[e])?g.push(h):f[e]=[h]);return h};c.addNodeFilter=function(b,d){e.each(e.explode(b),function(b){var h=a[b];h||(a[b]=h=[]);h.push(d)})};c.addAttributeFilter=function(a,
b){e.each(e.explode(a),function(a){var h;for(h=0;h<d.length;h++)if(d[h].name===a){d[h].callbacks.push(b);return}d.push({name:a,callbacks:[b]})})};c.parse=function(h,p){function l(d,k){var h=new j(d,k),f;d in a&&((f=b[d])?f.push(h):b[d]=[h]);return h}function n(a){for(var b,a=a.prev;a&&3===a.type;)b=a.value.replace(t,""),0<b.length?(a.value=b,a=a.prev):(b=a.prev,a.remove(),a=b)}var k,m,q,o,s,r,A,v,u,x,z,y=[],t,B,G,K,p=p||{};b={};f={};x=e.extend(e.makeMap("script,style,head,html,body,title,meta,param"),
g.getBlockElements());g.getNonEmptyElements();K=g.children;u=i.validate;o="forced_root_block"in p?p.forced_root_block:i.forced_root_block;G=g.getWhiteSpaceElements();z=/^[ \t\r\n]+/;t=/[ \t\r\n]+$/;B=/[ \t\r\n]+/g;k=new e.html.SaxParser({validate:u,fix_self_closing:!u,cdata:function(a){q.append(l("#cdata",4)).value=a},text:function(a,b){var d;G[q.name]||(a=a.replace(B," "),q.lastChild&&x[q.lastChild.name]&&(a=a.replace(z,"")));0!==a.length&&(d=l("#text",3),d.raw=!!b,q.append(d).value=a)},comment:function(a){q.append(l("#comment",
8)).value=a},pi:function(a,b){q.append(l(a,7)).value=b;n(q)},doctype:function(a){q.append(l("#doctype",10)).value=a;n(q)},start:function(a,b,k){var h,c,m;if(h=u?g.getElementRule(a):{}){h=l(h.outputName||a,1);h.attributes=b;h.shortEnded=k;q.append(h);(c=K[q.name])&&(K[h.name]&&!c[h.name])&&y.push(h);for(c=d.length;c--;)m=d[c].name,m in b.map&&((v=f[m])?v.push(h):f[m]=[h]);x[a]&&n(h);k||(q=h)}},end:function(a){var b,d;if(b=u?g.getElementRule(a):{}){if(x[a]&&!G[q.name]){for(a=q.firstChild;a&&3===a.type;)d=
a.value.replace(z,""),0<d.length?(a.value=d,a=a.next):(d=a.next,a.remove(),a=d);for(a=q.lastChild;a&&3===a.type;)d=a.value.replace(t,""),0<d.length?(a.value=d,a=a.prev):(d=a.prev,a.remove(),a=d)}if((b.removeEmpty||b.paddEmpty)&&q.isEmpty(g))if(b.paddEmpty)q.empty().append(new j("#text","3")).value=" ";else if(!q.attributes.map.name){b=q.parent;q.empty().remove();q=b;return}q=q.parent}}},g);m=q=new j(p.context||i.root_name,11);k.parse(h);if(u&&y.length)if(p.context)p.invalid=!0;else{var C,D,J,E,L,
M,H,F;H=e.makeMap("tr,td,th,tbody,thead,tfoot,table");g.getNonEmptyElements();for(k=0;k<y.length;k++)if(r=y[k],r.parent){D=[r];for(C=r.parent;C&&!g.isValidChild(C.name,r.name)&&!H[C.name];C=C.parent)D.push(C);if(C&&1<D.length){D.reverse();J=E=c.filterNode(D[0].clone());for(M=0;M<D.length-1;M++){g.isValidChild(E.name,D[M].name)?(L=c.filterNode(D[M].clone()),E.append(L)):L=E;for(E=D[M].firstChild;E&&E!=D[M+1];)F=E.next,L.append(E),E=F;E=L}J.isEmpty(g)?C.insert(r,D[0],!0):(C.insert(J,D[0],!0),C.insert(r,
J));C=D[0];(C.isEmpty(g)||C.firstChild===C.lastChild&&"br"===C.firstChild.name)&&C.empty().remove()}else r.parent&&("li"===r.name?(C=r.prev)&&("ul"===C.name||"ul"===C.name)?C.append(r):(C=r.next)&&("ul"===C.name||"ul"===C.name)?C.insert(r,C.firstChild,!0):r.wrap(c.filterNode(new j("ul",1))):g.isValidChild(r.parent.name,"div")&&g.isValidChild("div",r.name)?r.wrap(c.filterNode(new j("div",1))):"style"===r.name||"script"===r.name?r.empty().remove():r.unwrap())}}if(o&&"body"==m.name)for(k=m.firstChild;k;)r=
k.next,3==k.type||1==k.type&&"p"!==k.name&&!x[k.name]&&!k.attr("data-mce-type")?(s||(s=l(o,1),m.insert(s,k)),s.append(k)):s=null,k=r;if(!p.invalid){for(A in b){v=a[A];o=b[A];for(r=o.length;r--;)o[r].parent||o.splice(r,1);s=0;for(k=v.length;s<k;s++)v[s](o,A,p)}s=0;for(k=d.length;s<k;s++)if(v=d[s],v.name in f){o=f[v.name];for(r=o.length;r--;)o[r].parent||o.splice(r,1);r=0;for(A=v.callbacks.length;r<A;r++)v.callbacks[r](o,v.name,p)}}return m};i.remove_trailing_brs&&c.addNodeFilter("br",function(a){var b,
d=a.length,c,k=g.getBlockElements();g.getNonEmptyElements();var f,i,o;k.body=1;for(b=0;b<d;b++)if(c=a[b],f=c.parent,k[c.parent.name]&&c===f.lastChild){for(i=c.prev;i;){o=i.name;if("span"!==o||"bookmark"!==i.attr("data-mce-type")){if("br"!==o)break;if("br"===o){c=null;break}}i=i.prev}if(c&&(c.remove(),f.isEmpty(g)&&(elementRule=g.getElementRule(f.name))))elementRule.removeEmpty?f.remove():elementRule.paddEmpty&&(f.empty().append(new e.html.Node("#text",3)).value=" ")}})}})(tinymce);
tinymce.html.Writer=function(e){var j=[],i,g,c,a,d,e=e||{};i=e.indent;g=tinymce.makeMap(e.indent_before||"");c=tinymce.makeMap(e.indent_after||"");a=tinymce.html.Entities.getEncodeFunc(e.entity_encoding||"raw",e.entities);d="html"==e.element_format;return{start:function(b,f,h){var e,l,n;i&&(g[b]&&0<j.length)&&(e=j[j.length-1],0<e.length&&"\n"!==e&&j.push("\n"));j.push("<",b);if(f){e=0;for(l=f.length;e<l;e++)n=f[e],j.push(" ",n.name,'="',a(n.value,!0),'"')}j[j.length]=!h||d?">":" />";h&&(i&&c[b]&&
0<j.length)&&(e=j[j.length-1],0<e.length&&"\n"!==e&&j.push("\n"))},end:function(a){j.push("</",a,">");i&&(c[a]&&0<j.length)&&(a=j[j.length-1],0<a.length&&"\n"!==a&&j.push("\n"))},text:function(b,d){0<b.length&&(j[j.length]=d?b:a(b))},cdata:function(a){j.push("<![CDATA[",a,"]]\>")},comment:function(a){j.push("<\!--",a,"--\>")},pi:function(a,d){d?j.push("<?",a," ",d,"?>"):j.push("<?",a,"?>");i&&j.push("\n")},doctype:function(a){j.push("<!DOCTYPE",a,">",i?"\n":"")},reset:function(){j.length=0},getContent:function(){return j.join("").replace(/\n$/,
"")}}};
(function(e){e.html.Serializer=function(j,i){var g=new e.html.Writer(j),j=j||{};j.validate="validate"in j?j.validate:!0;this.schema=i=i||new e.html.Schema;this.writer=g;this.serialize=function(c){function a(c){var h=d[c.type],e,l,n,k,m,j,o,s;if(h)h(c);else{h=c.name;e=c.shortEnded;l=c.attributes;if(b&&l&&1<l.length){m=[];m.map={};s=i.getElementRule(c.name);j=0;for(o=s.attributesOrder.length;j<o;j++)n=s.attributesOrder[j],n in l.map&&(k=l.map[n],m.map[n]=k,m.push({name:n,value:k}));j=0;for(o=l.length;j<
o;j++)n=l[j].name,n in m.map||(k=l.map[n],m.map[n]=k,m.push({name:n,value:k}));l=m}g.start(c.name,l,e);if(!e){if(c=c.firstChild){do a(c);while(c=c.next)}g.end(h)}}}var d,b;b=j.validate;d={3:function(a){g.text(a.value,a.raw)},8:function(a){g.comment(a.value)},7:function(a){g.pi(a.name,a.value)},10:function(a){g.doctype(a.value)},4:function(a){g.cdata(a.value)},11:function(b){if(b=b.firstChild){do a(b);while(b=b.next)}}};g.reset();if(1==c.type&&!j.inner)a(c);else d[11](c);return g.getContent()}}})(tinymce);
(function(e){var j=e.each,i=e.is,g=e.isWebKit,c=e.isIE,a=e.html.Entities,d=/^([a-z0-9],?)+$/i,b=e.html.Schema.blockElementsMap,f=/^[ \t\r\n]*$/;e.create("tinymce.dom.DOMUtils",{doc:null,root:null,files:null,pixelStyles:/^(top|left|bottom|right|width|height|borderWidth)$/,props:{"for":"htmlFor","class":"className",className:"className",checked:"checked",disabled:"disabled",maxlength:"maxLength",readonly:"readOnly",selected:"selected",value:"value",id:"id",name:"name",type:"type"},DOMUtils:function(a,
b){var d;this.doc=a;this.win=window;this.files={};this.cssFlicker=!1;this.counter=0;this.stdMode=!e.isIE||8<=a.documentMode;this.boxModel=!e.isIE||"CSS1Compat"==a.compatMode||this.stdMode;this.hasOuterHTML="outerHTML"in a.createElement("a");this.settings=b=e.extend({keep_values:!1,hex_colors:1},b);this.schema=b.schema;this.styles=new e.html.Styles({url_converter:b.url_converter,url_converter_scope:b.url_converter_scope},b.schema);if(e.isIE6)try{a.execCommand("BackgroundImageCache",!1,!0)}catch(f){this.cssFlicker=
!0}if(c&&b.schema)for(d in"abbr article aside audio canvas details figcaption figure footer header hgroup mark menu meter nav output progress section summary time video".replace(/\w+/g,function(b){a.createElement(b)}),b.schema.getCustomElements())a.createElement(d);e.addUnload(this.destroy,this)},getRoot:function(){var a=this.settings;return a&&this.get(a.root_element)||this.doc.body},getViewPort:function(a){var b,a=!a?this.win:a;b=a.document;b=this.boxModel?b.documentElement:b.body;return{x:a.pageXOffset||
b.scrollLeft,y:a.pageYOffset||b.scrollTop,w:a.innerWidth||b.clientWidth,h:a.innerHeight||b.clientHeight}},getRect:function(a){var b,a=this.get(a);b=this.getPos(a);a=this.getSize(a);return{x:b.x,y:b.y,w:a.w,h:a.h}},getSize:function(a){var b,d,a=this.get(a);b=this.getStyle(a,"width");d=this.getStyle(a,"height");-1===b.indexOf("px")&&(b=0);-1===d.indexOf("px")&&(d=0);return{w:parseInt(b)||a.offsetWidth||a.clientWidth,h:parseInt(d)||a.offsetHeight||a.clientHeight}},getParent:function(a,b,d){return this.getParents(a,
b,d,!1)},getParents:function(a,b,d,c){var k=this,f,e=k.settings,g=[],a=k.get(a),c=void 0===c;e.strict_root&&(d=d||k.getRoot());i(b,"string")&&(f=b,b="*"===b?function(a){return 1==a.nodeType}:function(a){return k.is(a,f)});for(;a&&!(a==d||!a.nodeType||9===a.nodeType);){if(!b||b(a))if(c)g.push(a);else return a;a=a.parentNode}return c?g:null},get:function(a){var b;return a&&(this.doc&&"string"==typeof a)&&(b=a,(a=this.doc.getElementById(a))&&a.id!==b)?this.doc.getElementsByName(b)[1]:a},getNext:function(a,
b){return this._findSib(a,b,"nextSibling")},getPrev:function(a,b){return this._findSib(a,b,"previousSibling")},select:function(a,b){return e.dom.Sizzle(a,this.get(b)||this.get(this.settings.root_element)||this.doc,[])},is:function(a,b){var c;if(void 0===a.length){if("*"===b)return 1==a.nodeType;if(d.test(b)){b=b.toLowerCase().split(/,/);a=a.nodeName.toLowerCase();for(c=b.length-1;0<=c;c--)if(b[c]==a)return!0;return!1}}return 0<e.dom.Sizzle.matches(b,a.nodeType?[a]:a).length},add:function(a,b,d,c,
k){var f=this;return this.run(a,function(a){var h;h=i(b,"string")?f.doc.createElement(b):b;f.setAttribs(h,d);c&&(c.nodeType?h.appendChild(c):f.setHTML(h,c));return!k?a.appendChild(h):h})},create:function(a,b,d){return this.add(this.doc.createElement(a),a,b,d,1)},createHTML:function(a,b,d){var c,k;c="<"+a;for(k in b)b.hasOwnProperty(k)&&(c+=" "+k+'="'+this.encode(b[k])+'"');return"undefined"!=typeof d?c+">"+d+"</"+a+">":c+" />"},remove:function(a,b){return this.run(a,function(a){var d,k=a.parentNode;
if(!k)return null;if(b)for(;d=a.firstChild;)!e.isIE||3!==d.nodeType||d.nodeValue?k.insertBefore(d,a):a.removeChild(d);return k.removeChild(a)})},setStyle:function(a,b,d){var f=this;return f.run(a,function(k){var m;m=k.style;b=b.replace(/-(\D)/g,function(a,b){return b.toUpperCase()});if(f.pixelStyles.test(b)&&(e.is(d,"number")||/^[\-0-9\.]+$/.test(d)))d+="px";switch(b){case "opacity":if(c&&(m.filter=""===d?"":"alpha(opacity="+100*d+")",!a.currentStyle||!a.currentStyle.hasLayout))m.display="inline-block";
m[b]=m["-moz-opacity"]=m["-khtml-opacity"]=d||"";break;case "float":c?m.styleFloat=d:m.cssFloat=d;break;default:m[b]=d||""}f.settings.update_styles&&f.setAttrib(k,"data-mce-style")})},getStyle:function(a,b,d){if(a=this.get(a)){if(this.doc.defaultView&&d){b=b.replace(/[A-Z]/g,function(a){return"-"+a});try{return this.doc.defaultView.getComputedStyle(a,null).getPropertyValue(b)}catch(f){return null}}b=b.replace(/-(\D)/g,function(a,b){return b.toUpperCase()});"float"==b&&(b=c?"styleFloat":"cssFloat");
return a.currentStyle&&d?a.currentStyle[b]:a.style?a.style[b]:void 0}},setStyles:function(a,b){var d=this,c=d.settings,k;k=c.update_styles;c.update_styles=0;j(b,function(b,k){d.setStyle(a,k,b)});c.update_styles=k;c.update_styles&&d.setAttrib(a,c.cssText)},removeAllAttribs:function(a){return this.run(a,function(a){var b,d=a.attributes;for(b=d.length-1;0<=b;b--)a.removeAttributeNode(d.item(b))})},setAttrib:function(a,b,d){var c=this;if(a&&b)return c.settings.strict&&(b=b.toLowerCase()),this.run(a,function(a){var h=
c.settings,f=a.getAttribute(b);if(null!==d)switch(b){case "style":if(!i(d,"string")){j(d,function(b,d){c.setStyle(a,d,b)});return}h.keep_values&&(d&&!c._isRes(d)?a.setAttribute("data-mce-style",d,2):a.removeAttribute("data-mce-style",2));a.style.cssText=d;break;case "class":a.className=d||"";break;case "src":case "href":h.keep_values&&(h.url_converter&&(d=h.url_converter.call(h.url_converter_scope||c,d,b,a)),c.setAttrib(a,"data-mce-"+b,d,2));break;case "shape":a.setAttribute("data-mce-style",d)}i(d)&&
null!==d&&0!==d.length?a.setAttribute(b,""+d,2):a.removeAttribute(b,2);tinyMCE.activeEditor&&f!=d&&(h=tinyMCE.activeEditor,h.onSetAttrib.dispatch(h,a,b,d))})},setAttribs:function(a,b){var d=this;return this.run(a,function(a){j(b,function(b,c){d.setAttrib(a,c,b)})})},getAttrib:function(a,b,d){var f,a=this.get(a);if(!a||1!==a.nodeType)return void 0===d?!1:d;i(d)||(d="");if(/^(src|href|style|coords|shape)$/.test(b)&&(f=a.getAttribute("data-mce-"+b)))return f;c&&this.props[b]&&(f=(f=a[this.props[b]])&&
f.nodeValue?f.nodeValue:f);f||(f=a.getAttribute(b,2));if(/^(checked|compact|declare|defer|disabled|ismap|multiple|nohref|noshade|nowrap|readonly|selected)$/.test(b))return!0===a[this.props[b]]&&""===f?b:f?b:"";if("FORM"===a.nodeName&&a.getAttributeNode(b))return a.getAttributeNode(b).nodeValue;if("style"===b&&(f=f||a.style.cssText))f=this.serializeStyle(this.parseStyle(f),a.nodeName),this.settings.keep_values&&!this._isRes(f)&&a.setAttribute("data-mce-style",f);g&&("class"===b&&f)&&(f=f.replace(/(apple|webkit)\-[a-z\-]+/gi,
""));if(c)switch(b){case "rowspan":case "colspan":1===f&&(f="");break;case "size":if("+0"===f||20===f||0===f)f="";break;case "width":case "height":case "vspace":case "checked":case "disabled":case "readonly":0===f&&(f="");break;case "hspace":-1===f&&(f="");break;case "maxlength":case "tabindex":if(32768===f||2147483647===f||"32768"===f)f="";break;case "multiple":case "compact":case "noshade":case "nowrap":return 65535===f?b:d;case "shape":f=f.toLowerCase();break;default:0===b.indexOf("on")&&f&&(f=
e._replace(/^function\s+\w+\(\)\s+\{\s+(.*)\s+\}$/,"$1",""+f))}return void 0!==f&&null!==f&&""!==f?""+f:d},getPos:function(a,b){var d=0,c=0,k=this.doc,a=this.get(a),b=b||k.body;if(a){if(a.getBoundingClientRect)return a=a.getBoundingClientRect(),c=this.boxModel?k.documentElement:k.body,d=a.left+(k.documentElement.scrollLeft||k.body.scrollLeft)-c.clientTop,c=a.top+(k.documentElement.scrollTop||k.body.scrollTop)-c.clientLeft,{x:d,y:c};for(k=a;k&&k!=b&&k.nodeType;)d+=k.offsetLeft||0,c+=k.offsetTop||0,
k=k.offsetParent;for(k=a.parentNode;k&&k!=b&&k.nodeType;)d-=k.scrollLeft||0,c-=k.scrollTop||0,k=k.parentNode}return{x:d,y:c}},parseStyle:function(a){return this.styles.parse(a)},serializeStyle:function(a,b){return this.styles.serialize(a,b)},loadCSS:function(a){var b=this,d=b.doc,f;a||(a="");f=b.select("head")[0];j(a.split(","),function(a){var h;b.files[a]||(b.files[a]=!0,h=b.create("link",{rel:"stylesheet",href:e._addVer(a)}),c&&(d.documentMode&&d.recalc)&&(h.onload=function(){d.recalc&&d.recalc();
h.onload=null}),f.appendChild(h))})},addClass:function(a,b){return this.run(a,function(a){var d;if(!b)return 0;if(this.hasClass(a,b))return a.className;d=this.removeClass(a,b);return a.className=(""!=d?d+" ":"")+b})},removeClass:function(a,b){var d=this,c;return d.run(a,function(a){var f;return d.hasClass(a,b)?(c||(c=RegExp("(^|\\s+)"+b+"(\\s+|$)","g")),f=a.className.replace(c," "),f=e.trim(" "!=f?f:""),a.className=f,f||(a.removeAttribute("class"),a.removeAttribute("className")),f):a.className})},
hasClass:function(a,b){a=this.get(a);return!a||!b?!1:-1!==(" "+a.className+" ").indexOf(" "+b+" ")},show:function(a){return this.setStyle(a,"display","block")},hide:function(a){return this.setStyle(a,"display","none")},isHidden:function(a){a=this.get(a);return!a||"none"==a.style.display||"none"==this.getStyle(a,"display")},uniqueId:function(a){return(!a?"mce_":a)+this.counter++},setHTML:function(a,b){var d=this;return d.run(a,function(a){if(c){for(;a.firstChild;)a.removeChild(a.firstChild);try{a.innerHTML=
"<br />"+b,a.removeChild(a.firstChild)}catch(k){a=d.create("div"),a.innerHTML="<br />"+b,j(a.childNodes,function(b,d){d&&a.appendChild(b)})}}else a.innerHTML=b;return b})},getOuterHTML:function(a){var b,a=this.get(a);if(!a)return null;if(1===a.nodeType&&this.hasOuterHTML)return a.outerHTML;b=(a.ownerDocument||this.doc).createElement("body");b.appendChild(a.cloneNode(!0));return b.innerHTML},setOuterHTML:function(a,b,d){function f(a,b,d){d=d.createElement("body");d.innerHTML=b;for(b=d.lastChild;b;)k.insertAfter(b.cloneNode(!0),
a),b=b.previousSibling;k.remove(a)}var k=this;return this.run(a,function(a){a=k.get(a);if(1==a.nodeType)if(d=d||a.ownerDocument||k.doc,c)try{c&&1==a.nodeType?a.outerHTML=b:f(a,b,d)}catch(h){f(a,b,d)}else f(a,b,d)})},decode:a.decode,encode:a.encodeAllRaw,insertAfter:function(a,b){b=this.get(b);return this.run(a,function(a){var d,k;d=b.parentNode;(k=b.nextSibling)?d.insertBefore(a,k):d.appendChild(a);return a})},isBlock:function(a){var d=a.nodeType;return d?!!(1===d&&b[a.nodeName]):!!b[a]},replace:function(a,
b,d){i(b,"array")&&(a=a.cloneNode(!0));return this.run(b,function(b){d&&j(e.grep(b.childNodes),function(b){a.appendChild(b)});return b.parentNode.replaceChild(a,b)})},rename:function(a,b){var d=this,c;a.nodeName!=b.toUpperCase()&&(c=d.create(b),j(d.getAttribs(a),function(b){d.setAttrib(c,b.nodeName,d.getAttrib(a,b.nodeName))}),d.replace(c,a,1));return c||a},findCommonAncestor:function(a,b){for(var d=a,c;d;){for(c=b;c&&d!=c;)c=c.parentNode;if(d==c)break;d=d.parentNode}return!d&&a.ownerDocument?a.ownerDocument.documentElement:
d},toHex:function(a){function b(a){a=parseInt(a).toString(16);return 1<a.length?a:"0"+a}var d=/^\s*rgb\s*?\(\s*?([0-9]+)\s*?,\s*?([0-9]+)\s*?,\s*?([0-9]+)\s*?\)\s*$/i.exec(a);d&&(a="#"+b(d[1])+b(d[2])+b(d[3]));return a},getClasses:function(){function a(f){j(f.imports,function(b){a(b)});j(f.cssRules||f.rules,function(f){switch(f.type||1){case 1:f.selectorText&&j(f.selectorText.split(","),function(a){a=a.replace(/^\s*|\s*$|^\s\./g,"");if(!/\.mce/.test(a)&&/\.[\w\-]+$/.test(a)&&(k=a,a=e._replace(/.*\.([a-z0-9_\-]+).*/i,
"$1",a),(!c||(a=c(a,k)))&&!d[a]))b.push({"class":a}),d[a]=1});break;case 3:a(f.styleSheet)}})}var b=[],d={},c=this.settings.class_filter,k;if(this.classes)return this.classes;try{j(this.doc.styleSheets,a)}catch(f){}0<b.length&&(this.classes=b);return b},run:function(a,b,d){var c=this,k;c.doc&&"string"===typeof a&&(a=c.get(a));if(!a)return!1;d=d||this;return!a.nodeType&&(a.length||0===a.length)?(k=[],j(a,function(a,f){a&&("string"==typeof a&&(a=c.doc.getElementById(a)),k.push(b.call(d,a,f)))}),k):
b.call(d,a)},getAttribs:function(a){var b,a=this.get(a);if(!a)return[];if(c){b=[];if("OBJECT"==a.nodeName)return a.attributes;"OPTION"===a.nodeName&&this.getAttrib(a,"selected")&&b.push({specified:1,nodeName:"selected"});a.cloneNode(!1).outerHTML.replace(/<\/?[\w:\-]+ ?|=[\"][^\"]+\"|=\'[^\']+\'|=[\w\-]+|>/gi,"").replace(/[\w:\-]+/gi,function(a){b.push({specified:1,nodeName:a})});return b}return a.attributes},isEmpty:function(a,b){var d,c,k,m;if(a=a.firstChild){k=new e.dom.TreeWalker(a);b=b||this.schema?
this.schema.getNonEmptyElements():null;do{c=a.nodeType;if(1===c){if(a.getAttribute("data-mce-bogus"))continue;m=a.nodeName.toLowerCase();if(b&&b[m]){d=a.parentNode;if("br"===m&&this.isBlock(d)&&d.firstChild===a&&d.lastChild===a)continue;return!1}this.getAttribs(a);for(d=a.attributes.length;d--;)if(m=a.attributes[d].nodeName.toLowerCase(),"name"===m||"data-mce-bookmark"===m||"contenteditable"===m&&"true"===a.attributes[d].value)return!1}if(8==c||3===c&&!f.test(a.nodeValue))return!1}while(a=k.next())}return!0},
destroy:function(a){this.events&&this.events.destroy();this.win=this.doc=this.root=this.events=null;a||e.removeUnload(this.destroy)},createRng:function(){var a=this.doc;return a.createRange?a.createRange():new e.dom.Range(this)},nodeIndex:function(a,b){var d=0,c,k;if(a){c=a.nodeType;for(a=a.previousSibling;a;a=a.previousSibling)if(k=a.nodeType,!(b&&3==k)||k!=c&&a.nodeValue.length)d++,c=k}return d},split:function(a,b,d){function c(a){var b,d=a.childNodes,f=a.nodeType;if(!(1==f&&"bookmark"==a.getAttribute("data-mce-type"))){for(b=
d.length-1;0<=b;b--)c(d[b]);if(9!=f){if(3==f&&0<a.nodeValue.length){b=e.trim(a.nodeValue).length;if(!(d=!k.isBlock(a.parentNode)))if(!(d=0<b)){if(b=0==b)b=a.nextSibling&&"SPAN"==a.nextSibling.nodeName,b=a.previousSibling&&"SPAN"==a.previousSibling.nodeName&&b;d=b}if(d)return}else if(1==f&&(d=a.childNodes,1==d.length&&(d[0]&&1==d[0].nodeType&&"bookmark"==d[0].getAttribute("data-mce-type"))&&a.parentNode.insertBefore(d[0],a),d.length||/^(br|hr|input|img)$/i.test(a.nodeName)))return;k.remove(a)}return a}}
var k=this,f=k.createRng(),g,o;if(a&&b)return f.setStart(a.parentNode,k.nodeIndex(a)),f.setEnd(b.parentNode,k.nodeIndex(b)),g=f.extractContents(),f=k.createRng(),f.setStart(b.parentNode,k.nodeIndex(b)+1),f.setEnd(a.parentNode,k.nodeIndex(a)+1),f=f.extractContents(),o=a.parentNode,o.insertBefore(c(g),a),d?o.replaceChild(d,b):o.insertBefore(b,a),o.insertBefore(c(f),a),k.remove(a),d||b},bind:function(a,b,d,c){this.events||(this.events=new e.dom.EventUtils);return this.events.add(a,b,d,c||this)},unbind:function(a,
b,d){this.events||(this.events=new e.dom.EventUtils);return this.events.remove(a,b,d)},dumpRng:function(a){return"startContainer: "+a.startContainer.nodeName+", startOffset: "+a.startOffset+", endContainer: "+a.endContainer.nodeName+", endOffset: "+a.endOffset},_findSib:function(a,b,d){var c=this,k=b;if(a){i(k,"string")&&(k=function(a){return c.is(a,b)});for(a=a[d];a;a=a[d])if(k(a))return a}return null},_isRes:function(a){return/^(top|left|bottom|right|width|height)/i.test(a)||/;\s*(top|left|bottom|right|width|height)/i.test(a)}});
e.DOM=new e.dom.DOMUtils(document,{process_html:0})})(tinymce);
(function(e){function j(e){function g(a,b){h(v,a,b)}function c(a,b){h(u,a,b)}function a(a){g(a.parentNode,G(a))}function d(a){c(a.parentNode,G(a)+1)}function b(a,b){var d;if(3==a.nodeType||0>b)return a;for(d=a.firstChild;d&&0<b;)--b,d=d.nextSibling;return d?d:a}function f(a,b,d,c){var k,f;if(a==d)return b==c?0:b<c?-1:1;for(k=d;k&&k.parentNode!=a;)k=k.parentNode;if(k){f=0;for(d=a.firstChild;d!=k&&f<b;)f++,d=d.nextSibling;return b<=f?-1:1}for(k=a;k&&k.parentNode!=d;)k=k.parentNode;if(k){f=0;for(d=d.firstChild;d!=
k&&f<c;)f++,d=d.nextSibling;return f<c?-1:1}for(b=e.findCommonAncestor(a,d);a&&a.parentNode!=b;)a=a.parentNode;a||(a=b);for(c=d;c&&c.parentNode!=b;)c=c.parentNode;c||(c=b);if(a==c)return 0;for(d=b.firstChild;d;){if(d==a)return-1;if(d==c)return 1;d=d.nextSibling}}function h(a,b,d){a?(o[z]=b,o[x]=d):(o[y]=b,o[t]=d);for(b=o[y];b.parentNode;)b=b.parentNode;for(d=o[z];d.parentNode;)d=d.parentNode;d==b?0<f(o[z],o[x],o[y],o[t])&&o.collapse(a):o.collapse(a);o.collapsed=o[z]==o[y]&&o[x]==o[t];o.commonAncestorContainer=
e.findCommonAncestor(o[z],o[y])}function p(a){var b,d=0,c=0,f;if(o[z]==o[y])return l(a);b=o[y];for(f=b.parentNode;f;b=f,f=f.parentNode){if(f==o[z]){var e=b;f=c=d=d=f=b=void 0;a!=A&&(b=s.createDocumentFragment());f=n(e,a);b&&b.appendChild(f);d=G(e);d-=o[x];if(!(0>=d))for(f=e.previousSibling;0<d;)c=f.previousSibling,f=q(f,a),b&&b.insertBefore(f,b.firstChild),--d,f=c;a!=r&&(o.setEndBefore(e),o.collapse(u));a=b;return a}++d}b=o[z];for(f=b.parentNode;f;b=f,f=f.parentNode){if(f==o[y]){e=b;f=c=d=f=d=b=void 0;
a!=A&&(b=s.createDocumentFragment());f=k(e,a);b&&b.appendChild(f);d=G(e);++d;d=o[t]-d;for(f=e.nextSibling;0<d;)c=f.nextSibling,f=q(f,a),b&&b.appendChild(f),--d,f=c;a!=r&&(o.setStartAfter(e),o.collapse(v));return b}++c}c-=d;for(b=o[z];0<c;)b=b.parentNode,c--;for(d=o[y];0>c;)d=d.parentNode,c++;c=b.parentNode;for(f=d.parentNode;c!=f;c=c.parentNode,f=f.parentNode)b=c,d=f;var h;a!=A&&(e=s.createDocumentFragment());h=k(b,a);e&&e.appendChild(h);c=G(b);f=G(d);++c;c=f-c;for(h=b.nextSibling;0<c;)f=h.nextSibling,
h=q(h,a),e&&e.appendChild(h),h=f,--c;h=n(d,a);e&&e.appendChild(h);a!=r&&(o.setStartAfter(b),o.collapse(v));return e}function l(a){var d,c,f,k;a!=A&&(d=s.createDocumentFragment());if(o[x]==o[t])return d;if(3==o[z].nodeType){c=o[z].nodeValue;c=c.substring(o[x],o[t]);a!=r&&(o[z].deleteData(o[x],o[t]-o[x]),o.collapse(v));if(a==A)return;d.appendChild(s.createTextNode(c));return d}f=b(o[z],o[x]);for(c=o[t]-o[x];0<c;)k=f.nextSibling,f=q(f,a),d&&d.appendChild(f),--c,f=k;a!=r&&o.collapse(v);return d}function n(a,
d){var c=b(o[y],o[t]-1),f,k,e,h=c!=o[y];if(c==a)return m(c,h,u,d);f=c.parentNode;for(k=m(f,u,u,d);f;){for(;c;)e=c.previousSibling,c=m(c,h,u,d),d!=A&&k.insertBefore(c,k.firstChild),h=v,c=e;if(f==a)return k;c=f.previousSibling;f=f.parentNode;e=m(f,u,u,d);d!=A&&e.appendChild(k);k=e}}function k(a,d){var c=b(o[z],o[x]),f=c!=o[z],k,e,h;if(c==a)return m(c,f,v,d);k=c.parentNode;for(e=m(k,u,v,d);k;){for(;c;)h=c.nextSibling,c=m(c,f,v,d),d!=A&&e.appendChild(c),f=v,c=h;if(k==a)return e;c=k.nextSibling;k=k.parentNode;
h=m(k,u,v,d);d!=A&&h.appendChild(e);e=h}}function m(a,b,d,c){var f;if(b)return q(a,c);if(3==a.nodeType){b=a.nodeValue;d?(f=o[x],d=b.substring(f),b=b.substring(0,f)):(f=o[t],d=b.substring(0,f),b=b.substring(f));c!=r&&(a.nodeValue=b);if(c==A)return;a=a.cloneNode(u);a.nodeValue=d;return a}if(c!=A)return a.cloneNode(u)}function q(a,b){if(b!=A)return b==r?a.cloneNode(v):a;a.parentNode.removeChild(a)}var o=this,s=e.doc,r=1,A=2,v=!0,u=!1,x="startOffset",z="startContainer",y="endContainer",t="endOffset",
B=tinymce.extend,G=e.nodeIndex;B(o,{startContainer:s,startOffset:0,endContainer:s,endOffset:0,collapsed:v,commonAncestorContainer:s,START_TO_START:0,START_TO_END:1,END_TO_END:2,END_TO_START:3,setStart:g,setEnd:c,setStartBefore:a,setStartAfter:function(a){g(a.parentNode,G(a)+1)},setEndBefore:function(a){c(a.parentNode,G(a))},setEndAfter:d,collapse:function(a){a?(o[y]=o[z],o[t]=o[x]):(o[z]=o[y],o[x]=o[t]);o.collapsed=v},selectNode:function(b){a(b);d(b)},selectNodeContents:function(a){g(a,0);c(a,1===
a.nodeType?a.childNodes.length:a.nodeValue.length)},compareBoundaryPoints:function(a,b){var d=o[z],c=o[x],k=o[y],e=o[t],h=b.startContainer,m=b.startOffset,g=b.endContainer,A=b.endOffset;if(0===a)return f(d,c,h,m);if(1===a)return f(k,e,h,m);if(2===a)return f(k,e,g,A);if(3===a)return f(d,c,g,A)},deleteContents:function(){p(A)},extractContents:function(){return p(0)},cloneContents:function(){return p(r)},insertNode:function(a){var b=this[z],d=this[x],c;(3===b.nodeType||4===b.nodeType)&&b.nodeValue?d?
d>=b.nodeValue.length?e.insertAfter(a,b):(d=b.splitText(d),b.parentNode.insertBefore(a,d)):b.parentNode.insertBefore(a,b):(0<b.childNodes.length&&(c=b.childNodes[d]),c?b.insertBefore(a,c):b.appendChild(a))},surroundContents:function(a){var b=o.extractContents();o.insertNode(a);a.appendChild(b);o.selectNode(a)},cloneRange:function(){return B(new j(e),{startContainer:o[z],startOffset:o[x],endContainer:o[y],endOffset:o[t],collapsed:o.collapsed,commonAncestorContainer:o.commonAncestorContainer})}})}e.Range=
j})(tinymce.dom);
(function(){tinymce.dom.TridentSelection=function(e){function j(a,d){var b,c=0,h,g,i,j,k,m,q=-1,o;b=a.duplicate();b.collapse(d);o=b.parentElement();if(o.ownerDocument===e.dom.doc){for(;"false"===o.contentEditable;)o=o.parentNode;if(!o.hasChildNodes())return{node:o,inside:1};i=o.children;for(h=i.length-1;c<=h;)if(m=Math.floor((c+h)/2),j=i[m],b.moveToElementText(j),q=b.compareEndPoints(d?"StartToStart":"EndToEnd",a),0<q)h=m-1;else if(0>q)c=m+1;else return{node:j};if(0>q){j?b.collapse(!1):(b.moveToElementText(o),
b.collapse(!0),j=o,g=!0);b.setEndPoint(d?"EndToStart":"EndToEnd",a);if(0<b.compareEndPoints(d?"StartToStart":"StartToEnd",a)){b=a.duplicate();b.collapse(d);for(k=-1;o==b.parentElement()&&0!=b.move("character",-1);)k++}k=k||b.text.replace("\r\n"," ").length}else b.collapse(!0),b.setEndPoint(d?"StartToStart":"StartToEnd",a),k=b.text.replace("\r\n"," ").length;return{node:j,position:q,offset:k,inside:g}}}var i=this,g=e.dom,c=!0;this.getBookmark=function(a){function d(a){var b,d,c,f,e=[];b=a.parentNode;
for(d=g.doc.body.parentNode;b!=d&&9!==b.nodeType;){c=b.children;for(f=c.length;f--;)if(a===c[f]){e.push(f);break}a=b;b=b.parentNode}return e}function b(a){if(a=j(c,a))return{position:a.position,offset:a.offset,indexes:d(a.node),inside:a.inside}}var c=e.getRng(),h={};2===a&&(c.item?h.start={ctrl:!0,indexes:d(c.item(0))}:(h.start=b(!0),e.isCollapsed()||(h.end=b())));return h};this.moveToBookmark=function(a){function d(a){var b,d,c,f;b=g.doc.body;for(d=a.length-1;0<=d;d--)f=b.children,c=a[d],c<=f.length-
1&&(b=f[c]);return b}function b(b){var g=a[b?"start":"end"],i,k;g&&(i=0<g.position,k=e.createTextRange(),k.moveToElementText(d(g.indexes)),offset=g.offset,void 0!==offset?(k.collapse(g.inside||i),k.moveStart("character",i?-offset:offset)):k.collapse(b),c.setEndPoint(b?"StartToStart":"EndToStart",k),b&&c.collapse(!0))}var c,e=g.doc.body;a.start&&(a.start.ctrl?(c=e.createControlRange(),c.addElement(d(a.start.indexes))):(c=e.createTextRange(),b(!0),b()),c.select())};this.addRange=function(a){function d(a){var d,
f,e,q,u;e=g.create("a");d=a?h:j;f=a?i:n;q=b.duplicate();if(d==k||d==k.documentElement)d=m,f=0;3==d.nodeType?(d.parentNode.insertBefore(e,d),q.moveToElementText(e),q.moveStart("character",f),g.remove(e),b.setEndPoint(a?"StartToStart":"EndToEnd",q)):(u=d.childNodes,u.length?(f>=u.length?g.insertAfter(e,u[u.length-1]):d.insertBefore(e,u[f]),q.moveToElementText(e)):(e=k.createTextNode("﻿"),d.appendChild(e),q.moveToElementText(e.parentNode),q.collapse(c)),b.setEndPoint(a?"StartToStart":"EndToEnd",q),g.remove(e))}
var b,f,h,i,j,n,k=e.dom.doc,m=k.body;h=a.startContainer;i=a.startOffset;j=a.endContainer;n=a.endOffset;b=m.createTextRange();if(h==j&&(1==h.nodeType&&i==n-1)&&i==n-1)try{f=m.createControlRange();f.addElement(h.childNodes[i]);f.select();return}catch(q){}d(!0);d();b.select()};this.getRangeAt=function(){function a(a){var c=j(d,a),f,e,h=0,g;f=c.node;e=c.offset;if(c.inside&&!f.hasChildNodes())b[a?"setStart":"setEnd"](f,0);else if(void 0===e)b[a?"setStartBefore":"setEndAfter"](f);else{if(0>c.position){c=
c.inside?f.firstChild:f.nextSibling;if(!c){b[a?"setStartAfter":"setEndAfter"](f);return}if(!e){if(3==c.nodeType)b[a?"setStart":"setEnd"](c,0);else b[a?"setStartBefore":"setEndBefore"](c);return}for(;c;){g=c.nodeValue;h+=g.length;if(h>=e){f=c;h-=e;h=g.length-h;break}c=c.nextSibling}}else{c=f.previousSibling;if(!c)return b[a?"setStartBefore":"setEndBefore"](f);if(!e){if(3==f.nodeType)b[a?"setStart":"setEnd"](c,f.nodeValue.length);else b[a?"setStartAfter":"setEndAfter"](c);return}for(;c;){h+=c.nodeValue.length;
if(h>=e){f=c;h-=e;break}c=c.previousSibling}}b[a?"setStart":"setEnd"](f,h)}}var d=e.getRng(),b=g.createRng(),c,h,p,l;c=d.item?d.item(0):d.parentElement();if(c.ownerDocument!=g.doc)return b;h=e.isCollapsed();if(d.item)return b.setStart(c.parentNode,g.nodeIndex(c)),b.setEnd(b.startContainer,b.startOffset+1),b;try{a(!0),h||a()}catch(n){if(-2147024809==n.number)l=i.getBookmark(2),p=d.duplicate(),p.collapse(!0),c=p.parentElement(),h||(p=d.duplicate(),p.collapse(!1),p=p.parentElement(),p.innerHTML=p.innerHTML),
c.innerHTML=c.innerHTML,i.moveToBookmark(l),d=e.getRng(),a(!0),h||a();else throw n;}return b}}})();
(function(){function e(a,b,d,c,f,k){for(var f=0,e=c.length;f<e;f++){var h=c[f];if(h){for(var h=h[a],m=!1;h;){if(h.sizcache===d){m=c[h.sizset];break}1===h.nodeType&&!k&&(h.sizcache=d,h.sizset=f);if(h.nodeName.toLowerCase()===b){m=h;break}h=h[a]}c[f]=m}}}function j(a,d,c,f,k,e){for(var k=0,h=f.length;k<h;k++){var m=f[k];if(m){for(var m=m[a],g=!1;m;){if(m.sizcache===c){g=f[m.sizset];break}if(1===m.nodeType)if(e||(m.sizcache=c,m.sizset=k),"string"!==typeof d){if(m===d){g=!0;break}}else if(0<b.filter(d,
[m]).length){g=m;break}m=m[a]}f[k]=g}}}var i=/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,g=0,c=Object.prototype.toString,a=!1,d=!0;[0,0].sort(function(){d=!1;return 0});var b=function(a,d,k,e){var k=k||[],m=d=d||document;if(1!==d.nodeType&&9!==d.nodeType)return[];if(!a||"string"!==typeof a)return k;var g=[],o,j,s,p,q=!0,l=b.isXML(d),J=a,E;do if(i.exec(""),o=i.exec(J))if(J=o[3],g.push(o[1]),o[2]){p=o[3];break}while(o);
if(1<g.length&&h.exec(a))if(2===g.length&&f.relative[g[0]])j=r(g[0]+g[1],d);else for(j=f.relative[g[0]]?[d]:b(g.shift(),d);g.length;)a=g.shift(),f.relative[a]&&(a+=g.shift()),j=r(a,j);else if(!e&&(1<g.length&&9===d.nodeType&&!l&&f.match.ID.test(g[0])&&!f.match.ID.test(g[g.length-1]))&&(o=b.find(g.shift(),d,l),d=o.expr?b.filter(o.expr,o.set)[0]:o.set[0]),d){o=e?{expr:g.pop(),set:n(e)}:b.find(g.pop(),1===g.length&&("~"===g[0]||"+"===g[0])&&d.parentNode?d.parentNode:d,l);j=o.expr?b.filter(o.expr,o.set):
o.set;for(0<g.length?s=n(j):q=!1;g.length;)o=E=g.pop(),f.relative[E]?o=g.pop():E="",null==o&&(o=d),f.relative[E](s,o,l)}else s=[];s||(s=j);s||b.error(E||a);if("[object Array]"===c.call(s))if(q)if(d&&1===d.nodeType)for(a=0;null!=s[a];a++)s[a]&&(!0===s[a]||1===s[a].nodeType&&b.contains(d,s[a]))&&k.push(j[a]);else for(a=0;null!=s[a];a++)s[a]&&1===s[a].nodeType&&k.push(j[a]);else k.push.apply(k,s);else n(s,k);p&&(b(p,m,k,e),b.uniqueSort(k));return k};b.uniqueSort=function(b){if(m&&(a=d,b.sort(m),a))for(var c=
1;c<b.length;c++)b[c]===b[c-1]&&b.splice(c--,1);return b};b.matches=function(a,d){return b(a,null,null,d)};b.find=function(a,b,d){var c;if(!a)return[];for(var k=0,e=f.order.length;k<e;k++){var h=f.order[k],m;if(m=f.leftMatch[h].exec(a)){var g=m[1];m.splice(1,1);if("\\"!==g.substr(g.length-1)&&(m[1]=(m[1]||"").replace(/\\/g,""),c=f.find[h](m,b,d),null!=c)){a=a.replace(f.match[h],"");break}}}c||(c=b.getElementsByTagName("*"));return{set:c,expr:a}};b.filter=function(a,d,c,k){for(var e=a,h=[],m=d,g,o,
i=d&&d[0]&&b.isXML(d[0]);a&&d.length;){for(var j in f.filter)if(null!=(g=f.leftMatch[j].exec(a))&&g[2]){var s=f.filter[j],r,p;p=g[1];o=!1;g.splice(1,1);if("\\"!==p.substr(p.length-1)){m===h&&(h=[]);if(f.preFilter[j])if(g=f.preFilter[j](g,m,c,h,k,i)){if(!0===g)continue}else o=r=!0;if(g)for(var q=0;null!=(p=m[q]);q++)if(p){r=s(p,g,q,m);var l=k^!!r;c&&null!=r?l?o=!0:m[q]=!1:l&&(h.push(p),o=!0)}if(void 0!==r){c||(m=h);a=a.replace(f.match[j],"");if(!o)return[];break}}}if(a===e)if(null==o)b.error(a);else break;
e=a}return m};b.error=function(a){throw"Syntax error, unrecognized expression: "+a;};var f=b.selectors={order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,CLASS:/\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,NAME:/\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(['"]*)(.*?)\3|)\s*\]/,TAG:/^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\((even|odd|[\dn+\-]*)\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,
PSEUDO:/:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/},leftMatch:{},attrMap:{"class":"className","for":"htmlFor"},attrHandle:{href:function(a){return a.getAttribute("href")}},relative:{"+":function(a,d){var c="string"===typeof d,f=c&&!/\W/.test(d),c=c&&!f;f&&(d=d.toLowerCase());for(var f=0,k=a.length,e;f<k;f++)if(e=a[f]){for(;(e=e.previousSibling)&&1!==e.nodeType;);a[f]=c||e&&e.nodeName.toLowerCase()===d?e||!1:e===d}c&&b.filter(d,a,!0)},">":function(a,d){var c="string"===
typeof d,f,k=0,e=a.length;if(c&&!/\W/.test(d))for(d=d.toLowerCase();k<e;k++){if(f=a[k])c=f.parentNode,a[k]=c.nodeName.toLowerCase()===d?c:!1}else{for(;k<e;k++)(f=a[k])&&(a[k]=c?f.parentNode:f.parentNode===d);c&&b.filter(d,a,!0)}},"":function(a,b,d){var c=g++,f=j,k;"string"===typeof b&&!/\W/.test(b)&&(k=b=b.toLowerCase(),f=e);f("parentNode",b,c,a,k,d)},"~":function(a,b,d){var c=g++,f=j,k;"string"===typeof b&&!/\W/.test(b)&&(k=b=b.toLowerCase(),f=e);f("previousSibling",b,c,a,k,d)}},find:{ID:function(a,
b,d){if("undefined"!==typeof b.getElementById&&!d)return(a=b.getElementById(a[1]))?[a]:[]},NAME:function(a,b){if("undefined"!==typeof b.getElementsByName){for(var d=[],c=b.getElementsByName(a[1]),f=0,k=c.length;f<k;f++)c[f].getAttribute("name")===a[1]&&d.push(c[f]);return 0===d.length?null:d}},TAG:function(a,b){return b.getElementsByTagName(a[1])}},preFilter:{CLASS:function(a,b,d,c,f,k){a=" "+a[1].replace(/\\/g,"")+" ";if(k)return a;for(var k=0,e;null!=(e=b[k]);k++)e&&(f^(e.className&&0<=(" "+e.className+
" ").replace(/[\t\n]/g," ").indexOf(a))?d||c.push(e):d&&(b[k]=!1));return!1},ID:function(a){return a[1].replace(/\\/g,"")},TAG:function(a){return a[1].toLowerCase()},CHILD:function(a){if("nth"===a[1]){var b=/(-?)(\d*)n((?:\+|-)?\d*)/.exec("even"===a[2]&&"2n"||"odd"===a[2]&&"2n+1"||!/\D/.test(a[2])&&"0n+"+a[2]||a[2]);a[2]=b[1]+(b[2]||1)-0;a[3]=b[3]-0}a[0]=g++;return a},ATTR:function(a,b,d,c,k,e){b=a[1].replace(/\\/g,"");!e&&f.attrMap[b]&&(a[1]=f.attrMap[b]);"~="===a[2]&&(a[4]=" "+a[4]+" ");return a},
PSEUDO:function(a,d,c,k,e){if("not"===a[1])if(1<(i.exec(a[3])||"").length||/^\w/.test(a[3]))a[3]=b(a[3],null,null,d);else return a=b.filter(a[3],d,c,1^e),c||k.push.apply(k,a),!1;else if(f.match.POS.test(a[0])||f.match.CHILD.test(a[0]))return!0;return a},POS:function(a){a.unshift(!0);return a}},filters:{enabled:function(a){return!1===a.disabled&&"hidden"!==a.type},disabled:function(a){return!0===a.disabled},checked:function(a){return!0===a.checked},selected:function(a){a.parentNode.selectedIndex;return!0===
a.selected},parent:function(a){return!!a.firstChild},empty:function(a){return!a.firstChild},has:function(a,d,c){return!!b(c[3],a).length},header:function(a){return/h\d/i.test(a.nodeName)},text:function(a){return"text"===a.type},radio:function(a){return"radio"===a.type},checkbox:function(a){return"checkbox"===a.type},file:function(a){return"file"===a.type},password:function(a){return"password"===a.type},submit:function(a){return"submit"===a.type},image:function(a){return"image"===a.type},reset:function(a){return"reset"===
a.type},button:function(a){return"button"===a.type||"button"===a.nodeName.toLowerCase()},input:function(a){return/input|select|textarea|button/i.test(a.nodeName)}},setFilters:{first:function(a,b){return 0===b},last:function(a,b,d,c){return b===c.length-1},even:function(a,b){return 0===b%2},odd:function(a,b){return 1===b%2},lt:function(a,b,d){return b<d[3]-0},gt:function(a,b,d){return b>d[3]-0},nth:function(a,b,d){return d[3]-0===b},eq:function(a,b,d){return d[3]-0===b}},filter:{PSEUDO:function(a,
d,c,k){var e=d[1],h=f.filters[e];if(h)return h(a,c,d,k);if("contains"===e)return 0<=(a.textContent||a.innerText||b.getText([a])||"").indexOf(d[3]);if("not"===e){d=d[3];c=0;for(k=d.length;c<k;c++)if(d[c]===a)return!1;return!0}b.error("Syntax error, unrecognized expression: "+e)},CHILD:function(a,b){var d=b[1],c=a;switch(d){case "only":case "first":for(;c=c.previousSibling;)if(1===c.nodeType)return!1;if("first"===d)return!0;c=a;case "last":for(;c=c.nextSibling;)if(1===c.nodeType)return!1;return!0;case "nth":var d=
b[2],f=b[3];if(1===d&&0===f)return!0;var k=b[0],e=a.parentNode;if(e&&(e.sizcache!==k||!a.nodeIndex)){for(var h=0,c=e.firstChild;c;c=c.nextSibling)1===c.nodeType&&(c.nodeIndex=++h);e.sizcache=k}c=a.nodeIndex-f;return 0===d?0===c:0===c%d&&0<=c/d}},ID:function(a,b){return 1===a.nodeType&&a.getAttribute("id")===b},TAG:function(a,b){return"*"===b&&1===a.nodeType||a.nodeName.toLowerCase()===b},CLASS:function(a,b){return-1<(" "+(a.className||a.getAttribute("class"))+" ").indexOf(b)},ATTR:function(a,b){var d=
b[1],d=f.attrHandle[d]?f.attrHandle[d](a):null!=a[d]?a[d]:a.getAttribute(d),c=d+"",k=b[2],e=b[4];return null==d?"!="===k:"="===k?c===e:"*="===k?0<=c.indexOf(e):"~="===k?0<=(" "+c+" ").indexOf(e):!e?c&&!1!==d:"!="===k?c!==e:"^="===k?0===c.indexOf(e):"$="===k?c.substr(c.length-e.length)===e:"|="===k?c===e||c.substr(0,e.length+1)===e+"-":!1},POS:function(a,b,d,c){var k=f.setFilters[b[2]];if(k)return k(a,d,b,c)}}},h=f.match.POS,p=function(a,b){return"\\"+(b-0+1)},l;for(l in f.match)f.match[l]=RegExp(f.match[l].source+
/(?![^\[]*\])(?![^\(]*\))/.source),f.leftMatch[l]=RegExp(/(^(?:.|\r|\n)*?)/.source+f.match[l].source.replace(/\\(\d+)/g,p));var n=function(a,b){a=Array.prototype.slice.call(a,0);return b?(b.push.apply(b,a),b):a};try{Array.prototype.slice.call(document.documentElement.childNodes,0)[0].nodeType}catch(k){n=function(a,b){var d=b||[],f=0;if("[object Array]"===c.call(a))Array.prototype.push.apply(d,a);else if("number"===typeof a.length)for(var k=a.length;f<k;f++)d.push(a[f]);else for(;a[f];f++)d.push(a[f]);
return d}}var m;document.documentElement.compareDocumentPosition?m=function(b,d){if(!b.compareDocumentPosition||!d.compareDocumentPosition)return b==d&&(a=!0),b.compareDocumentPosition?-1:1;var c=b.compareDocumentPosition(d)&4?-1:b===d?0:1;0===c&&(a=!0);return c}:"sourceIndex"in document.documentElement?m=function(b,d){if(!b.sourceIndex||!d.sourceIndex)return b==d&&(a=!0),b.sourceIndex?-1:1;var c=b.sourceIndex-d.sourceIndex;0===c&&(a=!0);return c}:document.createRange&&(m=function(b,d){if(!b.ownerDocument||
!d.ownerDocument)return b==d&&(a=!0),b.ownerDocument?-1:1;var c=b.ownerDocument.createRange(),f=d.ownerDocument.createRange();c.setStart(b,0);c.setEnd(b,0);f.setStart(d,0);f.setEnd(d,0);c=c.compareBoundaryPoints(Range.START_TO_END,f);0===c&&(a=!0);return c});b.getText=function(a){for(var d="",c,f=0;a[f];f++)c=a[f],3===c.nodeType||4===c.nodeType?d+=c.nodeValue:8!==c.nodeType&&(d+=b.getText(c.childNodes));return d};p=document.createElement("div");l="script"+(new Date).getTime();p.innerHTML="<a name='"+
l+"'/>";var q=document.documentElement;q.insertBefore(p,q.firstChild);document.getElementById(l)&&(f.find.ID=function(a,b,d){if("undefined"!==typeof b.getElementById&&!d)return(b=b.getElementById(a[1]))?b.id===a[1]||"undefined"!==typeof b.getAttributeNode&&b.getAttributeNode("id").nodeValue===a[1]?[b]:void 0:[]},f.filter.ID=function(a,b){var d="undefined"!==typeof a.getAttributeNode&&a.getAttributeNode("id");return 1===a.nodeType&&d&&d.nodeValue===b});q.removeChild(p);q=p=null;p=document.createElement("div");
p.appendChild(document.createComment(""));0<p.getElementsByTagName("*").length&&(f.find.TAG=function(a,b){var d=b.getElementsByTagName(a[1]);if(a[1]==="*"){for(var c=[],f=0;d[f];f++)d[f].nodeType===1&&c.push(d[f]);d=c}return d});p.innerHTML="<a href='#'></a>";p.firstChild&&("undefined"!==typeof p.firstChild.getAttribute&&"#"!==p.firstChild.getAttribute("href"))&&(f.attrHandle.href=function(a){return a.getAttribute("href",2)});p=null;if(document.querySelectorAll){var o=b,p=document.createElement("div");
p.innerHTML="<p class='TEST'></p>";if(!(p.querySelectorAll&&0===p.querySelectorAll(".TEST").length)){var b=function(a,d,c,f){d=d||document;if(!f&&d.nodeType===9&&!b.isXML(d))try{return n(d.querySelectorAll(a),c)}catch(k){}return o(a,d,c,f)},s;for(s in o)b[s]=o[s];p=null}}s=document.createElement("div");s.innerHTML="<div class='test e'></div><div class='test'></div>";s.getElementsByClassName&&0!==s.getElementsByClassName("e").length&&(s.lastChild.className="e",1!==s.getElementsByClassName("e").length&&
(f.order.splice(1,0,"CLASS"),f.find.CLASS=function(a,b,d){if(typeof b.getElementsByClassName!=="undefined"&&!d)return b.getElementsByClassName(a[1])},s=null));b.contains=document.compareDocumentPosition?function(a,b){return!!(a.compareDocumentPosition(b)&16)}:function(a,b){return a!==b&&(a.contains?a.contains(b):true)};b.isXML=function(a){return(a=(a?a.ownerDocument||a:0).documentElement)?a.nodeName!=="HTML":false};var r=function(a,d){for(var c=[],k="",e,h=d.nodeType?[d]:d;e=f.match.PSEUDO.exec(a);){k=
k+e[0];a=a.replace(f.match.PSEUDO,"")}a=f.relative[a]?a+"*":a;e=0;for(var m=h.length;e<m;e++)b(a,h[e],c);return b.filter(k,c)};window.tinymce.dom.Sizzle=b})();
(function(e){var j=e.each,i=e.DOM,g=e.isIE,c;e.create("tinymce.dom.EventUtils",{EventUtils:function(){this.inits=[];this.events=[]},add:function(a,d,b,c){var h,p=this,l=p.events,n;if(d instanceof Array)return n=[],j(d,function(d){n.push(p.add(a,d,b,c))}),n;if(a&&a.hasOwnProperty&&a instanceof Array)return n=[],j(a,function(a){a=i.get(a);n.push(p.add(a,d,b,c))}),n;if(a=i.get(a)){h=function(a){if(!p.disabled){if((a=a||window.event)&&g&&!e.isIE11)a.target||(a.target=a.srcElement),e.extend(a,p._stoppers);
return!c?b(a):b.call(c,a)}};if("unload"==d)return e.unloads.unshift({func:h}),h;if("init"==d)return p.domLoaded?h():p.inits.push(h),h;l.push({obj:a,name:d,func:b,cfunc:h,scope:c});p._add(a,d,h);return b}},remove:function(a,d,b){var c=this,e=c.events,g=!1,l;if(a&&a.hasOwnProperty&&a instanceof Array)return l=[],j(a,function(a){a=i.get(a);l.push(c.remove(a,d,b))}),l;a=i.get(a);j(e,function(i,k){if(i.obj==a&&i.name==d&&(!b||i.func==b||i.cfunc==b))return e.splice(k,1),c._remove(a,d,i.cfunc),g=!0,!1});
return g},clear:function(a){var d=this.events,b,c;if(a){a=i.get(a);for(b=d.length-1;0<=b;b--)c=d[b],c.obj===a&&(this._remove(c.obj,c.name,c.cfunc),c.obj=c.cfunc=null,d.splice(b,1))}},cancel:function(a){if(!a)return!1;this.stop(a);return this.prevent(a)},stop:function(a){a.stopPropagation?a.stopPropagation():a.cancelBubble=!0;return!1},prevent:function(a){a.preventDefault?a.preventDefault():a.returnValue=!1;return!1},destroy:function(){var a=this;j(a.events,function(d){a._remove(d.obj,d.name,d.cfunc);
d.obj=d.cfunc=null});a.events=[];a=null},_add:function(a,d,b){a.attachEvent?a.attachEvent("on"+d,b):a.addEventListener?a.addEventListener(d,b,!1):a["on"+d]=b},_remove:function(a,d,b){if(a)try{a.detachEvent?a.detachEvent("on"+d,b):a.removeEventListener?a.removeEventListener(d,b,!1):a["on"+d]=null}catch(c){}},_pageInit:function(){this.domLoaded||(this.domLoaded=!0,j(this.inits,function(a){a()}),this.inits=[])},_wait:function(a){var d=this,b=a.document;a.tinyMCE_GZ&&tinyMCE_GZ.loaded?d.domLoaded=1:"complete"===
b.readyState?d._pageInit(a):(b.attachEvent?(b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&(b.detachEvent("onreadystatechange",arguments.callee),d._pageInit(a))}),b.documentElement.doScroll&&a==a.top&&function(){if(!d.domLoaded){try{b.documentElement.doScroll("left")}catch(c){setTimeout(arguments.callee,0);return}d._pageInit(a)}}()):b.addEventListener&&d._add(a,"DOMContentLoaded",function(){d._pageInit(a)}),d._add(a,"load",function(){d._pageInit(a)}))},_stoppers:{preventDefault:function(){this.returnValue=
!1},stopPropagation:function(){this.cancelBubble=!0}}});c=e.dom.Event=new e.dom.EventUtils;c._wait(window);e.addUnload(function(){c.destroy()})})(tinymce);
(function(e){e.dom.Element=function(j,i){var g=this,c;g.settings=i=i||{};g.id=j;g.dom=c=i.dom||e.DOM;e.isIE||c.get(g.id);e.each("getPos,getRect,getParent,add,setStyle,getStyle,setStyles,setAttrib,setAttribs,getAttrib,addClass,removeClass,hasClass,getOuterHTML,setOuterHTML,remove,show,hide,isHidden,setHTML,get".split(/,/),function(a){g[a]=function(){var d=[j],b;for(b=0;b<arguments.length;b++)d.push(arguments[b]);d=c[a].apply(c,d);g.update(a);return d}});e.extend(g,{on:function(a,d,b){return e.dom.Event.add(g.id,
a,d,b)},getXY:function(){return{x:parseInt(g.getStyle("left")),y:parseInt(g.getStyle("top"))}},getSize:function(){var a=c.get(g.id);return{w:parseInt(g.getStyle("width")||a.clientWidth),h:parseInt(g.getStyle("height")||a.clientHeight)}},moveTo:function(a,d){g.setStyles({left:a,top:d})},moveBy:function(a,d){var b=g.getXY();g.moveTo(b.x+a,b.y+d)},resizeTo:function(a,d){g.setStyles({width:a,height:d})},resizeBy:function(a,d){var b=g.getSize();g.resizeTo(b.w+a,b.h+d)},update:function(a){e.isIE6&&i.blocker&&
(a=a||"",0===a.indexOf("get")||(0===a.indexOf("has")||0===a.indexOf("is"))||("remove"==a?c.remove(g.blocker):(g.blocker?a=c.get(g.blocker):(g.blocker=c.uniqueId(),a=c.add(i.container||c.getRoot(),"iframe",{id:g.blocker,style:"position:absolute;",frameBorder:0,src:'javascript:""'}),c.setStyle(a,"opacity",0)),c.setStyles(a,{left:g.getStyle("left",1),top:g.getStyle("top",1),width:g.getStyle("width",1),height:g.getStyle("height",1),display:g.getStyle("display",1),zIndex:parseInt(g.getStyle("zIndex",1)||
0)-1}))))}})}})(tinymce);
(function(e){var j=e.is,i=e.isIE,g=e.each;e.create("tinymce.dom.Selection",{Selection:function(c,a,d){var b=this;b.dom=c;b.win=a;b.serializer=d;g(["onBeforeSetContent","onBeforeGetContent","onSetContent","onGetContent"],function(a){b[a]=new e.util.Dispatcher(b)});b.win.getSelection||(b.tridentSel=new e.dom.TridentSelection(b));e.isIE&&c.boxModel&&this._fixIESelection();e.addUnload(b.destroy,b)},setCursorLocation:function(c,a){var d=this.dom.createRng();d.setStart(c,a);d.setEnd(c,a);this.setRng(d);
this.collapse(!1)},getContent:function(c){var a=this.getRng(),d=this.dom.create("body"),b=this.getSel(),f,e,c=c||{};f=e="";c.get=!0;c.format=c.format||"html";c.forced_root_block="";this.onBeforeGetContent.dispatch(this,c);if("text"==c.format)return this.isCollapsed()?"":a.text||(b.toString?b.toString():"");a.cloneContents?(a=a.cloneContents())&&d.appendChild(a):j(a.item)||j(a.htmlText)?(d.innerHTML="<br>"+(a.item?a.item(0).outerHTML:a.htmlText),d.removeChild(d.firstChild)):d.innerHTML=a.toString();
/^\s/.test(d.innerHTML)&&(f=" ");/\s+$/.test(d.innerHTML)&&(e=" ");c.getInner=!0;c.content=this.isCollapsed()?"":f+this.serializer.serialize(d,c)+e;this.onGetContent.dispatch(this,c);return c.content},setContent:function(c,a){var d=this.getRng(),b,f=this.win.document,e,a=a||{format:"html"};a.set=!0;a.content=c;a.no_events||this.onBeforeSetContent.dispatch(this,a);c=a.content;if(d.insertNode){c+='<span id="__caret">_</span>';if(d.startContainer==f&&d.endContainer==f)f.body.innerHTML=c;else if(d.deleteContents(),
0==f.body.childNodes.length)f.body.innerHTML=c;else if(d.createContextualFragment)try{d.insertNode(d.createContextualFragment(c))}catch(g){if(0===d.startOffset&&0===d.endOffset&&0===d.startContainer.children.length){b=f.createDocumentFragment();e=f.createElement("div");e.innerHTML=c;e=e.children[0];for(b.appendChild(e.cloneNode());e=e.nextSibling;)b.appendChild(e.cloneNode());d.startContainer.parentNode.insertBefore(b,d.startContainer)}else throw g;}else b=f.createDocumentFragment(),e=f.createElement("div"),
b.appendChild(e),e.outerHTML=c,d.insertNode(b);b=this.dom.get("__caret");d=f.createRange();d.setStartBefore(b);d.setEndBefore(b);this.setRng(d);this.dom.remove("__caret");try{this.setRng(d)}catch(i){}}else(d.item&&(f.execCommand("Delete",!1,null),d=this.getRng()),/^\s+/.test(c))?(d.pasteHTML('<span id="__mce_tmp">_</span>'+c),this.dom.remove("__mce_tmp")):d.pasteHTML(c);a.no_events||this.onSetContent.dispatch(this,a)},getStart:function(){var c=this.getRng(),a,d;if(c.duplicate||c.item){if(c.item)return c.item(0);
a=c.duplicate();a.collapse(1);a=a.parentElement();for(c=d=c.parentElement();d=d.parentNode;)if(d==a){a=c;break}return a}a=c.startContainer;1==a.nodeType&&a.hasChildNodes()&&(a=a.childNodes[Math.min(a.childNodes.length-1,c.startOffset)]);return a&&3==a.nodeType?a.parentNode:a},getEnd:function(){var c=this.getRng(),a;if(c.duplicate||c.item){if(c.item)return c.item(0);c=c.duplicate();c.collapse(0);return(a=c.parentElement())&&"BODY"==a.nodeName?a.lastChild||a:a}a=c.endContainer;c=c.endOffset;1==a.nodeType&&
a.hasChildNodes()&&(a=a.childNodes[0<c?c-1:c]);return a&&3==a.nodeType?a.parentNode:a},getBookmark:function(c,a){function d(a,b){var d=0;g(f.select(a),function(a,c){a==b&&(d=c)});return d}var b=this,f=b.dom,e,i,j,n,k;if(2==c){if(b.tridentSel)return b.tridentSel.getBookmark(c);e=function(d,c){var f=d[c?"startContainer":"endContainer"],k=d[c?"startOffset":"endOffset"],e=[],h,g=0;if(3==f.nodeType){if(a)for(h=f.previousSibling;h&&3==h.nodeType;h=h.previousSibling)k+=h.nodeValue.length;e.push(k)}else h=
f.childNodes,k>=h.length&&h.length&&(g=1,k=Math.max(0,h.length-1)),e.push(b.dom.nodeIndex(h[k],a)+g);for(;f&&f!=m;f=f.parentNode)e.push(b.dom.nodeIndex(f,a));return e};j=b.getRng(!0);var m=f.doc.body;n={};n.start=e(j,!0);b.isCollapsed()||(n.end=e(j));return n}if(c)return{rng:b.getRng()};e=b.getRng();j=f.uniqueId();n=tinyMCE.activeEditor.selection.isCollapsed();if(e.duplicate||e.item){if(e.item)return k=e.item(0),i=k.nodeName,{name:i,index:d(i,k)};i=e.duplicate();try{e.collapse(),e.pasteHTML('<span data-mce-type="bookmark" id="'+
j+'_start" style="overflow:hidden;line-height:0px">﻿</span>'),n||(i.collapse(!1),e.moveToElementText(i.parentElement()),0==e.compareEndPoints("StartToEnd",i)&&i.move("character",-1),i.pasteHTML('<span data-mce-type="bookmark" id="'+j+'_end" style="overflow:hidden;line-height:0px">﻿</span>'))}catch(q){return null}}else{k=b.getNode();i=k.nodeName;if("IMG"==i)return{name:i,index:d(i,k)};i=e.cloneRange();n||(i.collapse(!1),i.insertNode(f.create("span",{"data-mce-type":"bookmark",id:j+"_end",style:"overflow:hidden;line-height:0px"},
"﻿")));e.collapse(!0);e.insertNode(f.create("span",{"data-mce-type":"bookmark",id:j+"_start",style:"overflow:hidden;line-height:0px"},"﻿"))}b.moveToBookmark({id:j,keep:1});return{id:j}},moveToBookmark:function(c){var a=this.dom,d,b,f,h,j,l;if(c)if(c.start){d=a.createRng();b=a.doc.body;var n=function(a){var f=c[a?"start":"end"],k,e,h;if(f){h=f[0];e=b;for(k=f.length-1;1<=k;k--){e=e.childNodes;if(f[k]>e.length-1)return;e=e[f[k]]}3===e.nodeType&&(h=Math.min(f[0],e.nodeValue.length));1===e.nodeType&&(h=
Math.min(f[0],e.childNodes.length));a?d.setStart(e,h):d.setEnd(e,h)}return!0};if(this.tridentSel)return this.tridentSel.moveToBookmark(c);n(!0)&&n()&&this.setRng(d)}else if(c.id){var n=function(b){var d=a.get(c.id+"_"+b),k,i,r;r=c.keep;if(d&&(k=d.parentNode,"start"==b?(r?(k=d.firstChild,i=1):i=a.nodeIndex(d),f=h=k,j=l=i):(r?(k=d.firstChild,i=1):i=a.nodeIndex(d),h=k,l=i),!r)){r=d.previousSibling;k=d.nextSibling;for(g(e.grep(d.childNodes),function(a){if(a.nodeType==3)a.nodeValue=a.nodeValue.replace(/\uFEFF/g,
"")});d=a.get(c.id+"_"+b);)a.remove(d,1);r&&(k&&r.nodeType==k.nodeType&&3==r.nodeType&&!e.isOpera)&&(i=r.nodeValue.length,r.appendData(k.nodeValue),a.remove(k),"start"==b?(f=h=r,j=l=i):(h=r,l=i))}},k=function(b){a.isBlock(b)&&!b.innerHTML&&(b.innerHTML=!i?'<br data-mce-bogus="1" />':" ");return b};n("start");n("end");f&&(d=a.createRng(),d.setStart(k(f),j),d.setEnd(k(h),l),this.setRng(d))}else c.name?this.select(a.select(c.name)[c.index]):c.rng&&this.setRng(c.rng)},select:function(c,a){var d=this.dom,
b=d.createRng();c&&(d=d.nodeIndex(c),b.setStart(c.parentNode,d),b.setEnd(c.parentNode,d+1),a&&(d=function(a,d){var c=new e.dom.TreeWalker(a,a);do{if(3==a.nodeType&&0!=e.trim(a.nodeValue).length){d?b.setStart(a,0):b.setEnd(a,a.nodeValue.length);break}if("BR"==a.nodeName){d?b.setStartBefore(a):b.setEndBefore(a);break}}while(a=d?c.next():c.prev())},d(c,1),d(c)),this.setRng(b));return c},isCollapsed:function(){var c=this.getRng(),a=this.getSel();return!c||c.item?!1:c.compareEndPoints?0===c.compareEndPoints("StartToEnd",
c):!a||c.collapsed},collapse:function(c){var a=this.getRng(),d;a.item&&(d=a.item(0),a=this.win.document.body.createTextRange(),a.moveToElementText(d));a.collapse(!!c);this.setRng(a)},getSel:function(){var c=this.win;return c.getSelection?c.getSelection():c.document.selection},getRng:function(c){var a,d,b,f=this.win.document;if(c&&this.tridentSel)return this.tridentSel.getRangeAt(0);try{if(a=this.getSel())d=0<a.rangeCount?a.getRangeAt(0):a.createRange?a.createRange():f.createRange()}catch(h){}try{e.isIE&&
(d&&d.setStart&&f.selection&&f.selection.createRange().item)&&(b=f.selection.createRange().item(0),d=f.createRange(),d.setStartBefore(b),d.setEndAfter(b))}catch(g){}d||(d=f.createRange?f.createRange():f.body.createTextRange());this.selectedRange&&this.explicitRange&&(0===d.compareBoundaryPoints(d.START_TO_START,this.selectedRange)&&0===d.compareBoundaryPoints(d.END_TO_END,this.selectedRange)?d=this.explicitRange:this.explicitRange=this.selectedRange=null);return d},setRng:function(c){var a;if(this.tridentSel){if(c.cloneRange)try{this.tridentSel.addRange(c);
return}catch(d){AJS.logError("Exception occurred at tinymce setRng() - tridentSel.addRange(): "+d)}try{c.select()}catch(b){AJS.logError("Exception occurred at tinymce setRng() - select(): "+b)}}else if(a=this.getSel()){this.explicitRange=c;try{a.removeAllRanges()}catch(f){AJS.logError("Exception occurred at tinymce setRng() - removeAllRanges(): "+f)}try{a.addRange(c)}catch(e){AJS.logError("Exception occurred at tinymce setRng() - addRange(): "+e)}this.selectedRange=0<a.rangeCount?a.getRangeAt(0):
null}},setNode:function(c){this.setContent(this.dom.getOuterHTML(c));return c},getNode:function(){var c=this.getRng();this.getSel();var a,d=c.startContainer,b=c.endContainer;if(!c)return this.dom.getRoot();if(c.setStart){a=c.commonAncestorContainer;if(!c.collapsed&&(c.startContainer==c.endContainer&&2>c.endOffset-c.startOffset&&c.startContainer.hasChildNodes()&&(a=c.startContainer.childNodes[c.startOffset]),3===d.nodeType&&3===b.nodeType)){var f=function(a,b){for(var d=a;a&&3===a.nodeType&&0===a.length;)a=
b?a.nextSibling:a.previousSibling;return a||d},d=d.length===c.startOffset?f(d.nextSibling,!0):d.parentNode,b=0===c.endOffset?f(b.previousSibling,!1):b.parentNode;if(d&&d===b)return d}return a&&3==a.nodeType?a.parentNode:a}return c.item?c.item(0):c.parentElement()},getSelectedBlocks:function(c,a){var d=this.dom,b,f,h,g=[];b=d.getParent(c||this.getStart(),d.isBlock);f=d.getParent(a||this.getEnd(),d.isBlock);b&&g.push(b);if(b&&f&&b!=f){h=b;for(var i=new e.dom.TreeWalker(b,d.getRoot());(h=i.next())&&
h!=f;)d.isBlock(h)&&g.push(h)}f&&b!=f&&g.push(f);return g},normalize:function(){function c(c){var h,g,i,j=a.dom;i=j.getRoot();var k;h=d[(c?"start":"end")+"Container"];g=d[(c?"start":"end")+"Offset"];9===h.nodeType&&(h=h.body,g=0);if(h===i&&h.hasChildNodes()){h=h.childNodes[Math.min(!c&&0<g?g-1:g,h.childNodes.length-1)];g=0;if("TABLE"===h.nodeName)return;if(h.hasChildNodes()){k=h;i=new e.dom.TreeWalker(h,i);do{if(3===k.nodeType){g=c?0:k.nodeValue.length-1;h=k;b=!0;break}if(/^(BR|IMG)$/.test(k.nodeName)){g=
j.nodeIndex(k);h=k.parentNode;"IMG"==k.nodeName&&!c&&g++;b=!0;break}}while(k=c?i.next():i.prev())}}if(b)d["set"+(c?"Start":"End")](h,g)}var a=this,d,b;e.isIE||(d=a.getRng(),c(!0),d.collapsed&&b&&c(),b&&a.setRng(d))},destroy:function(c){this.win=null;c||e.removeUnload(this.destroy)},_fixIESelection:function(){function c(a,b){var d=e.createTextRange();try{d.moveToPoint(a,b)}catch(c){d=null}return d}function a(a){if(a.button){if(a=c(a.x,a.y))0<a.compareEndPoints("StartToStart",i)?a.setEndPoint("StartToStart",
i):a.setEndPoint("EndToEnd",i),a.select()}else d()}function d(){var c=f.selection?f.selection.createRange():tinyMCE.activeEditor.getBody().createTextRange();i&&(!c.item&&0===c.compareEndPoints("StartToEnd",c))&&i.select();b.unbind(f,"mouseup",d);b.unbind(f,"mousemove",a);i=g=0}var b=this.dom,f=b.doc,e=f.body,g,i,j;f.documentElement.unselectable=!0;b.bind(f,["mousedown","contextmenu"],function(k){if("HTML"===k.target.nodeName&&(g&&d(),j=f.documentElement,!(j.scrollHeight>j.clientHeight)&&(g=1,i=c(k.x,
k.y))))b.bind(f,"mouseup",d),b.bind(f,"mousemove",a),b.win.focus(),i.select()})}})})(tinymce);
(function(e){e.dom.Serializer=function(j,i,g){var c,a,d=e.each,b;j.apply_source_formatting||(j.indent=!1);i=i||e.DOM;g=g||new e.html.Schema(j);j.entity_encoding=j.entity_encoding||"named";j.remove_trailing_brs="remove_trailing_brs"in j?j.remove_trailing_brs:!0;c=new e.util.Dispatcher(self);a=new e.util.Dispatcher(self);b=new e.html.DomParser(j,g);b.addAttributeFilter("src,href,style",function(a,b){for(var d=a.length,c,e,k="data-mce-"+b,g=j.url_converter,q=j.url_converter_scope;d--;){c=a[d];e=c.attributes.map[k];
if(e!==void 0){c.attr(b,e.length>0?e:null);c.attr(k,null)}else{e=c.attributes.map[b];b==="style"?e=i.serializeStyle(i.parseStyle(e),c.name):g&&(e=g.call(q,e,b,c.name));c.attr(b,e.length>0?e:null)}}});b.addAttributeFilter("class",function(a){for(var b=a.length,d,c;b--;){d=a[b];c=d.attr("class").replace(/\s*mce(Item\w+|Selected)\s*/g,"");d.attr("class",c.length>0?c:null)}});b.addAttributeFilter("data-mce-type",function(a,b,d){for(var b=a.length,c;b--;){c=a[b];c.attributes.map["data-mce-type"]==="bookmark"&&
!d.cleanup&&c.remove()}});b.addNodeFilter("script,style",function(a,b){function d(a){return a.replace(/(<\!--\[CDATA\[|\]\]--\>)/g,"\n").replace(/^[\r\n]*|[\r\n]*$/g,"").replace(/^\s*((<\!--)?(\s*\/\/)?\s*<!\[CDATA\[|(<\!--\s*)?\/\*\s*<!\[CDATA\[\s*\*\/|(\/\/)?\s*<\!--|\/\*\s*<\!--\s*\*\/)\s*[\r\n]*/gi,"").replace(/\s*(\/\*\s*\]\]>\s*\*\/(--\>)?|\s*\/\/\s*\]\]>(--\>)?|\/\/\s*(--\>)?|\]\]>|\/\*\s*--\>\s*\*\/|\s*--\>\s*)\s*$/g,"")}for(var c=a.length,e,k;c--;){e=a[c];k=e.firstChild?e.firstChild.value:
"";if(b==="script"){e.attr("type",(e.attr("type")||"text/javascript").replace(/^mce\-/,""));if(k.length>0)e.firstChild.value="// <![CDATA[\n"+d(k)+"\n// ]]\>"}else if(k.length>0)e.firstChild.value="<\!--\n"+d(k)+"\n--\>"}});b.addNodeFilter("#comment",function(a){for(var b=a.length,d;b--;){d=a[b];if(d.value.indexOf("[CDATA[")===0){d.name="#cdata";d.type=4;d.value=d.value.replace(/^\[CDATA\[|\]\]$/g,"")}else if(d.value.indexOf("mce:protected ")===0){d.name="#text";d.type=3;d.raw=true;d.value=unescape(d.value).substr(14)}}});
b.addNodeFilter("xml:namespace,input",function(a,b){for(var d=a.length,c;d--;){c=a[d];c.type===7?c.remove():c.type===1&&b==="input"&&!("type"in c.attributes.map)&&c.attr("type","text")}});j.fix_list_elements&&b.addNodeFilter("ul,ol",function(a){for(var b=a.length,d,c;b--;){d=a[b];c=d.parent;(c.name==="ul"||c.name==="ol")&&d.prev&&d.prev.name==="li"&&d.prev.append(d)}});b.addAttributeFilter("data-mce-src,data-mce-href,data-mce-style",function(a,b){for(var d=a.length;d--;)a[d].attr(b,null)});return{schema:g,
addNodeFilter:b.addNodeFilter,addAttributeFilter:b.addAttributeFilter,onPreProcess:c,onPostProcess:a,serialize:function(f,h){var p,l,n,f=f.cloneNode(true);p=f.ownerDocument.implementation;if(p.createHTMLDocument){l=p.createHTMLDocument("");d(f.nodeName=="BODY"?f.childNodes:[f],function(a){l.body.appendChild(l.importNode(a,true))});f=f.nodeName!="BODY"?l.body.firstChild:l.body;n=i.doc;i.doc=l}h=h||{};h.format=h.format||"html";if(!h.no_events){h.node=f;c.dispatch(self,h)}p=new e.html.Serializer(j,g);
h.content=p.serialize(b.parse(h.getInner?f.innerHTML:e.trim(i.getOuterHTML(f),h),h));if(!h.cleanup)h.content=h.content.replace(/\uFEFF|\u200B/g,"");h.no_events||a.dispatch(self,h);if(n)i.doc=n;h.node=null;return h.content},addRules:function(a){g.addValidElements(a)},setRules:function(a){g.setValidElements(a)}}}})(tinymce);
(function(e){e.dom.ScriptLoader=function(){var j={},i=[],g={},c=[],a=0;this.isDone=function(a){return 2==j[a]};this.markDone=function(a){j[a]=2};this.add=this.load=function(a,b,c){void 0==j[a]&&(i.push(a),j[a]=0);b&&(g[a]||(g[a]=[]),g[a].push({func:b,scope:c||this}))};this.loadQueue=function(a,b){this.loadScripts(i,a,b)};this.loadScripts=function(d,b,f){function h(a){e.each(g[a],function(a){a.func.call(a.scope)});g[a]=void 0}var i;c.push({func:b,scope:f||this});i=function(){var b=e.grep(d);d.length=
0;e.each(b,function(b){if(2==j[b])h(b);else if(1!=j[b]){j[b]=1;a++;a:{var d=function(){f.remove(l);g&&(g.onreadystatechange=g.onload=g=null);j[b]=2;a--;h(b);i()},c=function(){AJS.log("Failed to load: "+b)},f=e.DOM,g,s,r,l;l=f.uniqueId();if(e.isIE6&&(s=new e.util.URI(b),r=location,s.host==r.hostname&&s.port==r.port&&s.protocol+":"==r.protocol&&"file"!=s.protocol.toLowerCase())){e.util.XHR.send({url:e._addVer(s.getURI()),success:function(a){var b=f.create("script",{type:"text/javascript"});b.text=a;
document.getElementsByTagName("head")[0].appendChild(b);f.remove(b);d()},error:c});break a}g=f.create("script",{id:l,type:"text/javascript",src:e._addVer(b)});e.isIE||(g.onload=d);g.onerror=c;e.isOpera||(g.onreadystatechange=function(){var a=g.readyState;(a=="complete"||a=="loaded")&&d()});(document.getElementsByTagName("head")[0]||document.body).appendChild(g)}}});a||(e.each(c,function(a){a.func.call(a.scope)}),c.length=0)};i()}};e.ScriptLoader=new e.dom.ScriptLoader})(tinymce);
tinymce.dom.TreeWalker=function(e,j){function i(c,a,d,b){if(c){if(!b&&c[a])return c[a];if(c!=j){if(a=c[d])return a;for(c=c.parentNode;c&&c!=j;c=c.parentNode)if(a=c[d])return a}}}var g=e;this.current=function(){return g};this.next=function(c){return g=i(g,"firstChild","nextSibling",c)};this.prev=function(c){return g=i(g,"lastChild","previousSibling",c)}};
(function(e){e.dom.RangeUtils=function(j){this.walk=function(i,g){function c(a){var b;b=a[0];3===b.nodeType&&(b===f&&h>=b.nodeValue.length)&&a.splice(0,1);b=a[a.length-1];0===l&&(0<a.length&&b===p&&3===b.nodeType)&&a.splice(a.length-1,1);return a}function a(a,b,d){for(var c=[];a&&a!=d;a=a[b])c.push(a);return c}function d(a,b){do{if(a.parentNode==b)return a;a=a.parentNode}while(a)}function b(b,d,k){var f=k?"nextSibling":"previousSibling";m=b;for(q=m.parentNode;m&&m!=d;m=q)q=m.parentNode,o=a(m==b?m:
m[f],f),o.length&&(k||o.reverse(),g(c(o)))}var f=i.startContainer,h=i.startOffset,p=i.endContainer,l=i.endOffset,n,k,m,q,o;k=j.select("td.mceSelected,th.mceSelected");if(0<k.length)e.each(k,function(a){g([a])});else{1==f.nodeType&&f.hasChildNodes()&&(f=f.childNodes[h]);1==p.nodeType&&p.hasChildNodes()&&(p=p.childNodes[Math.min(l-1,p.childNodes.length-1)]);if(f==p)return g(c([f]));n=j.findCommonAncestor(f,p);for(m=f;m;m=m.parentNode){if(m===p)return b(f,n,!0);if(m===n)break}for(m=p;m;m=m.parentNode){if(m===
f)return b(p,n);if(m===n)break}k=d(f,n)||f;n=d(p,n)||p;b(f,k,!0);o=a(k==f?k:k.nextSibling,"nextSibling",n==p?n.nextSibling:n);o.length&&g(c(o));b(p,n)}};this.split=function(e){var g=e.startContainer,c=e.startOffset,a=e.endContainer,e=e.endOffset;if(g==a&&3==g.nodeType)0<c&&c<g.nodeValue.length&&(a=g.splitText(c),g=a.previousSibling,e>c?(g=a=a.splitText(e-c).previousSibling,e=a.nodeValue.length,c=0):e=0);else if(3==g.nodeType&&(0<c&&c<g.nodeValue.length)&&(g=g.splitText(c),c=0),3==a.nodeType&&0<e&&
e<a.nodeValue.length)a=a.splitText(e).previousSibling,e=a.nodeValue.length;return{startContainer:g,startOffset:c,endContainer:a,endOffset:e}}};e.dom.RangeUtils.compareRanges=function(e,i){if(e&&i)if(e.item||e.duplicate){if(e.item&&i.item&&e.item(0)===i.item(0)||e.isEqual&&i.isEqual&&i.isEqual(e))return!0}else return e.startContainer==i.startContainer&&e.startOffset==i.startOffset;return!1}})(tinymce);
(function(e){var j=e.dom.Event,i=e.each;e.create("tinymce.ui.KeyboardNavigation",{KeyboardNavigation:function(g,c){var a=this,d=g.root,b=g.items,f=g.enableUpDown,h=g.enableLeftRight||!g.enableUpDown,p=g.excludeFromTabOrder,l,n,k,m,q,c=c||e.DOM;l=function(a){q=a.target.id};n=function(a){c.setAttrib(a.target.id,"tabindex","-1")};m=function(){var a=c.get(q);c.setAttrib(a,"tabindex","0");a.focus()};a.focus=function(){c.get(q).focus()};a.destroy=function(){i(b,function(a){c.unbind(c.get(a.id),"focus",
l);c.unbind(c.get(a.id),"blur",n)});c.unbind(c.get(d),"focus",m);c.unbind(c.get(d),"keydown",k);b=c=d=a.focus=l=n=k=m=null;a.destroy=function(){}};a.moveFocus=function(a,d){var k=-1,f;if(q){i(b,function(a,b){if(a.id===q)return k=b,!1});k+=a;0>k?k=b.length-1:k>=b.length&&(k=0);f=b[k];c.setAttrib(q,"tabindex","-1");c.setAttrib(f.id,"tabindex","0");c.get(f.id).focus();if(g.actOnFocus)g.onAction(f.id);d&&j.cancel(d)}};k=function(b){switch(b.keyCode){case 37:h&&a.moveFocus(-1);break;case 39:h&&a.moveFocus(1);
break;case 38:f&&a.moveFocus(-1);break;case 40:f&&a.moveFocus(1);break;case 27:g.onCancel&&(g.onCancel(),j.cancel(b));break;case 14:case 13:case 32:g.onAction&&(g.onAction(q),j.cancel(b))}};i(b,function(a,b){var d;a.id||(a.id=c.uniqueId("_mce_item_"));p?(c.bind(a.id,"blur",n),d="-1"):d=0===b?"0":"-1";c.setAttrib(a.id,"tabindex",d);c.bind(c.get(a.id),"focus",l)});b[0]&&(q=b[0].id);c.setAttrib(d,"tabindex","-1");c.bind(c.get(d),"focus",m);c.bind(c.get(d),"keydown",k)}})})(tinymce);
(function(e){var j=e.DOM,i=e.is;e.create("tinymce.ui.Control",{Control:function(g,c,a){this.id=g;this.settings=c=c||{};this.rendered=!1;this.onRender=new e.util.Dispatcher(this);this.classPrefix="";this.scope=c.scope||this;this.active=this.disabled=0;this.editor=a},setAriaProperty:function(e,c){var a=j.get(this.id+"_aria")||j.get(this.id);a&&j.setAttrib(a,"aria-"+e,!!c)},focus:function(){j.get(this.id).focus()},setDisabled:function(e){e!=this.disabled&&(this.setAriaProperty("disabled",e),this.setState("Disabled",
e),this.setState("Enabled",!e),this.disabled=e)},isDisabled:function(){return this.disabled},setActive:function(e){e!=this.active&&(this.setState("Active",e),this.active=e,this.setAriaProperty("pressed",e))},isActive:function(){return this.active},setState:function(e,c){var a=j.get(this.id),e=this.classPrefix+e;c?j.addClass(a,e):j.removeClass(a,e)},isRendered:function(){return this.rendered},renderHTML:function(){},renderTo:function(e){j.setHTML(e,this.renderHTML())},postRender:function(){var e;i(this.disabled)&&
(e=this.disabled,this.disabled=-1,this.setDisabled(e));i(this.active)&&(e=this.active,this.active=-1,this.setActive(e))},remove:function(){j.remove(this.id);this.destroy()},destroy:function(){e.dom.Event.clear(this.id)}})})(tinymce);tinymce.create("tinymce.ui.Container:tinymce.ui.Control",{Container:function(e,j,i){this.parent(e,j,i);this.controls=[];this.lookup={}},add:function(e){this.lookup[e.id]=e;this.controls.push(e);return e},get:function(e){return this.lookup[e]}});
tinymce.create("tinymce.ui.Separator:tinymce.ui.Control",{Separator:function(e,j){this.parent(e,j);this.classPrefix="mceSeparator";this.setDisabled(!0)},renderHTML:function(){return tinymce.DOM.createHTML("span",{"class":this.classPrefix,role:"separator","aria-orientation":"vertical",tabindex:"-1"})}});
(function(e){var j=e.is;e.create("tinymce.ui.MenuItem:tinymce.ui.Control",{MenuItem:function(e,g){this.parent(e,g);this.classPrefix="mceMenuItem"},setSelected:function(e){this.setState("Selected",e);this.setAriaProperty("checked",!!e);this.selected=e},isSelected:function(){return this.selected},postRender:function(){this.parent();j(this.selected)&&this.setSelected(this.selected)}})})(tinymce);
(function(e){var j=e.DOM,i=e.walk;e.create("tinymce.ui.Menu:tinymce.ui.MenuItem",{Menu:function(g,c){this.parent(g,c);this.items={};this.collapsed=!1;this.menuCount=0;this.onAddItem=new e.util.Dispatcher(this)},expand:function(e){e&&i(this,function(c){c.expand&&c.expand()},"items",this);this.collapsed=!1},collapse:function(e){e&&i(this,function(c){c.collapse&&c.collapse()},"items",this);this.collapsed=!0},isCollapsed:function(){return this.collapsed},add:function(g){g.settings||(g=new e.ui.MenuItem(g.id||
j.uniqueId(),g));this.onAddItem.dispatch(this,g);return this.items[g.id]=g},addSeparator:function(){return this.add({separator:!0})},addMenu:function(e){e.collapse||(e=this.createMenu(e));this.menuCount++;return this.add(e)},hasMenus:function(){return 0!==this.menuCount},remove:function(e){delete this.items[e.id]},removeAll:function(){i(this,function(e){e.removeAll?e.removeAll():e.remove();e.destroy()},"items",this);this.items={}},createMenu:function(g){g=new e.ui.Menu(g.id||j.uniqueId(),g);g.onAddItem.add(this.onAddItem.dispatch,
this.onAddItem);return g}})})(tinymce);
(function(e){var j=e.is,i=e.DOM,g=e.each,c=e.dom.Event,a=e.dom.Element;e.create("tinymce.ui.DropMenu:tinymce.ui.Menu",{DropMenu:function(a,b){b=b||{};b.container=b.container||i.doc.body;b.offset_x=b.offset_x||0;b.offset_y=b.offset_y||0;b.vp_offset_x=b.vp_offset_x||0;b.vp_offset_y=b.vp_offset_y||0;j(b.icons)&&!b.icons&&(b["class"]+=" mceNoIcons");this.parent(a,b);this.onShowMenu=new e.util.Dispatcher(this);this.onHideMenu=new e.util.Dispatcher(this);this.classPrefix="mceMenu"},createMenu:function(a){var b=
this.settings;a.container=a.container||b.container;a.parent=this;a.constrain=a.constrain||b.constrain;a["class"]=a["class"]||b["class"];a.vp_offset_x=a.vp_offset_x||b.vp_offset_x;a.vp_offset_y=a.vp_offset_y||b.vp_offset_y;a.keyboard_focus=b.keyboard_focus;a=new e.ui.DropMenu(a.id||i.uniqueId(),a);a.onAddItem.add(this.onAddItem.dispatch,this.onAddItem);return a},focus:function(){this.keyboardNav&&this.keyboardNav.focus()},update:function(){var a=this.settings,b=i.get("menu_"+this.id+"_tbl"),c=i.get("menu_"+
this.id+"_co"),e,g;e=a.max_width?Math.min(b.clientWidth,a.max_width):b.clientWidth;g=a.max_height?Math.min(b.clientHeight,a.max_height):b.clientHeight;i.boxModel?this.element.setStyles({width:e,height:g}):this.element.setStyles({width:e+2,height:g+2});a.max_width&&i.setStyle(c,"width",e);a.max_height&&(i.setStyle(c,"height",g),b.clientHeight<a.max_height&&i.setStyle(c,"overflow","hidden"))},showMenu:function(d,b,f){var h=this,j=h.settings,l,n=i.getViewPort(),k,m,q,o,s=h.classPrefix;h.collapse(1);
h.isMenuVisible||(h.rendered?l=i.get("menu_"+h.id):(l=i.add(h.settings.container,h.renderNode()),g(h.items,function(a){a.postRender()}),h.element=new a("menu_"+h.id,{blocker:1,container:j.container})),e.isOpera||i.setStyles(l,{left:-65535,top:-65535}),i.show(l),h.update(),d+=j.offset_x||0,b+=j.offset_y||0,n.w-=4,n.h-=4,j.constrain&&(k=l.clientWidth-2,m=l.clientHeight-2,q=n.x+n.w,n=n.y+n.h,d+j.vp_offset_x+k>q&&(d=f?f-k:Math.max(0,q-j.vp_offset_x-k)),b+j.vp_offset_y+m>n&&(b=Math.max(0,n-j.vp_offset_y-
m))),i.setStyles(l,{left:d,top:b}),h.element.update(),h.isMenuVisible=1,h.mouseClickFunc=c.add(l,"click",function(a){var b;if((a=a.target)&&(a=i.getParent(a,"tr"))&&!i.hasClass(a,s+"ItemSub")){b=h.items[a.id];if(!b.isDisabled()){for(o=h;o;){o.hideMenu&&o.hideMenu();o=o.settings.parent}if(b.settings.onclick)b.settings.onclick(a);return c.cancel(a)}}}),h.hasMenus()&&(h.mouseOverFunc=c.add(l,"mouseover",function(a){var b;if((a=a.target)&&(a=i.getParent(a,"tr"))){b=h.items[a.id];h.lastMenu&&h.lastMenu.collapse(1);
if(!b.isDisabled()&&a&&i.hasClass(a,s+"ItemSub")){a=i.getRect(a);b.showMenu(a.x+a.w-2,a.y-2,a.x);h.lastMenu=b;i.addClass(i.get(b.id).firstChild,s+"ItemActive")}}})),c.add(l,"keydown",h._keyHandler,h),h.onShowMenu.dispatch(h),j.keyboard_focus&&h._setupKeyboardNav())},hideMenu:function(a){var b=i.get("menu_"+this.id),e;this.isMenuVisible&&(this.keyboardNav&&this.keyboardNav.destroy(),c.remove(b,"mouseover",this.mouseOverFunc),c.remove(b,"click",this.mouseClickFunc),c.remove(b,"keydown",this._keyHandler),
i.hide(b),this.isMenuVisible=0,a||this.collapse(1),this.element&&this.element.hide(),(e=i.get(this.id))&&i.removeClass(e.firstChild,this.classPrefix+"ItemActive"),this.onHideMenu.dispatch(this))},add:function(a){var b,a=this.parent(a);this.isRendered&&(b=i.get("menu_"+this.id))&&this._add(i.select("tbody",b)[0],a);return a},collapse:function(a){this.parent(a);this.hideMenu(1)},remove:function(a){i.remove(a.id);this.destroy();return this.parent(a)},destroy:function(){var a=i.get("menu_"+this.id);this.keyboardNav&&
this.keyboardNav.destroy();c.remove(a,"mouseover",this.mouseOverFunc);c.remove(i.select("a",a),"focus",this.mouseOverFunc);c.remove(a,"click",this.mouseClickFunc);c.remove(a,"keydown",this._keyHandler);this.element&&this.element.remove();i.remove(a)},renderNode:function(){var d=this,b=d.settings,c,e,j;j=i.create("div",{role:"listbox",id:"menu_"+d.id,"class":b["class"],style:"position:absolute;left:0;top:0;z-index:200000;outline:0"});d.settings.parent&&i.setAttrib(j,"aria-parent","menu_"+d.settings.parent.id);
e=i.add(j,"div",{role:"presentation",id:"menu_"+d.id+"_co","class":d.classPrefix+(b["class"]?" "+b["class"]:"")});d.element=new a("menu_"+d.id,{blocker:1,container:b.container});b.menu_line&&i.add(e,"span",{"class":d.classPrefix+"Line"});b=i.add(e,"table",{role:"presentation",id:"menu_"+d.id+"_tbl",border:0,cellPadding:0,cellSpacing:0});c=i.add(b,"tbody");g(d.items,function(a){d._add(c,a)});d.rendered=!0;return j},_setupKeyboardNav:function(){var a,b,c=this;a=i.get("menu_"+c.id);b=i.select("a[role=option]",
"menu_"+c.id);b.splice(0,0,a);c.keyboardNav=new e.ui.KeyboardNavigation({root:"menu_"+c.id,items:b,onCancel:function(){c.hideMenu()},enableUpDown:!0});a.focus()},_keyHandler:function(a){switch(a.keyCode){case 37:this.settings.parent&&(this.hideMenu(),this.settings.parent.focus(),c.cancel(a));break;case 39:this.mouseOverFunc&&this.mouseOverFunc(a)}},_add:function(a,b){var c,e=b.settings,g,j,n,k=this.classPrefix;e.separator?(j=i.add(a,"tr",{id:b.id,"class":k+"ItemSeparator"}),i.add(j,"td",{"class":k+
"ItemSeparator"}),(c=j.previousSibling)&&i.addClass(c,"mceLast")):(c=j=i.add(a,"tr",{id:b.id,"class":k+"Item "+k+"ItemEnabled"}),c=n=i.add(c,e.titleItem?"th":"td"),c=g=i.add(c,"a",{id:b.id+"_aria",role:e.titleItem?"presentation":"option",href:"javascript:;",onclick:"return false;",onmousedown:"return false;"}),e.parent&&(i.setAttrib(g,"aria-haspopup","true"),i.setAttrib(g,"aria-owns","menu_"+b.id)),i.addClass(n,e["class"]),g=i.add(c,"span",{"class":"mceIcon"+(e.icon?" mce_"+e.icon:"")}),e.icon_src&&
i.add(g,"img",{src:e.icon_src}),c=i.add(c,e.element||"span",{"class":"mceText",title:b.settings.title},b.settings.title),b.settings.style&&i.setAttrib(c,"style",b.settings.style),1==a.childNodes.length&&i.addClass(j,"mceFirst"),(c=j.previousSibling)&&i.hasClass(c,k+"ItemSeparator")&&i.addClass(j,"mceFirst"),b.collapse&&i.addClass(j,k+"ItemSub"),(c=j.previousSibling)&&i.removeClass(c,"mceLast"),i.addClass(j,"mceLast"))}})})(tinymce);
(function(e){var j=e.DOM;e.create("tinymce.ui.Button:tinymce.ui.Control",{Button:function(e,g,c){this.parent(e,g,c);this.classPrefix="mceButton"},renderHTML:function(){var e=this.classPrefix,g=this.settings,c,a;a=j.encode(g.label||"");c='<a role="button" id="'+this.id+'" href="javascript:;" class="'+e+" "+e+"Enabled "+g["class"]+(a?" "+e+"Labeled":"")+'" onmousedown="return false;" onclick="return false;" aria-labelledby="'+this.id+'_voice" title="'+j.encode(g.title)+'">';c=g.image&&(!this.editor||
!this.editor.forcedHighContrastMode)?c+('<img class="mceIcon" src="'+g.image+'" alt="'+j.encode(g.title)+'" />'+a):c+('<span class="mceIcon '+g["class"]+'"></span>'+(a?'<span class="'+e+'Label">'+a+"</span>":""));c+='<span class="mceVoiceLabel mceIconOnly" style="display: none;" id="'+this.id+'_voice">'+g.title+"</span>";return c+"</a>"},postRender:function(){var j=this,g=j.settings,c;e.isIE&&j.editor&&e.dom.Event.add(j.id,"mousedown",function(){c="IMG"===j.editor.selection.getNode().nodeName?j.editor.selection.getBookmark():
null});e.dom.Event.add(j.id,"click",function(a){if(!j.isDisabled())return e.isIE&&(j.editor&&null!==c)&&j.editor.selection.moveToBookmark(c),g.onclick.call(g.scope,a)});e.dom.Event.add(j.id,"keyup",function(a){if(!j.isDisabled()&&a.keyCode==e.VK.SPACEBAR)return g.onclick.call(g.scope,a)})}})})(tinymce);
(function(e){var j=e.DOM,i=e.dom.Event,g=e.each,c=e.util.Dispatcher;e.create("tinymce.ui.ListBox:tinymce.ui.Control",{ListBox:function(a,d,b){this.parent(a,d,b);this.items=[];this.onChange=new c(this);this.onPostRender=new c(this);this.onAdd=new c(this);this.onRenderMenu=new e.util.Dispatcher(this);this.classPrefix="mceListBox"},select:function(a){var d=this,b,c;if(void 0==a)return d.selectByIndex(-1);c=a&&"function"==typeof a?a:function(b){return b==a};a!=d.selectedValue&&(g(d.items,function(a,e){if(c(a.value))return b=
1,d.selectByIndex(e),!1}),b||d.selectByIndex(-1))},selectByIndex:function(a){var d,b,c;a!=this.selectedIndex&&(d=j.get(this.id+"_text"),c=j.get(this.id+"_voiceDesc"),(b=this.items[a])?(this.selectedValue=b.value,this.selectedIndex=a,j.setHTML(d,j.encode(b.title)),j.setHTML(c,this.settings.title+" - "+b.title),j.removeClass(d,"mceTitle"),j.setAttrib(this.id,"aria-valuenow",b.title)):(j.setHTML(d,j.encode(this.settings.title)),j.setHTML(c,j.encode(this.settings.title)),j.addClass(d,"mceTitle"),this.selectedValue=
this.selectedIndex=null,j.setAttrib(this.id,"aria-valuenow",this.settings.title)))},add:function(a,d,b){b=b||{};b=e.extend(b,{title:a,value:d});this.items.push(b);this.onAdd.dispatch(this,b)},getLength:function(){return this.items.length},renderHTML:function(){var a="",a=this.settings,d=this.classPrefix,a='<span role="listbox" aria-haspopup="true" aria-labelledby="'+this.id+'_voiceDesc" aria-describedby="'+this.id+'_voiceDesc"><table role="presentation" tabindex="0" id="'+this.id+'" cellpadding="0" cellspacing="0" class="'+
d+" "+d+"Enabled"+(a["class"]?" "+a["class"]:"")+'"><tbody><tr>',a=a+("<td>"+j.createHTML("span",{id:this.id+"_voiceDesc","class":"voiceLabel",style:"display:none;"},this.settings.title)),a=a+(j.createHTML("a",{id:this.id+"_text",tabindex:-1,href:"javascript:;","class":"mceText",onclick:"return false;",onmousedown:"return false;"},j.encode(this.settings.title))+"</td>"),a=a+("<td>"+j.createHTML("a",{id:this.id+"_open",tabindex:-1,href:"javascript:;","class":"mceOpen",onclick:"return false;",onmousedown:"return false;"},
'<span><span style="display:none;" class="mceIconOnly" aria-hidden="true">▼</span></span>')+"</td>");return a+"</tr></tbody></table></span>"},showMenu:function(){var a=this,d,b=j.get(this.id),c;if(!(a.isDisabled()||0==a.items.length)){if(a.menu&&a.menu.isMenuVisible)return a.hideMenu();a.isMenuRendered||(a.renderMenu(),a.isMenuRendered=!0);d=j.getPos(b);c=a.menu;c.settings.offset_x=d.x;c.settings.offset_y=d.y;c.settings.keyboard_focus=!e.isOpera;a.oldID&&c.items[a.oldID].setSelected(0);g(a.items,
function(b){if(b.value===a.selectedValue){c.items[b.id].setSelected(1);a.oldID=b.id}});c.showMenu(0,b.clientHeight);i.add(j.doc,"mousedown",a.hideMenu,a);j.addClass(a.id,a.classPrefix+"Selected")}},hideMenu:function(a){if(this.menu&&this.menu.isMenuVisible&&(j.removeClass(this.id,this.classPrefix+"Selected"),!a||!("mousedown"==a.type&&(a.target.id==this.id+"_text"||a.target.id==this.id+"_open"))))if(!a||!j.getParent(a.target,".mceMenu"))j.removeClass(this.id,this.classPrefix+"Selected"),i.remove(j.doc,
"mousedown",this.hideMenu,this),this.menu.hideMenu()},renderMenu:function(){var a=this,d;d=a.settings.control_manager.createDropMenu(a.id+"_menu",{menu_line:1,"class":a.classPrefix+"Menu mceNoIcons",max_width:150,max_height:150});d.onHideMenu.add(function(){a.hideMenu();a.focus()});d.add({title:a.settings.title,"class":"mceMenuItemTitle",onclick:function(){!1!==a.settings.onselect("")&&a.select("")}});g(a.items,function(b){void 0===b.value?d.add({title:b.title,role:"option","class":"mceMenuItemTitle",
onclick:function(){!1!==a.settings.onselect("")&&a.select("")}}):(b.id=j.uniqueId(),b.role="option",b.onclick=function(){!1!==a.settings.onselect(b.value)&&a.select(b.value)},d.add(b))});a.onRenderMenu.dispatch(a,d);a.menu=d},postRender:function(){var a=this,d=a.classPrefix;i.add(a.id,"click",a.showMenu,a);i.add(a.id,"keydown",function(b){32==b.keyCode&&(a.showMenu(b),i.cancel(b))});i.add(a.id,"focus",function(){a._focused||(a.keyDownHandler=i.add(a.id,"keydown",function(b){40==b.keyCode&&(a.showMenu(),
i.cancel(b))}),a.keyPressHandler=i.add(a.id,"keypress",function(b){var d;13==b.keyCode&&(d=a.selectedValue,a.selectedValue=null,i.cancel(b),a.settings.onselect(d))}));a._focused=1});i.add(a.id,"blur",function(){i.remove(a.id,"keydown",a.keyDownHandler);i.remove(a.id,"keypress",a.keyPressHandler);a._focused=0});if(e.isIE6||!j.boxModel)i.add(a.id,"mouseover",function(){j.hasClass(a.id,d+"Disabled")||j.addClass(a.id,d+"Hover")}),i.add(a.id,"mouseout",function(){j.hasClass(a.id,d+"Disabled")||j.removeClass(a.id,
d+"Hover")});a.onPostRender.dispatch(a,j.get(a.id))},destroy:function(){this.parent();i.clear(this.id+"_text");i.clear(this.id+"_open")}})})(tinymce);
(function(e){var j=e.DOM,i=e.dom.Event,g=e.each;e.create("tinymce.ui.NativeListBox:tinymce.ui.ListBox",{NativeListBox:function(c,a){this.parent(c,a);this.classPrefix="mceNativeListBox"},setDisabled:function(c){j.get(this.id).disabled=c;this.setAriaProperty("disabled",c)},isDisabled:function(){return j.get(this.id).disabled},select:function(c){var a=this,d,b;if(void 0==c)return a.selectByIndex(-1);b=c&&"function"==typeof c?c:function(a){return a==c};c!=a.selectedValue&&(g(a.items,function(c,e){if(b(c.value))return d=
1,a.selectByIndex(e),!1}),d||a.selectByIndex(-1))},selectByIndex:function(c){j.get(this.id).selectedIndex=c+1;this.selectedValue=this.items[c]?this.items[c].value:null},add:function(c,a,d){d=d||{};d.value=a;this.isRendered()&&j.add(j.get(this.id),"option",d,c);c={title:c,value:a,attribs:d};this.items.push(c);this.onAdd.dispatch(this,c)},getLength:function(){return this.items.length},renderHTML:function(){var c;c=j.createHTML("option",{value:""},"-- "+this.settings.title+" --");g(this.items,function(a){c+=
j.createHTML("option",{value:a.value},a.title)});c=j.createHTML("select",{id:this.id,"class":"mceNativeListBox","aria-labelledby":this.id+"_aria"},c);return c+=j.createHTML("span",{id:this.id+"_aria",style:"display: none"},this.settings.title)},postRender:function(){function c(b){if((b=a.items[b.target.selectedIndex-1])&&(b=b.value))if(a.onChange.dispatch(a,b),a.settings.onselect)a.settings.onselect(b)}var a=this,d=!0;a.rendered=!0;i.add(a.id,"change",c);i.add(a.id,"keydown",function(b){var f;i.remove(a.id,
"change",void 0);d=!1;f=i.add(a.id,"blur",function(){d||(d=!0,i.add(a.id,"change",c),i.remove(a.id,"blur",f))});if(e.isWebKit&&(37==b.keyCode||39==b.keyCode))return i.prevent(b);if(13==b.keyCode||32==b.keyCode)return c(b),i.cancel(b)});a.onPostRender.dispatch(a,j.get(a.id))}})})(tinymce);
(function(e){var j=e.DOM,i=e.dom.Event;e.create("tinymce.ui.MenuButton:tinymce.ui.Button",{MenuButton:function(g,c,a){this.parent(g,c,a);this.onRenderMenu=new e.util.Dispatcher(this);c.menu_container=c.menu_container||j.doc.body},showMenu:function(){var e,c=j.get(this.id),a;if(!this.isDisabled()){this.isMenuRendered||(this.renderMenu(),this.isMenuRendered=!0);if(this.isMenuVisible)return this.hideMenu();j.getPos(this.settings.menu_container);e=j.getPos(c);a=this.menu;a.settings.offset_x=e.x;a.settings.offset_y=
e.y;a.settings.vp_offset_x=e.x;a.settings.vp_offset_y=e.y;a.settings.keyboard_focus=this._focused;a.showMenu(0,c.clientHeight);i.add(j.doc,"mousedown",this.hideMenu,this);this.setState("Selected",1);this.isMenuVisible=1}},renderMenu:function(){var e=this,c;c=e.settings.control_manager.createDropMenu(e.id+"_menu",{menu_line:1,"class":this.classPrefix+"Menu",icons:e.settings.icons});c.onHideMenu.add(function(){e.hideMenu();e.focus()});e.onRenderMenu.dispatch(e,c);e.menu=c},hideMenu:function(e){var c=
this;if(!e||!("mousedown"==e.type&&j.getParent(e.target,function(a){return a.id===c.id||a.id===c.id+"_open"}))){if(!e||!j.getParent(e.target,".mceMenu"))c.setState("Selected",0),i.remove(j.doc,"mousedown",c.hideMenu,c),c.menu&&c.menu.hideMenu();c.isMenuVisible=0}},postRender:function(){var e=this,c=e.settings;i.add(e.id,"click",function(){if(!e.isDisabled()){if(c.onclick)c.onclick(e.value);e.showMenu()}})}})})(tinymce);
(function(e){var j=e.DOM,i=e.dom.Event;e.create("tinymce.ui.SplitButton:tinymce.ui.MenuButton",{SplitButton:function(e,c,a){this.parent(e,c,a);this.classPrefix="mceSplitButton"},renderHTML:function(){var e,c=this.settings,a;e="<tbody><tr>";a=c.image?j.createHTML("img ",{src:c.image,role:"presentation","class":"mceAction "+c["class"]}):j.createHTML("span",{"class":"mceAction "+c["class"]},"");a+=j.createHTML("span",{"class":"mceVoiceLabel mceIconOnly",id:this.id+"_voice",style:"display:none;"},c.title);
e+="<td >"+j.createHTML("a",{role:"button",id:this.id+"_action",tabindex:"-1",href:"javascript:;","class":"mceAction "+c["class"],onclick:"return false;",onmousedown:"return false;",title:c.title},a)+"</td>";a=j.createHTML("span",{"class":"mceOpen "+c["class"]},'<span style="display:none;" class="mceIconOnly" aria-hidden="true">▼</span>');e+="<td >"+j.createHTML("a",{role:"button",id:this.id+"_open",tabindex:"-1",href:"javascript:;","class":"mceOpen "+c["class"],onclick:"return false;",onmousedown:"return false;",
title:c.title},a)+"</td>";e=j.createHTML("table",{role:"presentation","class":"mceSplitButton mceSplitButtonEnabled "+c["class"],cellpadding:"0",cellspacing:"0",title:c.title},e+"</tr></tbody>");return j.createHTML("div",{id:this.id,role:"button",tabindex:"0","aria-labelledby":this.id+"_voice","aria-haspopup":"true"},e)},postRender:function(){var g=this,c=g.settings,a;c.onclick&&(a=function(a){g.isDisabled()||(c.onclick(g.value),i.cancel(a))},i.add(g.id+"_action","click",a),i.add(g.id,["click","keydown"],
function(d){if((32===d.keyCode||13===d.keyCode||14===d.keyCode)&&!d.altKey&&!d.ctrlKey&&!d.metaKey)a(),i.cancel(d);else if("click"===d.type||40===d.keyCode)g.showMenu(),i.cancel(d)}));i.add(g.id+"_open","click",function(a){g.showMenu();i.cancel(a)});i.add([g.id,g.id+"_open"],"focus",function(){g._focused=1});i.add([g.id,g.id+"_open"],"blur",function(){g._focused=0});if(e.isIE6||!j.boxModel)i.add(g.id,"mouseover",function(){j.hasClass(g.id,"mceSplitButtonDisabled")||j.addClass(g.id,"mceSplitButtonHover")}),
i.add(g.id,"mouseout",function(){j.hasClass(g.id,"mceSplitButtonDisabled")||j.removeClass(g.id,"mceSplitButtonHover")})},destroy:function(){this.parent();i.clear(this.id+"_action");i.clear(this.id+"_open");i.clear(this.id)}})})(tinymce);
(function(e){var j=e.DOM,i=e.dom.Event,g=e.is,c=e.each;e.create("tinymce.ui.ColorSplitButton:tinymce.ui.SplitButton",{ColorSplitButton:function(a,d,b){this.parent(a,d,b);this.settings=d=e.extend({colors:"000000,993300,333300,003300,003366,000080,333399,333333,800000,FF6600,808000,008000,008080,0000FF,666699,808080,FF0000,FF9900,99CC00,339966,33CCCC,3366FF,800080,999999,FF00FF,FFCC00,FFFF00,00FF00,00FFFF,00CCFF,993366,C0C0C0,FF99CC,FFCC99,FFFF99,CCFFCC,CCFFFF,99CCFF,CC99FF,FFFFFF",grid_width:8,default_color:"#888888"},
this.settings);this.onShowMenu=new e.util.Dispatcher(this);this.onHideMenu=new e.util.Dispatcher(this);this.value=d.default_color},showMenu:function(){var a=this,d,b;if(!a.isDisabled()){a.isMenuRendered||(a.renderMenu(),a.isMenuRendered=!0);if(a.isMenuVisible)return a.hideMenu();d=j.get(a.id);j.show(a.id+"_menu");j.addClass(d,"mceSplitButtonSelected");b=j.getPos(d);j.setStyles(a.id+"_menu",{left:b.x,top:b.y+d.clientHeight,zIndex:2E5});d=0;i.add(j.doc,"mousedown",a.hideMenu,a);a.onShowMenu.dispatch(a);
a._focused&&(a._keyHandler=i.add(a.id+"_menu","keydown",function(b){b.keyCode==27&&a.hideMenu()}),j.select("a",a.id+"_menu")[0].focus());a.isMenuVisible=1}},hideMenu:function(a){var d=this;if(d.isMenuVisible&&(!a||!("mousedown"==a.type&&j.getParent(a.target,function(a){return a.id===d.id+"_open"})))){if(!a||!j.getParent(a.target,".mceSplitButtonMenu"))j.removeClass(d.id,"mceSplitButtonSelected"),i.remove(j.doc,"mousedown",d.hideMenu,d),i.remove(d.id+"_menu","keydown",d._keyHandler),j.hide(d.id+"_menu");
d.isMenuVisible=0;d.onHideMenu.dispatch()}},renderMenu:function(){var a=this,d,b=0,f=a.settings,h,p,l,n,k;n=j.add(f.menu_container,"div",{role:"listbox",id:a.id+"_menu","class":f.menu_class+" "+f["class"],style:"position:absolute;left:0;top:-1000px;"});d=j.add(n,"div",{"class":f["class"]+" mceSplitButtonMenu"});j.add(d,"span",{"class":"mceMenuLine"});h=j.add(d,"table",{role:"presentation","class":"mceColorSplitMenu"});p=j.add(h,"tbody");b=0;c(g(f.colors,"array")?f.colors:f.colors.split(","),function(d){d=
d.replace(/^#/,"");b--||(l=j.add(p,"tr"),b=f.grid_width-1);h=j.add(l,"td");var c={href:"javascript:;",style:{backgroundColor:"#"+d},title:a.editor.getLang("colors."+d,d),"data-mce-color":"#"+d};e.isIE||(c.role="option");h=j.add(h,"a",c);a.editor.forcedHighContrastMode&&(h=j.add(h,"canvas",{width:16,height:16,"aria-hidden":"true"}),h.getContext&&(k=h.getContext("2d"))?(k.fillStyle="#"+d,k.fillRect(0,0,16,16)):j.remove(h))});f.more_colors_func&&(h=j.add(p,"tr"),h=j.add(h,"td",{colspan:f.grid_width,
"class":"mceMoreColors"}),h=j.add(h,"a",{role:"option",id:a.id+"_more",href:"javascript:;",onclick:"return false;","class":"mceMoreColors"},f.more_colors_title),i.add(h,"click",function(a){f.more_colors_func.call(f.more_colors_scope||this);return i.cancel(a)}));j.addClass(d,"mceColorSplitMenu");new e.ui.KeyboardNavigation({root:a.id+"_menu",items:j.select("a",a.id+"_menu"),onCancel:function(){a.hideMenu();a.focus()}});i.add(a.id+"_menu","mousedown",function(a){return i.cancel(a)});i.add(a.id+"_menu",
"click",function(b){var d;(b=j.getParent(b.target,"a",p))&&(b.nodeName.toLowerCase()=="a"&&(d=b.getAttribute("data-mce-color")))&&a.setColor(d);return i.cancel(b)});return n},setColor:function(a){this.displayColor(a);this.hideMenu();this.settings.onselect(a)},displayColor:function(a){j.setStyle(this.id+"_preview","backgroundColor",a);this.value=a},postRender:function(){var a=this.id;this.parent();j.add(a+"_action","div",{id:a+"_preview","class":"mceColorPreview"});j.setStyle(this.id+"_preview","backgroundColor",
this.value)},destroy:function(){this.parent();i.clear(this.id+"_menu");i.clear(this.id+"_more");j.remove(this.id+"_menu")}})})(tinymce);
(function(e){var j=e.DOM,i=e.each,g=e.dom.Event;e.create("tinymce.ui.ToolbarGroup:tinymce.ui.Container",{renderHTML:function(){var c=[],a=this.controls,d=e.each,b=this.settings;c.push('<div id="'+this.id+'" role="group" aria-labelledby="'+this.id+'_voice">');c.push("<span role='application'>");c.push('<span id="'+this.id+'_voice" class="mceVoiceLabel" style="display:none;">'+j.encode(b.name)+"</span>");d(a,function(a){c.push(a.renderHTML())});c.push("</span>");c.push("</div>");return c.join("")},
focus:function(){j.get(this.id).focus()},postRender:function(){var c=this,a=[];i(c.controls,function(d){i(d.controls,function(b){b.id&&a.push(b)})});c.keyNav=new e.ui.KeyboardNavigation({root:c.id,items:a,onCancel:function(){e.isWebKit&&j.get(c.editor.id+"_ifr").focus();c.editor.focus()},excludeFromTabOrder:!c.settings.tab_focus_toolbar})},destroy:function(){this.parent();this.keyNav.destroy();g.clear(this.id)}})})(tinymce);
(function(e){var j=e.DOM;e.create("tinymce.ui.Toolbar:tinymce.ui.Container",{renderHTML:function(){var e="",g,c,a=this.settings,d,b,f,h;h=this.controls;for(d=0;d<h.length;d++){c=h[d];b=h[d-1];f=h[d+1];0===d&&(g="mceToolbarStart",c.Button?g+=" mceToolbarStartButton":c.SplitButton?g+=" mceToolbarStartSplitButton":c.ListBox&&(g+=" mceToolbarStartListBox"),e+=j.createHTML("td",{"class":g},j.createHTML("span",null,"<\!-- IE --\>")));if(b&&c.ListBox&&(b.Button||b.SplitButton))e+=j.createHTML("td",{"class":"mceToolbarEnd"},
j.createHTML("span",null,"<\!-- IE --\>"));e=j.stdMode?e+('<td style="position: relative">'+c.renderHTML()+"</td>"):e+("<td>"+c.renderHTML()+"</td>");if(f&&c.ListBox&&(f.Button||f.SplitButton))e+=j.createHTML("td",{"class":"mceToolbarStart"},j.createHTML("span",null,"<\!-- IE --\>"))}g="mceToolbarEnd";c.Button?g+=" mceToolbarEndButton":c.SplitButton?g+=" mceToolbarEndSplitButton":c.ListBox&&(g+=" mceToolbarEndListBox");e+=j.createHTML("td",{"class":g},j.createHTML("span",null,"<\!-- IE --\>"));return j.createHTML("table",
{id:this.id,"class":"mceToolbar"+(a["class"]?" "+a["class"]:""),cellpadding:"0",cellspacing:"0",align:this.settings.align||"",role:"presentation",tabindex:"-1"},"<tbody><tr>"+e+"</tr></tbody>")}})})(tinymce);
(function(e){var j=e.util.Dispatcher;e.create("tinymce.AddOnManager",{AddOnManager:function(){this.items=[];this.urls={};this.lookup={};this.onAdd=new j(this)},get:function(e){if(this.lookup[e])return this.lookup[e].instance},dependencies:function(e){var g;this.lookup[e]&&(g=this.lookup[e].dependencies);return g||[]},requireLangPack:function(j){var g=e.settings;g&&(g.language&&!1!==g.language_load)&&e.ScriptLoader.add(this.urls[j]+"/langs/"+g.language+".js")},add:function(e,g,c){this.items.push(g);
this.lookup[e]={instance:g,dependencies:c};this.onAdd.dispatch(this,e,g);return g},createUrl:function(e,g){return"object"===typeof g?g:{prefix:e.prefix,resource:g,suffix:e.suffix}},addComponents:function(j,g){var c=this.urls[j];e.each(g,function(a){e.ScriptLoader.add(c+"/"+a)})},load:function(j,g,c,a){function d(){var d=b.dependencies(j);e.each(d,function(a){a=b.createUrl(g,a);b.load(a.resource,a,void 0,void 0)});c&&(a?c.call(a):c.call(e.ScriptLoader))}var b=this,f=g;b.urls[j]||("object"===typeof g&&
(f=g.prefix+g.resource+g.suffix),0!=f.indexOf("/")&&-1==f.indexOf("://")&&(f=e.baseURL+"/"+f),b.urls[j]=f.substring(0,f.lastIndexOf("/")),e.settings.atlassian||(b.lookup[j]?d():e.ScriptLoader.add(f,d,a)))}});e.PluginManager=new e.AddOnManager;e.ThemeManager=new e.AddOnManager})(tinymce);
(function(e){var j=e.each,i=e.extend,g=e.DOM,c=e.dom.Event,a=e.explode,d=e.util.Dispatcher,b=0;e.documentBaseURL=e.baseURL;AJS.log("tinymce.documentBaseURL = "+e.documentBaseURL);/[\/\\]$/.test(e.documentBaseURL)||(e.documentBaseURL+="/");e.baseURL=(new e.util.URI(e.documentBaseURL)).toAbsolute(e.baseURL);e.baseURI=new e.util.URI(e.baseURL);e.onBeforeUnload=new d(e);c.add(window,"beforeunload",function(a){e.onBeforeUnload.dispatch(e,a)});e.onAddEditor=new d(e);e.onRemoveEditor=new d(e);e.EditorManager=
i(e,{editors:[],i18n:{},activeEditor:null,init:function(d){function h(a,b,d){var c=a[b];if(c){if(e.is(c,"string")){d=(d=c.replace(/\.\w+$/,""))?e.resolve(d):0;c=e.resolve(c)}return c.apply(d||this,Array.prototype.slice.call(arguments,2))}}function p(){var c,i;h(d,"onpageload");switch(d.mode){case "exact":c=d.elements||"";c.length>0&&j(a(c),function(a){if(g.get(a)){m=new e.Editor(a,d);k.push(m);m.render(1)}else j(document.forms,function(c){j(c.elements,function(c){if(c.name===a){a="mce_editor_"+b++;
g.setAttrib(c,"id",a);m=new e.Editor(a,d);k.push(m);m.render(1)}})})});break;case "textareas":case "specific_textareas":j(g.select("textarea"),function(a){if(!d.editor_deselector||!(d.editor_deselector.constructor===RegExp?d.editor_deselector.test(a.className):g.hasClass(a,d.editor_deselector)))if(!d.editor_selector||(d.editor_selector.constructor===RegExp?d.editor_selector.test(a.className):g.hasClass(a,d.editor_selector))){n=g.get(a.name);if(!a.id&&!n)a.id=a.name;if(!a.id||l.get(a.id))a.id=g.uniqueId();
m=new e.Editor(a.id,d);k.push(m);m.render(1)}})}if(d.oninit){c=i=0;j(k,function(a){i++;a.initialized?c++:a.onInit.add(function(){c++;c==i&&h(d,"oninit")});c==i&&h(d,"oninit")})}}var l=this,n,k=[],m,d=i({theme:"simple",language:"en"},d);l.settings=d;d.atlassian?p():c.add(document,"init",p)},get:function(a){return a===void 0?this.editors:this.editors[a]},getInstanceById:function(a){return this.get(a)},add:function(a){var b=this.editors;b[a.id]=a;b.push(a);this._setActive(a);this.onAddEditor.dispatch(this,
a);e.adapter&&e.adapter.patchEditor(a);return a},remove:function(a){var b,d=this.editors;if(!d[a.id])return null;delete d[a.id];for(b=0;b<d.length;b++)if(d[b]==a){d.splice(b,1);break}this.activeEditor==a&&this._setActive(d[0]);a.destroy();this.onRemoveEditor.dispatch(this,a);return a},execCommand:function(a,b,d){var c=this.get(d),g;switch(a){case "mceFocus":c.focus();return true;case "mceAddEditor":case "mceAddControl":this.get(d)||(new e.Editor(d,this.settings)).render();return true;case "mceAddFrameControl":g=
d.window;g.tinyMCE=tinyMCE;g.tinymce=e;e.DOM.doc=g.document;e.DOM.win=g;c=new e.Editor(d.element_id,d);c.render();if(e.isIE){var k=function(){c.destroy();g.detachEvent("onunload",k);g=g.tinyMCE=g.tinymce=null};g.attachEvent("onunload",k)}d.page_window=null;return true;case "mceRemoveEditor":case "mceRemoveControl":c&&c.remove();return true;case "mceToggleEditor":if(!c){this.execCommand("mceAddControl",0,d);return true}c.isHidden()?c.show():c.hide();return true}return this.activeEditor?this.activeEditor.execCommand(a,
b,d):false},execInstanceCommand:function(a,b,d,c){return(a=this.get(a))?a.execCommand(b,d,c):false},triggerSave:function(){j(this.editors,function(a){a.save()})},addI18n:function(a,b){var d=this.i18n;e.is(a,"string")?j(b,function(b,c){d[a+"."+c]=b}):j(a,function(a,b){j(a,function(a,c){j(a,function(a,e){c==="common"?d[b+"."+e]=a:d[b+"."+c+"."+e]=a})})})},_setActive:function(a){this.selectedInstance=this.activeEditor=a}})})(tinymce);
(function(e){var j=e.DOM,i=e.dom.Event,g=e.extend,c=e.util.Dispatcher,a=e.each,d=e.isGecko,b=e.isIE,f=e.is,h=e.ThemeManager,p=e.PluginManager,l=e.explode,n=e.VK;e.create("tinymce.Editor",{Editor:function(b,d){var f=this;f.id=f.editorId=b;f.execCommands={};f.queryStateCommands={};f.queryValueCommands={};f.isNotDirty=!1;f.plugins={};a("onPreInit onBeforeRenderUI onPostRender onLoad onInit onRemove onActivate onDeactivate onClick onEvent onMouseUp onMouseDown onDblClick onKeyDown onKeyUp onKeyPress onContextMenu onSubmit onReset onPaste onPreProcess onPostProcess onBeforeSetContent onBeforeGetContent onSetContent onGetContent onLoadContent onSaveContent onNodeChange onChange onBeforeExecCommand onExecCommand onUndo onRedo onVisualAid onSetProgressState onSetAttrib".split(" "),
function(a){f[a]=new c(f)});f.settings=d=g({id:b,language:"en",docs_language:"en",theme:"simple",skin:"default",delta_width:0,delta_height:0,popup_css:"",plugins:"",document_base_url:e.documentBaseURL,add_form_submit_trigger:1,submit_patch:1,add_unload_trigger:1,convert_urls:1,relative_urls:1,remove_script_host:1,table_inline_editing:0,object_resizing:1,cleanup:1,accessibility_focus:1,custom_shortcuts:1,custom_undo_redo_keyboard_shortcuts:1,custom_undo_redo_restore_selection:1,custom_undo_redo:1,
doctype:e.isIE6?'<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">':"<!DOCTYPE html>",visual_table_class:"mceItemTable",visual:1,font_size_style_values:"xx-small,x-small,small,medium,large,x-large,xx-large",font_size_legacy_values:"xx-small,small,medium,large,x-large,xx-large,300%",apply_source_formatting:1,directionality:"ltr",forced_root_block:"p",hidden_input:1,padd_empty_editor:1,render_ui:1,init_theme:1,force_p_newlines:1,indentation:"30px",keep_styles:1,fix_table_elements:1,inline_styles:1,
convert_fonts_to_spans:!0,indent:"simple",indent_before:"p,h1,h2,h3,h4,h5,h6,blockquote,div,title,style,pre,script,td,ul,li,area,table,thead,tfoot,tbody,tr",indent_after:"p,h1,h2,h3,h4,h5,h6,blockquote,div,title,style,pre,script,td,ul,li,area,table,thead,tfoot,tbody,tr",validate:!0,entity_encoding:"named",url_converter:f.convertURL,url_converter_scope:f,ie7_compat:!0},d);f.documentBaseURI=new e.util.URI(d.document_base_url||e.documentBaseURL,{base_uri:tinyMCE.baseURI});f.baseURI=e.baseURI;f.contentCSS=
[];f.execCallback("setup",f)},render:function(){var b=this,d=b.settings,c=b.id,f=e.ScriptLoader;if(!d.atlassian&&!i.domLoaded)i.add(document,"init",function(){b.render()});else if(tinyMCE.settings=d,b.getElement()&&(!e.isIDevice||e.isIOS5))!/TEXTAREA|INPUT/i.test(b.getElement().nodeName)&&(d.hidden_input&&j.getParent(c,"form"))&&j.insertAfter(j.create("input",{type:"hidden",name:c}),c),e.WindowManager&&(b.windowManager=new e.WindowManager(b)),"xml"==d.encoding&&b.onGetContent.add(function(a,b){if(b.save)b.content=
j.encode(b.content)}),d.add_form_submit_trigger&&b.onSubmit.addToTop(function(){if(b.initialized){b.save();b.isNotDirty=1}}),d.add_unload_trigger&&(b._beforeUnload=tinyMCE.onBeforeUnload.add(function(){b.initialized&&(!b.destroyed&&!b.isHidden())&&b.save({format:"raw",no_events:true})})),e.addUnload(b.destroy,b),d.submit_patch&&b.onBeforeRenderUI.add(function(){var a=b.getElement().form;if(a&&!a._mceOldSubmit){if(!a.submit.nodeType&&!a.submit.length){b.formElement=a;a._mceOldSubmit=a.submit;a.submit=
function(){e.triggerSave();b.isNotDirty=1;return b.formElement._mceOldSubmit(b.formElement)}}a=null}}),c=function(){b.removed||b.init()},d.theme&&("-"!=d.theme.charAt(0)&&!h.urls[d.theme])&&h.load(d.theme,"themes/"+d.theme+"/editor_template"+e.suffix+".js"),a(l(d.plugins),function(b){if(b&&!p.urls[b])if(b.charAt(0)=="-"){b=b.substr(1,b.length);b=p.dependencies(b);a(b,function(a){a=p.createUrl({prefix:"plugins/",resource:a,suffix:"/editor_plugin"+e.suffix+".js"},a);p.load(a.resource,a)})}else b!="safari"&&
p.load(b,{prefix:"plugins/",resource:b,suffix:"/editor_plugin"+e.suffix+".js"})}),d.atlassian?c():f.loadQueue(c)},init:function(){function c(b){var d=p.get(b),g=p.urls[b]||e.documentBaseURL.replace(/\/$/,"");d&&-1===e.inArray(x,b)&&(a(p.dependencies(b),function(a){c(a)}),d=new d(f,g),f.plugins[b]=d,d.init&&(d.init(f,g),x.push(b)),AJS.log("initPlugin: "+b+" initialised"))}var f=this,g=f.settings,i,s,r=f.getElement(),n,v,u,x=[];e.add(f);g.aria_label=g.aria_label||j.getAttrib(r,"aria-label",f.getLang("aria.rich_text_area"));
g.theme&&(g.theme=g.theme.replace(/-/,""),n=h.get(g.theme),f.theme=new n,f.theme.init&&g.init_theme&&f.theme.init(f,h.urls[g.theme]||e.documentBaseURL.replace(/\/$/,"")));a(l(g.plugins.replace(/\-/g,"")),c);!1!==g.popup_css&&(g.popup_css=g.popup_css?f.documentBaseURI.toAbsolute(g.popup_css):f.baseURI.toAbsolute("themes/"+g.theme+"/skins/"+g.skin+"/dialog.css"));g.popup_css_add&&(g.popup_css+=","+f.documentBaseURI.toAbsolute(g.popup_css_add));f.controlManager=new e.ControlManager(f);g.custom_undo_redo&&
(f.onBeforeExecCommand.add(function(a,b,d,c,e){b!="Undo"&&(b!="Redo"&&b!="mceRepaint"&&(!e||!e.skip_undo))&&f.undoManager.beforeChange()}),f.onExecCommand.add(function(a,b,d,c,e){b!="Undo"&&(b!="Redo"&&b!="mceRepaint"&&(!e||!e.skip_undo))&&f.undoManager.add()}));f.onExecCommand.add(function(a,b){/^(FontName|FontSize)$/.test(b)||f.nodeChanged()});d&&(u=function(a,b){(!b||!b.initial)&&f.execCommand("mceRepaint")},f.onUndo.add(u),f.onRedo.add(u),f.onSetContent.add(u));f.onBeforeRenderUI.dispatch(f,f.controlManager);
g.render_ui&&(i=g.width||r.style.width||r.offsetWidth,s=g.height||r.style.height||r.offsetHeight,f.orgDisplay=r.style.display,u=/^[0-9\.]+(|px)$/i,u.test(""+i)&&(i=Math.max(parseInt(i)+(n.deltaWidth||0),100)),u.test(""+s)&&(s=Math.max(parseInt(s)+(n.deltaHeight||0),100)),n=f.theme.renderUI({targetNode:r,width:i,height:s,deltaWidth:g.delta_width,deltaHeight:g.delta_height}),f.editorContainer=n.editorContainer);if(g.content_editable)return r=n=null,f.setupContentEditable();document.domain&&location.hostname!=
document.domain&&(e.relaxedDomain=document.domain);j.setStyles(n.sizeContainer||n.editorContainer,{width:i,height:s});g.content_css&&e.each(l(g.content_css),function(a){f.contentCSS.push(f.documentBaseURI.toAbsolute(a))});100>s&&(s=100);f.iframeHTML=g.doctype+'<html><head xmlns="http://www.w3.org/1999/xhtml">';f.iframeHTML=g.ie7_compat?f.iframeHTML+'<meta http-equiv="X-UA-Compatible" content="IE=7" />':f.iframeHTML+'<meta http-equiv="X-UA-Compatible" content="IE=edge" />';f.iframeHTML+='<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />';
for(i=0;i<f.contentCSS.length;i++)f.iframeHTML+='<link type="text/css" rel="stylesheet" href="'+f.contentCSS[i]+'" />';g.contentCssTags&&(f.iframeHTML+=g.contentCssTags);f.contentCSS=[];i=g.body_id||"tinymce";-1!=i.indexOf("=")&&(i=f.getParam("body_id","","hash"),i=i[f.id]||i);r=g.body_class||"";-1!=r.indexOf("=")&&(r=f.getParam("body_class","","hash"),r=r[f.id]||"");f.iframeHTML+='</head><body id="'+i+'" class="mceContentBody aui-theme-default '+r+'" onload="window.parent.tinyMCE.get(\''+f.id+"').onLoad.dispatch();\"><br></body></html>";
if(e.relaxedDomain&&(b||e.isOpera&&11>parseFloat(opera.version())))v='javascript:(function(){document.open();document.domain="'+document.domain+'";var ed = window.parent.tinyMCE.get("'+f.id+'");document.write(ed.iframeHTML);document.close();ed.setupIframe();})()';j.add(n.iframeContainer,"iframe",{id:f.id+"_ifr",src:v||'javascript:""',frameBorder:"0",allowTransparency:"true",title:g.aria_label,style:{width:"100%",height:s,display:"block"}});f.contentAreaContainer=n.iframeContainer;j.get(n.editorContainer).style.display=
f.orgDisplay;j.get(f.id).style.display="none";j.setAttrib(f.id,"aria-hidden",!0);(!e.relaxedDomain||!v)&&f.setupIframe();r=n=null},setupIframe:function(){var c=this,f=c.settings;j.get(c.id);var g=c.getDoc();if(!b||!e.relaxedDomain)g.open(),g.write(c.iframeHTML),g.close(),e.relaxedDomain&&(g.domain=e.relaxedDomain);g=c.getBody();g.disabled=!0;f.readonly||(g.contentEditable=!0);g.disabled=!1;c.schema=new e.html.Schema(f);c.dom=new e.dom.DOMUtils(c.getDoc(),{keep_values:!0,url_converter:c.convertURL,
url_converter_scope:c,hex_colors:f.force_hex_style_colors,class_filter:f.class_filter,update_styles:1,fix_ie_paragraphs:1,schema:c.schema});c.parser=new e.html.DomParser(f,c.schema);c.settings.allow_html_in_named_anchor||c.parser.addAttributeFilter("name",function(a){for(var b=a.length,d,c,e,f;b--;){f=a[b];if(f.name==="a"&&f.firstChild){e=f.parent;d=f.lastChild;do{c=d.prev;e.insert(d,f);d=c}while(d)}}});c.parser.addAttributeFilter("src,href,style",function(a,b){for(var d=a.length,e,f=c.dom,g,h;d--;){e=
a[d];g=e.attr(b);h="data-mce-"+b;e.attributes.map[h]||(b==="style"?e.attr(h,f.serializeStyle(f.parseStyle(g),e.name)):e.attr(h,c.convertURL(g,b,e.name)))}});c.parser.addNodeFilter("script",function(a){for(var b=a.length,d;b--;){d=a[b];d.attr("type","mce-"+(d.attr("type")||"text/javascript"))}});c.parser.addNodeFilter("#cdata",function(a){for(var b=a.length,d;b--;){d=a[b];d.type=8;d.name="#comment";d.value="[CDATA["+d.value+"]]"}});c.parser.addNodeFilter("p,h1,h2,h3,h4,h5,h6,div",function(a){var b=
a.length,d;for(c.schema.getNonEmptyElements();b--;){d=a[b];if(d.isEmpty(c.schema))d.empty().append(new e.html.Node("br",1)).shortEnded=true}});c.serializer=new e.dom.Serializer(f,c.dom,c.schema);c.selection=new e.dom.Selection(c.dom,c.getWin(),c.serializer);c.formatter=new e.Formatter(this);c.formatter.register({alignleft:[{selector:"p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li",styles:{textAlign:"left"}},{selector:"img.confluence-embedded-image",classes:"image-left"},{selector:"img,table",collapsed:!1,
styles:{"float":"left"}}],aligncenter:[{selector:"p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li",styles:{textAlign:"center"}},{selector:"img.confluence-embedded-image",classes:"image-center"},{selector:"table",collapsed:!1,styles:{marginLeft:"auto",marginRight:"auto"}}],alignright:[{selector:"p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li",styles:{textAlign:"right"}},{selector:"img.confluence-embedded-image",classes:"image-right"},{selector:"img,table",collapsed:!1,styles:{"float":"right"}}],alignfull:[{selector:"p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li",
styles:{textAlign:"justify"}}],bold:[{inline:"strong",remove:"all"},{inline:"span",styles:{fontWeight:"bold"}},{inline:"b",remove:"all"}],italic:[{inline:"em",remove:"all"},{inline:"span",styles:{fontStyle:"italic"}},{inline:"i",remove:"all"}],underline:[{inline:"u",remove:"all"},{inline:"span",styles:{textDecoration:"underline"},exact:!0}],strikethrough:[{inline:"s",remove:"all"}],forecolor:{inline:"span",styles:{color:"%value"},wrap_links:!1},hilitecolor:{inline:"span",styles:{backgroundColor:"%value"},
wrap_links:!1},fontname:{inline:"span",styles:{fontFamily:"%value"}},fontsize:{inline:"span",styles:{fontSize:"%value"}},fontsize_class:{inline:"span",attributes:{"class":"%value"}},blockquote:{block:"blockquote",wrapper:1,remove:"all"},subscript:{inline:"sub"},superscript:{inline:"sup"},link:{inline:"a",selector:"a",remove:"all",split:!0,deep:!0,onmatch:function(){return true},onformat:function(b,d,e){a(e,function(a,d){c.dom.setAttrib(b,d,a)})}},removeformat:[{selector:"b,strong,em,i,font,u,strike",
remove:"all",split:!0,expand:!1,block_expand:!0,deep:!0},{selector:"span",attributes:["style","class"],remove:"empty",split:!0,expand:!1,deep:!0},{selector:"*",attributes:["style","class"],split:!1,expand:!1,deep:!0}]});a("p h1 h2 h3 h4 h5 h6 div address pre div code dt dd samp".split(/\s/),function(a){c.formatter.register(a,{block:a,remove:"all"})});c.formatter.register(c.settings.formats);c.undoManager=new e.UndoManager(c);c.undoManager.onAdd.add(function(a,b){if(a.hasUndo())return c.onChange.dispatch(c,
b,a)});c.undoManager.onUndo.add(function(a,b){return c.onUndo.dispatch(c,b,a)});c.undoManager.onRedo.add(function(a,b){return c.onRedo.dispatch(c,b,a)});c.forceBlocks=new e.ForceBlocks(c,{forced_root_block:f.forced_root_block});c.editorCommands=new e.EditorCommands(c);c.serializer.onPreProcess.add(function(a,b){return c.onPreProcess.dispatch(c,b,a)});c.serializer.onPostProcess.add(function(a,b){return c.onPostProcess.dispatch(c,b,a)});AJS.log("Editor:setupIframe: dispatch onPreInit");c.onPreInit.dispatch(c);
f.gecko_spellcheck||(c.getBody().spellcheck=0);f.readonly||c._addEvents();AJS.log("Editor:setupIframe: dispatch controlManager onPostRender");c.controlManager.onPostRender.dispatch(c,c.controlManager);AJS.log("Editor:setupIframe: dispatch onPostRender");c.onPostRender.dispatch(c);c.quirks=new e.util.Quirks(this);f.directionality&&(c.getBody().dir=f.directionality);f.nowrap&&(c.getBody().style.whiteSpace="nowrap");f.handle_node_change_callback&&c.onNodeChange.add(function(a,b,d){c.execCallback("handle_node_change_callback",
c.id,d,-1,-1,true,c.selection.isCollapsed())});f.save_callback&&c.onSaveContent.add(function(a,b){var d=c.execCallback("save_callback",c.id,b.content,c.getBody());if(d)b.content=d});f.onchange_callback&&c.onChange.add(function(a,b){c.execCallback("onchange_callback",c,b)});f.protect&&c.onBeforeSetContent.add(function(b,d){f.protect&&a(f.protect,function(a){d.content=d.content.replace(a,function(a){return"<\!--mce:protected "+escape(a)+"--\>"})})});f.convert_newlines_to_brs&&c.onBeforeSetContent.add(function(a,
b){if(b.initial)b.content=b.content.replace(/\r?\n/g,"<br />")});f.preformatted&&c.onPostProcess.add(function(a,b){b.content=b.content.replace(/^\s*<pre.*?>/,"");b.content=b.content.replace(/<\/pre>\s*$/,"");if(b.set)b.content='<pre class="mceItemHidden">'+b.content+"</pre>"});f.verify_css_classes&&(c.serializer.attribValueFilter=function(b,d){var e,f;if(b=="class"){if(!c.classesRE){f=c.dom.getClasses();if(f.length>0){e="";a(f,function(a){e=e+((e?"|":"")+a["class"])});c.classesRE=RegExp("("+e+")",
"gi")}}return!c.classesRE||/(\bmceItem\w+\b|\bmceTemp\w+\b)/g.test(d)||c.classesRE.test(d)?d:""}return d});f.cleanup_callback&&(c.onBeforeSetContent.add(function(a,b){b.content=c.execCallback("cleanup_callback","insert_to_editor",b.content,b)}),c.onPreProcess.add(function(a,b){b.set&&c.execCallback("cleanup_callback","insert_to_editor_dom",b.node,b);b.get&&c.execCallback("cleanup_callback","get_from_editor_dom",b.node,b)}),c.onPostProcess.add(function(a,b){if(b.set)b.content=c.execCallback("cleanup_callback",
"insert_to_editor",b.content,b);if(b.get)b.content=c.execCallback("cleanup_callback","get_from_editor",b.content,b)}));f.save_callback&&c.onGetContent.add(function(a,b){if(b.save)b.content=c.execCallback("save_callback",c.id,b.content,c.getBody())});f.handle_event_callback&&c.onEvent.add(function(a,b,d){c.execCallback("handle_event_callback",b,a,d)===false&&i.cancel(b)});c.onSetContent.add(function(){c.addVisual(c.getBody())});f.padd_empty_editor&&c.onPostProcess.add(function(a,b){b.content=b.content.replace(/^(<p[^>]*>(&nbsp;|&#160;|\s|\u00a0|)<\/p>[\r\n]*|<br \/>[\r\n]*)$/,
"")});if(d){var h=function(b){a(b.dom.select("a"),function(a){var d=a.parentNode;b.dom.isBlock(d)&&d.lastChild===a&&b.dom.add(d,"br",{"data-mce-bogus":1})})};c.onExecCommand.add(function(a,b){b==="CreateLink"&&h(a)});c.onSetContent.add(c.selection.onSetContent.add(h))}c.load({initial:!0,format:"html"});c.startContent=c.getContent({format:"raw"});c.undoManager.add();c.initialized=!0;AJS.log("Editor:setupIframe: dispatch onInit");c.onInit.dispatch(c);AJS.log("Editor:setupIframe: Callback setupcontent_callback");
c.execCallback("setupcontent_callback",c.id,c.getBody(),c.getDoc());AJS.log("Editor:setupIframe: Completed setupcontent_callback");AJS.log("Editor:setupIframe: Callback init_instance_callback");c.execCallback("init_instance_callback",c);AJS.log("Editor:setupIframe: Completed init_instance_callback");c.focus(!0);c.nodeChanged({initial:1});a(c.contentCSS,function(a){c.dom.loadCSS(a)});f.auto_focus&&setTimeout(function(){var a=e.get(f.auto_focus);a.selection.select(a.getBody(),1);a.selection.collapse(1);
a.getBody().focus();a.getWin().focus()},100)},setupContentEditable:function(){var d=this,c=d.settings,f=d.getElement();d.contentDocument=c.content_document||document;d.contentWindow=c.content_window||window;d.bodyElement=f;c.content_document=c.content_window=null;j.hide(f);f.contentEditable=d.getParam("content_editable_state",!0);j.show(f);c.gecko_spellcheck||(d.getDoc().body.spellcheck=0);d.dom=new e.dom.DOMUtils(d.getDoc(),{keep_values:!0,url_converter:d.convertURL,url_converter_scope:d,hex_colors:c.force_hex_style_colors,
class_filter:c.class_filter,root_element:d.id,fix_ie_paragraphs:1,update_styles:1});d.serializer=new e.dom.Serializer(c,d.dom,schema);d.selection=new e.dom.Selection(d.dom,d.getWin(),d.serializer);d.forceBlocks=new e.ForceBlocks(d,{forced_root_block:c.forced_root_block});d.editorCommands=new e.EditorCommands(d);d.serializer.onPreProcess.add(function(a,b){return d.onPreProcess.dispatch(d,b,a)});d.serializer.onPostProcess.add(function(a,b){return d.onPostProcess.dispatch(d,b,a)});d.onPreInit.dispatch(d);
d._addEvents();d.controlManager.onPostRender.dispatch(d,d.controlManager);d.onPostRender.dispatch(d);d.onSetContent.add(function(){d.addVisual(d.getBody())});d.startContent=d.getContent({format:"raw"});d.undoManager.add({initial:!0});d.initialized=!0;d.onInit.dispatch(d);d.focus(!0);d.nodeChanged({initial:1});c.content_css&&a(l(c.content_css),function(a){d.dom.loadCSS(d.documentBaseURI.toAbsolute(a))});b&&(d.dom.bind(d.getElement(),"beforedeactivate",function(){d.lastSelectionBookmark=d.selection.getBookmark(1)}),
d.onBeforeExecCommand.add(function(a,b,d,c,e){if(!j.getParent(a.selection.getStart(),function(b){return b==a.getBody()}))e.terminate=1;if(!j.getParent(a.selection.getEnd(),function(b){return b==a.getBody()}))e.terminate=1}));f=null},focus:function(a){var b,d=this.selection,c=this.settings.content_editable,f,g=this.getDoc(),h,i;if(!a){a=d.getRng();a.item&&(f=a.item(0));this._refreshContentEditable();if(!c)if(e.isIE)try{h=this.getWin(),i=j.getViewPort(h),this.dom.getRoot().focus(),h.scrollTo(i.x,i.y)}catch(l){}else this.getWin().focus();
e.isGecko&&this.getBody().focus();f&&f.ownerDocument==g&&(a=g.body.createControlRange(),a.addElement(f),a.select());c&&(e.isWebKit?this.getWin().focus():e.isIE?this.getElement().setActive():this.getElement().focus())}e.activeEditor!=this&&(null!=(b=e.activeEditor)&&b.onDeactivate.dispatch(b,this),this.onActivate.dispatch(this,b));e._setActive(this)},execCallback:function(a){var b=this.settings[a],d;if(b){if(this.callbackLookup&&(d=this.callbackLookup[a]))b=d.func,d=d.scope;f(b,"string")&&(d=(d=b.replace(/\.\w+$/,
""))?e.resolve(d):0,b=e.resolve(b),this.callbackLookup=this.callbackLookup||{},this.callbackLookup[a]={func:b,scope:d});return b.apply(d||this,Array.prototype.slice.call(arguments,1))}},translate:function(a){var b=this.settings.language||"en",d=e.i18n;return!a?"":d[b+"."+a]||a.replace(/{\#([^}]+)\}/g,function(a,c){return d[b+"."+c]||"{#"+c+"}"})},getLang:function(a,b){return e.i18n[(this.settings.language||"en")+"."+a]||(f(b)?b:"{#"+a+"}")},getParam:function(b,d,c){var g=e.trim,b=f(this.settings[b])?
this.settings[b]:d,h;return"hash"===c?(h={},f(b,"string")?a(0<b.indexOf("=")?b.split(/[;,](?![^=;,]*(?:[;,]|$))/):b.split(","),function(a){a=a.split("=");1<a.length?h[g(a[0])]=g(a[1]):h[g(a[0])]=g(a)}):h=b,h):b},nodeChanged:function(a){var d=this.selection,c=d.getStart()||this.getBody();this.initialized&&(a=a||{},c=b&&c.ownerDocument!=this.getDoc()?this.getBody():c,a.parents=[],this.dom.getParent(c,function(b){if("BODY"==b.nodeName)return!0;a.parents.push(b)}),this.onNodeChange.dispatch(this,a?a.controlManager||
this.controlManager:this.controlManager,c,d.isCollapsed(),a))},addButton:function(a,b){this.buttons=this.buttons||{};this.buttons[a]=b},addCommand:function(a,b,d){this.execCommands[a]={func:b,scope:d||this}},addQueryStateHandler:function(a,b,d){this.queryStateCommands[a]={func:b,scope:d||this}},addQueryValueHandler:function(a,b,d){this.queryValueCommands[a]={func:b,scope:d||this}},addShortcut:function(b,d,c,e){var g=this,h;if(!g.settings.custom_shortcuts)return!1;g.shortcuts=g.shortcuts||{};f(c,"string")&&
(h=c,c=function(){g.execCommand(h,!1,null)});f(c,"object")&&(h=c,c=function(){g.execCommand(h[0],h[1],h[2])});a(l(b),function(b){var f={func:c,scope:e||this,desc:d,alt:false,ctrl:false,shift:false};a(l(b,"+"),function(a){switch(a){case "alt":case "ctrl":case "shift":f[a]=true;break;default:f.charCode=a.charCodeAt(0);f.keyCode=a.toUpperCase().charCodeAt(0)}});g.shortcuts[(f.ctrl?"ctrl":"")+","+(f.alt?"alt":"")+","+(f.shift?"shift":"")+","+f.keyCode]=f});return!0},execCommand:function(b,d,c,e){var f=
this,h=0,j;!/^(mceAddUndoLevel|mceEndUndoLevel|mceBeginUndoLevel|mceRepaint|SelectAll)$/.test(b)&&(!e||!e.skip_focus)&&f.focus();e=g({},e);f.onBeforeExecCommand.dispatch(f,b,d,c,e);if(e.terminate)return!1;if(f.execCallback("execcommand_callback",f.id,f.selection.getNode(),b,d,c))return f.onExecCommand.dispatch(f,b,d,c,e),!0;if(j=f.execCommands[b])if(j=j.func.call(j.scope,d,c),!0!==j)return f.onExecCommand.dispatch(f,b,d,c,e),j;a(f.plugins,function(a){if(a.execCommand&&a.execCommand(b,d,c))return f.onExecCommand.dispatch(f,
b,d,c,e),h=1,!1});if(h)return!0;if(f.theme&&f.theme.execCommand&&f.theme.execCommand(b,d,c)||f.editorCommands.execCommand(b,d,c))return f.onExecCommand.dispatch(f,b,d,c,e),!0;f.getDoc().execCommand(b,d,c);f.onExecCommand.dispatch(f,b,d,c,e)},queryCommandState:function(a){var b;if(!this._isHidden()){if(b=this.queryStateCommands[a])if(b=b.func.call(b.scope),!0!==b)return b;b=this.editorCommands.queryCommandState(a);if(-1!==b)return b;try{return this.getDoc().queryCommandState(a)}catch(d){}}},queryCommandValue:function(a){var b;
if(!this._isHidden()){if(b=this.queryValueCommands[a])if(b=b.func.call(b.scope),!0!==b)return b;b=this.editorCommands.queryCommandValue(a);if(f(b))return b;try{return this.getDoc().queryCommandValue(a)}catch(d){}}},show:function(){j.show(this.getContainer());j.hide(this.id);this.load()},hide:function(){var a=this.getDoc();b&&a&&a.execCommand("SelectAll");this.save();j.hide(this.getContainer());j.setStyle(this.id,"display",this.orgDisplay)},isHidden:function(){return!j.isHidden(this.id)},setProgressState:function(a,
b,d){this.onSetProgressState.dispatch(this,a,b,d);return a},load:function(a){var b=this.getElement(),d;if(b)return a=a||{},a.load=!0,d=this.setContent(f(b.value)?b.value:b.innerHTML,a),a.element=b,a.no_events||this.onLoadContent.dispatch(this,a),a.element=null,d},save:function(b){var d=this,c=d.getElement(),e,f;if(c&&d.initialized){b=b||{};b.save=!0;try{b.no_events||(d.undoManager.typing=!1,d.undoManager.add())}catch(g){AJS.logError("editor.save() : "+g)}b.element=c;e=b.content=d.getContent(b);b.no_events||
d.onSaveContent.dispatch(d,b);e=b.content;/TEXTAREA|INPUT/i.test(c.nodeName)?c.value=e:(c.innerHTML=e,(f=j.getParent(d.id,"form"))&&a(f.elements,function(a){if(a.name==d.id)return a.value=e,!1}));b.element=c=null;return e}},setContent:function(a,b){var d=this.getBody(),c,b=b||{};b.format=b.format||"html";b.set=!0;b.content=a;b.no_events||this.onBeforeSetContent.dispatch(this,b);a=b.content;if(!e.isIE&&(0===a.length||/^\s+$/.test(a)))a=(c=this.settings.forced_root_block)?"<"+c+'><br data-mce-bogus="1"></'+
c+">":'<br data-mce-bogus="1">',d.innerHTML=a,this.selection.select(d,!0),this.selection.collapse(!0);"raw"!==b.format&&(a=(new e.html.Serializer({},this.schema)).serialize(this.parser.parse(a)));b.content=e.trim(a);this.dom.setHTML(d,b.content);b.no_events||this.onSetContent.dispatch(this,b);this.selection.normalize();return b.content},getContent:function(a){var b,a=a||{};a.format=a.format||"html";a.get=!0;a.no_events||this.onBeforeGetContent.dispatch(this,a);b="raw"==a.format?this.getBody().innerHTML:
this.serializer.serialize(this.getBody(),a);a.content=e.trim(b);a.no_events||this.onGetContent.dispatch(this,a);return a.content},isDirty:function(){return e.trim(this.startContent)!=e.trim(this.getContent({format:"raw",no_events:1}))&&!this.isNotDirty},setDirty:function(a){this.isNotDirty=a?0:1},getContainer:function(){this.container||(this.container=j.get(this.editorContainer||this.id+"_parent"));return this.container},getContentAreaContainer:function(){return this.contentAreaContainer},getElement:function(){return j.get(this.settings.content_element||
this.id)},getWin:function(){var a;if(!this.contentWindow&&(a=j.get(this.id+"_ifr")))this.contentWindow=a.contentWindow;return this.contentWindow},getDoc:function(){var a;if(!this.contentDocument&&(a=this.getWin()))this.contentDocument=a.document;return this.contentDocument},getBody:function(){return this.bodyElement||this.getDoc().body},convertURL:function(a,b,d){var c=this.settings;return c.urlconverter_callback?this.execCallback("urlconverter_callback",a,d,!0,b):!c.convert_urls||d&&"LINK"==d.nodeName||
0===a.indexOf("file:")?a:c.relative_urls?this.documentBaseURI.toRelative(a):a=this.documentBaseURI.toAbsolute(a,c.remove_script_host)},addVisual:function(b){var d=this,c=d.settings,b=b||d.getBody();f(d.hasVisual)||(d.hasVisual=c.visual);a(d.dom.select("table,a",b),function(a){var b;switch(a.nodeName){case "TABLE":b=d.dom.getAttrib(a,"border");if(!b||b=="0")d.hasVisual?d.dom.addClass(a,c.visual_table_class):d.dom.removeClass(a,c.visual_table_class);break;case "A":(b=d.dom.getAttrib(a,"name"))&&(d.hasVisual?
d.dom.addClass(a,"mceItemAnchor"):d.dom.removeClass(a,"mceItemAnchor"))}});d.onVisualAid.dispatch(d,b,d.hasVisual)},remove:function(){var a=this.getContainer();this.removed=1;this.hide();this.execCallback("remove_instance_callback",this);this.onRemove.dispatch(this);this.onExecCommand.listeners=[];e.remove(this);j.remove(a)},destroy:function(a){this.destroyed||(a||(e.removeUnload(this.destroy),tinyMCE.onBeforeUnload.remove(this._beforeUnload),this.theme&&this.theme.destroy&&this.theme.destroy(),this.controlManager.destroy(),
this.selection.destroy(),this.dom.destroy(),this.settings.content_editable||(i.clear(this.getWin()),i.clear(this.getDoc())),i.clear(this.getBody()),i.clear(this.formElement)),this.formElement&&(this.formElement.submit=this.formElement._mceOldSubmit,this.formElement._mceOldSubmit=null),this.contentAreaContainer=this.formElement=this.container=this.settings.content_element=this.bodyElement=this.contentDocument=this.contentWindow=null,this.selection&&(this.selection=this.selection.win=this.selection.dom=
this.selection.dom.doc=null),this.destroyed=1)},_addEvents:function(){function b(a,d){c.removed||!1!==c.onEvent.dispatch(c,a,d)&&c[h[a.fakeType||a.type]].dispatch(c,a,d)}var c=this,f=c.settings,g=c.dom,h={mouseup:"onMouseUp",mousedown:"onMouseDown",click:"onClick",keyup:"onKeyUp",keydown:"onKeyDown",keypress:"onKeyPress",submit:"onSubmit",reset:"onReset",contextmenu:"onContextMenu",dblclick:"onDblClick",paste:"onPaste"};a(h,function(a,d){switch(d){case "contextmenu":g.bind(c.getDoc(),d,b);break;case "paste":g.bind(c.getBody(),
d,function(a){b(a)});break;case "submit":case "reset":g.bind(c.getElement().form||j.getParent(c.id,"form"),d,b);break;default:g.bind(f.content_editable?c.getBody():c.getDoc(),d,b)}});g.bind(f.content_editable?c.getBody():d?c.getDoc():c.getWin(),"focus",function(){c.focus(!0)});if(f.content_editable&&e.isOpera){var l=function(){c.focus(!0)};g.bind(c.getBody(),"click",l);g.bind(c.getBody(),"keydown",l)}e.isGecko&&g.bind(c.getDoc(),"DOMNodeInserted",function(a){var b,a=a.target;if(1===a.nodeType&&"IMG"===
a.nodeName&&(b=a.getAttribute("data-mce-src")))a.src=c.documentBaseURI.toAbsolute(b)});d&&(l=function(){var a=this.getDoc(),b=this.settings;if(d&&!b.readonly){this._refreshContentEditable();try{a.execCommand("styleWithCSS",0,!1)}catch(c){if(!this._isHidden())try{a.execCommand("useCSS",0,!0)}catch(e){}}if(!b.table_inline_editing)try{a.execCommand("enableInlineTableEditing",!1,!1)}catch(f){}if(!b.object_resizing)try{a.execCommand("enableObjectResizing",!1,!1)}catch(g){}}},c.onBeforeExecCommand.add(l),
c.onMouseDown.add(l));c.onMouseUp.add(c.nodeChanged);c.onKeyUp.add(function(a,b){var d=b.keyCode;(d>=33&&d<=36||d>=37&&d<=40||d==13||d==45||d==46||d==8||e.isMac&&(d==91||d==93)||b.ctrlKey)&&c.nodeChanged()});c.onKeyDown.add(function(a,b){if(b.keyCode==n.BACKSPACE){var d=a.selection.getRng(true);if(d.collapsed){for(var c=d.startContainer,e=d.startOffset;c&&c.nodeType&&c.nodeType!=1&&c.parentNode;)c=c.parentNode;if(c&&c.parentNode&&c.parentNode.tagName==="BLOCKQUOTE"&&c.parentNode.firstChild==c&&e===
0){a.formatter.toggle("blockquote",null,c.parentNode);d.setStart(c,0);d.setEnd(c,0);a.selection.setRng(d);a.selection.collapse(false)}}}});c.onReset.add(function(){c.setContent(c.startContent,{format:"raw"})});if(f.custom_shortcuts){f.custom_undo_redo_keyboard_shortcuts&&(c.addShortcut("ctrl+z",c.getLang("undo_desc"),"Undo"),c.addShortcut("ctrl+y",c.getLang("redo_desc"),"Redo"));c.addShortcut("ctrl+b",c.getLang("bold_desc"),"Bold");c.addShortcut("ctrl+i",c.getLang("italic_desc"),"Italic");c.addShortcut("ctrl+u",
c.getLang("underline_desc"),"Underline");var p=function(b){var d=null;if(!b.altKey&&!b.ctrlKey&&!b.metaKey)return d;a(c.shortcuts,function(a){if(!(e.isMac&&a.ctrl!=b.metaKey)&&(e.isMac||a.ctrl==b.ctrlKey)&&a.alt==b.altKey&&a.shift==b.shiftKey)if(b.keyCode==a.keyCode||b.charCode&&b.charCode==a.charCode){d=a;return false}});return d};c.onKeyUp.add(function(a,b){if(p(b))return i.cancel(b)});c.onKeyPress.add(function(a,b){if(p(b))return i.cancel(b)});c.onKeyDown.add(function(a,b){var d=p(b);if(d){d.func.call(d.scope);
return i.cancel(b)}})}e.isIE&&g.bind(c.getDoc(),"controlselect",function(a){var b=c.resizeInfo,a=a.target;if(a.nodeName==="IMG"){b&&g.unbind(b.node,b.ev,b.cb);if(g.hasClass(a,"mceItemNoResize")){ev="resizestart";b=g.bind(a,"resizestart",i.cancel,i)}else{ev="resizeend";b=g.bind(a,ev,function(a){var b,a=a.target;if(b=g.getStyle(a,"width")){g.setAttrib(a,"width",b.replace(/[^0-9%]+/g,""));g.setStyle(a,"width","")}if(b=g.getStyle(a,"height")){g.setAttrib(a,"height",b.replace(/[^0-9%]+/g,""));g.setStyle(a,
"height","")}})}b=c.resizeInfo={node:a,ev:ev,cb:b}}});e.isOpera&&c.onClick.add(function(a,b){i.prevent(b)});if(f.custom_undo_redo){var v=function(){c.undoManager.typing=false;c.undoManager.add()},l=e.isGecko?"blur":"focusout";g.bind(c.getDoc(),l,function(){!c.removed&&c.undoManager.typing&&v()});c.dom.bind(c.dom.getRoot(),"dragend",function(){v()});c.onKeyUp.add(function(a,b){var d=b.keyCode;(d>=33&&d<=36||d>=37&&d<=40||d==13||d==45||b.ctrlKey)&&v()});c.onKeyDown.add(function(a,b){var d=b.keyCode,
f;if(d==8)if((f=c.getDoc().selection)&&f.createRange&&f.createRange().item){c.undoManager.beforeChange();a.dom.remove(f.createRange().item(0));v();return i.cancel(b)}if(d>=33&&d<=36||d>=37&&d<=40||d==13||d==45){e.isIE&&d==13&&c.undoManager.beforeChange();c.undoManager.typing&&v()}else if((d<16||d>20)&&d!=224&&d!=91&&!c.undoManager.typing){c.undoManager.beforeChange();c.undoManager.typing=true;c.undoManager.add()}});c.onMouseDown.add(function(){c.undoManager.typing&&v()})}if(e.isGecko){var u=function(){var b=
c.dom.getAttribs(c.selection.getStart().cloneNode(false));return function(){var d=c.selection.getStart();if(d!==c.getBody()){c.dom.setAttrib(d,"style",null);a(b,function(a){d.setAttributeNode(a.cloneNode(true))})}}},x=function(){var a=c.selection;return!a.isCollapsed()&&a.getStart()!=a.getEnd()};c.onKeyPress.add(function(a,b){var d;if((b.keyCode==8||b.keyCode==46)&&x()){d=u();c.getDoc().execCommand("delete",false,null);d();return i.cancel(b)}});c.dom.bind(c.getDoc(),"cut",function(){var a;if(x()){a=
u();c.onKeyUp.addToTop(i.cancel,i);setTimeout(function(){a();c.onKeyUp.remove(i.cancel,i)},0)}})}},_refreshContentEditable:function(){var a,b;this._isHidden()&&(a=this.getBody(),b=a.parentNode,b.removeChild(a),b.appendChild(a),a.focus())},_isHidden:function(){var a;if(!d)return 0;a=this.selection.getSel();return!a||!a.rangeCount||0==a.rangeCount}})})(tinymce);
(function(e){var j=e.each,i=!0,g=!1;e.EditorCommands=function(c){function a(a,b,d){var c,a=a.toLowerCase();return(c=n.exec[a])?(c(a,b,d),i):g}function d(a){var b,a=a.toLowerCase();return(b=n.state[a])?b(a):-1}function b(a,b){b=b||"exec";j(a,function(a,d){j(d.toLowerCase().split(","),function(d){n[b][d]=a})})}function f(a,b,d){void 0===b&&(b=g);void 0===d&&(d=null);return c.getDoc().execCommand(a,b,d)}function h(a,b){m.toggle(a,b?{value:b}:void 0)}var p=c.dom,l=c.selection,n={state:{},exec:{},value:{}},
k=c.settings,m=c.formatter,q;e.extend(this,{execCommand:a,queryCommandState:d,queryCommandValue:function(a){var b,a=a.toLowerCase();return(b=n.value[a])?b(a):g},addCommands:b});b({"mceResetDesignMode,mceBeginUndoLevel":function(){},"mceEndUndoLevel,mceAddUndoLevel":function(){c.undoManager.add()},"Cut,Copy,Paste":function(a){var b=c.getDoc(),d;try{f(a)}catch(g){d=i}if(d||!b.queryCommandSupported(a))e.isGecko?c.windowManager.confirm(c.getLang("clipboard_msg"),function(a){a&&open("http://www.mozilla.org/editor/midasdemo/securityprefs.html",
"_blank")}):c.windowManager.alert(c.getLang("clipboard_no_support"))},unlink:function(a){l.isCollapsed()&&l.select(l.getNode());f(a);l.collapse(g)},"JustifyLeft,JustifyCenter,JustifyRight,JustifyFull":function(b){var d=b.substring(7);c.undoManager.add();var e=l.getRng(),f=l.getNode();j(["left","center","right","full"],function(a){d!=a&&m.remove("align"+a);!tinyMCE.isIE&&("IMG"==f.nodeName&&("#document"==l.getRng().startContainer.nodeName||"#text"==l.getRng().startContainer.nodeName))&&l.setRng(e)});
h("align"+d);a("mceRepaint")},"InsertUnorderedList,InsertOrderedList":function(a){var b;f(a);if(a=p.getParent(l.getNode(),"ol,ul"))b=a.parentNode,/^(H[1-6]|P|ADDRESS|PRE)$/.test(b.nodeName)&&(q=l.getBookmark(void 0),p.split(b,a),l.moveToBookmark(q))},"Bold,Italic,Underline,Strikethrough,Superscript,Subscript":function(a){h(a)},"ForeColor,HiliteColor,FontName":function(a,b,d){h(a,d)},FontSize:function(a,b,d){var c;1<=d&&7>=d&&(c=e.explode(k.font_size_style_values),d=(b=e.explode(k.font_size_classes))?
b[d-1]||d:c[d-1]||d);h(a,d)},RemoveFormat:function(a){m.remove(a)},mceBlockQuote:function(){h("blockquote")},FormatBlock:function(a,b,d){return h(d||"p")},mceCleanup:function(){var a=l.getBookmark();c.setContent(c.getContent({cleanup:i}),{cleanup:i});l.moveToBookmark(a)},mceRemoveNode:function(a,b,d){a=d||l.getNode();a!=c.getBody()&&(q=l.getBookmark(void 0),c.dom.remove(a,i),l.moveToBookmark(q))},mceSelectNodeDepth:function(a,b,d){var e=0;p.getParent(l.getNode(),function(a){if(1==a.nodeType&&e++==
d)return l.select(a),g},c.getBody())},mceSelectNode:function(a,b,d){l.select(d)},mceInsertContent:function(a,b,d){var f,g,h,k,j;f=c.parser;g=new e.html.Serializer({},c.schema);a={content:d,format:"html"};l.onBeforeSetContent.dispatch(l,a);d=a.content;-1==d.indexOf("{$caret}")&&(d+="{$caret}");d=d.replace(/\{\$caret\}/,'<span id="mce_marker" data-mce-type="bookmark">﻿</span>');!l.isCollapsed()&&l.getContent().length&&c.execCommand("mceDelete",!1,null,{skip_undo:!0});h=l.getNode();a={context:h.nodeName.toLowerCase()};
j=f.parse(d,a);b=j.lastChild;if("mce_marker"==b.attr("id")){d=b;for(b=b.prev;b;b=b.walk(!0))if(3==b.type||!p.isBlock(b.name)){b.parent.insert(d,b,"br"===b.name);break}}if(a.invalid){l.setContent('<span id="mce_marker" data-mce-type="bookmark">﻿</span>');h=c.selection.getNode();k=c.getBody();for(9==h.nodeType?h=b=k:b=h;b!==k;)h=b,b=b.parentNode;d=h==k?k.innerHTML:p.getOuterHTML(h);d=g.serialize(f.parse(d.replace(/<span (id="mce_marker"|id=mce_marker).+?<\/span>/i,function(){return g.serialize(j)})));
h==k?p.setHTML(k,d):p.setOuterHTML(h,d)}else d=g.serialize(j),b=h.firstChild,f=h.lastChild,!b||b===f&&"BR"===b.nodeName?p.setHTML(h,d):l.setContent(d);d=p.get("mce_marker");b=p.getRect(d);h=p.getViewPort(c.getWin());if(b.y+b.h>h.y+h.h||b.y<h.y||b.x>h.x+h.w||b.x<h.x)f=e.isIE?c.getDoc().documentElement:c.getBody(),f.scrollLeft=b.x,f.scrollTop=b.y-h.h+25;h=p.createRng();(b=d.previousSibling)&&3==b.nodeType?h.setStart(b,b.nodeValue.length):(h.setStartBefore(d),h.setEndBefore(d));p.remove(d);l.setRng(h);
l.onSetContent.dispatch(l,a);c.addVisual()},mceInsertRawHTML:function(a,b,d){l.setContent("tiny_mce_marker");c.setContent(c.getContent().replace(/tiny_mce_marker/g,function(){return d}))},mceSetContent:function(a,b,d){c.setContent(d)},"Indent,Outdent":function(a){var b,c,e;b=k.indentation;c=/[a-z%]+$/i.exec(b);b=parseInt(b);!d("InsertUnorderedList")&&!d("InsertOrderedList")&&!d("InsertInlineTaskList")?j(l.getSelectedBlocks(),function(d){"outdent"==a?(e=Math.max(0,parseInt(d.style.paddingLeft||0)-
b),p.setStyle(d,"paddingLeft",e?e+c:"")):p.setStyle(d,"paddingLeft",parseInt(d.style.paddingLeft||0)+b+c)}):f(a)},mceRepaint:function(){if(e.isGecko)try{q=l.getBookmark(i),l.getSel()&&l.getSel().selectAllChildren(c.getBody()),l.collapse(i),l.moveToBookmark(q)}catch(a){}},mceToggleFormat:function(a,b,d){m.toggle(d)},InsertHorizontalRule:function(){c.execCommand("mceInsertContent",!1,"<hr />")},mceToggleVisualAid:function(){c.hasVisual=!c.hasVisual;c.addVisual()},mceReplaceContent:function(a,b,d){c.execCommand("mceInsertContent",
!1,d.replace(/\{\$selection\}/g,l.getContent({format:"text"})))},mceInsertLink:function(a,b,d){"string"==typeof d&&(d={href:d});a=p.getParent(l.getNode(),"a");d.href=d.href.replace(" ","%20");(!a||!d.href)&&m.remove("link");d.href&&m.apply("link",d,a)},selectAll:function(){var a=p.getRoot(),b=p.createRng();b.setStart(a,0);b.setEnd(a,a.childNodes.length);c.selection.setRng(b)}});b({"JustifyLeft,JustifyCenter,JustifyRight,JustifyFull":function(a){var b="align"+a.substring(7),a=l.isCollapsed()?[l.getNode()]:
l.getSelectedBlocks(),a=e.map(a,function(a){return!!m.matchNode(a,b)});return-1!==e.inArray(a,i)},"Bold,Italic,Underline,Strikethrough,Superscript,Subscript":function(a){return m.match(a)},mceBlockQuote:function(){return m.match("blockquote")},Outdent:function(){var a;return k.inline_styles&&((a=p.getParent(l.getStart(),p.isBlock))&&0<parseInt(a.style.paddingLeft)||(a=p.getParent(l.getEnd(),p.isBlock))&&0<parseInt(a.style.paddingLeft))?i:d("InsertUnorderedList")||d("InsertOrderedList")||d("InsertInlineTaskList")||
!k.inline_styles&&!!p.getParent(l.getNode(),"BLOCKQUOTE")},"InsertUnorderedList,InsertOrderedList,InsertInlineTaskList":function(a){var b=p.getParent(l.getNode(),"ul,ol"),d;if(!b)return!1;d=b.tagName;return"OL"===d&&"insertorderedlist"===a||"UL"===d&&!p.hasClass(b,"inline-task-list")&&"insertunorderedlist"===a||"UL"===d&&p.hasClass(b,"inline-task-list")&&"insertinlinetasklist"===a}},"state");b({"FontSize,FontName":function(a){var b=0,d;if(d=p.getParent(l.getNode(),"span"))b="fontsize"==a?d.style.fontSize:
d.style.fontFamily.replace(/, /g,",").replace(/[\'\"]/g,"").toLowerCase();return b}},"value");k.custom_undo_redo&&b({Undo:function(){c.undoManager.undo()},Redo:function(){c.undoManager.redo()}})}})(tinymce);
(function(e){var j=e.util.Dispatcher;e.UndoManager=function(i){var g,c=0,a=[],d;return g={typing:!1,onAdd:new j(g),onUndo:new j(g),onRedo:new j(g),beforeChange:function(){d=i.selection.getBookmark(2,!0)},add:function(b){var f;f=i.settings;var h,b=b||{};b.content=e.trim(i.getContent({format:"raw",no_events:1}));if((h=a[c])&&h.content==b.content)return null;a[c]&&(a[c].beforeBookmark=d);if(f.custom_undo_redo_levels&&a.length>f.custom_undo_redo_levels){for(f=0;f<a.length-1;f++)a[f]=a[f+1];a.length--;
c=a.length}b.bookmark=i.selection.getBookmark(2,!0);c<a.length-1&&(a.length=c+1);a.push(b);c=a.length-1;g.onAdd.dispatch(g,b);i.isNotDirty=0;return b},undo:function(){var b;g.typing&&(g.add(),g.typing=!1);0<c&&(b=a[--c],i.setContent(b.content,{format:"raw"}),i.selection.moveToBookmark(b.beforeBookmark),g.onUndo.dispatch(g,b));return b},redo:function(){var b;c<a.length-1&&(b=a[++c],i.setContent(b.content,{format:"raw"}),i.selection.moveToBookmark(b.bookmark),g.onRedo.dispatch(g,b));return b},clear:function(){a=
[];c=0;g.typing=!1},hasUndo:function(){return 0<c||this.typing},hasRedo:function(){return c<a.length-1&&!this.typing},ignore:function(b,d){var c=a.slice();b.call(d||i);a=c}}}})(tinymce);
(function(e){var j=e.dom.Event,i=e.isIE,g=e.isGecko,c=e.isOpera,a=!1;e.create("tinymce.ForceBlocks",{ForceBlocks:function(a){var b=a.settings,c;this.editor=a;this.dom=a.dom;c=(b.forced_root_block||"p").toLowerCase();b.element=c.toUpperCase();a.onPreInit.add(this.setup,this)},setup:function(){var a=this,b=a.editor,c=b.settings,h=b.dom,p=b.selection,l=b.schema.getBlockElements();if(c.forced_root_block){var n=function(){var a=p.getStart(),d=h.getRoot(),e=b.getDoc().body,g,j,i,n,v,u;if(a&&1===a.nodeType){for(;a!=
d;)if(a&&1===a.nodeType){if(l[a.nodeName])return;a=a.parentNode}else return;g=p.getRng();if(g.setStart)j=g.startContainer,i=g.startOffset,n=g.endContainer,v=g.endOffset;else if(g.item&&(g=b.getDoc().body.createTextRange(),g.moveToElementText(g.item(0))),tmpRng=g.duplicate(),tmpRng.collapse(!0),i=-1*tmpRng.move("character",-16777215),!tmpRng.collapsed)tmpRng=g.duplicate(),tmpRng.collapse(!1),v=-1*tmpRng.move("character",-16777215)-i;for(a=d.firstChild;a;a)3===a.nodeType||1==a.nodeType&&!l[a.nodeName]?
(u||(u=h.create(c.forced_root_block),a.parentNode.insertBefore(u,a)),d=a,a=a.nextSibling,u.appendChild(d)):(u=null,a=a.nextSibling);if(g.setStart)g.setStart(j,i),g.setEnd(n,v),p.setRng(g);else try{g=e.createTextRange(),g.moveToElementText(e),g.move("character",-16777215),g.collapse(!0),g.moveStart("character",i),0<v&&g.moveEnd("character",v),g.select()}catch(x){}b.nodeChanged()}};b.onKeyUp.add(n);b.onKeyDown.add(n);b.onClick.add(n)}c.force_br_newlines&&i&&b.onKeyPress.add(function(a,b){var d;if(13==
b.keyCode&&"LI"!=p.getNode().nodeName)return p.setContent('<br id="__" /> ',{format:"raw"}),d=h.get("__"),d.removeAttribute("id"),p.select(d),p.collapse(),j.cancel(b)});c.force_p_newlines&&(i||b.onKeyPress.add(function(b,c){13==c.keyCode&&(!c.shiftKey&&!a.insertPara(c))&&j.cancel(c)}),g&&b.onKeyDown.add(function(b,c){(8==c.keyCode||46==c.keyCode)&&!c.shiftKey&&a.backspaceDelete(c,8==c.keyCode)}));e.isWebKit&&b.onKeyPress.add(function(a,b){if(b.keyCode==13&&(b.shiftKey||c.force_br_newlines&&!h.getParent(p.getNode(),
"h1,h2,h3,h4,h5,h6,ol,ul"))){var d=p.getRng(),e,g=h.create("div",null," "),i=h.getViewPort(a.getWin());d.insertNode(e=h.create("br"));d.setStartAfter(e);d.setEndAfter(e);p.setRng(d);if(p.getSel().focusNode==e.previousSibling){p.select(h.insertAfter(h.doc.createTextNode(" "),e));p.collapse(true)}h.insertAfter(g,e);d=h.getPos(g).y;e=h.getSize(g).h;h.remove(g);g=d+e;g>i.y+i.h&&a.getWin().scrollTo(0,g-i.h);j.cancel(b)}});i&&"P"!=c.element&&(b.onKeyPress.add(function(){a.lastElm=p.getNode().nodeName}),
b.onKeyUp.add(function(b,e){var g;g=p.getNode();if(b.getBody().childNodes.length===1&&g.nodeName=="P"){g=h.rename(g,c.element);p.select(g);p.collapse();b.nodeChanged()}else if(e.keyCode==13&&!e.shiftKey&&a.lastElm!="P")if(g=h.getParent(g,"p")){h.rename(g,c.element);b.nodeChanged()}}))},getParentBlock:function(a){var b=this.dom;return b.getParent(a,b.isBlock)},insertPara:function(){function d(b,d){var e=[],g,h;b.innerHTML="";if(j.keep_styles){h=d;do/^(SPAN|STRONG|B|EM|I|FONT|STRIKE|U)$/.test(h.nodeName)&&
(g=h.cloneNode(a),f.setAttrib(g,"id",""),e.push(g));while(h=h.parentNode)}if(0<e.length){h=e.length-1;for(g=b;0<=h;h--)g=g.appendChild(e[h]);e[0].innerHTML=c?" ":"<br />";return e[0]}b.innerHTML=c?" ":"<br />"}var b=this.editor,f=b.dom,g=b.getDoc(),j=b.settings,i=b.selection.getSel(),n=i.getRangeAt(0),k=g.body,m,q,o,s,r,A,v,u,x,z,y,t=f.getViewPort(b.getWin());b.undoManager.beforeChange();m=g.createRange();m.setStart(i.anchorNode,i.anchorOffset);m.collapse(!0);q=g.createRange();q.setStart(i.focusNode,
i.focusOffset);q.collapse(!0);s=(o=0>m.compareBoundaryPoints(m.START_TO_END,q))?i.anchorNode:i.focusNode;r=o?i.anchorOffset:i.focusOffset;A=o?i.focusNode:i.anchorNode;i=o?i.focusOffset:i.anchorOffset;if(e.isWebKit&&s===A&&1===s.nodeType&&0<s.childNodes.length&&b.dom.is(x=s.childNodes[0<r?r-1:0],"table"))return g=f.create("p",0,'<br data-mce-bogus="1" />'),f.insertAfter(g,x),n.setStart(g,0),b.selection.setRng(n),g=b.dom.getPos(g).y,g>t.y&&b.getWin().scrollTo(0,g),b.undoManager.add(),a;if(s===A&&/^(TD|TH)$/.test(s.nodeName))return"BR"==
s.firstChild.nodeName&&f.remove(s.firstChild),0==s.childNodes.length?b.dom.add(s,j.element,null,"<br />"):(y=s.innerHTML,s.innerHTML="",b.dom.add(s,j.element,null,y)),u=b.dom.add(s,j.element,null,"<br />"),n=g.createRange(),n.selectNodeContents(u),n.collapse(1),b.selection.setRng(n),a;s==k&&(A==k&&k.firstChild&&b.dom.isBlock(k.firstChild))&&(s=A=s.firstChild,r=i=0,m=g.createRange(),m.setStart(s,0),q=g.createRange(),q.setStart(A,0));g.body.hasChildNodes()||g.body.appendChild(f.create("br"));s="HTML"==
s.nodeName?g.body:s;s="BODY"==s.nodeName?s.firstChild:s;A="HTML"==A.nodeName?g.body:A;A="BODY"==A.nodeName?A.firstChild:A;x=b.dom.getRoot();s===x&&(s=s.firstChild,r=0);A===x&&(A=A.firstChild,i=0);v=this.getParentBlock(s);u=this.getParentBlock(A);x=v?v.nodeName:j.element;if(y=this.dom.getParent(v,"li,pre"))return"LI"==y.nodeName?(b=b.selection,t=this.dom,g=y,t.isEmpty(g)?(k=t.getParent(g,"ul,ol"),t.getParent(k.parentNode,"ul,ol")||(t.split(k,g),k=t.create("p",0,'<br data-mce-bogus="1" />'),t.replace(k,
g),b.select(k,1)),AJS.Rte.showSelection(),b=a):b=!0,b):!0;if(v&&("CAPTION"==v.nodeName||/absolute|relative|fixed/gi.test(f.getStyle(v,"position",1))))x=j.element,v=null;if(u&&("CAPTION"==u.nodeName||/absolute|relative|fixed/gi.test(f.getStyle(v,"position",1))))x=j.element,u=null;if(/(TD|TABLE|TH|CAPTION)/.test(x)||v&&"DIV"==x&&/left|right/gi.test(f.getStyle(v,"float",1)))x=j.element,v=u=null;o=v&&v.nodeName==x?v.cloneNode(0):b.dom.create(x);u=u&&u.nodeName==x?u.cloneNode(0):b.dom.create(x);u.removeAttribute("id");
if(y=/^(H[1-6])$/.test(x))y=v,v=y.ownerDocument.createRange(),v.setStart(n.endContainer,n.endOffset),v.setEndAfter(y),y=0==v.cloneContents().textContent.length;y&&(u=b.dom.create(j.element));y=v=s;do{if(y==k||9==y.nodeType||this.dom.isBlock(y)||/(TD|TABLE|TH|CAPTION)/.test(y.nodeName))break;v=y}while(y=y.previousSibling?y.previousSibling:y.parentNode);y=z=A;do{if(y==k||9==y.nodeType||this.dom.isBlock(y)||/(TD|TABLE|TH|CAPTION)/.test(y.nodeName))break;z=y}while(y=y.nextSibling?y.nextSibling:y.parentNode);
v.nodeName==x?m.setStart(v,0):m.setStartBefore(v);m.setEnd(s,r);o.appendChild(m.cloneContents()||g.createTextNode(""));try{q.setEndAfter(z)}catch(B){}q.setStart(A,i);u.appendChild(q.cloneContents()||g.createTextNode(""));n=g.createRange();!v.previousSibling&&v.parentNode.nodeName==x?n.setStartBefore(v.parentNode):m.startContainer.nodeName==x&&0==m.startOffset?n.setStartBefore(m.startContainer):n.setStart(m.startContainer,m.startOffset);!z.nextSibling&&z.parentNode.nodeName==x?n.setEndAfter(z.parentNode):
n.setEnd(q.endContainer,q.endOffset);n.deleteContents();c&&b.getWin().scrollTo(0,t.y);o.firstChild&&o.firstChild.nodeName==x&&(o.innerHTML=o.firstChild.innerHTML);u.firstChild&&u.firstChild.nodeName==x&&(u.innerHTML=u.firstChild.innerHTML);f.isEmpty(o)&&d(o,s);f.isEmpty(u)&&d(u,A);c&&9.5>parseFloat(opera.version())?(n.insertNode(o),n.insertNode(u)):(n.insertNode(u),n.insertNode(o));u.normalize();o.normalize();b.selection.select(u,!0);b.selection.collapse(!0);g=b.dom.getPos(u).y;if(g<t.y||g+25>t.y+
t.h)b.getWin().scrollTo(0,g<t.y?g:g-t.h+25);b.undoManager.add();return a},backspaceDelete:function(d,b){var c=this.editor,g=c.getBody(),i,l=c.selection,n=l.getRng(),k=n.startContainer,m;if(!(d.getPreventDefault?d.getPreventDefault():d.defaultPrevented)){if(!b&&n.collapsed&&1==k.nodeType&&n.startOffset==k.childNodes.length){m=new e.dom.TreeWalker(k.lastChild,k);for(i=k.lastChild;i;i=m.prev())if(3==i.nodeType){n.setStart(i,i.nodeValue.length);n.collapse(!0);l.setRng(n);return}}if(k&&(c.dom.isBlock(k)&&
!/^(TD|TH)$/.test(k.nodeName)&&b)&&(0==k.childNodes.length||1==k.childNodes.length&&"BR"==k.firstChild.nodeName)){for(i=k;(i=i.previousSibling)&&!c.dom.isBlock(i););if(i){if(k!=g.firstChild){for(g=c.dom.doc.createTreeWalker(i,NodeFilter.SHOW_TEXT,null,a);n=g.nextNode();)i=n;n=c.getDoc().createRange();n.setStart(i,i.nodeValue?i.nodeValue.length:0);n.setEnd(i,i.nodeValue?i.nodeValue.length:0);l.setRng(n);c.dom.remove(k)}return j.cancel(d)}}if(!b&&n.collapsed&&/^(BODY)$/.test(k.nodeName)&&(k=k.childNodes[n.startOffset])&&
(c.dom.isBlock(k)&&!/^(TD|TH)$/.test(k.nodeName))&&(0==k.childNodes.length||1==k.childNodes.length&&"BR"==k.firstChild.nodeName)){i=k;for(var q;i=i.nextSibling;)if(c.dom.isBlock(i)){q=i;break}if(q&&k!=g.lastChild)return g=c.dom.doc.createTreeWalker(q,NodeFilter.SHOW_TEXT,null,a),q=g.nextNode(),n=c.getDoc().createRange(),n.setStart(q,0),n.setEnd(q,0),l.setRng(n),c.dom.remove(k),j.cancel(d)}}}})})(tinymce);
(function(e){var j=e.dom.Event,i=e.each,g=e.extend;e.create("tinymce.ControlManager",{ControlManager:function(c,a){var d=this,a=a||{};d.editor=c;d.controls={};d.onAdd=new e.util.Dispatcher(d);d.onPostRender=new e.util.Dispatcher(d);d.prefix=a.prefix||c.id+"_";d._cls={};d.onPostRender.add(function(){i(d.controls,function(a){a.postRender()})})},get:function(c){return this.controls[this.prefix+c]||this.controls[c]},setActive:function(c,a){var d=null;(d=this.get(c))&&d.setActive(a);return d},setDisabled:function(c,
a){var d=null;(d=this.get(c))&&d.setDisabled(a);return d},add:function(c){c&&(this.controls[c.id]=c,this.onAdd.dispatch(c,this));return c},createControl:function(c){var a,d=this,b=d.editor;i(b.plugins,function(b){if(b.createControl&&(a=b.createControl(c,d)))return!1});switch(c){case "|":case "separator":return d.createSeparator()}return!a&&b.buttons&&(a=b.buttons[c])?d.createButton(c,a):d.add(a)},createDropMenu:function(c,a,d){var b=this.editor,f,h,j,a=g({"class":"mceDropDown",constrain:b.settings.constrain_menus},
a);a["class"]=a["class"]+" "+b.getParam("skin")+"Skin";if(j=b.getParam("skin_variant"))a["class"]+=" "+b.getParam("skin")+"Skin"+j.substring(0,1).toUpperCase()+j.substring(1);c=this.prefix+c;f=this.controls[c]=new (d||this._cls.dropmenu||e.ui.DropMenu)(c,a);f.onAddItem.add(function(a,d){var c=d.settings;c.title=b.getLang(c.title,c.title);c.onclick||(c.onclick=function(){c.cmd&&b.execCommand(c.cmd,c.ui||!1,c.value)})});b.onRemove.add(function(){f.destroy()});e.isIE&&(f.onShowMenu.add(function(){b.focus();
h=b.selection.getBookmark(1)}),f.onHideMenu.add(function(){h&&(b.selection.moveToBookmark(h),h=0)}));return this.add(f)},createListBox:function(c,a,d){var b=this.editor;if(this.get(c))return null;a.title=b.translate(a.title);a.scope=a.scope||b;a.onselect||(a.onselect=function(d){b.execCommand(a.cmd,a.ui||!1,d||a.value)});a=g({title:a.title,"class":"mce_"+c,scope:a.scope,control_manager:this},a);c=this.prefix+c;b.settings.use_native_selects||b.settings.use_accessible_selects&&!e.isGecko?d=new e.ui.NativeListBox(c,
a):(d=d||this._cls.listbox||e.ui.ListBox,d=new d(c,a,b));this.controls[c]=d;e.isWebKit&&d.onPostRender.add(function(a,d){j.add(d,"mousedown",function(){b.bookmark=b.selection.getBookmark(1)});j.add(d,"focus",function(){b.selection.moveToBookmark(b.bookmark);b.bookmark=null})});d.hideMenu&&b.onMouseDown.add(d.hideMenu,d);return this.add(d)},createButton:function(c,a,d){var b=this.editor;if(this.get(c))return null;a.title=b.translate(a.title);a.label=b.translate(a.label);a.scope=a.scope||b;!a.onclick&&
!a.menu_button&&(a.onclick=function(){b.execCommand(a.cmd,a.ui||!1,a.value)});a=g({title:a.title,"class":"mce_"+c,unavailable_prefix:b.getLang("unavailable",""),scope:a.scope,control_manager:this},a);c=this.prefix+c;a.menu_button?(d=d||this._cls.menubutton||e.ui.MenuButton,c=new d(c,a,b),b.onMouseDown.add(c.hideMenu,c)):(d=this._cls.button||e.ui.Button,c=new d(c,a,b));return this.add(c)},createMenuButton:function(c,a,d){a=a||{};a.menu_button=1;return this.createButton(c,a,d)},createSplitButton:function(c,
a,d){var b=this.editor;if(this.get(c))return null;a.title=b.translate(a.title);a.scope=a.scope||b;a.onclick||(a.onclick=function(d){b.execCommand(a.cmd,a.ui||!1,d||a.value)});a.onselect||(a.onselect=function(d){b.execCommand(a.cmd,a.ui||false,d||a.value)});a=g({title:a.title,"class":"mce_"+c,scope:a.scope,control_manager:this},a);c=this.prefix+c;c=this.add(new (d||this._cls.splitbutton||e.ui.SplitButton)(c,a,b));b.onMouseDown.add(c.hideMenu,c);return c},createColorSplitButton:function(c,a,d){var b=
this.editor,f,h;if(this.get(c))return null;a.title=b.translate(a.title);a.scope=a.scope||b;a.onclick||(a.onclick=function(d){e.isIE&&(h=b.selection.getBookmark(1));b.execCommand(a.cmd,a.ui||!1,d||a.value)});a.onselect||(a.onselect=function(d){b.execCommand(a.cmd,a.ui||false,d||a.value)});a=g({title:a.title,"class":"mce_"+c,menu_class:b.getParam("skin")+"Skin",scope:a.scope,more_colors_title:b.getLang("more_colors")},a);c=this.prefix+c;f=new (d||this._cls.colorsplitbutton||e.ui.ColorSplitButton)(c,
a,b);b.onMouseDown.add(f.hideMenu,f);b.onRemove.add(function(){f.destroy()});e.isIE&&(f.onShowMenu.add(function(){b.focus();h=b.selection.getBookmark(1)}),f.onHideMenu.add(function(){if(h){b.selection.moveToBookmark(h);h=0}}));return this.add(f)},createToolbar:function(c,a,d){c=this.prefix+c;a=new (d||this._cls.toolbar||e.ui.Toolbar)(c,a,this.editor);return this.get(c)?null:this.add(a)},createToolbarGroup:function(c,a,d){c=this.prefix+c;a=new (d||this._cls.toolbarGroup||e.ui.ToolbarGroup)(c,a,this.editor);
return this.get(c)?null:this.add(a)},createSeparator:function(c){return new (c||this._cls.separator||e.ui.Separator)},setControlType:function(c,a){return this._cls[c.toLowerCase()]=a},destroy:function(){i(this.controls,function(c){c.destroy()});this.controls=null}})})(tinymce);
(function(e){var j=e.util.Dispatcher,i=e.each,g=e.isIE,c=e.isOpera;e.create("tinymce.WindowManager",{WindowManager:function(a){this.editor=a;this.onOpen=new j(this);this.onClose=new j(this);this.params={};this.features={}},open:function(a,d){var b="",f="modal"==this.editor.settings.dialog_type,h,j,l;l=e.DOM.getViewPort();a=a||{};d=d||{};j=c?l.w:screen.width;l=c?l.h:screen.height;a.name=a.name||"mc_"+(new Date).getTime();a.width=parseInt(a.width||320);a.height=parseInt(a.height||240);a.resizable=!0;
a.left=a.left||parseInt(j/2)-a.width/2;a.top=a.top||parseInt(l/2)-a.height/2;d.inline=!1;d.mce_width=a.width;d.mce_height=a.height;d.mce_auto_focus=a.auto_focus;f&&g&&(a.center=!0,a.help=!1,a.dialogWidth=a.width+"px",a.dialogHeight=a.height+"px",a.scroll=a.scrollbars||!1);i(a,function(a,d){e.is(a,"boolean")&&(a=a?"yes":"no");/^(name|url)$/.test(d)||(b=g&&f?b+((b?";":"")+d+":"+a):b+((b?",":"")+d+"="+a))});this.features=a;this.params=d;this.onOpen.dispatch(this,a,d);j=a.url||a.file;j=e._addVer(j);try{g&&
f?(h=1,window.showModalDialog(j,window,b)):h=window.open(j,a.name,b)}catch(n){}h||alert(this.editor.getLang("popup_blocked"))},close:function(a){a.close();this.onClose.dispatch(this)},createInstance:function(a,d,b,c,g,j){return new (e.resolve(a))(d,b,c,g,j)},confirm:function(a,d,b,c){c=c||window;d.call(b||this,c.confirm(this._decode(this.editor.getLang(a,a))))},alert:function(a,d,b,c){c=c||window;c.alert(this._decode(this.editor.getLang(a,a)));d&&d.call(b||this)},resizeBy:function(a,d,b){b.resizeBy(a,
d)},_decode:function(a){return e.DOM.decode(a).replace(/\\n/g,"\n")}})})(tinymce);
(function(e){e.Formatter=function(j){function i(a){return 1===a.nodeType&&"_mce_caret"===a.id}function g(a){return a?z[a]:z}function c(a,b){a&&("string"!==typeof a?y(a,function(a,b){c(b,a)}):(b=b.length?b:[b],y(b,function(a){a.deep===N&&(a.deep=!a.selector);a.split===N&&(a.split=!a.selector||a.inline);a.remove===N&&(a.selector&&!a.inline)&&(a.remove="none");a.selector&&a.inline&&(a.mixed=!0,a.block_expand=!0);"string"===typeof a.classes&&(a.classes=a.classes.split(/\s+/))}),z[a]=b))}function a(a,
d,c){function f(a,b){b=b||I;if(a){if(b.onformat)b.onformat(a,b,d,c);y(b.styles,function(b,c){t.setStyle(a,c,n(b,d))});y(b.attributes,function(b,c){t.setAttrib(a,c,n(b,d))});y(b.classes,function(b){b=n(b,d);t.hasClass(a,b)||t.addClass(a,b)})}}function l(){var a=j.selection.getRng(),b=a.startContainer,d=a.endContainer;if(b!=d&&0==a.endOffset){a:{d=new G(d);for(c=d.current();c;c=d.prev())if(1<c.childNodes.length||c==b){b=c;break a}b=void 0}a.setEnd(b,3==b.nodeType?b.length:b.childNodes.length)}return a}
function m(c,g,j){var l=[],n,q;n=I.inline||I.block;q=t.create(n);f(q);K.walk(c,function(c){function g(c){var k=c.nodeName.toLowerCase(),m=c.parentNode.nodeName.toLowerCase(),o;if(p(k,"br"))h=0,I.block&&t.remove(c);else if(I.wrapper&&b(c,a,d))h=0;else if(I.block&&!I.wrapper&&/^(h[1-6]|p|div|pre|address|dl|dt|dd)$/.test(k))c=t.rename(c,n),f(c),l.push(c),h=0;else{if(I.selector&&(y(v,function(a){!("collapsed"in a&&a.collapsed!==R)&&(t.is(c,a.selector)&&!i(c))&&(f(c,a),o=!0)}),!I.inline||o)){h=0;return}C(n,
k)&&C(m,n)&&(j||!(3===c.nodeType&&1===c.nodeValue.length&&65279===c.nodeValue.charCodeAt(0)))&&!i(c)?(h||(h=q.cloneNode(H),c.parentNode.insertBefore(h,c),l.push(h)),h.appendChild(c)):(h=0,y(e.grep(c.childNodes),g),h=0)}}var h;y(c,g)});!1===I.wrap_links&&y(l,function(a){function b(a){var d,c,f;if("A"===a.nodeName){c=q.cloneNode(H);l.push(c);f=e.grep(a.childNodes);for(d=0;d<f.length;d++)c.appendChild(f[d]);a.appendChild(c)}y(e.grep(a.childNodes),b)}b(a)});y(l,function(c){var e,g=0;y(c.childNodes,function(a){!k(a)&&
!r(a)&&g++});e=g;if((1<l.length||!D(c))&&0===e)t.remove(c,1);else if(I.inline||I.wrapper){if(!I.exact&&1===e){e=c;var j,n;y(e.childNodes,function(a){if(1==a.nodeType&&!r(a)&&!i(a))return j=a,H});j&&h(j,I)&&(n=j.cloneNode(H),f(n),t.replace(n,e,F),t.remove(j,1));c=n||e}y(v,function(a){y(t.select(a.inline,c),function(b){var c;if(!1===a.wrap_links){c=b.parentNode;do if("A"===c.nodeName)return;while(c=c.parentNode)}o(a,d,b,a.exact?b:null)})});if(b(c.parentNode,a,d))return t.remove(c,1),c=0,F;I.merge_with_parents&&
t.getParent(c.parentNode,function(e){if(b(e,a,d))return t.remove(c,1),c=0,F});c&&!1!==I.merge_siblings&&(c=A(s(c),c),c=A(c,s(c,F)))}})}var v=g(a),I=v[0],z,R=B.isCollapsed();if(I)if(c)c.nodeType?(z=t.createRng(),z.setStartBefore(c),z.setEndAfter(c),m(q(z,v),null,!0)):m(c,null,!0);else if(!R||!I.inline||t.select("td.mceSelected,th.mceSelected").length){if(!t.select("td.mceSelected.numberingColumn").length){var S=j.selection.getNode();j.selection.setRng(l());z=B.getBookmark();m(q(B.getRng(F),v),z);if(I.styles&&
(I.styles.color||I.styles.textDecoration))e.walk(S,P,"childNodes"),P(S);B.moveToBookmark(z);x(B.getRng(F));j.nodeChanged()}}else u("apply",a,d)}function d(a,d,c){function h(a){var b,c,f;b=e.grep(a.childNodes);c=0;for(f=p.length;c<f&&!o(p[c],d,a,a);c++);if(s.deep){c=0;for(f=b.length;c<f;c++)h(b[c])}}function k(c){var e;y(t.getParents(c.parentNode,void 0,t.getRoot()).reverse(),function(c){var f;!e&&"_start"!=c.id&&"_end"!=c.id&&(f=b(c,a,d))&&!1!==f.split&&(e=c)});return e}function i(a,b,c,e){var f,
g,h,k,j,l;if(a){l=a.parentNode;for(f=b.parentNode;f&&f!=l;f=f.parentNode){g=f.cloneNode(H);for(j=0;j<p.length;j++)if(o(p[j],d,g,g)){g=0;break}g&&(h&&g.appendChild(h),k||(k=g),h=g)}if(e&&(!s.mixed||!D(a)))b=t.split(a,b);h&&(c.parentNode.insertBefore(h,c),k.appendChild(c))}return b}function l(a){var b=t.get(a?"_start":"_end"),d=b[a?"firstChild":"lastChild"];r(d)&&(d=d[a?"firstChild":"lastChild"]);t.remove(b,!0);return d}function n(a){var b,d,c,a=q(a,p,F);s.split&&(b=v(a,F),d=v(a),b!=d?(c=b.firstChild,
"TD"==b.nodeName&&c&&(b=c),b=m(b,"span",{id:"_start","data-mce-type":"bookmark"}),d=m(d,"span",{id:"_end","data-mce-type":"bookmark"}),i(k(b),b,b,!0),i(k(d),d,d,!0),b=l(F),d=l()):b=d=i(k(b),b,b,!0),a.startContainer=b.parentNode,a.startOffset=E(b),a.endContainer=d.parentNode,a.endOffset=E(d)+1);K.walk(a,function(a){y(a,function(a){h(a);a.nodeType===1&&(j.dom.getStyle(a,"text-decoration")==="underline"&&a.parentNode&&O(a.parentNode)==="underline")&&o({deep:false,exact:true,inline:"span",styles:{textDecoration:"underline"}},
null,a)})})}var p=g(a),s=p[0],z;c?c.nodeType?(z=t.createRng(),z.setStartBefore(c),z.setEndAfter(c),n(z)):n(c):!B.isCollapsed()||!s.inline||t.select("td.mceSelected,th.mceSelected").length?t.select("td.mceSelected.numberingColumn").length||(c=B.getBookmark(),n(B.getRng(F)),B.moveToBookmark(c),s.inline&&f(a,d,B.getStart())&&x(B.getRng(!0)),j.nodeChanged()):u("remove",a,d)}function b(a,b,d,c){function e(a,b,f){var g,h,k=b[f];if(b.onmatch)return b.onmatch(a,b,f);if(k)if(k.length===N)for(g in k){if(k.hasOwnProperty(g)&&
(h="attributes"===f?t.getAttrib(a,g):l(a,g),c&&!h&&!b.exact||(!c||b.exact)&&!p(h,n(k[g],d))))return}else for(g=0;g<k.length&&!("attributes"===f?t.getAttrib(a,k[g]):l(a,k[g]));g++);return b}var f=g(b),k;if(f&&a)for(k=0;k<f.length;k++)if(b=f[k],h(a,b)&&e(a,b,"attributes")&&e(a,b,"styles")){if(f=b.classes)for(k=0;k<f.length;k++)if(!t.hasClass(a,f[k]))return;return b}}function f(a,d,c){function e(c){c=t.getParent(c,function(c){return!!b(c,a,d,!0)});return b(c,a,d)}var f;if(c)return e(c);c=B.getNode();
if(e(c))return F;f=B.getStart();return f!=c&&e(f)?F:H}function h(a,b){if(p(a,b.inline)||p(a,b.block))return F;if(b.selector)return t.is(a,b.selector)}function p(a,b){a=a||"";b=b||"";a=""+(a.nodeName||a);b=""+(b.nodeName||b);return a.toLowerCase()==b.toLowerCase()}function l(a,b){var d=t.getStyle(a,b);if("color"==b||"backgroundColor"==b)d=t.toHex(d);"fontWeight"==b&&700==d&&(d="bold");return""+d}function n(a,b){"string"!=typeof a?a=a(b):b&&(a=a.replace(/%(\w+)/g,function(a,d){return b[d]||a}));return a}
function k(a){return a&&3===a.nodeType&&/^([\t \r\n]+|)$/.test(a.nodeValue)}function m(a,b,d){b=t.create(b,d);a.parentNode.insertBefore(b,a);b.appendChild(a);return b}function q(a,b,d){function c(a){var d,e,j;d=e=a?f:h;j=a?"previousSibling":"nextSibling";root=t.getRoot();if(3==d.nodeType&&!k(d)&&(a?0<g:i<d.nodeValue.length))return d;for(;;){if(!b[0].block_expand&&D(e))return e;for(a=e[j];a;a=a[j])if(!r(a)&&!k(a))return e;if(e.parentNode==root){d=e;break}e=e.parentNode}return d}function e(a,b){for(b===
N&&(b=3===a.nodeType?a.length:a.childNodes.length);a&&a.hasChildNodes();)(a=a.childNodes[b])&&(b=3===a.nodeType?a.length:a.childNodes.length);return{node:a,offset:b}}var f=a.startContainer,g=a.startOffset,h=a.endContainer,i=a.endOffset,l;1==f.nodeType&&f.hasChildNodes()&&(l=f.childNodes.length-1,f=f.childNodes[g>l?l:g],3==f.nodeType&&(g=0));1==h.nodeType&&h.hasChildNodes()&&(l=h.childNodes.length-1,h=h.childNodes[i>l?l:i-1],3==h.nodeType&&(i=h.nodeValue.length));if(r(f.parentNode)||r(f))f=r(f)?f:
f.parentNode,f=f.nextSibling||f,3==f.nodeType&&(g=0);if(r(h.parentNode)||r(h))h=r(h)?h:h.parentNode,h=h.previousSibling||h,3==h.nodeType&&(i=h.length);if(b[0].inline){if(a.collapsed){var n=function(a,b,c){function e(a,b){var f,g;g=a.nodeValue;typeof b=="undefined"&&(b=c?g.length:0);if(c){f=g.lastIndexOf(" ",b);g=g.lastIndexOf(" ",b);f=f>g?f:g;f!==-1&&!d&&f++}else{f=g.indexOf(" ",b);g=g.indexOf(" ",b);f=f!==-1&&(g===-1||f<g)?f:g}return f}var f,g;if(a.nodeType===3){b=e(a,b);if(b!==-1)return{container:a,
offset:b};g=a}for(a=new G(a,t.getParent(a,D)||j.getBody());f=a[c?"prev":"next"]();)if(f.nodeType===3){g=f;b=e(f);if(b!==-1)return{container:f,offset:b}}else if(D(f))break;if(g){b=c?0:g.length;return{container:g,offset:b}}};if(l=n(f,g,!0))f=l.container,g=l.offset;if(l=n(h,i))h=l.container,i=l.offset}l=e(h,i);if(l.node){for(;l.node&&0===l.offset&&l.node.previousSibling;)l=e(l.node.previousSibling);l.node&&(0<l.offset&&3===l.node.nodeType&&" "===l.node.nodeValue.charAt(l.offset-1))&&1<l.offset&&(h=l.node,
h.splitText(l.offset-1))}}if(b[0].inline||b[0].block_expand){if(!b[0].inline||3!=f.nodeType||0===g)f=c(!0);if(!b[0].inline||3!=h.nodeType||i===h.nodeValue.length)h=c()}b[0].selector&&(b[0].expand!==H&&!b[0].inline)&&(l=function(d,c){var e,f,g,h;d.nodeType==3&&(d.nodeValue.length==0&&d[c])&&(d=d[c]);e=t.getParents(d,void 0,t.getRoot());for(f=0;f<e.length;f++)for(g=0;g<b.length;g++){h=b[g];if(!("collapsed"in h&&h.collapsed!==a.collapsed)&&t.is(e[f],h.selector))return e[f]}return d},f=l(f,"previousSibling"),
h=l(h,"nextSibling"));if(b[0].block||b[0].selector)l=function(a,d){var c;if(a==t.getRoot())return a;b[0].wrapper||(c=t.getParent(a,b[0].block));c||(c=t.getParent(a.nodeType==3?a.parentNode:a,D));c&&b[0].wrapper&&(c=t.getParents(c,"ul,ol",t.getRoot()).reverse()[0]||c);if(!c)for(c=a;c[d]&&!D(c[d]);){c=c[d];if(p(c,"br"))break}return c||a},f=l(f,"previousSibling"),h=l(h,"nextSibling"),b[0].block&&(D(f)||(f=c(!0)),D(h)||(h=c()));1==f.nodeType&&(g=E(f),f=f.parentNode);1==h.nodeType&&(i=E(h)+1,h=h.parentNode);
return{startContainer:f,startOffset:g,endContainer:h,endOffset:i}}function o(a,b,d,c){var f,g,k;if(!h(d,a))return H;if("all"!=a.remove){y(a.styles,function(a,e){a=n(a,b);"number"===typeof e&&(e=a,c=0);(!c||p(l(c,e),a))&&t.setStyle(d,e,"");k=1});k&&""==t.getAttrib(d,"style")&&(d.removeAttribute("style"),d.removeAttribute("data-mce-style"));y(a.attributes,function(a,e){var f,a=n(a,b);if(typeof e==="number"){e=a;c=0}if(!c||p(t.getAttrib(c,e),a)){if(e=="class")if(a=t.getAttrib(d,e)){f="";y(a.split(/\s+/),
function(a){/mce\w+/.test(a)&&(f=f+((f?" ":"")+a))});if(f){t.setAttrib(d,e,f);return}}e=="class"&&d.removeAttribute("className");M.test(e)&&d.removeAttribute("data-mce-"+e);d.removeAttribute(e)}});y(a.classes,function(a){a=n(a,b);(!c||t.hasClass(c,a))&&t.removeClass(d,a)});g=t.getAttribs(d);for(f=0;f<g.length;f++)if(0!==g[f].nodeName.indexOf("_"))return H}if("none"!=a.remove){f=d.parentNode;var j;a.block&&(J?f==t.getRoot()&&(!a.list_block||!p(d,a.list_block))&&y(e.grep(d.childNodes),function(a){C(J,
a.nodeName.toLowerCase())?j?j.appendChild(a):j=m(a,J):j=0}):(g=function(a,b,d){a=s(a,b,d);return!a||"BR"==a.nodeName||D(a)},D(d)&&!D(f)&&(!g(d,H)&&!g(d.firstChild,F,1)&&d.insertBefore(t.create("br"),d.firstChild),!g(d,F)&&!g(d.lastChild,H,1)&&d.appendChild(t.create("br")))));(!a.selector||!a.inline||p(a.inline,d))&&t.remove(d,1);return F}}function s(a,b,d){if(a){b=b?"nextSibling":"previousSibling";for(a=d?a:a[b];a;a=a[b])if(1==a.nodeType||!k(a))return a}}function r(a){return a&&1==a.nodeType&&"bookmark"==
a.getAttribute("data-mce-type")}function A(a,b){var d,c;if(a&&b){c=function(a,b){for(d=a;d&&!(3==d.nodeType&&0!==d.nodeValue.length);d=d[b])if(1==d.nodeType&&!r(d))return d;return a};a=c(a,"previousSibling");b=c(b,"nextSibling");c=a;var f=b,g=function(a){var b={};y(t.getAttribs(a),function(d){d=d.nodeName.toLowerCase();0!==d.indexOf("_")&&"style"!==d&&(b[d]=t.getAttrib(a,d))});return b},h=function(a,b){var d,c;for(c in a)if(a.hasOwnProperty(c)){d=b[c];if(d===N||a[c]!=d)return H;delete b[c]}for(c in b)if(b.hasOwnProperty(c))return H;
return F};if(c.nodeName!=f.nodeName||!h(g(c),g(f))||!h(t.parseStyle(t.getAttrib(c,"style")),t.parseStyle(t.getAttrib(f,"style")))?H:F){for(d=a.nextSibling;d&&d!=b;)c=d,d=d.nextSibling,a.appendChild(c);t.remove(b);y(e.grep(b.childNodes),function(b){a.appendChild(b)});return a}}return b}function v(a,b){var d,c,e;d=a[b?"startContainer":"endContainer"];c=a[b?"startOffset":"endOffset"];1==d.nodeType&&(e=d.childNodes.length-1,!b&&c&&c--,d=d.childNodes[c>e?e:c]);3===d.nodeType&&(b&&c>=d.nodeValue.length)&&
(d=(new G(d,j.getBody())).next()||d);3===d.nodeType&&(!b&&0==c)&&(d=(new G(d,j.getBody())).prev()||d);return d}function u(c,f,h){function k(a){var b=t.create("span",{id:o,"data-mce-bogus":!0,style:s?"color:red":""});a&&b.appendChild(j.getDoc().createTextNode(m));return b}function i(a,b){for(;a;){if(3===a.nodeType&&a.nodeValue!==m||1<a.childNodes.length)return!1;b&&1===a.nodeType&&b.push(a);a=a.firstChild}return!0}function l(a){for(;a;){if(a.id===o)return a;a=a.parentNode}}function n(a){var b;if(a){b=
new G(a,a);for(a=b.current();a;a=b.next())if(3===a.nodeType)return a}}function p(a,b){var d,c;if(a)c=B.getRng(!0),i(a)?(!1!==b&&(c.setStartBefore(a),c.setEndBefore(a)),t.remove(a)):(d=n(a),d.nodeValue.charAt(0)===L&&d.deleteData(0,1),t.remove(a,1)),B.setRng(c);else if(a=l(B.getStart()),!a)for(;a=t.get(o);)p(a,!1)}var m,o="_mce_caret",s=j.settings.caret_debug;m=e.isGecko?"​":L;self._hasCaretEvents||(j.onBeforeGetContent.addToTop(function(){var a=[],b;if(i(l(B.getStart()),a))for(b=a.length;b--;)t.setAttrib(a[b],
"data-mce-bogus","1")}),e.each(["onMouseUp","onKeyUp"],function(a){j[a].addToTop(function(){p()})}),j.onKeyDown.addToTop(function(a,b){var d=b.keyCode;(8==d||37==d||39==d)&&p(l(B.getStart()))}),self._hasCaretEvents=!0);if("apply"==c){var r,v,u,x;r=B.getRng(!0);c=r.startOffset;x=r.startContainer.nodeValue;(v=l(B.getStart()))&&(u=n(v));if(x&&0<c&&c<x.length&&/\w/.test(x.charAt(c))&&/\w/.test(x.charAt(c-1)))v=B.getBookmark(),r.collapse(!0),r=q(r,g(f)),r=K.split(r),a(f,h,r),B.moveToBookmark(v);else{if(!v||
u.nodeValue!==m)v=k(!0),u=v.firstChild,r.insertNode(v),c=1;a(f,h,v);B.setCursorLocation(u,c)}}else{x=B.getRng(!0);var z,y,c=[];z=x.startContainer;y=x.startOffset;u=z;if(3==z.nodeType){if(y!=z.nodeValue.length||z.nodeValue===m)v=!0;u=u.parentNode}for(;u;){if(b(u,f,h)){r=u;break}u.nextSibling&&(v=!0);c.push(u);u=u.parentNode}if(r)if(v)r=B.getBookmark(),x.collapse(!0),x=q(x,g(f),!0),x=K.split(x),d(f,h,x),B.moveToBookmark(r);else{u=h=k();for(f=c.length-1;0<=f;f--)u.appendChild(c[f].cloneNode(!1)),u=u.firstChild;
u.appendChild(t.doc.createTextNode(m));u=u.firstChild;t.insertAfter(h,r);B.setCursorLocation(u,1)}}}function x(a){var b=a.startContainer,d=a.startOffset,c;3==b.nodeType&&d>=b.nodeValue.length&&(b=b.parentNode,d=E(b)+1);if(1==b.nodeType){c=b.childNodes;b=c[Math.min(d,c.length-1)];b=new G(b,t.getParent(b,t.isBlock));d>c.length-1&&b.next();for(d=b.current();d;d=b.next())if(3==d.nodeType&&!k(d)){b=t.create("a",null,L);d.parentNode.insertBefore(b,d);a.setStart(d,0);B.setRng(a);t.remove(b);break}}}var z=
{},y=e.each,t=j.dom,B=j.selection,G=e.dom.TreeWalker,K=new e.dom.RangeUtils(t),C=j.schema.isValidChild,D=t.isBlock,J=j.settings.forced_root_block,E=t.nodeIndex,L="﻿",M=/^(src|href|style)$/,H=!1,F=!0,N,O=function(a){var b;j.dom.getParent(a,function(a){return(b=j.dom.getStyle(a,"text-decoration"))&&"none"!==b});return b},P=function(a){var b;1===a.nodeType&&(a.parentNode&&1===a.parentNode.nodeType)&&(b=O(a.parentNode),j.dom.getStyle(a,"color")&&b?j.dom.setStyle(a,"text-decoration",b):j.dom.getStyle(a,
"textdecoration")===b&&j.dom.setStyle(a,"text-decoration",null))};e.extend(this,{get:g,register:c,apply:a,remove:d,toggle:function(b,c,e){var h=g(b);f(b,c,e)&&(!("toggle"in h[0])||h[0].toggle)?d(b,c,e):a(b,c,e)},match:f,matchAll:function(a,d){var c,e=[],f={};c=B.getStart();t.getParent(c,function(c){var g,h;for(g=0;g<a.length;g++)h=a[g],!f[h]&&b(c,h,d)&&(f[h]=!0,e.push(h))});return e},matchNode:b,canApply:function(a){var a=g(a),b,d,c,e;if(a){b=B.getStart();b=t.getParents(b,void 0,t.getRoot());for(c=
a.length-1;0<=c;c--){e=a[c].selector;if(!e)return F;for(d=b.length-1;0<=d;d--)if(t.is(b[d],e))return F}}return H}})}})(tinymce);
tinymce.onAddEditor.add(function(e,j){var i,g,c,a=j.settings;if(a.inline_styles){g=e.explode(a.font_size_legacy_values);var d=function(a,b){e.each(b,function(b,d){b&&c.setStyle(a,d,b)});c.rename(a,"span")};i={font:function(a,b){d(b,{backgroundColor:b.style.backgroundColor,color:b.color,fontFamily:b.face,fontSize:g[parseInt(b.size)-1]})},strike:function(a,b){d(b,{textDecoration:"line-through"})}};var b=function(b,d){c=b.dom;a.convert_fonts_to_spans&&e.each(c.select("font,strike",d.node),function(a){i[a.nodeName.toLowerCase()](j.dom,
a)})};j.onPreProcess.add(b);j.onSetContent.add(b);j.onInit.add(function(){j.selection.onSetContent.add(b)})}});
(function(e){function j(a,b){return a.getParam(b,c[b])}function i(a,b){a.is("ul.inline-task-list")?b.each(function(){var a=e(this);a.attr("data-inline-task-id")||a.attr("data-inline-task-id","")}):b.removeAttr("data-inline-task-id").removeAttr("data-pasted-task")}var g=tinymce.each,c={paste_auto_cleanup_on_paste:!0,paste_enable_default_filters:!0,paste_block_drop:!1,paste_retain_style_properties:"none",paste_strip_class_attributes:"mso",paste_remove_spans:!1,paste_remove_styles:!1,paste_remove_styles_if_webkit:!1,
paste_convert_middot_lists:!0,paste_convert_headers_to_strong:!1,paste_dialog_width:"450",paste_dialog_height:"400",paste_text_use_dialog:!1,paste_text_sticky:!1,paste_text_sticky_default:!1,paste_text_notifyalways:!1,paste_text_linebreaktype:"combined",paste_text_replacements:[[/\u2026/g,"..."],[/[\x93\x94\u201c\u201d]/g,'"'],[/[\x60\x91\x92\u2018\u2019]/g,"'"]]},a;tinymce.create("tinymce.plugins.AtlassianEditorPaste",{init:function(d,b){function c(a,b){var e=d.dom,f;l.onPreProcess.dispatch(l,a);
a.node=e.create("div",0,a.content);tinymce.isGecko&&(f=d.selection.getRng(!0),f.startContainer==f.endContainer&&3===f.startContainer.nodeType&&1===a.node.childNodes.length&&(/^(p|h[1-6]|pre)$/i.test(a.node.firstChild.nodeName)&&-1===a.content.indexOf("__MCE_ITEM__"))&&e.remove(a.node.firstChild,!0));l.onPostProcess.dispatch(l,a);a.content=d.serializer.serialize(a.node,{getInner:1,forced_root_block:""});!b&&d.pasteAsPlainText?(l._insertPlainText(a.content),j(d,"paste_text_sticky")||(d.pasteAsPlainText=
!1,d.controlManager.setActive("pastetext",!1))):l._insert(a.content);tinymce.isGecko&&d.dom.getRoot().focus()}function h(a){if(a){var b=a.firstChild;b&&("DIV"===b.nodeName&&b.style.marginTop&&b.style.backgroundColor)&&d.dom.remove(b,1);tinymce.isWebKit&&g(d.dom.select("span.Apple-style-span",a),function(a){d.dom.removeClass(a,"Apple-style-span")});tinymce.isWebKit&&g(d.dom.select("br.Apple-interchange-newline",a),function(a){d.dom.remove(a)});g(d.dom.select("br[data-mce-bogus]",a),function(a){d.dom.remove(a)});
g(d.dom.select("meta[charset]",a),function(a){d.dom.remove(a)})}}function i(a){var b,j,p,o,s=d.selection,r=d.dom;p=d.getBody();var A,v;d.undoManager.add();if(function(a){if(!a.clipboardData||-1==e.inArray("text/html",a.clipboardData.types||[]))return!1;var a=a.clipboardData.getData("text/html"),b;if(!a||!e.browser.webkit)return!1;b=l.repair(a);if(b==a)return!1;a=l.parse(b,d.getDoc());b=e("<div></div>");b.append(a);h(b[0]);c({content:b.html()});return!0}(a))e.Event(a).preventDefault();else{if(a.clipboardData||
r.doc.dataTransfer)if(A=(a.clipboardData||r.doc.dataTransfer).getData("Text"),d.pasteAsPlainText){a.preventDefault();c({content:r.encode(A).replace(/\r?\n/g,"<br />")});return}if(!r.get("_mcePaste"))if(v=e(d.selection.getStart()).closest("[data-macro-body-type='PLAIN_TEXT']").length,o=p,"true"!=p.contentEditable&&(o=r.getParent(d.selection.getStart(),'[contenteditable="true"]',p)),b=r.add(o,"div",{id:"_mcePaste","class":"mcePaste","data-mce-bogus":"1"},"﻿﻿"),p!=d.getDoc().body?p=r.getPos(d.selection.getStart(),
p).y:(p=r.getViewPort(d.getWin()),p=p.y+parseInt(p.h/2,10)),r.setStyles(b,{position:"absolute",left:tinymce.isGecko?-40:0,top:p-25,width:1,height:1,overflow:"hidden"}),tinymce.isIE)if(o=s.getRng(),p=r.doc.body.createTextRange(),p.moveToElementText(b),p.execCommand("Paste"),r.remove(b),"﻿﻿"===b.innerHTML)d.execCommand("mcePasteWord"),a.preventDefault();else return s.setRng(o),s.setContent(""),setTimeout(function(){c({content:b.innerHTML})},0),tinymce.dom.Event.cancel(a);else{var u=function(a){a.preventDefault()};
r.bind(d.getDoc(),"mousedown",u);r.bind(d.getDoc(),"keydown",u);j=d.selection.getRng();b=b.firstChild;p=d.getDoc().createRange();p.setStart(b,0);p.setEnd(b,2);s.setRng(p);window.setTimeout(function(){var a="",b;if(r.select("div.mcePaste > div.mcePaste").length)a=v?"<p>"+r.encode(A).replace(/\r?\n/g,"<br />")+"</p>":"<p>"+r.encode(A).replace(/\r?\n\r?\n/g,"</p><p>").replace(/\r?\n/g,"<br />")+"</p>";else{b=r.select("div.mcePaste");g(b,function(b){h(b);b.parentNode.className!="mcePaste"&&(a=a+b.innerHTML)})}g(r.select("div.mcePaste"),
function(a){r.remove(a)});j&&s.setRng(j);c({content:a});r.unbind(d.getDoc(),"mousedown",u);r.unbind(d.getDoc(),"keydown",u)},0)}}}var l=this;l.editor=d;l.url=b;l.onPreProcess=new tinymce.util.Dispatcher(l);l.onPostProcess=new tinymce.util.Dispatcher(l);l.onPreProcess.add(l._preProcess);l.onPostProcess.add(l._postProcess);l.onPreProcess.add(function(a,b){d.execCallback("paste_preprocess",a,b)});l.onPostProcess.add(function(a,b){d.execCallback("paste_postprocess",a,b)});a=[{repair:function(a){var b=
/<meta charset='utf-8'>(<td.*<\/td>)<br class="Apple-interchange-newline">/.exec(a);return b?'<table class="confluenceTable"><tbody><tr>'+b[1]+"</tr></tbody></table>":a}},{repair:function(a){var b=/<meta charset='utf-8'>(<tr.*<\/tr>)<br class="Apple-interchange-newline">/.exec(a);return b?'<table class="confluenceTable"><tbody>'+b[1]+"</tbody></table>":a}}];d.onKeyDown.addToTop(function(a,b){if((tinymce.isMac?b.metaKey:b.ctrlKey)&&!b.shiftKey&&86===b.keyCode||b.shiftKey&&45===b.keyCode)return!1});
d.pasteAsPlainText=j(d,"paste_text_sticky_default");d.addCommand("mceInsertClipboardContent",function(a,b){c(b,!0)});j(d,"paste_text_use_dialog")||d.addCommand("mcePasteText",function(){var a=tinymce.util.Cookie;d.pasteAsPlainText=!d.pasteAsPlainText;d.controlManager.setActive("pastetext",d.pasteAsPlainText);d.pasteAsPlainText&&!a.get("tinymcePasteText")&&(j(d,"paste_text_sticky")?d.windowManager.alert(d.translate("paste.plaintext_mode_sticky")):d.windowManager.alert(d.translate("paste.plaintext_mode")),
j(d,"paste_text_notifyalways")||a.set("tinymcePasteText","1",new Date((new Date).getFullYear()+1,12,31)))});d.addButton("pastetext",{title:"paste.paste_text_desc",cmd:"mcePasteText"});d.addButton("selectall",{title:"paste.selectall_desc",cmd:"selectall"});j(d,"paste_auto_cleanup_on_paste")&&(tinymce.isOpera||/Firefox\/2/.test(navigator.userAgent)?d.onKeyDown.addToTop(function(a,b){((tinymce.isMac?b.metaKey:b.ctrlKey)&&86===b.keyCode||b.shiftKey&&45===b.keyCode)&&i(b)}):d.onPaste.addToTop(function(a,
b){return i(b)}));d.onInit.add(function(){d.controlManager.setActive("pastetext",d.pasteAsPlainText);j(d,"paste_block_drop")&&d.dom.bind(d.getBody(),"dragend dragover draggesture dragdrop drop drag".split(" "),function(a){a.preventDefault();a.stopPropagation();return false})});d.onSaveContent.add(function(a,b){var d=e("<div/>").html(b.content);e('ul.inline-task-list > li[data-pasted-task="true"]',d).each(function(){var a=e(this),b=a.attr("data-inline-task-id");b&&1<d.find('ul.inline-task-list > li[data-inline-task-id="'+
b+'"]').size()&&a.attr("data-inline-task-id","")});b.content=d.html()});l._legacySupport()},getInfo:function(){return{longname:"AtlassianEditorPaste",author:"Atlassian",authorurl:"http://www.atlassian.com",infourl:"http://www.atlassian.com",version:tinymce.majorVersion+"."+tinymce.minorVersion}},_preProcess:function(a,b){function c(a){g(a,function(a){i=a.constructor==RegExp?i.replace(a,""):i.replace(a[0],a[1])})}var e=this.editor,i=b.content,l=tinymce.grep,n=tinymce.explode,k=tinymce.trim,m,q;if(!1!=
e.settings.paste_enable_default_filters){tinymce.isIE&&9<=document.documentMode&&(c([[/(?:<br>&nbsp;[\s\r\n]+|<br>)*(<\/?(h[1-6r]|p|div|address|pre|form|table|tbody|thead|tfoot|th|tr|td|li|ol|ul|caption|blockquote|center|dl|dt|dd|dir|fieldset)[^>]*>)(?:<br>&nbsp;[\s\r\n]+|<br>)*/g,"$1"]]),c([[/<br><br>/g,"<BR><BR>"],[/<br>/g," "],[/<BR><BR>/g,"<br>"]]));if(/class="?Mso|style="[^"]*\bmso-|w:WordDocument/i.test(i)||b.wordContent){b.wordContent=!0;c([/^\s*(&nbsp;)+/gi,/(&nbsp;|<br[^>]*>)+\s*$/gi]);j(e,
"paste_convert_headers_to_strong")&&(i=i.replace(/<p [^>]*class="?MsoHeading"?[^>]*>(.*?)<\/p>/gi,"<p><strong>$1</strong></p>"));j(e,"paste_convert_middot_lists")&&c([[/<\!--\[if !supportLists\]--\>/gi,"$&__MCE_ITEM__"],[/(<span[^>]+(?:mso-list:|:\s*symbol)[^>]+>)/gi,"$1__MCE_ITEM__"],[/(<p[^>]+(?:MsoListParagraph)[^>]+>)/gi,"$1__MCE_ITEM__"]]);c([/<\!--[\s\S]+?--\>/gi,/<(!|script[^>]*>.*?<\/script(?=[>\s])|\/?(\?xml(:\w+)?|img|meta|link|style|\w:\w+)(?=[\s\/>]))[^>]*>/gi,[/<(\/?)s>/gi,"<$1strike>"],
[/&nbsp;/gi," "]]);do m=i.length,i=i.replace(/(<[a-z][^>]*\s)(?:id|name|language|type|on\w+|\w+:\w+)=(?:"[^"]*"|\w+)\s?/gi,"$1");while(m!=i.length);0===j(e,"paste_retain_style_properties").replace(/^none$/i,"").length?i=i.replace(/<\/?span[^>]*>/gi,""):c([[/<span\s+style\s*=\s*"\s*mso-spacerun\s*:\s*yes\s*;?\s*"\s*>([\s\u00a0]*)<\/span>/gi,function(a,b){return b.length>0?b.replace(/./," ").slice(Math.floor(b.length/2)).split("").join(" "):""}],[/(<[a-z][^>]*)\sstyle="([^"]*)"/gi,function(a,b,d){var c=
[],e=0,a=n(k(d).replace(/&quot;/gi,"'"),";");g(a,function(a){function b(a){return a+(a!=="0"&&/\d$/.test(a))?"px":""}var d,f=n(a,":");if(f.length===2){a=f[0].toLowerCase();d=f[1].toLowerCase();switch(a){case "mso-padding-alt":case "mso-padding-top-alt":case "mso-padding-right-alt":case "mso-padding-bottom-alt":case "mso-padding-left-alt":case "mso-margin-alt":case "mso-margin-top-alt":case "mso-margin-right-alt":case "mso-margin-bottom-alt":case "mso-margin-left-alt":case "mso-table-layout-alt":case "mso-height":case "mso-width":case "mso-vertical-align-alt":c[e++]=
a.replace(/^mso-|-alt$/g,"")+":"+b(d);return;case "horiz-align":c[e++]="text-align:"+d;return;case "vert-align":c[e++]="vertical-align:"+d;return;case "font-color":case "mso-foreground":c[e++]="color:"+d;return;case "mso-background":case "mso-highlight":c[e++]="background:"+d;return;case "mso-default-height":c[e++]="min-height:"+b(d);return;case "mso-default-width":c[e++]="min-width:"+b(d);return;case "mso-padding-between-alt":c[e++]="border-collapse:separate;border-spacing:"+b(d);return;case "text-line-through":if(d==
"single"||d=="double")c[e++]="text-decoration:line-through";return;case "mso-zero-height":d=="yes"&&(c[e++]="display:none");return}/^(mso|column|font-emph|lang|layout|line-break|list-image|nav|panose|punct|row|ruby|sep|size|src|tab-|table-border|text-(?!align|decor|indent|trans)|top-bar|version|vnd|word-break)/.test(a)||(c[e++]=a+":"+f[1])}});return e>0?b+' style="'+c.join(";")+'"':b}]])}j(e,"paste_convert_headers_to_strong")&&c([[/<h[1-6][^>]*>/gi,"<p><strong>"],[/<\/h[1-6][^>]*>/gi,"</strong></p>"]]);
c([[/Version:[\d.]+\nStartHTML:\d+\nEndHTML:\d+\nStartFragment:\d+\nEndFragment:\d+/gi,""]]);q=j(e,"paste_strip_class_attributes");"none"!==q&&(m=function(a,b){if(q==="all")return"";var d=l(n(b.replace(/^(["'])(.*)\1$/,"$2")," "),function(a){return/^(?!mso)/i.test(a)});return d.length?' class="'+d.join(" ")+'"':""},i=i.replace(/ class="([^"]+)"/gi,m),i=i.replace(/ class=([\-\w]+)/gi,m));j(e,"paste_remove_spans")&&(i=i.replace(/<\/?span[^>]*>/gi,""));b.content=i}},_postProcess:function(a,b){var c=
this.editor,e=c.dom,i;!1!=c.settings.paste_enable_default_filters&&(b.wordContent&&(g(e.select("a",b.node),function(a){(!a.href||-1!==a.href.indexOf("#_Toc"))&&e.remove(a,1)}),j(c,"paste_convert_middot_lists")&&this._convertLists(a,b),i=j(c,"paste_retain_style_properties"),tinymce.is(i,"string")&&("all"!==i&&"*"!==i)&&(i=tinymce.explode(i.replace(/^none$/i,"")),g(e.select("*",b.node),function(a){var b={},d=0,c,f,g;if(i)for(c=0;c<i.length;c++)if(f=i[c],g=e.getStyle(a,f))b[f]=g,d++;e.setAttrib(a,"style",
"");i&&0<d?e.setStyles(a,b):"SPAN"===a.nodeName&&!a.className&&e.remove(a,!0)}))),j(c,"paste_remove_styles")||j(c,"paste_remove_styles_if_webkit")&&tinymce.isWebKit?g(e.select("*[style]",b.node),function(a){a.removeAttribute("style");a.removeAttribute("data-mce-style")}):tinymce.isWebKit&&g(e.select("*",b.node),function(a){a.removeAttribute("data-mce-style")}))},_convertLists:function(a,b){var c=a.editor.dom,e,j,i=-1,n,k=[],m,q;g(c.select("p",b.node),function(a){var b,d="",q;for(b=a.firstChild;b&&
3===b.nodeType;b=b.nextSibling)d+=b.nodeValue;d=a.innerHTML.replace(/<\/?\w+[^>]*>/gi,"").replace(/&nbsp;/g," ");/^(__MCE_ITEM__)+[\u2022\u00b7\u00a7\u00d8o\u25CF]\s*\u00a0*/.test(d)&&(q="ul");/^__MCE_ITEM__\s*\w+\.\s*\u00a0+/.test(d)&&(q="ol");q?(n=parseFloat(a.style.marginLeft||0),n>i&&k.push(n),!e||q!=m?(e=c.create(q),c.insertAfter(e,a)):n>i?e=j.appendChild(c.create(q)):n<i&&(b=tinymce.inArray(k,n),d=c.getParents(e.parentNode,q),e=d[d.length-1-b]||e),g(c.select("span",a),function(a){var b=a.innerHTML.replace(/<\/?\w+[^>]*>/gi,
"");q=="ul"&&/^__MCE_ITEM__[\u2022\u00b7\u00a7\u00d8o\u25CF]/.test(b)?c.remove(a):/^__MCE_ITEM__[\s\S]*\w+\.(&nbsp;|\u00a0)*\s*/.test(b)&&c.remove(a)}),b=a.innerHTML,b="ul"==q?a.innerHTML.replace(/__MCE_ITEM__/g,"").replace(/^[\u2022\u00b7\u00a7\u00d8o\u25CF]\s*(&nbsp;|\u00a0)+\s*/,""):a.innerHTML.replace(/__MCE_ITEM__/g,"").replace(/^\s*\w+\.(&nbsp;|\u00a0)+\s*/,""),j=e.appendChild(c.create("li",0,b)),c.remove(a),i=n,m=q):e=i=0});q=b.node.innerHTML;-1!==q.indexOf("__MCE_ITEM__")&&(b.node.innerHTML=
q.replace(/__MCE_ITEM__/g,""))},_insert:function(a,b){var c=this.editor,e=c.selection.getRng(!0),g,i,a=this._applyOnBeforeSetContentListeners(c,a);i=this.parse(a,c.getDoc());(g=this._getClipboardInserter(c,e,i))?(g.insert(c,e,i),c.selection.onSetContent.dispatch(c.selection,{content:a,format:"html"}),c.addVisual()):(!c.selection.isCollapsed()&&e.startContainer!=e.endContainer&&c.execCommand("mceDelete",!1,null,{skip_undo:!0}),c.execCommand("mceInsertContent",!1,a,{skip_undo:b}))},_getClipboardInserter:function(a,
b,c){var g;e.each(this.clipboardInserters,function(e,i){if(i.shouldInsert(a,b,c))return g=i,!1});return g},clipboardInserters:[{shouldInsert:function(a,b,c){a=3===b.startContainer.nodeType?b.startContainer.parentNode:b.startContainer;return(tinymce.isIE?"LI"===a.nodeName&&0===a.childNodes.length:"LI"===a.nodeName&&1===a.childNodes.length&&"BR"===a.firstChild.nodeName)&&c.length===c.filter("ol,ul").length&&0<c.children("li").length},insert:function(a,b,c){b=e(3===b.startContainer.nodeType?b.startContainer.parentNode:
b.startContainer);c=c.children();a.undoManager.beforeChange();a.undoManager.add();i(b.parent(),c);b.replaceWith(c);a.selection.select(c.last()[0],!0);a.selection.collapse();a.undoManager.add()}},{shouldInsert:function(a,b,c){!b.collapsed||0!=b.startOffset?b=!1:(a=e(b.startContainer).closest("ol, ul",a.getBody()),0===a.length?b=!1:(b=(new tinymce.dom.TreeWalker(b.startContainer,a[0])).prev(!0),b=void 0===b||e(b).is("li")));return b&&c.length===c.filter("ol,ul").length&&0<c.children("li").length},insert:function(a,
b,c){b=e(b.startContainer).closest("li",a.getBody());c=c.children();a.undoManager.beforeChange();a.undoManager.add();i(b.parent(),c);b.before(c);a.selection.select(b[0],!0);a.selection.collapse(!0);a.undoManager.add()}},{shouldInsert:function(a,b,c){!b.collapsed||3===b.startContainer.nodeType&&b.startOffset!=b.startContainer.nodeValue.length||1===b.startContainer.nodeType&&b.startOffset!=b.startContainer.childNodes.length?b=!1:(a=e(b.startContainer).closest("ol, ul",a.getBody()),0===a.length?b=!1:
(b=(new tinymce.dom.TreeWalker(b.startContainer,a[0])).next(!0),b=void 0===b||e(b).is("li")));return b&&c.length===c.filter("ol,ul").length&&0<c.children("li").length},insert:function(a,b,c){b=e(b.startContainer).closest("li",a.getBody());c=c.children();a.undoManager.beforeChange();a.undoManager.add();i(b.parent(),c);b.after(c);a.selection.select(c.last()[0],!0);a.selection.collapse(!1);a.undoManager.add()}},{shouldInsert:function(a,b,c){return b.collapsed||!e(b.commonAncestorContainer).is("table.confluenceTable > tbody, table.confluenceTable > tbody > tr")?
!1:c.is("table:not(.wysiwyg-macro)")},insert:function(a,b,c){function g(a,b){for(var d=a.shift(),c=b.shift();d&&c;d=a.shift(),c=b.shift())e(c).html(e(d).html())}var i=0<c.children("tbody").length?c.children("tbody").children("tr"):c.children("tr"),j=i.children("td, th"),n=e(".mceSelected",a.getDoc()),c=n.parent();a.undoManager.beforeChange();a.undoManager.add();if(1===c.length)g(e.makeArray(j),e.makeArray(n));else{i=e.makeArray(i);c=e.makeArray(c);j=i.shift();for(n=c.shift();j&&n;j=i.shift(),n=c.shift())g(e.makeArray(e(j).children()),
e.makeArray(e(n).children()))}a.selection.setRng(b);a.undoManager.add()}},{shouldInsert:function(a,b,c){a=e(b.startContainer).closest("td.confluenceTd, th.confluenceTh",".mceContent");if(0===a.length)return!1;a=a.closest("table.confluenceTable",".mceContent");if(!(0===a.length||0===a.children("tbody").length)){if(!c.is("table:not(.wysiwyg-macro)"))return!1;var g=!1;a.find("*[colspan], *[rowspan]").each(function(a,b){if(1<e(b).attr("rowspan")||1<e(b).attr("colspan"))return g=!0,!1});return!g}},insert:function(a,
b,c){var b=e(b.startContainer).closest("td.confluenceTd, th.confluenceTh",".mceContent"),g=b.closest("table.confluenceTable",".mceContent"),c=0<c.children("tbody").length?c.children("tbody").children("tr"):c.children("tr"),i=g.children("tbody").children("tr"),j=c.length,n=c.first().children("td, th").length,k=i.length,m=i.first().children("td, th").length,q=b.parent().index(),o=b.index();a.undoManager.beforeChange();a.undoManager.add();var s=o+n-m,j=q+j-k,s=0>s?0:s,j=0>j?0:j;i.each(function(a,b){for(var d=
e(b),c=d.children().last(),f=0;f<s;f++)d.append(c.clone().html(tinymce.isIE?"":"<br/>"))});n=i.last();for(i=0;i<j;i++){n=e("<tr></tr>").insertAfter(n);for(k=0;k<m+s;k++)n.append('<td class="confluenceTd">'+(tinymce.isIE?"":"<br/>")+"</td>")}var r=[];g.children("tbody").children("tr").slice(q).each(function(a,b){r.push(e.makeArray(e(b).children("th, td").slice(o)))});var A=[];c.each(function(a,b){A.push(e.makeArray(e(b).children("th, td")))});g=A.shift();for(c=r.shift();g&&c;g=A.shift(),c=r.shift()){m=
g.shift();for(q=c.shift();m&&q;m=g.shift(),q=c.shift())e(q).html(e(m).html())}a.selection.select(b[0],1);a.selection.collapse(!0);a.undoManager.add()}}],_applyOnBeforeSetContentListeners:function(a,b){var c={content:b,format:"html"};a.selection.onBeforeSetContent.dispatch(a.selection,c);return c.content},_insertPlainText:function(a){function b(b){g(b,function(b){a=b.constructor==RegExp?a.replace(b,""):a.replace(b[0],b[1])})}var c=this.editor,e=j(c,"paste_text_linebreaktype"),i=j(c,"paste_text_replacements"),
l=tinymce.is;"string"===typeof a&&0<a.length&&(/<(?:p|br|h[1-6]|ul|ol|dl|table|t[rdh]|div|blockquote|fieldset|pre|address|center)[^>]*>/i.test(a)?b([/[\n\r]+/g]):b([/\r+/g]),b([[/<\/(?:p|h[1-6]|ul|ol|dl|table|div|blockquote|fieldset|pre|address|center)>/gi,"\n\n"],[/<br[^>]*>|<\/tr>/gi,"\n"],[/<\/t[dh]>\s*<t[dh][^>]*>/gi,"\t"],/<[a-z!\/?][^>]*>/gi,[/&nbsp;/gi," "],[/(?:(?!\n)\s)*(\n+)(?:(?!\n)\s)*/gi,"$1"],[/\n{3,}/g,"\n\n"]]),a=c.dom.decode(tinymce.html.Entities.encodeRaw(a)),l(i,"array")?b(i):l(i,
"string")&&b(RegExp(i,"gi")),"none"==e?b([[/\n+/g," "]]):"br"==e?b([[/\n/g,"<br />"]]):"p"==e?b([[/\n+/g,"</p><p>"],[/^(.*<\/p>)(<p>)$/,"<p>$1"]]):b([[/\n\n/g,"</p><p>"],[/^(.*<\/p>)(<p>)$/,"<p>$1"],[/\n/g,"<br />"]]),c.execCommand("mceInsertContent",!1,a))},_legacySupport:function(){var a=this,b=a.editor;b.addCommand("mcePasteWord",function(){b.windowManager.open({file:a.url+"/pasteword.htm",width:parseInt(j(b,"paste_dialog_width")),height:parseInt(j(b,"paste_dialog_height")),inline:1})});j(b,"paste_text_use_dialog")&&
b.addCommand("mcePasteText",function(){b.windowManager.open({file:a.url+"/pastetext.htm",width:parseInt(j(b,"paste_dialog_width")),height:parseInt(j(b,"paste_dialog_height")),inline:1})});b.addButton("pasteword",{title:"paste.paste_word_desc",cmd:"mcePasteWord"})},parse:function(a,b){return"<"===a.charAt(0)&&">"===a.charAt(a.length-1)&&3<=a.length?e(a,b||document):e("<div>"+a+"</div>",b||document).contents()},repair:function(c){if(!c)return c;e.each(a,function(a,e){c=e.repair(c)});return c}});tinymce.PluginManager.add("aePaste",
tinymce.plugins.AtlassianEditorPaste)})($);
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.plugins.tinymce:atlassian-rte-javascript-tinymce-extensions', location = 'jscripts/tiny_mce/themes/atlassian/editor_template.js' */
define("atlassian-tinymce/themes/atlassian/editor_template",["ajs","confluence/legacy","jquery","tinymce","underscore"],function(k,j,g,h,i){return function(){var l=h.DOM,m=h.each,n=h.explode,o=h.extend,e;e=function(a){this.init=this.init(a)};e.INCOMPATIBLE_PLUGINS=["dfe"];e.shouldInit=function(){var a=g("body");return a.hasClass("edit")||a.hasClass("create")||a.hasClass("copy-page")};e.suppressIncompatiblePlugins=function(){for(var a=function(){},b=0,f=e.INCOMPATIBLE_PLUGINS.length;b<f;b++)h.PluginManager.lookup[e.INCOMPATIBLE_PLUGINS[b]]=
a};e.prototype.init=function(a){function b(a){c.toggleToolbarButtons(a,a,a,function(){return!g(this).parent().hasClass("close")})}function f(){var a=m-i.scrollTop(),c=l.offset().top-h.offset().top,b=j.outerHeight(),d=l.outerHeight();j.css("top",c+d+a+o+"px");e.css("padding-top",b+n+"px")}var d=g.ui.keyCode,c=a.plugins.customtoolbar,q=g("#content-title"),h=g("form.editor"),e=g(a.getBody()),i=g(a.getDoc()),j=g("#editor-precursor"),k=g(a.getWin()),l=g("#toolbar"),m=i.scrollTop(),n=parseInt(e.css("padding-top"),
10)+parseInt(e.css("margin-top"),10),o=parseInt(j.css("padding-top"),10),r=window.requestAnimationFrame||window.webkitRequestAnimationFrame;q.on("keydown",function(c){var b=c.keyCode||c.which;if(b===d.ENTER||b===d.DOWN)c.preventDefault(),c.stopPropagation(),a.focus()}).on("focus click",function(){b(!0)});k.on("focus",function(){b(!1)});(function p(){r(p);f()})();e.on("scroll mousewheel",function(){setTimeout(f,0)});return!0};return{Editor:e,ThemeOptions:{controlHandlers:{},controls:{bold:"Bold",italic:"Italic",
underline:"Underline",strikethrough:"Strikethrough",justifyleft:"JustifyLeft",justifycenter:"JustifyCenter",justifyright:"JustifyRight",bullist:"InsertUnorderedList",numlist:"InsertOrderedList",tasklist:"InsertInlineTaskList",outdent:"Outdent",indent:"Indent",cut:"Cut",copy:"Copy",paste:"Paste",undo:"Undo",redo:"Redo",removeformat:"RemoveFormat",sub:"subscript",sup:"superscript",forecolor:"ForeColor",forecolorpicker:"mceForeColor",backcolor:"HiliteColor",backcolorpicker:"mceBackColor",charmap:"mceCharMap",
visualaid:"mceToggleVisualAid",anchor:"mceInsertAnchor",newdocument:"mceNewDocument",blockquote:"mceBlockQuote"},stateControls:"bold italic underline bullist numlist tasklist justifyleft justifycenter justifyright strikethrough sub sup monospace".split(" "),init:function(a,b){var f=e.shouldInit(),d=this;f&&e.suppressIncompatiblePlugins();d.editor=a;d.url=b;d.settings=o({theme_advanced_toolbar_location:"bottom",theme_advanced_buttons1:"formatselect,bold,italic,underline,strikethrough,forecolor,separator,table,row_before,row_after,delete_row,col_before,col_after,delete_col,delete_table,separator,bullist,numlist,tasklist,outdent,indent,blockquote,justifyleft,justifycenter,justifyright,justifyfull,separator,sup,sub,separator,undo,redo,separator,conflink,oldlinkbrowserButton,confimage,conf_macro_browser,separator,search,code,customtoolbar, monospacep,h1,h2,h3,h4,h5,h6,pre,blockquote",
readonly:a.settings.readonly},a.settings);a.onInit.add(function(){a.settings.readonly||(a.onNodeChange.add(d.nodeChanged,d),a.onKeyUp.add(d._updateUndoStatus,d),a.onMouseUp.add(d._updateUndoStatus,d),a.dom.bind(a.dom.getRoot(),"dragend",function(){d._updateUndoStatus(a)}),f&&new e(a))})},execCommand:function(a,b,f){return(a=this["_"+a])?(a.call(this,b,f),!0):!1},renderUI:function(a){this.bindControls();return{iframeContainer:l.get("rte"),editorContainer:"wysiwyg",sizeContainer:void 0,deltaHeight:a.deltaHeight}},
getInfo:function(){return{longname:"Confluence theme",author:"Atlassian",authorurl:"http://tinymce.moxiecode.com",version:h.majorVersion+"."+h.minorVersion}},bindControls:function(){var a=this;m(n(a.settings.theme_advanced_buttons1),function(b){if(!a.createEditorButtons(b))switch(b){case "formatselect":a.createBlockFormats()}});a.bindControlHandlers();a.renderToolbarButtons()},renderToolbarButtons:function(){var a=this,b=j.Templates.Editor.Toolbar.toolbarButton,f={toolbar:"toolbar-primary",title:"",
tooltip:"",cmd:"",className:"",locationGroup:null,weight:Infinity,onclick:null},d=i.map(this.editor.buttons,function(a,b){a=i.extend({},f,a);a.id=b;a.weight=i.isNumber(a.weight)?a.weight:Infinity;return a}),d=i.filter(d,function(a){return!!a.locationGroup});i.each(["toolbar-primary"],function(c){var f=g("."+c),c=i.where(d,{toolbar:c}),c=i.sortBy(c,"weight");i.each(c,function(c){a.createEditorButtons(c.id);var d=f.find("."+c.locationGroup),c=g(b({button:c}));d.append(c).removeClass("hidden")})})},
createEditorButtons:function(a){var b=this.editor.buttons[a];if(b)this.controls[a]=b.cmd?b.cmd:b.onclick;else return!1},bindControlHandlers:function(){var a=this;a.controlHandlers.buttons={};a.controlHandlers.buttons.state=new h.util.Dispatcher;a.controlHandlers.buttons.click=new h.util.Dispatcher;a.controlHandlers.buttons.click.add(function(b){var f=a.controls[b],d=typeof f;"string"===d?k.Rte.getEditor().execCommand(a.controls[b]):"function"===d&&f()})},createBlockFormats:function(){this.controlHandlers.formatselect=
{};this.controlHandlers.formatselect.state=new h.util.Dispatcher;this.controlHandlers.formatselect.click=new h.util.Dispatcher;this.controlHandlers.formatselect.click.add(function(a){k.Rte.getEditor().execCommand("FormatBlock",!1,a)})},createForeColorMenu:function(){return!0},_updateUndoStatus:function(a){a=a.undoManager;this.controlHandlers.buttons.state.dispatch("undo","disabled",!a.hasUndo()&&!a.typing);this.controlHandlers.buttons.state.dispatch("redo","disabled",!a.hasRedo())},nodeChanged:function(a,
b,f,d,c){var e=this;m(e.stateControls,function(b){e.controlHandlers.buttons.state.dispatch(b,"active",!!a.queryCommandState(e.controls[b]))});e._updateUndoStatus(a);e.controlHandlers.buttons.state.dispatch("outdent","disabled",!a.queryCommandState("Outdent"));a:{b=l.isBlock;f=c.parents;for(c=0;c<f.length;c++)if(b(f[c])){c=f[c];break a}c=void 0}c&&e.controlHandlers.formatselect.state.dispatch(c.nodeName.toLowerCase())}}}}});
require("confluence/module-exporter").safeRequire("atlassian-tinymce/themes/atlassian/editor_template",function(k){require("ajs").toInit(function(){var j=require("tinymce"),g=k();j.ThemeManager.requireLangPack("advanced");j.create("tinymce.themes.ConfluenceTheme",g.ThemeOptions);j.ThemeManager.add("atlassian",j.themes.ConfluenceTheme);window.requestAnimFrame=window.requestAnimationFrame||window.webkitRequestAnimationFrame})});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.plugins.tinymce:atlassian-rte-javascript-tinymce-extensions', location = 'jscripts/jquery/jquery-column.js' */
/*
 jQuery Column cell selector v1.0

 Licensed under the new BSD License.
 Copyright 2009-2012, Bram Stein
 All rights reserved.

 ATLASSIAN modified: Removed all extensions,modifications to jQuery expression internals (jQuery.expr)
 now creates pseudo selector via jQuery/Sizzle preferred method
*/
define("atlassian-tinymce/jquery/jquery-column",["jquery"],function(f){var g=/([\+\-]?\d*)[nN]([\+\-]?\d*)/,k,c;return{nthCol:function(a){var i=[],j={multiplier:0,offset:0};"even"===a?a="2n":"odd"===a?a="2n+1":/^\d*$/.test(a)&&(a="0n+"+a);i=g.exec(a);null!==i&&(j.multiplier=i[1]-0,j.offset=i[2]-0);c=j;var d,l,e=[],h=0,m=[];f.each(this,function(n,a){var b=0,c=0,f=a.rowSpan||1,g=a.colSpan||1;if(a.parentNode!==d){d=a.parentNode;if(d.parentNode!==l){l=d.parentNode;e=[]}h=0;e[d.rowIndex]===void 0&&(e[d.rowIndex]=
[])}for(b=0;b<e[d.rowIndex].length+1;b=b+1)if(e[d.rowIndex][b]===void 0){h=b;break}m[n]=h;for(b=d.rowIndex;b<d.rowIndex+f;b=b+1){e[b]===void 0&&(e[b]=[]);for(c=h;c<h+g;c=c+1)e[b][c]=true}});k=m;return f(this).filter(function(a){a=k[a]-(c.offset-1);a=c.multiplier===0?a===0:a%c.multiplier===0&&a/c.multiplier>=0;return a})}}});require("confluence/module-exporter").safeRequire("atlassian-tinymce/jquery/jquery-column",function(f){var g=require("jquery");g.extend(g.fn,f)});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.plugins.tinymce:atlassian-rte-javascript-tinymce-extensions', location = 'jscripts/tiny_mce/plugins/lists/editor_plugin_src.js' */
define("atlassian-tinymce/plugins/lists/editor_plugin_src",["tinymce","ajs","jquery"],function(d,o,D){function E(a,b){for(;a&&(8===a.nodeType||3===a.nodeType&&/^[ \t\n\r]*$/.test(a.nodeValue));)a=b(a);return a}function r(a){return E(a,function(a){return a.previousSibling})}function u(a){return E(a,function(a){return a.nextSibling})}function F(a,b,k){return a.dom.getParent(b,function(a){return-1!==d.inArray(k,a)})}function q(a){return a&&("OL"===a.tagName||"UL"===a.tagName)}function C(a,b){var d,c;
for(d=r(a.lastChild);q(d);)c=d,d=r(c.previousSibling);c&&(d=b.create("li",{style:v}),b.split(a,c),b.insertAfter(d,c),d.appendChild(c),d.appendChild(c),a=d.previousSibling);return a}function x(a,b,d){var c=r(a.previousSibling),a=c?w(c,a,b?c:!1,d):a;return G(a,b,d)}function G(a,b,d){var c=u(a.nextSibling);return c?w(a,c,b?c:!1,d):a}function w(a,b,d,c){var f=!!d;if(!a||!b)c=!1;else if("LI"===a.tagName&&"LI"===b.tagName)c="none"===b.style.listStyleType||H(b);else if(q(a)){if(!(c=a.tagName===b.tagName&&
a.className===b.className&&(f||a.style.listStyleType===b.style.listStyleType)))c=u(b.firstChild),f=r(b.lastChild),c=c&&f&&q(b)&&c===f&&(q(c)||"none"===c.style.listStyleType||H(c))}else c=c&&"P"===a.tagName&&"P"===b.tagName;if(c){c=r(a.lastChild);f=u(b.firstChild);for("P"===a.tagName&&a.appendChild(a.ownerDocument.createElement("br"));b.firstChild;)a.appendChild(b.firstChild);d&&(a.style.listStyleType=d.style.listStyleType);b.parentNode.removeChild(b);w(c,f,!1);return a}a&&("LI"===a.tagName&&q(b))&&
a.appendChild(b);return b}function H(a){var d=u(a.firstChild),a=r(a.lastChild);return d&&a&&d===a&&q(d)}function I(a,d){var k;d.is(a,"li,ol,ul")||(k=d.getParent(a,"li"))&&(a=k);return a}var v="list-style-type: none; background-image: none;",J="a,b,i,em,strong,u,span,s,sub,sup,code,br",y=d.each,s=d.dom.Event,z;return{init:function(a){function b(){var n=a.selection.getStart();return"LI"==n.tagName?n:a.dom.getParent(n,"li")}function k(a){if(a){var a=D(a),d=a.find("*"),e=d.filter(J);return d.length!==
e.length?!1:0===o.trim(a.text()).length&&1>=e.filter("br").length}return!1}function c(n){if(n&&(d.isGecko||d.isWebKit))for(var n=n.childNodes,b,e=n.length-1;0<=e;e--)b=n[e],3===b.nodeType&&!b.length&&a.dom.remove(b)}function f(a,c){if(c.keyCode===d.VK.BACKSPACE&&d.isWebKit){var e=b();if(e){var h=a.dom.getParent(e,"ol,ul"),f=a.selection.getRng();if(h&&h.firstChild===e&&(0===f.startOffset||1===f.startOffset&&""===f.startContainer.textContent)&&!a.selection.getContent().trim()&&f.startContainer.textContent===
e.textContent)return a.execCommand("Outdent",!1,e),a.undoManager.add(),s.cancel(c)}}}function j(a,b,e){e&&(1===e.nodeType&&a.dom.is(e,"li"))&&(b=e.parentNode,d.each(a.dom.select("li>ul,li>ol",b),function(d){a.dom.getAttrib(d.parentNode,"data-mce-style")||d.previousSibling||d.parentNode.insertBefore(a.dom.doc.createElement("br"),d)}))}function m(a,c){var e,h;if(b()&&(c.keyCode===d.VK.ENTER&&!c.shiftKey||c.keyCode===d.VK.BACKSPACE||c.keyCode===d.VK.DELETE)){e=a.selection.getRng(!0);h=e.endContainer;
if(3===h.nodeType){if(e.endOffset!==h.length)return;h=h.nextSibling}else if(1===h.nodeType)h=h.childNodes[e.endOffset];else return;if(h&&a.dom.is(h,"ul,ol"))if(d.isIE){var f=h,i=a.dom.doc.createTextNode(String.fromCharCode(160)),g=f.previousSibling;e=d.isIE6||d.isIE7||d.isIE8?e:a.getDoc().createRange();g&&3===g.nodeType&&g.nodeValue[g.length-1]==i.nodeValue?(e.setStart(g,g.length-1),e.setEnd(g,g.length-1)):(h.parentNode.insertBefore(i,f),e.setStartBefore(i),e.setEndBefore(i));e.collapse(!0);a.selection.setRng(e)}else h.parentNode.insertBefore(a.dom.create("br"),
h)}}function g(a){function f(d){var e=d.parentNode,b=e.previousSibling,h;c(e);e.childNodes[0]===d&&!a.dom.getAttrib(e,"data-mce-style")&&(a.selection.getStart().parentNode==d&&(h=a.selection.getRng(!0),h={startOffset:h.startOffset,startContainer:h.startContainer}),b?b.appendChild(d):(b=a.dom.create("li",{style:v}),b.appendChild(d),e.parentNode.insertBefore(b,e)),h&&a.selection.setCursorLocation(h.startContainer||d.firstChild,h.startOffset),k(e)&&a.dom.remove(e))}var e=b();if(e){var h=e.parentNode;
d.grep(a.dom.select("li>ul, li>ol",h),f);a.dom.is(h.parentNode,"li")&&f(h);e===h.lastChild&&(h.nextSibling&&a.dom.is(h.nextSibling,"ul, ol"))&&d.grep(a.dom.select("li>ul, li>ol",h.nextSibling),f)}}function l(a,d){if(46===d.keyCode&&!d.shiftKey){var e=b();if(e&&(0===e.childNodes.length||1===e.childNodes.length&&"BR"===e.firstChild.nodeName)){var c,f;if(c=e.nextSibling)c=a.dom.doc.createTreeWalker(c,NodeFilter.SHOW_TEXT,null,!1),c=c.nextNode(),f=a.getDoc().createRange(),f.setStart(c,0),f.setEnd(c,0),
a.selection.setRng(f),a.dom.remove(e),a.undoManager.add(),s.cancel(d)}}}var p="UNKNOWN";this.ed=a;a.addCommand("Indent",this.indent,this);a.addCommand("Outdent",this.outdent,this);a.addCommand("InsertUnorderedList",function(){this.applyList("UL","OL")},this);a.addCommand("InsertOrderedList",function(){this.applyList("OL","UL")},this);a.addCommand("InsertInlineTaskList",function(){o.Rte.Support.inlineTasks()&&this.applyList("UL","OL","inline-task-list",{attributesOnItems:{"data-inline-task-id":""},
placeholderText:"\u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u0437\u0434\u0435\u0441\u044c \u0432\u0430\u0448\u0443 \u0437\u0430\u0434\u0430\u0447\u0443, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0022@\u0022 \u0434\u043b\u044f \u0435\u0451 \u0441\u0432\u044f\u0437\u044b\u0432\u0430\u043d\u0438\u044f \u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c \u0438 \u0022//\u0022 \u0434\u043b\u044f \u0432\u044b\u0431\u043e\u0440\u0430 \u0435\u0451 \u0434\u0430\u0442\u044b \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f."})},this);a.addCommand("InsertInlineTaskListNoToggle",function(){o.Rte.Support.inlineTasks()&&this.applyList("UL","OL","inline-task-list",{attributesOnItems:{"data-inline-task-id":""},placeholderText:"\u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u0437\u0434\u0435\u0441\u044c \u0432\u0430\u0448\u0443 \u0437\u0430\u0434\u0430\u0447\u0443, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0022@\u0022 \u0434\u043b\u044f \u0435\u0451 \u0441\u0432\u044f\u0437\u044b\u0432\u0430\u043d\u0438\u044f \u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c \u0438 \u0022//\u0022 \u0434\u043b\u044f \u0432\u044b\u0431\u043e\u0440\u0430 \u0435\u0451 \u0434\u0430\u0442\u044b \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f.",noToggle:!0})},this);a.onInit.add(function(){a.editorCommands.addCommands({outdent:function(){function d(b){return(b=e.getParent(b,e.isBlock))&&0<parseInt(a.dom.getStyle(b,
"margin-left")||0,10)+parseInt(a.dom.getStyle(b,"padding-left")||0,10)}var b=a.selection,e=a.dom;return d(b.getStart())||d(b.getEnd())||a.queryCommandState("InsertOrderedList")||a.queryCommandState("InsertUnorderedList")||a.queryCommandState("InsertInlineTaskList")}},"state")});a.onKeyUp.add(function(f,g){if("TABBING"==p)return f.execCommand(g.shiftKey?"Outdent":"Indent",!0,null),c(b()),p="UNKNOWN",s.cancel(g);if("EMPTY"==p){var e=b();f.execCommand(!0===f.settings.list_outdent_on_enter||g.shiftKey?
"Outdent":"Indent",!0,null);if(d.isIE){var h=a.dom.getParent(e,"ol,ul");null!=h&&(h=h.lastChild,h.appendChild(a.getDoc().createTextNode(o.Rte.HIDDEN_CHAR)),a.selection.setCursorLocation(h,0))}c(e);o.Rte.showSelection();return s.cancel(g)}if("ESCAPE"==p)if(d.isIE6||d.isIE7||d.isIE8)e=f.getDoc().createTextNode(o.Rte.HIDDEN_CHAR),f.selection.getNode().appendChild(e);else if(d.isIE9||d.isIE10||d.isIE11||d.isGecko||d.isWebKit)return f.execCommand("Outdent"),s.cancel(g)});a.onKeyDown.add(function(c,f){if(f.keyCode===
d.VK.TAB&&!f.altKey&&!f.ctrlKey&&(a.queryCommandState("InsertUnorderedList")||a.queryCommandState("InsertOrderedList")||a.queryCommandState("InsertInlineTaskList")||a.queryCommandState("InsertInlineTaskListNoToggle")))p="TABBING";else{var e;if(e=f.keyCode===d.VK.ENTER&&!f.shiftKey)if(e=b()){var h=e.parentNode.parentNode;e=e.parentNode.lastChild===e&&!(q(h)?h.parentNode&&"LI"===h.parentNode.tagName:"LI"===h.tagName)&&k(e)}else e=!1;p=e?"ESCAPE":f.keyCode===d.VK.ENTER&&!f.shiftKey&&a.selection.isCollapsed()&&
k(b())?"EMPTY":"UNKNOWN"}});a.onKeyDown.add(function(a,b){("TABBING"==p||"EMPTY"==p||(d.isGecko||d.isWebKit)&&"ESCAPE"==p)&&s.cancel(b)});a.onKeyDown.add(function(a,b){var e;if(d.isGecko){var c=a.selection.getStart();if(!(b.keyCode!=d.VK.BACKSPACE||"IMG"!==c.tagName))if(e=c.parentNode.previousSibling){if(!("UL"===e.tagName||"OL"===e.tagName))if(e.previousSibling&&("UL"===e.previousSibling.tagName||"OL"===e.previousSibling.tagName))e=e.previousSibling;else return;e=e.firstChild;var f=null;do{if(!e)break;
"LI"===e.tagName&&(f=e)}while(e=e.nextSibling);e=f;f=a.dom.createRng();f.setStart(e,1);f.setEnd(e,1);a.selection.setRng(f);a.selection.collapse(!0);var f=a.selection.getBookmark(),g=c.parentNode.cloneNode(!0);if("P"===g.tagName||"DIV"===g.tagName)for(;0<g.childNodes.length;)e.appendChild(g.childNodes[0]);else e.appendChild(g);c.parentNode.parentNode.removeChild(c.parentNode);a.selection.moveToBookmark(f)}}});a.onKeyDown.add(function(b,c){var e;if(e=c.keyCode===d.VK.ENTER&&!c.shiftKey){var f=a.selection.getNode();
e=a.dom.is(f,"h1,h2,h3,h4,h5,h6,p,div")&&"LI"===f.parentNode.tagName&&f.parentNode.lastChild===f;f=o.EditorUtils.isCursorAtEndOf(f,a.selection.getRng(!0));e=a.selection.isCollapsed()&&e&&f}if(e){b.undoManager.beforeChange();b.undoManager.add();e=b.selection.getNode();var g=b.dom.create("li",{},!d.isIE?'<br data-mce-bogus="true">':"");e=b.dom.getParent(e,"li");b.dom.insertAfter(g,e);d.isIE6||d.isIE7||d.isIE8?(g.appendChild(b.dom.create("&nbsp;")),b.selection.setCursorLocation(g,1)):d.isGecko?setTimeout(function(){b.selection.setCursorLocation(g,
0)},0):b.selection.setCursorLocation(g,0);b.undoManager.add();c.preventDefault()}});d.isWebKit&&(a.onNodeChange.add(g),a.onKeyUp.add(g));d.isIE?a.onKeyDown.add(m):(a.onNodeChange.add(j),d.isGecko&&a.onKeyDown.add(m));d.isGecko&&a.onKeyDown.add(l);d.isWebKit&&a.onKeyDown.add(f)},applyList:function(a,b,k,c){function f(a){a&&"BR"===a.tagName&&i.remove(a)}function j(a){a&&"LI"===a.tagName&&(i.removeClass(a,"checked"),a.removeAttribute("data-inline-task-id"))}function m(a){if(w&&a&&"LI"===a.tagName)for(var b in w)a.setAttribute(b,
w[b])}function g(b){function e(a){(a.style.marginLeft||a.style.paddingLeft)&&h.adjustPaddingFunction(!1)(a)}var c=i.create(a),g;""!=k&&(c.className=k);if("LI"===b.tagName)m(b);else{if("P"===b.tagName||"DIV"===b.tagName||"BODY"===b.tagName){p(b,function(a,c){l(a,c,b.tagName==="BODY"?null:a.parentNode);g=a.parentNode;e(g);(!d.isChrome||d.isChrome&&c&&c.parentNode&&i.isBlock(c.parentNode))&&f(c)});if(g){if("LI"===g.tagName&&("P"===b.tagName||1<A.length)){if(B&&h.isEmptyElement(g)){var n=document.createTextNode(B),
c=i.create("span");c.appendChild(n);g.appendChild(c);setTimeout(function(){t.selection.select(n)},0);(d.isIE7||d.isIE8)&&g.appendChild(t.dom.create("br",{_mce_bogus:"1"}));var j=function(a,b){if((b.which||b.keyCode)==64)if(n.textContent==B)n.textContent=" ";else if(n.data==B)n.data=" ";window.setTimeout(function(){t.onKeyPress.remove(j)},0)};t.onKeyPress.addToTop(j)}i.split(g.parentNode.parentNode,g.parentNode)}x(g.parentNode,!0);m(g)}return}g=i.create("li");m(g);i.insertAfter(g,b);g.appendChild(b);
e(b);b=g}i.insertAfter(c,b);c.appendChild(b);x(c,!0);q.push(b)}function l(a,b,c){for(var d=a;!i.isBlock(a.parentNode)&&a.parentNode!==i.getRoot();)a=i.split(a.parentNode,a.previousSibling),d=a=a.nextSibling;if(c){c=c.cloneNode(!0);for(a.parentNode.insertBefore(c,a);c.firstChild;)i.remove(c.firstChild);c=i.rename(c,"li")}else c=i.create("li"),a.parentNode.insertBefore(c,a);d&&d==b&&(a=i.create("br"),i.setAttrib(a,"data-mce-bogus",1),c.appendChild(d),i.insertAfter(a,d));for(;d&&d!=b;)a=d.nextSibling,
c.appendChild(d),d=a;0===c.childNodes.length&&(c.innerHTML='<br _mce_bogus="1" />');g(c)}function p(a,b){function c(a,b){var d=i.createRng(),e;z.keep=!0;t.selection.moveToBookmark(z);z.keep=!1;e=t.selection.getRng(!0);b||(b=a.parentNode.lastChild);d.setStartBefore(a);d.setEndAfter(b);return!(0<d.compareBoundaryPoints(g,e)||0>=d.compareBoundaryPoints(h,e))}function d(a){if(a.nextSibling)return a.nextSibling;if(!i.isBlock(a.parentNode)&&a.parentNode!==i.getRoot())return d(a.parentNode)}var e,f,g=3,
h=1;e=a.firstChild;var k=!1;y(i.select("br,ul,ol,p,div,h1,h2,h3,h4,h5,h6,table,blockquote,address,pre,form,center,dl",a),function(a){if(a.hasAttribute&&a.hasAttribute("_mce_bogus"))return!0;c(e,a)&&(i.addClass(a,"_mce_tagged_br"),e=d(a))});k=e&&c(e,void 0);e=a.firstChild;y(i.select("br,ul,ol,p,div,h1,h2,h3,h4,h5,h6,table,blockquote,address,pre,form,center,dl",a),function(a){var c=d(a);if(a.hasAttribute&&a.hasAttribute("_mce_bogus"))return!0;i.hasClass(a,"_mce_tagged_br")?(b(e,a,f),f=null):f=a;e=c});
k&&b(e,void 0,f)}function n(a){p(a,function(a,b,c){l(a,b);f(b);f(c)})}function o(a){j(a);if(-1===d.inArray(q,a)){if(a.parentNode.tagName===b||!v)i.split(a.parentNode,a),g(a),G(a.parentNode,!1);""!=k&&(a.parentNode.className=k);m(a);q.push(a)}}function e(a){j(a);var b,c;if(-1===d.inArray(q,a)&&(a=C(a,i))){for(;i.is(a.parentNode,"ol,ul,li");)i.split(a.parentNode,a);q.push(a);a=i.rename(a,"p");b=x(a,!1,t.settings.force_br_newlines);if(b===a)for(a=a.firstChild;a;)i.isBlock(a)?(a=i.split(a.parentNode,
a),c=!0,b=a.nextSibling&&a.nextSibling.firstChild):(b=a.nextSibling,c&&"BR"===a.tagName&&i.remove(a),c=!1),a=b}}var h=this,t=h.ed,i=t.dom,q=[],r=!1,s=!1,u=!1,v=!1,A=t.selection.getSelectedBlocks(),k=k||"",c=c||{},w=c.attributesOnItems,B=c.placeholderText,c=c.noToggle;y(A,function(c){c=I(c,i);c="LI"===c.tagName?c.parentNode:c;v=c.className===k;c.tagName===b?s=!0:c.tagName===a?r=!0:u=!0});c=u&&!r||s||!v||0===A.length?{LI:o,H1:g,H2:g,H3:g,H4:g,H5:g,H6:g,P:g,BODY:g,DIV:1<A.length?g:n,defaultAction:n,
elements:this.selectedBlocks()}:c?{}:{defaultAction:e,elements:this.selectedBlocks()};this.process(c)},indent:function(){var a=this.ed,b=a.dom,k=[];this.process({LI:function(c){if(!F(a,c,k)&&(c=C(c,b))){var f=c,j=b.create("li",{style:v});b.insertAfter(j,f);var m=b.getParent(f,"ol,ul"),f=m.tagName,g=b.getStyle(m,"list-style-type"),m=m.className||"",l={};""!==g&&(l.style="list-style-type: "+g+";");f=b.create(f,l);""!=m&&(f.className=m);j.appendChild(f);(d.isIE7||d.isIE8)&&c.appendChild(a.dom.create("br",
{_mce_bogus:"1"}));f.appendChild(c);x(f.parentNode,!1);x(f,!1);k.push(c)}},defaultAction:this.adjustPaddingFunction(!0),elements:this.selectedBlocks()})},outdent:function(a,b){var k=this,c=k.ed,f=c.dom,j=[],m=b&&d.is(b,"array")?b:this.selectedBlocks();this.process({LI:function(a){var b,d;if(!F(c,a,j)){if(""!==f.getStyle(a,"margin-left")||""!==f.getStyle(a,"padding-left"))return k.adjustPaddingFunction(!1)(a);b=f.getStyle(a,"text-align",!0);if("center"===b||"right"===b)f.setStyle(a,"text-align","left");
else if(a=C(a,f))b=a.parentNode,d=a.parentNode.parentNode,"P"===d.tagName?f.split(d,a.parentNode):(f.split(b,a),"LI"===d.tagName?f.split(d,a):f.is(d,"ol,ul")||f.rename(a,"p")),f.hasClass(a.parentNode,"inline-task-list")?a.hasAttribute("data-inline-task-id")||a.setAttribute("data-inline-task-id",""):a.removeAttribute("data-inline-task-id"),j.push(a)}},defaultAction:this.adjustPaddingFunction(!1),elements:m});y(j,x)},isEmptyElement:function(a){var b=this.ed.dom;return 0===d.grep(a.childNodes,function(a){return!("BR"===
a.nodeName||"SPAN"===a.nodeName&&"bookmark"==b.getAttrib(a,"data-mce-type")||3===a.nodeType&&(a.nodeValue==String.fromCharCode(160)||""==a.nodeValue))}).length},process:function(a){function b(b){(d.isIE7||d.isIE8)&&D(b).find("br[_mce_bogus='1']").remove();m.removeClass(b,"_mce_act_on");if(b&&!(1!==b.nodeType||1<g.length&&f.isEmptyElement(b))){var b=I(b,m),c=a[b.tagName];c||(c=a.defaultAction);c(b)}}function k(a){f.splitSafeEach(a.childNodes,b)}function c(a,b){return 0<=b&&a.hasChildNodes()&&b<a.childNodes.length&&
"BR"===a.childNodes[b].tagName}var f=this,j=f.ed.selection,m=f.ed.dom,g,l;if(!m.select("td.mceSelected.numberingColumn").length){g=a.elements;l=j.getRng(!0);if(!l.collapsed&&(c(l.endContainer,l.endOffset-1)&&(l.setEnd(l.endContainer,l.endOffset-1),j.setRng(l)),c(l.startContainer,l.startOffset)))l.setStart(l.startContainer,l.startOffset+1),j.setRng(l);if(d.isIE7||d.isIE8)if(l=f.ed.selection.getNode(),"LI"===l.tagName&&l.parentNode.lastChild!==l){var p=f.ed.getDoc().createTextNode(o.Rte.HIDDEN_CHAR);
l.appendChild(p)}z=j.getBookmark();a.OL=a.UL=k;f.splitSafeEach(g,b);j.moveToBookmark(z);z=null;j=j.getNode();null===m.getParent(j,"td")&&f.ed.execCommand("mceRepaint")}},splitSafeEach:function(a,b){d.isGecko&&(/Firefox\/[12]\.[0-9]/.test(navigator.userAgent)||/Firefox\/3\.[0-4]/.test(navigator.userAgent))?this.classBasedEach(a,b):y(a,b)},classBasedEach:function(a,b){var d=this.ed.dom,c;y(a,function(a){d.addClass(a,"_mce_act_on")});for(c=d.select("._mce_act_on");0<c.length;)c=c.shift(),d.removeClass(c,
"_mce_act_on"),b(c),c=d.select("._mce_act_on")},adjustPaddingFunction:function(a){var b,d,c=this.ed;b=c.settings.indentation;d=/[a-z%]+/i.exec(b);b=parseInt(b,10);return function(f){var j;j=parseInt(c.dom.getStyle(f,"margin-left")||0,10)+parseInt(c.dom.getStyle(f,"padding-left")||0,10);j=a?j+b:j-b;c.dom.setStyle(f,"padding-left","");c.dom.setStyle(f,"margin-left",0<j?j+d:"")}},selectedBlocks:function(){var a=this.ed,b=a.selection.getSelectedBlocks();return 0===b.length?[a.dom.getRoot()]:b},getInfo:function(){return{longname:"Lists",
author:"Moxiecode Systems AB",authorurl:"http://tinymce.moxiecode.com",infourl:"http://wiki.moxiecode.com/index.php/TinyMCE:Plugins/lists",version:d.majorVersion+"."+d.minorVersion}}}});require("confluence/module-exporter").safeRequire("atlassian-tinymce/plugins/lists/editor_plugin_src",function(d){var o=require("tinymce");o.create("tinymce.plugins.Lists",d);o.PluginManager.add("lists",o.plugins.Lists)});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.plugins.tinymce:atlassian-rte-javascript-tinymce-extensions', location = 'jscripts/tiny_mce/plugins/table/editor_plugin_src.js' */
define("atlassian-tinymce/plugins/table/editor_plugin_src",["tinymce","ajs","jquery","confluence/storage-manager"],function(j,r,l,X){function x(d,i){return parseInt(d.getAttribute(i)||1)}function Y(d,i,u){function C(b,L){b=b.cloneNode(L);b.removeAttribute("id");L&&D()&&b.removeChild(b.children[0]);return b}function E(){var b=0;h=[];e(["thead","tbody","tfoot"],function(L){var a=i.select("> "+L+" tr",d);e(a,function(a,g){g+=b;e(i.select("> td, > th",a),function(b,a){var o,f,c,k;if(h[g])for(;h[g][a];)a++;
c=x(b,"rowspan");k=x(b,"colspan");for(f=g;f<g+c;f++){h[f]||(h[f]=[]);for(o=a;o<a+k;o++)h[f][o]={part:L,real:f==g&&o==a,elm:b,rowspan:c,colspan:k}}})});b+=a.length})}function A(b,a){var g;if(g=h[a])return g[b]}function p(b,a,g){b&&(g=parseInt(g),1===g?b.removeAttribute(a,1):b.setAttribute(a,g,1))}function y(b){return b&&(i.hasClass(b.elm,"mceSelected")||b==H)}function B(){var b=[];e(d.rows,function(a){e(a.cells,function(g){if(i.hasClass(g,"mceSelected")||g==H.elm)return b.push(a),!1})});return b}function z(b){var a;
j.walk(b,function(g){var o;if(3===g.nodeType)return e(i.getParents(g.parentNode,null,b).reverse(),function(b){b=C(b,!1);a?o&&o.appendChild(b):a=o=b;o=b}),o&&(o.innerHTML=j.isIE?"&nbsp;":'<br data-mce-bogus="1" />'),!1},"childNodes");b=C(b,!1);p(b,"rowSpan",1);p(b,"colSpan",1);a?b.appendChild(a):j.isIE||(b.innerHTML='<br data-mce-bogus="1" />');l(b).attr("contenteditable","true").removeClass("numberingColumn");return b}function a(){var b=i.createRng();e(i.select("tr",d),function(b){0===b.cells.length&&
i.remove(b)});if(0===i.select("tr",d).length)b.setStartAfter(d),b.setEndAfter(d),u.setRng(b),i.remove(d);else if(e(i.select("thead,tbody,tfoot",d),function(b){0===b.rows.length&&i.remove(b)}),E(),b=h[Math.min(h.length-1,m.y)])if(b=b[Math.min(b.length-1,m.x)].elm)j.isIE9||j.isIE10up?u.setCursorLocation(b,0):u.select(b,!0),u.collapse(!0)}function n(b,a,g,o){var t,M,f,c,k;t=h[a][b].elm.parentNode;for(f=1;f<=g;f++)if(t=i.getNext(t,"tr")){for(M=b;0<=M;M--)if(k=h[a+f][M].elm,k.parentNode==t){for(c=1;c<=
o;c++)i.insertAfter(z(k),k);break}if(-1==M)for(c=1;c<=o;c++)t.insertBefore(z(t.cells[0]),t.cells[0])}}function Q(){e(h,function(b,a){e(b,function(b,o){var t,f,c;if(y(b)&&(b=b.elm,t=x(b,"colspan"),f=x(b,"rowspan"),1<t||1<f)){p(b,"rowSpan",1);p(b,"colSpan",1);for(c=0;c<t-1;c++)i.insertAfter(z(b),b);n(o,a,f-1,t)}})})}function O(b){var a,g,o,t,f,c,k,d;e(h,function(g,o){e(g,function(g){if(y(g)&&(g=g.elm,f=g.parentNode,c=C(f,!1),a=o,b))return!1});if(b)return!a});for(t=0;t<h[0].length;t++)if(h[a][t]&&(g=
h[a][t].elm,g!=o)){if(b){if(0<a&&h[a-1][t]&&(k=h[a-1][t].elm,d=x(k,"rowSpan"),1<d)){p(k,"rowSpan",d+1);continue}}else if(d=x(g,"rowspan"),1<d){p(g,"rowSpan",d+1);continue}a:if(o=t,1===h.length)k=!1;else{for(k=0;k<h.length;k++)if("TH"!==h[k][o].elm.tagName.toUpperCase()){k=!1;break a}k=!0}o=k?i.create("th"):i.create("td");o.colSpan=g.colSpan;o.width=g.width;o.innerHTML=j.isIE9?"":j.isIE?"&nbsp;":'<br data-mce-bogus="1" />';o.className=g.className;k||(i.removeClass(o,j.settings.confluence_table_heading_style),
i.addClass(o,j.settings.confluence_table_cell_style));k=i.getAttrib(g,"data-highlight-colour");a:{d=t;var n=h[0][d].elm.getAttribute("data-highlight-colour");if(null===n)d=!1;else{for(var s=0;s<h.length;s++)if(h[s][d].elm.getAttribute("data-highlight-colour")!==n){d=!1;break a}d=!0}}d?i.setAttrib(o,"data-highlight-colour",k):i.removeClass(o,"highlight-"+k);c.appendChild(o);o=g}c.hasChildNodes()&&(b?f.parentNode.insertBefore(c,f):i.insertAfter(c,f));w()}function v(b){var a,g,o=[];e(h,function(g){e(g,
function(g,o){if(y(g)&&(a=o,b))return!1});if(b)return!a});if(0==a&&b&&D())return!1;e(h,function(f,k){var c,d,h;if(f[a]){c=f[a].elm;if(r.DarkFeatures.isEnabled("confluence.table.resizable")&&0===k){d=l(c).closest("table");h=d.find(">colgroup>col").eq(a);var e=l("<col>");b?e.insertBefore(h):e.insertAfter(h);d.hasClass("fixed-table")&&(!F||0===parseFloat(F)?e.css({width:R+2*S+T}):e.css({width:F}))}if(c!=g){h=x(c,"colspan");d=x(c,"rowspan");if(1==h){var s=i.create(c.tagName);s.colSpan=c.colSpan;s.width=
c.width;s.className=c.className;s.innerHTML=j.isIE?"&nbsp;":'<br data-mce-bogus="1"/>';(e=i.getAttrib(c,"data-highlight-colour"))&&i.setAttrib(s,"data-highlight-colour",e);l(s).attr("contenteditable","true").removeClass("numberingColumn");b?c.parentNode.insertBefore(s,c):i.insertAfter(s,c);n(a,k,d-1,h);o.push(s)}else p(c,"colSpan",c.colSpan+1);g=c}}});return o}function w(){if(D()){q=1;var b=0,a=0;e(d.rows,function(g){g=l(g);r.Rte.Table.areCellsHeadings(g.children())?g.children(":first").addClass("numberingColumn").attr("contenteditable",
"true"):0<a?a--:(g.children(":first").html(q).attr("contenteditable","false").addClass("numberingColumn"),b=g.children(":first").attr("rowspan"),1<b&&(a=b-1),q++)})}}function D(){return l(d.rows[0]).children(":first").hasClass("numberingColumn")}function k(b){if(b){if(l(d.rows[0]).children(":first").addClass("numberingColumn"),r.DarkFeatures.isEnabled("confluence.table.resizable")){var b=l(d),a=b.find(">colgroup>col").eq(0),g=l("<col>");g.insertBefore(a);b.hasClass("fixed-table")&&g.css({width:R+
2*S+T})}}else l(d.rows[0]).children(":first").removeClass("numberingColumn"),r.DarkFeatures.isEnabled("confluence.table.resizable")&&l(d).find(">colgroup>col").eq(0).remove()}function c(){var b=[];e(h,function(a){e(a,function(a,c){y(a)&&-1===j.inArray(b,c)&&(r.DarkFeatures.isEnabled("confluence.table.resizable")&&l(a.elm).closest("table").find(">colgroup>col").eq(c).remove(),e(h,function(b){if(b[c]){var b=b[c].elm,a;a=x(b,"colSpan");1<a?p(b,"colSpan",a-1):i.remove(b)}}),b.push(c))})});a()}function f(){var b=
{};e(h,function(a){e(a,function(a,c){y(a)&&(r.DarkFeatures.isEnabled("confluence.table.resizable")&&(F=l(a.elm).closest("table").find(">colgroup>col").eq(c).css("width"),0===parseFloat(F)&&(F=a.elm.getBoundingClientRect().width)),b[c]||(b[c]=[]))})});e(h,function(a){e(a,function(a,c){b[c]&&b[c].push(a.elm.innerHTML)})});return b}function N(b){b&&b.parentNode&&(u.select(b.parentNode),u.collapse(!0))}function U(b,a){var g=A(b.x,b.y).elm,c="undefined"===typeof a?!0:a;if((j.isGecko||j.isIE)&&g.firstChild)g=
g.firstChild;if(j.isIE9||j.isIE10up){var f=u.getRng(1);c?(f.setStart(g,0),f.setEnd(g,0)):(f.setStartAfter(g,0),f.setEndAfter(g,0));u.setRng(f)}else u.select(g,!0),u.collapse(c)}function V(){var b,a=h[0].length;m.x==a-1&&m.y==h.length-1||(m.x==a-1&&D()?(b={x:1,y:m.y+1},r.Rte.Table.areCellsHeadings(l(h[b.y][0].elm).parent().children())&&(b.x=0)):b=m.x==a-1?{x:0,y:m.y+1}:{x:m.x+1,y:m.y});return b}function W(){var b;0==m.x&&0==m.y||(1==m.x&&D()&&!r.Rte.Table.areCellsHeadings(l(h[m.y][0].elm).parent().children())?
(b=m.y-1,b={x:h[b].length-1,y:b}):0<m.x?b={x:m.x-1,y:m.y}:(b=m.y-1,b={x:h[b].length-1,y:b}));return b}function G(b){var a;e(h,function(g,c){e(g,function(g,f){if(g.elm==b)return a={x:f,y:c},!1});return!a});return a}var h,m,s,H,q;E();var Z=["table.confluenceTable > tbody > tr > th","table.confluenceTable > tbody > tr > td","table.confluenceTable > thead > tr > th","table.confluenceTable > thead > tr > td"];if(H=i.select("td.mceSelected,th.mceSelected")[0]||l(u.getStart()).closest(Z.join(","))[0]){m=
G(H);var I,J;I=J=0;e(h,function(b,a){e(b,function(b,c){var f,k;y(b)&&(b=h[a][c],c>I&&(I=c),a>J&&(J=a),b.real&&(f=b.colspan-1,k=b.rowspan-1,f&&c+f>I&&(I=c+f),k&&a+k>J&&(J=a+k)))})});s={x:I,y:J};H=A(m.x,m.y)}j.extend(this,{deleteTable:function(){var b=i.createRng();b.setStartAfter(d);b.setEndAfter(d);u.setRng(b);i.remove(d)},split:Q,merge:function(b,c,g){var f,k,d,n,q,N;b?(b=G(b),f=b.x,b=b.y,c=f+(c-1),g=b+(g-1)):(f=m.x,b=m.y,c=s.x,g=s.y);if(!(0==f&&D())&&(n=A(f,b),k=A(c,g),n&&k&&n.part==k.part)){Q();
E();n=A(f,b).elm;p(n,"colSpan",c-f+1);p(n,"rowSpan",g-b+1);for(d=b;d<=g;d++)for(k=f;k<=c;k++)h[d]&&h[d][k]&&(b=h[d][k].elm,b!=n&&(q=j.grep(b.childNodes),e(q,function(b){n.appendChild(b)}),q.length&&(q=j.grep(n.childNodes),N=0,e(q,function(b){b.nodeName==="BR"&&(i.getAttrib(b,"data-mce-bogus")&&N++<q.length-1)&&n.removeChild(b)})),i.remove(b)));a()}},insertRow:O,insertCol:v,insertNumCol:function(){if(D())e(h,function(b){b=b[0].elm;l(b).hasClass("numberingColumn")&&null!==b.parentNode&&b.parentNode.removeChild(b)}),
k(!1);else{var b;e(h,function(a){a=a[0].elm;if(b!=a){var c=z(a);a.parentNode.insertBefore(c,a);1<a.rowSpan&&(c.rowSpan=a.rowSpan);b=a}});k(!0)}w()},updateNumCol:w,deleteCols:c,deleteRows:function(){var b;b=B();(j.isIE9||j.isIE10)&&N(b[0]);e(b.reverse(),function(b){var a,c;i.getNext(b,"tr");e(b.cells,function(b){var c=x(b,"rowSpan");1<c&&(p(b,"rowSpan",c-1),a=G(b),n(a.x,a.y,1,1))});a=G(b.cells[0]);e(h[a.y],function(b){var a,b=b.elm;b!=c&&(a=x(b,"rowSpan"),1>=a?i.remove(b):p(b,"rowSpan",a-1),c=b)})});
a();w()},cutRows:function(){var b=B();(j.isIE9||j.isIE10)&&N(b[0]);i.remove(b);a();w();return b},copyRows:function(){var b=B();e(b,function(a,c){b[c]=C(a,!0)});return b},pasteRows:function(b,a){var c=B(),f=c[a?0:c.length-1],k=f.cells.length;e(h,function(b){var a;k=0;e(b,function(b){b.real&&(k+=b.colspan);b.elm.parentNode==f&&(a=1)});if(a)return!1});a||b.reverse();e(b,function(b){var c=b.cells.length,g;l(b.cells[0]).hasClass("numberingColumn")&&(b.removeChild(b.cells[0]),c--);for(q=0;q<c;q++)g=b.cells[q],
p(g,"colSpan",1),p(g,"rowSpan",1);D()&&(b.insertBefore(b.firstChild.cloneNode(!1),b.firstChild),l(b.firstChild).addClass("numberingColumn"),c++);for(;k<c;)v(!1),k++;for(q=c;q<k;q++)b.appendChild(z(b.cells[c-1]));a?f.parentNode.insertBefore(b,f):i.insertAfter(b,f)});w()},getPos:G,setStartCell:function(b){m=G(b)},setEndCell:function(b){var a,c,f,k,d,n,e;s=G(b);if(m&&s){a=Math.min(m.x,s.x);c=Math.min(m.y,s.y);f=Math.max(m.x,s.x);k=Math.max(m.y,s.y);d=f;n=k;var q;for(q=c;q<=n;q++)b=h[q][a],b.real||a-
(b.colspan-1)<a&&(a-=b.colspan-1);for(var j=a;j<=d;j++)b=h[c][j],b.real||c-(b.rowspan-1)<c&&(c-=b.rowspan-1);for(q=c;q<=k;q++)for(j=a;j<=f;j++)b=h[q][j],b.real&&(e=b.colspan-1,b=b.rowspan-1,e&&j+e>d&&(d=j+e),b&&q+b>n&&(n=q+b));i.removeClass(i.select("td.mceSelected,th.mceSelected"),"mceSelected");for(q=c;q<=n;q++)for(j=a;j<=d;j++)h[q][j]&&i.addClass(h[q][j].elm,"mceSelected")}},moveCaretToNextCell:function(){var b=V();b||(O(!1),E(),b=V());U(b)},moveCaretToPrevCell:function(){var b=W();b||(O(!0),E(),
m=G(i.getParent(u.getStart(),"th,td")),b=W());U(b,!1)},cutColumns:function(){var b=f();c();return b},copyColumns:f,pasteColumns:function(b,a){var c=Object.keys(b);a||c.reverse();l.each(c,function(c,f){for(var k=v(a),c=0;c<k.length;c++)k[c].innerHTML=b[f][c]||""})},prepareTableForColPasteAndCheckIfNeedToRepaint:function(b){var a=b[Object.keys(b)[0]].length,c,f,b=!1;e(h,function(b,k){a--;c=k;e(b,function(b,a){f=a})});if(0<a){b=!0;H=A(f,c);for(q=0;q<a;q++)O(!1)}return b},toggleFluidColumnWidth:function(){d&&
d.rows&&(l(d).toggleFluidColumnWidth(),l("#table-mode-picker .dropdown-text").text(P.getLang("table.responsive")))},toggleFixedColumnWidth:function(){d&&d.rows&&(l(d).toggleFixedColumnWidth(),l("#table-mode-picker .dropdown-text").text(P.getLang("table.fixed_width")))}})}var P,e=j.each,K=X("atlassian.editor","tables"),T=1,S=10,R=8,F;return{init:function(d,i){function u(a){var n=d.selection,a=a||n.getNode().parentNode;if(a=d.dom.getParent(a,"table.confluenceTable"))return new Y(a,d.dom,n)}function C(){d.getBody().style.webkitUserSelect=
"";z&&(d.dom.removeClass(d.dom.select("td.mceSelected,th.mceSelected"),"mceSelected"),z=!1)}function E(a){for(var d=[],e="",e=0;e<a.length;e++)d.push(r.Rte.getEditor().serializer.serialize(a[e]));e="<tr>"+d.join("</tr><tr>")+"</tr>";K.setItem("copied",e,7200)}function A(){var a=[],e=K.getItem("copied")||"";e&&(a=d.getDoc().createElement("div"),a.innerHTML="<table>"+e+"</table>",a=l(a).find("tr"));return a}P=d;var p,y,B,z=!0;e([["table","table.desc","mceInsertTable",!0],["delete_table","table.del",
"mceTableDelete"],["delete_col","table.delete_col_desc","mceTableDeleteCol"],["delete_row","table.delete_row_desc","mceTableDeleteRow"],["col_after","table.col_after_desc","mceTableInsertColAfter"],["col_before","table.col_before_desc","mceTableInsertColBefore"],["row_after","table.row_after_desc","mceTableInsertRowAfter"],["row_before","table.row_before_desc","mceTableInsertRowBefore"],["row_props","table.row_desc","mceTableRowProps",!0],["cell_props","table.cell_desc","mceTableCellProps",!0],["split_cells",
"table.split_cells_desc","mceTableSplitCells",!0],["merge_cells","table.merge_cells_desc","mceTableMergeCells",!0]],function(a){d.addButton(a[0],{title:a[1],cmd:a[2],ui:a[3]})});j.isIE||d.onClick.add(function(a,d){d=d.target;"TABLE"===d.nodeName&&(a.selection.select(d),a.nodeChanged())});d.onPreProcess.add(function(a,d){var e,j,i,l=a.dom,p;e=l.select("table",d.node);for(j=e.length;j--;){i=e[j];l.setAttrib(i,"data-mce-style","");if(p=l.getAttrib(i,"width"))l.setStyle(i,"width",p),l.setAttrib(i,"width",
"");if(p=l.getAttrib(i,"height"))l.setStyle(i,"height",p),l.setAttrib(i,"height","")}});d.onNodeChange.add(function(a,d,e){e=a.selection.getStart();a=a.dom.getParent(e,"td,th,caption");d.setActive("table","TABLE"===e.nodeName||!!a);a&&"CAPTION"===a.nodeName&&(a=0);d.setDisabled("delete_table",!a);d.setDisabled("delete_col",!a);d.setDisabled("delete_table",!a);d.setDisabled("delete_row",!a);d.setDisabled("col_after",!a);d.setDisabled("col_before",!a);d.setDisabled("row_after",!a);d.setDisabled("row_before",
!a);d.setDisabled("row_props",!a);d.setDisabled("cell_props",!a);d.setDisabled("split_cells",!a);d.setDisabled("merge_cells",!a)});d.onInit.add(function(a){function d(a){if(j.isWebKit){var c=a.selection.getRng(),f=a.selection.getNode(),e=a.dom.getParent(c.startContainer,"TD,TH"),i=e,l=a.dom.getParent(c.startContainer,"TABLE"),n;l&&(n=l.parentNode);l=3===c.startContainer.nodeType&&0==c.startOffset&&0==c.endOffset&&i&&("TR"===f.nodeName||f==n);i=("TD"===f.nodeName||"TH"===f.nodeName)&&!i;if(l||i){e||
(e=f);for(f=e.lastChild;f.lastChild;)f=f.lastChild;c.setEnd(f,f.nodeValue.length);a.selection.setRng(c)}}}var i,l,v=a.dom,w;p=a.windowManager;a.onMouseDown.add(function(a,c){2!=c.button&&(C(),l=v.getParent(c.target,"td,th"),i=v.getParent(l,"table"))});v.bind(a.getDoc(),"mouseover",function(d){var c,f=v.getParent(d.target,"td,th");if(l&&(w||f!=l)&&f){c=v.getParent(f,"table");c==i&&(w||(w=u(c),w.setStartCell(l),a.getBody().style.webkitUserSelect="none"),w.setEndCell(f),z=!0);c=a.selection.getSel();
try{c.removeAllRanges?c.removeAllRanges():c.empty()}catch(e){}d.preventDefault()}});a.onMouseUp.add(function(a){var c,f=a.selection,d;f.getSel();var e,n;if(l){w&&(a.getBody().style.webkitUserSelect="");var p=function(a,f){var d=new j.dom.TreeWalker(a,a);do{if(a.nodeType===3&&j.trim(a.nodeValue).length!==0){f?c.setStart(a,0):c.setEnd(a,a.nodeValue.length);break}if(a.nodeName==="BR"){f?c.setStartBefore(a):c.setEndBefore(a);break}}while(a=f?d.next():d.prev())};d=v.select("td.mceSelected,th.mceSelected");
if(0<d.length){c=v.createRng();e=d[0];c.setStartBefore(e);c.setEndAfter(e);p(e,1);d=new j.dom.TreeWalker(e,v.getParent(d[0],"table"));do if("TD"===e.nodeName||"TH"===e.nodeName){if(!v.hasClass(e,"mceSelected"))break;n=e}while(e=d.next());p(n);f.setRng(c)}a.nodeChanged();l=w=i=null}});a.onUndo.add(function(a){z=0<a.dom.select("td.mceSelected, th.mceSelected").length});a.onKeyUp.add(function(){C()});a.onKeyDown.add(function(a){d(a)});a.onMouseDown.add(function(a,c){2!=c.button&&d(a)});a.plugins.table.fixTableCellSelection=
d;a&&a.plugins.contextmenu&&a.plugins.contextmenu.onContextMenu.add(function(d,c,f){d=a.selection.getNode()||a.getBody();a.dom.getParent(f,"td")||a.dom.getParent(f,"th")||a.dom.select("td.mceSelected,th.mceSelected").length?(c.removeAll(),"A"===d.nodeName&&!a.dom.getAttrib(d,"name")&&(c.add({title:"advanced.link_desc",icon:"link",cmd:a.plugins.advlink?"mceAdvLink":"mceLink",ui:!0}),c.add({title:"advanced.unlink_desc",icon:"unlink",cmd:"UnLink"}),c.addSeparator()),"IMG"===d.nodeName&&-1===d.className.indexOf("mceItem")&&
(c.add({title:"advanced.image_desc",icon:"image",cmd:a.plugins.advimage?"mceAdvImage":"mceImage",ui:!0}),c.addSeparator()),c.add({title:"table.desc",icon:"table",cmd:"mceInsertTable",value:{action:"insert"}}),c.add({title:"table.props_desc",icon:"table_props",cmd:"mceInsertTable"}),c.add({title:"table.del",icon:"delete_table",cmd:"mceTableDelete"}),c.addSeparator(),f=c.addMenu({title:"table.cell"}),f.add({title:"table.cell_desc",icon:"cell_props",cmd:"mceTableCellProps"}),f.add({title:"table.split_cells_desc",
icon:"split_cells",cmd:"mceTableSplitCells"}),f.add({title:"table.merge_cells_desc",icon:"merge_cells",cmd:"mceTableMergeCells"}),f=c.addMenu({title:"table.row"}),f.add({title:"table.row_desc",icon:"row_props",cmd:"mceTableRowProps"}),f.add({title:"table.row_before_desc",icon:"row_before",cmd:"mceTableInsertRowBefore"}),f.add({title:"table.row_after_desc",icon:"row_after",cmd:"mceTableInsertRowAfter"}),f.add({title:"table.delete_row_desc",icon:"delete_row",cmd:"mceTableDeleteRow"}),f.addSeparator(),
f.add({title:"table.cut_row_desc",icon:"cut",cmd:"mceTableCutRow"}),f.add({title:"table.copy_row_desc",icon:"copy",cmd:"mceTableCopyRow"}),f.add({title:"table.paste_row_before_desc",icon:"paste",cmd:"mceTablePasteRowBefore"}).setDisabled(!y),f.add({title:"table.paste_row_after_desc",icon:"paste",cmd:"mceTablePasteRowAfter"}).setDisabled(!y),f=c.addMenu({title:"table.col"}),f.add({title:"table.col_before_desc",icon:"col_before",cmd:"mceTableInsertColBefore"}),f.add({title:"table.col_after_desc",icon:"col_after",
cmd:"mceTableInsertColAfter"}),f.add({title:"table.delete_col_desc",icon:"delete_col",cmd:"mceTableDeleteCol"})):c.add({title:"table.desc",icon:"table",cmd:"mceInsertTable"})});j.isWebKit&&a.onKeyDown.add(function(a,c){function d(c,e,h){var n=c?"previousSibling":"nextSibling",m=a.dom.getParent(e,"tr"),p=m[n];if(p)return l(a,e,p,c),j.dom.Event.cancel(h),!0;var p=a.dom.getParent(m,"table"),b=m.parentNode,r=b.nodeName.toLowerCase();if("tbody"===r||r===(c?"tfoot":"thead")){var r=a.dom.select(">tbody",
p),g=r.indexOf(b);c&&0===g||!c&&g===r.length-1?(b=a.dom.select(">"+(c?"thead":"tfoot"),p),b=0!==b.length?b[0]:null):-1===g?(b="thead"===b.tagName.toLowerCase()?0:r.length-1,b=r[b]):b=r[g+(c?-1:1)];if(null!==b)return(m=i(b,c))&&l(a,e,m,c),j.dom.Event.cancel(h),!0}(e=p[n])?(a.selection.setCursorLocation(e,0),h=!0):(e=a.dom.getParent(p,"td,th"))?h=d(c,e,h):(c=i(m,!c),a.selection.setCursorLocation(c,0),h=j.dom.Event.cancel(h));return h}function i(c,d){var f=c&&c[d?"lastChild":"firstChild"];return f&&
"BR"===f.nodeName?a.dom.getParent(f,"td,th"):f}function l(c,d,f,h){for(var j=0,c=c.dom.getParent(d,"td,th");c.previousSibling;)c=c.previousSibling,j+=x(c,"colspan");var n=j,b=0,m=0;e(f.children,function(a,c){b+=x(a,"colspan");m=c;if(b>n)return!1});f=f.childNodes[m];h=i(f,h);a.selection.setCursorLocation(h||f,0)}var n=j.VK,p=c.keyCode,r;if(r=p==n.UP||p==n.DOWN){r=a;var h=r.selection.getNode();r=null!==r.dom.getParent(h,"tr")}if(r){var m=a.selection.getNode();setTimeout(function(){var e=a.selection.getNode(),
e=a.dom.getParent(e,"td,th"),h=a.dom.getParent(m,"td,th");e&&(e!==h&&a.dom.getParent(e,"TABLE")===a.dom.getParent(h,"TABLE"))&&d(!c.shiftKey&&p===n.UP,m,c)},0)}});if(!j.isIE){var r=function(){};j.isGecko&&a.onKeyDown.add(function(a,c){var d,e,i=a.dom;if(37===c.keyCode||38===c.keyCode)if(d=a.selection.getRng(),(e=i.getParent(d.startContainer,"table"))&&a.getBody().firstChild==e){var j=d,l=e.ownerDocument;d=l.createRange();d.setStartBefore(e);d.setEnd(j.endContainer,j.endOffset);j=l.createElement("body");
j.appendChild(d.cloneContents());0===j.innerHTML.replace(/<(br|img|object|embed|input|textarea)[^>]*>/gi,"-").replace(/<[^>]+>/g,"").length&&(d=i.createRng(),d.setStartBefore(e),d.setEndBefore(e),a.selection.setRng(d),c.preventDefault())}});a.onKeyUp.add(r);a.onSetContent.add(r);a.onVisualAid.add(r);j.isGecko&&a.onKeyDown.add(function(a,c){if(c.keyCode===j.VK.ENTER&&c.shiftKey){var d=a.selection.getRng().startContainer;if(v.getParent(d,"td,th")){var e=a.getDoc().createTextNode("﻿");v.insertAfter(e,
d)}}});a.startContent=a.getContent({format:"raw"})}});e({mceTableSplitCells:function(a){a.split()},mceTableMergeCells:function(a){d.dom.getParent(d.selection.getNode(),"th,td");d.dom.select("td.mceSelected,th.mceSelected").length&&a.merge()},mceTableInsertRowBefore:function(a){a.insertRow(!0)},mceTableInsertRowAfter:function(a){a.insertRow()},mceTableInsertNumberingCol:function(a){a.insertNumCol()},mceTableUpdateNumberingCol:function(a){a.updateNumCol()},mceAutoWidth:function(a){a.toggleFluidColumnWidth()},
mceFixedWidth:function(a){a.toggleFixedColumnWidth()},mceTableInsertColBefore:function(a){F=null;a.insertCol(!0)},mceTableInsertColAfter:function(a){F=null;a.insertCol()},mceTableDeleteCol:function(a){a.deleteCols()},mceTableDeleteRow:function(a){a.deleteRows()},mceTableCutRow:function(a){y=a.cutRows();E(y)},mceTableCopyRow:function(a){y=a.copyRows();E(y)},mceTablePasteRowBefore:function(a){a.pasteRows(A(),!0)},mceTablePasteRowAfter:function(a){a.pasteRows(A())},mceTableDelete:function(a){a.deleteTable()},
mceTableMoveCaretToNextCell:function(a){a.moveCaretToNextCell()},mceTableMoveCaretToPrevCell:function(a){a.moveCaretToPrevCell()},mceTableCopyCol:function(a){B=a.copyColumns();K.setItem("copiedCols",JSON.stringify(B))},mceTableCutCol:function(a){B=a.cutColumns();K.setItem("copiedCols",JSON.stringify(B))},mceTablePasteColBefore:function(a){var e=JSON.parse(K.getItem("copiedCols"))||{};a.prepareTableForColPasteAndCheckIfNeedToRepaint(e)&&(d.execCommand("mceRepaint"),a=u());a.pasteColumns(e,!0)},mceTablePasteColAfter:function(a){a.pasteColumns(JSON.parse(K.getItem("copiedCols"))||
{},!1)}},function(a,e){d.addCommand(e,function(){var e=u();e&&(a(e),d.execCommand("mceRepaint"),C())})});e({mceInsertTable:function(a){p.open({url:i+"/table.htm",width:400+parseInt(d.getLang("table.table_delta_width",0)),height:320+parseInt(d.getLang("table.table_delta_height",0)),inline:1},{plugin_url:i,action:a?a.action:0})},mceTableRowProps:function(){p.open({url:i+"/row.htm",width:400+parseInt(d.getLang("table.rowprops_delta_width",0)),height:295+parseInt(d.getLang("table.rowprops_delta_height",
0)),inline:1},{plugin_url:i})},mceTableCellProps:function(){p.open({url:i+"/cell.htm",width:400+parseInt(d.getLang("table.cellprops_delta_width",0)),height:295+parseInt(d.getLang("table.cellprops_delta_height",0)),inline:1},{plugin_url:i})}},function(a,e){d.addCommand(e,function(d,e){a(e)})})}}});
require("confluence/module-exporter").safeRequire("atlassian-tinymce/plugins/table/editor_plugin_src",function(j){var r=require("tinymce");r.create("tinymce.plugins.TablePlugin",j);r.PluginManager.add("table",r.plugins.TablePlugin)});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.plugins.tinymce:atlassian-rte-javascript-tinymce-extensions', location = 'jscripts/tiny_mce/plugins/table/js/table.js' */
define("atlassian-tinymce/plugins/table/table",["ajs","tinymce","tinymce/popup","jquery","document"],function(f,d,t,p,s){function k(c,a){var d=s.forms[0].elements[c];if("undefined"===typeof a||null==a)a="",d&&(a=d.value);if(""==a)return"";a=a.replace(/&/g,"&amp;");a=a.replace(/\"/g,"&quot;");a=a.replace(/</g,"&lt;");a=a.replace(/>/g,"&gt;");return" "+c+'="'+a+'"'}return{insertTable:function(){var c=p("#tinymce-table-form")[0],a=f.Rte.getEditor(),i=a.dom,g=2,q=2,j=d.settings.confluence_table_style,
e="",b="",l;l=i.getParent(a.selection.getNode(),"table");var m,r;m=c.elements.heading.checked;r=c.elements["equal-width-columns"].checked;g=c.elements.cols.value;q=c.elements.rows.value;c=p("#tinymce-table-form input[name='width']").val();b=b+"<table"+k("data-mce-new","1");c&&a.settings.inline_styles?(e&&(e+="; "),/^[0-9\.]+$/.test(c)&&(c+="px"),e+="width: "+c):b+=k("width",c);b+=k("class",j);b+=k("style",e);b+=">";for(j=0;j<q;j++){b+="<tr>";for(e=0;e<g;e++){var n,o;0==j&&m?(c="th",o=d.settings.confluence_table_heading_style):
(c="td",o=d.settings.confluence_table_cell_style);r&&(n=' width="'+Math.round(100*(100/g))/100+'%"');b+="<"+c+(n?n:"")+' class="'+o+'">';!d.isIE||d.isIE11?b+='<br data-mce-bogus="1"/>':d.isIE9&&(b+="&nbsp;");b+="</"+c+">"}b+="</tr>"}b+="</table>";if(a.settings.fix_table_elements){var h="";f.Rte.BookmarkManager.restoreBookmark();a.selection.setContent('<br class="_mce_marker" />');d.each("h1 h2 h3 h4 h5 h6 p".split(" "),function(a){h&&(h=h+",");h=h+(a+" ._mce_marker")});d.each(a.dom.select(h),function(b){a.dom.split(a.dom.getParent(b,
"h1,h2,h3,h4,h5,h6,p"),b)});g=i.select("br._mce_marker")[0];a.selection.select(g);a.selection.setContent(b);a.dom.remove(g)}else a.execCommand("mceInsertContent",!1,b);d.each(i.select("table[data-mce-new]"),function(b){var c=i.select(m?"th":"td",b);try{a.selection.setCursorLocation(c[0],0)}catch(d){}i.setAttrib(b,"data-mce-new","")});a.addVisual();a.execCommand("mceEndUndoLevel",!1,{},{skip_undo:!0});l&&d.DOM.hasClass(l,"confluenceTable")?f.Confluence.Analytics.publish("confluence.table.create.nested",
{pageId:f.Meta.get("page-id")}):f.Confluence.Analytics.publish("confluence.table.create",{pageId:f.Meta.get("page-id")})}}});require("confluence/module-exporter").safeRequire("atlassian-tinymce/plugins/table/table",function(f){var d=require("tinymce");require("jquery").extend(d.plugins.TablePlugin.prototype,f)});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.plugins.tinymce:atlassian-rte-javascript-tinymce-extensions', location = 'jscripts/tiny_mce/plugins/autoresize/editor_plugin_src.js' */
define("atlassian-tinymce/plugins/autoresize/editor_plugin_src",["ajs","underscore","tinymce","jquery"],function(g,h,i,l){return{init:function(a){function b(j){var e,d=a.getDoc();e=d.body;var g=d.documentElement,m=i.DOM,f=c.autoresize_min_height,j=h.isObject(j)?j.forceExec||!1:!1,d=l(d).height();d>c.autoresize_min_height&&(f=d);c.autoresize_max_height&&d>c.autoresize_max_height?(f=c.autoresize_max_height,e.style.overflowY="auto",g.style.overflowY="auto"):(e.style.overflowY="hidden",g.style.overflowY=
"hidden",e.scrollTop=0);if(j||f!==k)e=f-k,m.setStyle(m.get(a.id+"_ifr"),"height",f+"px"),k=f,i.isWebKit&&0>e&&b()}a.onInit.add(function(){l(a.getBody()).addClass("resizable")});var c=this,k=0;a.getParam("fullscreen_is_enabled")||(c.editor=a,c.autoresize_min_height=parseInt(a.getParam("autoresize_min_height",a.getElement().offsetHeight)),c.autoresize_max_height=parseInt(a.getParam("autoresize_max_height",0)),a.onChange.add(b),a.onSetContent.add(b),a.onPaste.add(b),a.onKeyUp.add(b),a.onPostRender.add(b),
a.getParam("autoresize_on_init",!0)&&(a.onLoad.add(b),a.onLoadContent.add(b)),a.addCommand("mceAutoResize",b))},getInfo:function(){return{longname:"Auto Resize",author:"Moxiecode Systems AB",authorurl:"http://tinymce.moxiecode.com",infourl:"http://wiki.moxiecode.com/index.php/TinyMCE:Plugins/autoresize",version:i.majorVersion+"."+i.minorVersion}}}});
require("confluence/module-exporter").safeRequire("atlassian-tinymce/plugins/autoresize/editor_plugin_src",function(g){var h=require("tinymce");h.create("tinymce.plugins.AutoResizePlugin",g);h.PluginManager.add("autoresize",h.plugins.AutoResizePlugin)});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'confluence.web.resources:browser', location = '/includes/js/api/browser.js' */
define("confluence/api/browser",[],function(){return function(a){function c(){return-1!==a.indexOf("Firefox/")}function b(){return-1!==a.indexOf("Edge/")}function d(){return-1!==a.indexOf("MSIE")||-1!==a.indexOf("Trident/")||b()}function e(){return-1!==a.indexOf("Chrome/")}function f(){return-1!==a.indexOf("Safari/")&&-1===a.indexOf("Chrome/")}function g(){return-1!==a.indexOf("PhantomJS")}return{isFirefox:c,notFirefox:function(){return!c()},isMSEdge:b,notMSEdge:function(){return!b()},isIE:d,notIE:function(){return!d()},
isChrome:e,notChrome:function(){return!e()},isSafari:f,notSafari:function(){return!f()},isPhantom:g,notPhantom:function(){return!g()},version:function(){if(d()){var b=a.match(/MSIE\s([\d.]+)/)||a.match(/rv:([\d.]+)/)||a.match(/Edge\/([\d.]+)/);return parseInt(b[1])}if(e())return parseInt(a.match(/Chrome\/([\d.]+)/)[1]);if(f())return parseInt(a.match(/Version\/([\d.]+)/)[1]);if(c())return parseInt(a.match(/Firefox\/([\d.]+)/)[1])}}}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:attachments-insert-utils-resources', location = 'utils/attachments-insert-utils.js' */
define("confluence-editor/utils/attachments-insert-utils", [
    "underscore",
    "confluence/meta",
    "jquery"
],
function (
    _,
    Meta,
    $
) {
    "use strict";

    return {
        insertFilePlaceholder: function (params, replacedNode, showPropertiesPanelAfterInsert) {
            var tinymce = require('tinymce');

            var DEFAULT_HEIGHT = "250";
            var DEFAULT_HEIGHT_IN_COMMENT = "150";

            params.height = (Meta.get("content-type") === "comment") ? DEFAULT_HEIGHT_IN_COMMENT : DEFAULT_HEIGHT;

            // do not send page title and space key if attachment is in same page
            if (params.ownerId && params.ownerId === Meta.get("content-id")) {
                delete params.page;
                delete params.space;
                delete params.date;
            }

            params = _.omit(_.pick(params, "name", "page", "space", "date", "height"), function (value) {
                return !value;
            });

            var macro = {
                contentId: Meta.get("content-id") || "0",
                macro: {
                    name: "view-file",
                    params: params
                }
            };

            var promise = tinymce.confluence.MacroUtils.insertMacro(macro, replacedNode);
            promise.done(function (macroNode) {
                if (showPropertiesPanelAfterInsert) {
                    $(macroNode).click();
                }
            });
        }
    };
});

require('confluence/module-exporter').safeRequire("confluence-editor/utils/attachments-insert-utils");
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/flextofullsize/editor_plugin_src.js' */
define('confluence-editor/tinymce3/plugins/flextofullsize/editor_plugin_src', [
    'jquery',
    'window',
    'tinymce'
], function(
    $,
    window,
    tinymce
) {
    "use strict";

    var editorWin;
    var editorDoc;
    var containerWin;
    var iframe;
    var table;
    var edHeight;
    var $topToolbar;
    var $bottomToolbar;
    var extraChromeHeight;
    var shadowMargins = 5;

    /* This is a simplified resize function, As we're using table layout we only need to retrieve the size of a parent div*/
    var resizeEditor = function (extraHeight) {
        var iframeContainer = $('#wysiwyg').is(":hidden") ? $('#preview') : $('#wysiwyg');
        iframe = iframeContainer.find("iframe");
        var $headerPrecursor = $("#header-precursor");

        var windowHeight = $(window).height();
        var headerHeight = $headerPrecursor.offset().top + $headerPrecursor.height() + $("#header").height();
        $("#content.edit").height(windowHeight - headerHeight);

        // Ensure that the iframe resizes _after_ the container is resized.
        setTimeout(function () {
            if($('#preview').is(':hidden')) {
                iframe.height(0).height(iframeContainer.height());
            } else {
                $("#content.edit").height("auto");
                var footerHeight = $("#savebar-container").height();

                headerHeight += $("#editor-precursor").height() + $('#conflict-wrapper').height();

                //HACK - CONF41 BN The bottom of the preview iframe is off by this much (no idea why).
                var magicNumber = 4;
                iframe.height(windowHeight - headerHeight - footerHeight - magicNumber);
            }
        }, 1);
    };

    return {
        init : function (ed, url) {
            ed.onInit.add(function (e, l) {
                var editorWin;
                var containerDoc;

                $(ed.getBody()).addClass('fullsize');

                //This plugin is only used for IE/Opera where our 100% height solution does not work with CSS alone.
                if (tinymce.isIE || tinymce.isOpera) {
                    editorWin = ed.getWin();
                    containerWin = $(editorWin.parent);
                    containerDoc = $(editorWin.parent.document);

                    /* In IE we need to ensure that scrollbars are only visible on the body
                     * when in the preview mode. That what these lines do.*/
                    $('body').css({"overflow": "hidden"});

                    /* Setup the circumstances under which the resize function will be called */
                    containerWin.bind('resize.resizeplugin', function () {
                        resizeEditor();
                    });

                    /* Custom events don't bubble to the window. Fixed in jquery 1.6 http://bugs.jquery.com/ticket/8712 */
                    containerDoc.bind('messageClose', function (e) {
                        // messageClose is fired _before_ the element is removed.
                        setTimeout(resizeEditor, 0);
                    });

                    containerDoc.bind("resize.resizeplugin", function (e, data) {
                        resizeEditor(data && data.height);
                    });

                    containerDoc.bind('mode-changed', function (e, data) {
                        resizeEditor();
                    });

                    ed.onChange.add(function () {
                        resizeEditor();
                    });

                    ed.onInit.add(function () {
                        resizeEditor();
                    });
                }
            });
        },

        getInfo : function () {
            return {
                longname : 'flex editor to full size plugin',
                description : 'adjusts height of editor so it always occupies the right space in between the toolbars',
                author : 'Atlassian',
                authorurl : 'http://www.atlassian.com',
                version : "1.0"
            };
        }
    };
});

require('confluence/module-exporter')
        .safeRequire('confluence-editor/tinymce3/plugins/flextofullsize/editor_plugin_src', function(FlexToFullSizePlugin) {
            var tinymce = require('tinymce');

            tinymce.create('tinymce.plugins.flextofullsizeplugin', FlexToFullSizePlugin);

            tinymce.PluginManager.add('flextofullsize', tinymce.plugins.flextofullsizeplugin);
        });

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'i18n/translations.i18n.js' */
define('confluence-editor/i18n/translations.i18n', [
    'ajs'
], function(
    AJS
) {
    "use strict";

    return {
        popup_blocked: "\u0411\u0440\u0430\u0443\u0437\u0435\u0440 \u0437\u0430\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u043b \u0432\u0441\u043f\u043b\u044b\u0432\u0430\u044e\u0449\u0435\u0435 \u043e\u043a\u043d\u043e \u043e\u0442 \u0420\u0435\u0434\u0430\u043a\u0442\u043e\u0440\u0430.",
        ctrl_key: "Ctrl",
        shift_key: "Shift",

        "searchreplace" : {
            search_desc: "\u041d\u0430\u0439\u0442\u0438",
            replace_desc: "\u041d\u0430\u0439\u0442\u0438/\u0417\u0430\u043c\u0435\u043d\u0438\u0442\u044c"
        },
        "searchreplace_dlg" : {
            allreplacedplural: "\u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u043e {0} \u0437\u0430\u043c\u0435\u043d",
            allreplacedsingular: "\u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0430 1 \u0437\u0430\u043c\u0435\u043d\u0430",
            notfound: "\u0417\u0430\u043c\u0435\u043d\u044b \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u044b",
            findlabel: "\u041d\u0430\u0439\u0442\u0438",
            replacelabel: "\u0417\u0430\u043c\u0435\u043d\u0438\u0442\u044c",
            findnext: "\u0414\u0430\u043b\u0435\u0435",
            findprevious: "\u041d\u0430\u0437\u0430\u0434",
            replace: "\u0417\u0430\u043c\u0435\u043d\u0438\u0442\u044c",
            replaceall: "\u0417\u0430\u043c\u0435\u043d\u0438\u0442\u044c \u0432\u0441\u0435",
            close: "\u0417\u0430\u043a\u0440\u044b\u0442\u044c"
        },

        "advhr" : {
            advhr_desc: "tinymce.advhr.advhr_desc"
        },
        "emotions" : {
            emotions_desc: "\u0421\u043c\u0430\u0439\u043b\u044b"
        },
        "emotions_dlg" : {
            title: "\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0441\u043c\u0430\u0439\u043b\u0438\u043a",
            desc: "\u0421\u043c\u0430\u0439\u043b\u044b",
            smile : "\u0423\u043b\u044b\u0431\u043a\u0430 :)",
            sad : "\u0413\u0440\u0443\u0441\u0442\u044c :(",
            tongue : "\u042f\u0437\u044b\u043a :p",
            biggrin : "\u0428\u0438\u0440\u043e\u043a\u0430\u044f \u0443\u043b\u044b\u0431\u043a\u0430 :D",
            wink : "\u041f\u043e\u0434\u043c\u0438\u0433\u0438\u0432\u0430\u043d\u0438\u0435 ;)",
            thumbs_up : "\u0411\u043e\u043b\u044c\u0448\u043e\u0439 \u043f\u0430\u043b\u0435\u0446 (y)",
            thumbs_down : "\u041f\u0430\u043b\u0435\u0446 \u0432\u043d\u0438\u0437 (n)",
            information : "\u0418\u043d\u0444\u043e (i)",
            check : "\u0413\u0430\u043b\u043e\u0447\u043a\u0430 \u200b\u200b(/)",
            error : "\u041e\u0448\u0438\u0431\u043a\u0430 (x)",
            warning : "\u041f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0435 (!)",
            add : "\u041f\u043b\u044e\u0441 (+)",
            forbidden : "\u041c\u0438\u043d\u0443\u0441 (-)",
            help_16 : "\u0417\u043d\u0430\u043a \u0432\u043e\u043f\u0440\u043e\u0441\u0430 (?)",
            lightbulb_on : "\u041b\u0430\u043c\u043f\u043e\u0447\u043a\u0430 \u0433\u043e\u0440\u0438\u0442 (\u0432\u043a\u043b.)",
            lightbulb : "\u041b\u0430\u043c\u043f\u043e\u0447\u043a\u0430 \u043d\u0435 \u0433\u043e\u0440\u0438\u0442 (\u0432\u044b\u043a\u043b.)",
            star_yellow : "\u0416\u0435\u043b\u0442\u0430\u044f \u0437\u0432\u0435\u0437\u0434\u043e\u0447\u043a\u0430 (*y)",
            star_red : "\u041a\u0440\u0430\u0441\u043d\u0430\u044f \u0437\u0432\u0435\u0437\u0434\u043e\u0447\u043a\u0430 (*r)",
            star_green : "\u0417\u0435\u043b\u0435\u043d\u0430\u044f \u0437\u0432\u0435\u0437\u0434\u043e\u0447\u043a\u0430 (*g)",
            star_blue : "\u0421\u0438\u043d\u044f\u044f \u0437\u0432\u0435\u0437\u0434\u043e\u0447\u043a\u0430 (*b)",
            heart : "\u0421\u0435\u0440\u0434\u0446\u0435 \u003c3",
            broken_heart : "\u0420\u0430\u0437\u0431\u0438\u0442\u043e\u0435 \u0441\u0435\u0440\u0434\u0446\u0435 \u003c/3"
        },
        "confluence" : {
            conf_macro_browser: "\u041c\u0430\u043a\u0440\u043e\u0441",
            conf_macro_browser_desc: "\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043c\u0430\u043a\u0440\u043e\u0441",

            conf_image: "\u0418\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435",
            confimage_desc: "\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f",

            conf_file: "\u0424\u0430\u0439\u043b\u044b \u0438 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f",
            confifile_desc: "\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0444\u0430\u0439\u043b\u044b \u0438 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f",

            conf_link: "\u0421\u0441\u044b\u043b\u043a\u0430",
            conflink_desc: "\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0441\u0441\u044b\u043b\u043a\u0443",

            conf_table: "\u0422\u0430\u0431\u043b\u0438\u0446\u0430",

            conf_wikimarkup:"\u0420\u0430\u0437\u043c\u0435\u0442\u043a\u0430",
            conf_wikimarkup_desc:"\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0440\u0430\u0437\u043c\u0435\u0442\u043a\u0443",
            conf_wikimarkup_errors: "\u041e\u0448\u0438\u0431\u043a\u0438 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f Wiki-\u0440\u0430\u0437\u043c\u0435\u0442\u043a\u0438",
            conf_wikimarkup_timeout: "\u0421\u0435\u0440\u0432\u0435\u0440 \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u0434\u043e\u043b\u0433\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u043b \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 wiki-\u0440\u0430\u0437\u043c\u0435\u0442\u043a\u0438. \u042d\u0442\u0430 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439, \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0441\u043d\u043e\u0432\u0430.",
            conf_wikimarkup_hint: "\u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430: \u0412\u044b \u0442\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u0432\u0435\u0441\u0442\u0438 \u0440\u0430\u0437\u043c\u0435\u0442\u043a\u0443 wiki \u043d\u0435\u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u0432 \u0440\u0435\u0434\u0430\u043a\u0442\u043e\u0440\u0435, \u0433\u0434\u0435 \u043e\u043d\u0430 \u0431\u0443\u0434\u0435\u0442 \u043e\u0442\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0430 \u043f\u0440\u0438 \u0432\u0432\u043e\u0434\u0435",

            conf_wikimarkup_markdown_label: "Markdown",
            conf_wikimarkup_confluence_label: "Confluence wiki",

            conf_shortcuts_help_desc: "\u0421\u043f\u0440\u0430\u0432\u043a\u0430 \u043f\u043e \u0431\u044b\u0441\u0442\u0440\u044b\u043c \u0441\u0441\u044b\u043b\u043a\u0430\u043c \u043d\u0430 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u0435",
            conf_insert_button_title: "\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c"
        },
        "table" : {
            desc: "\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0442\u0430\u0431\u043b\u0438\u0446\u0443",
            row_before_desc: "\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0443 \u0434\u043e",
            row_after_desc: "\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0443 \u043f\u043e\u0441\u043b\u0435",
            delete_row_desc: "\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0443",
            numbering_column_desc: "\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0447\u0438\u0441\u043b\u043e\u0432\u043e\u0439 \u0441\u0442\u043e\u043b\u0431\u0435\u0446",
            responsive: "\u0410\u0434\u0430\u043f\u0442\u0438\u0432\u043d\u0430\u044f",
            responsive_tooltip: "\u041a\u043e\u043b\u043e\u043d\u043a\u0438 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0440\u0430\u0441\u0448\u0438\u0440\u044f\u044e\u0442\u0441\u044f, \u043a\u043e\u0433\u0434\u0430 \u0432\u044b \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435. \u041f\u0435\u0440\u0435\u0442\u0430\u0449\u0438\u0442\u0435 \u0433\u0440\u0430\u043d\u0438\u0446\u044b \u043a\u043e\u043b\u043e\u043d\u043a\u0438, \u0447\u0442\u043e\u0431\u044b \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0448\u0438\u0440\u0438\u043d\u0443 \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0434\u0440\u0443\u0433\u0438\u0445 \u043a\u043e\u043b\u043e\u043d\u043e\u043a \u0438\u043b\u0438 \u0448\u0438\u0440\u0438\u043d\u044b \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b",
            fixed_width: "\u0421 \u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0439 \u0448\u0438\u0440\u0438\u043d\u043e\u0439",
            fixed_width_tooltip: "\u041f\u0435\u0440\u0435\u0442\u0430\u0449\u0438\u0442\u0435 \u0433\u0440\u0430\u043d\u0438\u0446\u044b \u043a\u043e\u043b\u043e\u043d\u043a\u0438, \u0447\u0442\u043e\u0431\u044b \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0448\u0438\u0440\u0438\u043d\u0443 \u043a\u043e\u043b\u043e\u043d\u043a\u0438. \u0422\u0430\u0431\u043b\u0438\u0446\u0430 \u0432\u0441\u0435\u0433\u0434\u0430 \u043f\u043e\u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0441 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u043e\u0439 \u0432\u0430\u043c\u0438 \u0448\u0438\u0440\u0438\u043d\u043e\u0439 \u043a\u043e\u043b\u043e\u043d\u043e\u043a.",
            col_before_desc: "\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0441\u0442\u043e\u043b\u0431\u0435\u0446 \u0434\u043e",
            col_after_desc: "\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0441\u0442\u043e\u043b\u0431\u0435\u0446 \u043f\u043e\u0441\u043b\u0435",
            col_copy_desc: "\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u0442\u043e\u043b\u0431\u0435\u0446 \u0442\u0430\u0431\u043b\u0438\u0446\u044b",
            col_paste_desc: "\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0441\u0442\u043e\u043b\u0431\u0435\u0446 \u0442\u0430\u0431\u043b\u0438\u0446\u044b",
            col_cut_desc: "\u0412\u044b\u0440\u0435\u0437\u0430\u0442\u044c \u0441\u0442\u043e\u043b\u0431\u0435\u0446 \u0442\u0430\u0431\u043b\u0438\u0446\u044b",
            delete_col_desc: "\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0441\u0442\u043e\u043b\u0431\u0435\u0446",
            split_cells_desc: "\u0420\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u043d\u044b\u0435 \u044f\u0447\u0435\u0439\u043a\u0438 \u0442\u0430\u0431\u043b\u0438\u0446\u044b",
            merge_cells_desc: "\u041e\u0431\u044a\u0435\u0434\u0438\u043d\u0438\u0442\u044c \u044f\u0447\u0435\u0439\u043a\u0438 \u0442\u0430\u0431\u043b\u0438\u0446\u044b",
            row_desc: "tinymce.table.row_desc",
            cell_desc: "tinymce.table.cell_desc",
            props_desc: "tinymce.table.props_desc",
            paste_row_before_desc: "\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0443 \u0442\u0430\u0431\u043b\u0438\u0446\u044b",
            paste_row_after_desc: "\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0443 \u043f\u043e\u0441\u043b\u0435",
            cut_row_desc: "\u0412\u044b\u0440\u0435\u0437\u0430\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0443 \u0442\u0430\u0431\u043b\u0438\u0446\u044b",
            copy_row_desc: "\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0443 \u0442\u0430\u0431\u043b\u0438\u0446\u044b",
            del: "\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0442\u0430\u0431\u043b\u0438\u0446\u0443",
            row: "\u0421\u0442\u0440\u043e\u043a\u0430",
            col: "\u041a\u043e\u043b\u043e\u043d\u043a\u0430",
            cell: "\u042f\u0447\u0435\u0439\u043a\u0430",
            row_highlight: "\u0412\u044b\u0434\u0435\u043b\u0435\u043d\u043d\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430",
            col_highlight: "\u0412\u044b\u0434\u0435\u043b\u0435\u043d\u043d\u0430\u044f \u043a\u043e\u043b\u043e\u043d\u043a\u0430",
            selection_highlight: "\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0446\u0432\u0435\u0442\u0430 \u044f\u0447\u0435\u0439\u043a\u0438",
            invalid_table_field: "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0442\u0440\u043e\u043a \u0438 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0438\u043c \u043d\u0443\u043b\u044f.",
            table_more_heading: "\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0442\u0430\u0431\u043b\u0438\u0446\u044b",

            //shortcuts
            cut_row_desc_shortcut: "Ctrl+Shift+X",
            copy_row_desc_shortcut: "Ctrl+Shift+C",
            paste_row_before_desc_shortcut: "Ctrl+Shift+V",
            row_before_desc_shortcut: "Alt+\u2191",
            row_after_desc_shortcut: "Alt+\u2193"
        },
        'advanced' : {
            style_select: "tinymce.advanced.style_select",
            font_size: "tinymce.advanced.font_size",
            fontdefault: "tinymce.advanced.fontdefault",
            block: "\u0424\u043e\u0440\u043c\u0430\u0442",
            paragraph: "\u0410\u0431\u0437\u0430\u0446",
            pre: "\u0412\u044b\u0440\u043e\u0432\u043d\u0435\u043d\u043d\u044b\u0439",
            h1: "\u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a 1",
            h2: "\u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a 2",
            h3: "\u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a 3",
            h4: "\u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a 4",
            h5: "\u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a 5",
            h6: "\u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a 6",
            blockquote: "\u0426\u0438\u0442\u0430\u0442\u0430",
            code: "tinymce.advanced.code",
            samp: "tinymce.advanced.samp",
            dt: "tinymce.advanced.dt",
            dd: "tinymce.advanced.dd",
            bold_desc: "\u0416\u0438\u0440\u043d\u044b\u0439",
            italic_desc: "\u041a\u0443\u0440\u0441\u0438\u0432",
            underline_desc: "\u041f\u043e\u0434\u0447\u0435\u0440\u043a\u043d\u0443\u0442\u044b\u0439",
            striketrough_desc: "\u0417\u0430\u0447\u0435\u0440\u043a\u043d\u0443\u0442\u044b\u0439",
            justifyleft_desc:"\u0412\u044b\u0440\u043e\u0432\u043d\u0438\u0442\u044c \u043f\u043e \u043b\u0435\u0432\u043e\u043c\u0443 \u043a\u0440\u0430\u044e",
            justifycenter_desc:"\u0412\u044b\u0440\u043e\u0432\u043d\u0438\u0442\u044c \u043f\u043e \u0446\u0435\u043d\u0442\u0440\u0443",
            justifyright_desc:"\u0412\u044b\u0440\u043e\u0432\u043d\u0438\u0442\u044c \u043f\u043e \u043f\u0440\u0430\u0432\u043e\u043c\u0443 \u043a\u0440\u0430\u044e",
            justifyfull_desc:"\u0412\u044b\u0440\u043e\u0432\u043d\u044f\u0442\u044c \u043f\u043e \u0448\u0438\u0440\u0438\u043d\u0435",
            bullist_desc:"\u041c\u0430\u0440\u043a\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a",
            numlist_desc:"\u041d\u0443\u043c\u0435\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a",
            tasklist_desc:"\u0421\u043f\u0438\u0441\u043e\u043a \u0437\u0430\u0434\u0430\u0447",
            outdent_desc:"\u0423\u0431\u0440\u0430\u0442\u044c \u043e\u0442\u0441\u0442\u0443\u043f",
            indent_desc:"\u0421\u0434\u0435\u043b\u0430\u0442\u044c \u043e\u0442\u0441\u0442\u0443\u043f",
            undo_desc:"\u041e\u0442\u043c\u0435\u043d\u0438\u0442\u044c",
            redo_desc:"\u0412\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c",
            link_desc:"tinymce.advanced.link_desc",
            unlink_desc:"\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0441\u0441\u044b\u043b\u043a\u0443",
            image_desc:"tinymce.advanced.image_desc",
            cleanup_desc:"tinymce.advanced.cleanup_desc",
            code_desc:"tinymce.advanced.code_desc",
            sub_desc:"\u041d\u0438\u0436\u043d\u0438\u0439 \u0438\u043d\u0434\u0435\u043a\u0441",
            sup_desc:"\u0412\u0435\u0440\u0445\u043d\u0438\u0439 \u0438\u043d\u0434\u0435\u043a\u0441",
            hr_desc:"\u0413\u043e\u0440\u0438\u0437\u043e\u043d\u0442\u0430\u043b\u044c\u043d\u0430\u044f \u043b\u0438\u043d\u0438\u044f",
            removeformat_desc:"tinymce.advanced.removeformat_desc",
            custom1_desc:"tinymce.advanced.custom1_desc",
            forecolor_desc:"\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0446\u0432\u0435\u0442 \u0442\u0435\u043a\u0441\u0442\u0430",
            backcolor_desc:"tinymce.advanced.backcolor_desc",
            charmap_desc:"\u0421\u0438\u043c\u0432\u043e\u043b",
            visualaid_desc:"tinymce.advanced.visualaid_desc",
            anchor_desc:"tinymce.advanced.anchor_desc",
            cut_desc:"tinymce.advanced.cut_desc",
            copy_desc:"tinymce.advanced.copy_desc",
            paste_desc:"tinymce.advanced.paste_desc",
            image_props_desc:"tinymce.advanced.image_props_desc",
            newdocument_desc:"tinymce.advanced.newdocument_desc",
            help_desc:"\u041f\u043e\u043c\u043e\u0449\u044c",
            blockquote_desc:"tinymce.advanced.blockquote_desc",
            path:"tinymce.advanced.path",
            newdocument:"tinymce.advanced.newdocument",
            toolbar_focus:"tinymce.advanced.toolbar_focus",
            more_colors:"tinymce.advanced.more_colors",

            //shortcuts
            paragraph_shortcut: "Ctrl +0",
            pre_shortcut: "Ctrl +7",
            h1_shortcut: "Ctrl+1",
            h2_shortcut: "Ctrl+2",
            h3_shortcut: "Ctrl+3",
            h4_shortcut: "Ctrl+4",
            h5_shortcut: "Ctrl+5",
            h6_shortcut: "Ctrl+6",
            blockquote_shortcut: "Ctrl+8",
            bullist_shortcut:"Ctrl+Shift+B",
            numlist_shortcut:"Ctrl+Shift+N",
            tasklist_shortcut:"[ \u0437\u0430\u0442\u0435\u043c ]",
            undo_shortcut:"Ctrl + Z",
            redo_shortcut:"Ctrl + Y"
        },

        "colorpicker" : {
            more_colors: "\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0446\u0432\u0435\u0442\u0430",
            title: "\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0446\u0432\u0435\u0442",
            picker_tab: "\u0411\u0440\u0430\u0443\u0437\u0435\u0440",
            picker_title: "C\u0440\u0435\u0434\u0441\u0442\u0432\u043e \u0432\u044b\u0431\u043e\u0440\u0430 \u0446\u0432\u0435\u0442\u0430",
            palette_title: "tinymce.colorpicker.palette_title",
            named_tab: "tinymce.colorpicker.named_tab",
            named_title: "tinymce.colorpicker.named_title",
            color: "\u0426\u0432\u0435\u0442",
            name: "tinymce.colorpicker.name",
            apply: "tinymce.colorpicker.apply"
        },

        "hints" : {
            drafts: "\u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430: Confluence \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u0447\u0435\u0440\u043d\u043e\u0432\u0438\u043a\u0438 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438. \u0415\u0441\u043b\u0438 \u0412\u044b \u043a\u043e\u0433\u0434\u0430-\u043d\u0438\u0431\u0443\u0434\u044c \u043f\u043e\u0442\u0435\u0440\u044f\u0435\u0442\u0435 \u043e\u043a\u043d\u043e, \u0432\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0435 \u0412\u0430\u0448\u0443 \u0440\u0430\u0431\u043e\u0442\u0443 \u0438\u0437 \u043c\u0435\u043d\u044e \u0022\u0418\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f -\u003e \u0427\u0435\u0440\u043d\u043e\u0432\u0438\u043a\u0438\u0022.",
            dnd: "\u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430: \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0435\u0440\u0435\u0442\u0430\u0441\u043a\u0438\u0432\u0430\u0442\u044c \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0438 \u0444\u0430\u0439\u043b\u044b Office \u0441 \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0430 \u043f\u0440\u044f\u043c\u043e \u0432 \u044d\u0442\u043e\u0442 \u0440\u0435\u0434\u0430\u043a\u0442\u043e\u0440.",

            insert_link_recently_viewed: "\u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430: \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0022\u003cstrong\u003e[\u003c/strong\u003e\u0022 \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0438 \u0432\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0441\u0441\u044b\u043b\u043a\u0443.",
            insert_link_search: "\u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430: \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0022\u003cstrong\u003e[\u003c/strong\u003e\u0022 \u0438 \u0447\u0430\u0441\u0442\u044c \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0447\u0442\u043e\u0431\u044b \u043d\u0430\u0439\u0442\u0438 \u0441\u0441\u044b\u043b\u043a\u0443 \u043d\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443.",
            insert_link_end: "\u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430: \u043d\u0430\u0436\u043c\u0438\u0442\u0435 \u003cstrong\u003eCtrl+Shift+K\u003c/strong\u003e \u043f\u043e\u0441\u043b\u0435 \u043d\u0430\u0431\u043e\u0440\u0430 \u0441\u043b\u043e\u0432\u0430 \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u0441\u0441\u044b\u043b\u043a\u0438 \u043d\u0430 \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443. \u041d\u0430\u0436\u043c\u0438\u0442\u0435 \u043a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u044e \u0441\u043d\u043e\u0432\u0430 \u0434\u043b\u044f \u043f\u043e\u0432\u0442\u043e\u0440\u0435\u043d\u0438\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u0441\u043e\u0432\u043f\u0430\u0434\u0435\u043d\u0438\u0439.",
            insert_link_newpage: "\u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430: \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u003cstrong\u003e\u0022[\u0022\u003c/strong\u003e \u0438 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0412\u044b \u0436\u0435\u043b\u0430\u0435\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u0442\u044c, \u0447\u0442\u043e\u0431\u044b \u0443\u0432\u0438\u0434\u0435\u0442\u044c \u0432\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u0443\u044e \u0432 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0441\u0441\u044b\u043b\u043a\u0443.",
            insert_link_user_mention: "\u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430: \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0443\u043f\u043e\u043c\u044f\u043d\u0443\u0442\u044c \u043a\u043e\u0433\u043e-\u0442\u043e \u0432 Confluence, \u043d\u0430\u0431\u0440\u0430\u0432 \u0022\u003cstrong\u003e@\u003c/strong\u003e\u0022 \u0438 \u0437\u0430\u0442\u0435\u043c \u0435\u0433\u043e \u0438\u043c\u044f.",

            insert_image_on_page: "\u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430: \u043d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u0022\u003cstrong\u003e!\u003c/strong\u003e\u0022 \u0434\u043b\u044f \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430 \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0445 \u0432 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439 \u0438 \u0432\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043e\u0434\u043d\u043e \u0438\u0437 \u043d\u0438\u0445.",
            insert_image_search: "\u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430: \u043d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u0022\u003cstrong\u003e!\u003c/strong\u003e\u0022 \u0438 \u0447\u0430\u0441\u0442\u044c \u0438\u043c\u0435\u043d\u0438 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0447\u0442\u043e\u0431\u044b \u043d\u0430\u0439\u0442\u0438 \u0438 \u0432\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435.",
            insert_image_end: "\u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430: \u043d\u0430\u0436\u043c\u0438\u0442\u0435 \u003cstrong\u003eCtrl+Shift+M\u003c/strong\u003e \u043f\u043e\u0441\u043b\u0435 \u043d\u0430\u0431\u043e\u0440\u0430 \u0441\u043b\u043e\u0432\u0430 \u0447\u0442\u043e\u0431\u044b \u043d\u0430\u0439\u0442\u0438 \u0438 \u0432\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0441\u043e\u043e\u0442\u0432\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f.",

            insert_wikimarkup: "\u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430: \u0440\u0435\u0434\u0430\u043a\u0442\u043e\u0440 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0440\u0430\u0437\u043c\u0435\u0442\u043a\u0443 \u043f\u043e \u043c\u0435\u0440\u0435 \u0435\u0435 \u0432\u0432\u043e\u0434\u0430.",
            insert_wikimarkup_dialog: "\u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430: \u043d\u0430\u0436\u043c\u0438\u0442\u0435 \u003cstrong\u003eCtrl+Shift+D\u003c/strong\u003e \u0447\u0442\u043e\u0431\u044b \u043e\u0442\u043a\u0440\u044b\u0442\u044c \u0434\u0438\u0430\u043b\u043e\u0433\u043e\u0432\u043e\u0435 \u043e\u043a\u043d\u043e \u0440\u0430\u0437\u043c\u0435\u0442\u043a\u0438 Wiki.",

            insert_link: "\u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430: \u043d\u0430\u0436\u043c\u0438\u0442\u0435 \u003cstrong\u003eCtrl+K\u003c/strong\u003e \u0447\u0442\u043e\u0431\u044b \u043e\u0442\u043a\u0440\u044b\u0442\u044c \u0431\u0440\u0430\u0443\u0437\u0435\u0440 \u0441\u0441\u044b\u043b\u043e\u043a.",
            insert_image: "\u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430: \u043d\u0430\u0436\u043c\u0438\u0442\u0435 \u003cstrong\u003eCtrl+M\u003c/strong\u003e \u0447\u0442\u043e\u0431\u044b \u043e\u0442\u043a\u0440\u044b\u0442\u044c \u0431\u0440\u0430\u0443\u0437\u0435\u0440 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439.",

            insert_macro: "\u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430: \u043d\u0430\u0436\u043c\u0438\u0442\u0435 \u003cstrong\u003eCtrl+Shift+A\u003c/strong\u003e \u0447\u0442\u043e\u0431\u044b \u043e\u0442\u043a\u0440\u044b\u0442\u044c \u0431\u0440\u0430\u0443\u0437\u0435\u0440 \u043c\u0430\u043a\u0440\u043e\u0441\u043e\u0432.",
            insert_macro_toc: "\u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430: \u043f\u043e\u0437\u0432\u043e\u043b\u044c\u0442\u0435 \u0441\u0438\u0441\u0442\u0435\u043c\u0435 Confluence \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043e\u0433\u043b\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0434\u0430\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u00ab\u0412\u0441\u0442\u0430\u0432\u043a\u0430 -\u003e \u041e\u0433\u043b\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u00bb",

            insert_bullet_list: "\u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430: \u043d\u0430\u0436\u043c\u0438\u0442\u0435 \u003cstrong\u003eCtrl+Shift+B\u003c/strong\u003e \u0447\u0442\u043e\u0431\u044b \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043c\u0430\u0440\u043a\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a.",
            insert_numbered_list: "\u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430: \u043d\u0430\u0436\u043c\u0438\u0442\u0435 \u003cstrong\u003eCtrl+Shift+N\u003c/strong\u003e \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043d\u0443\u043c\u0435\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0430.",
            insert_heading: "\u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430: \u043d\u0430\u0436\u043c\u0438\u0442\u0435 \u003cstrong\u003eCtrl+1\u003c/strong\u003e \u0447\u0442\u043e\u0431\u044b \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a 1-\u0433\u043e \u0443\u0440\u043e\u0432\u043d\u044f, \u003cstrong\u003eCtrl+2\u003c/strong\u003e \u0434\u043b\u044f \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430 2-\u0433\u043e \u0443\u0440\u043e\u0432\u043d\u044f \u0438 \u0442\u0430\u043a \u0434\u0430\u043b\u0435\u0435.",
            insert_table: "\u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430: \u043d\u0430\u0436\u043c\u0438\u0442\u0435 \u003cstrong\u003eCtrl+Shift+I\u003c/strong\u003e \u0447\u0442\u043e\u0431\u044b \u0432\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0442\u0430\u0431\u043b\u0438\u0446\u0443.",
            table_rows_copy: "\u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430: \u043d\u0430\u0436\u043c\u0438\u0442\u0435 \u003cstrong\u003eCtrl+Shift+C\u003c/strong\u003e \u0447\u0442\u043e\u0431\u044b \u0441\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0443 \u0438 \u003cstrong\u003eCtrl+Shift+V\u003c/strong\u003e \u0447\u0442\u043e\u0431\u044b \u0432\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0435\u0435 \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0443.",
            table_rows_cut: "\u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430: \u043d\u0430\u0436\u043c\u0438\u0442\u0435 \u003cstrong\u003eCtrl+Shift+X\u003c/strong\u003e \u0447\u0442\u043e\u0431\u044b \u0432\u044b\u0440\u0435\u0437\u0430\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0443 \u0438  \u003cstrong\u003eCtrl+Shift+V\u003c/strong\u003e \u0447\u0442\u043e\u0431\u044b \u0432\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0435\u0435 \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0443.",
            insert_newline: "\u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430: \u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u003cstrong\u003eShift+Enter\u003c/strong\u003e \u0447\u0442\u043e\u0431\u044b \u0432\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0430\u0431\u0437\u0430\u0446 \u0431\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u043b\u0430",

            autoformat_heading1: "\u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430: \u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0022\u003cstrong\u003eh1. Title\u003c/strong\u003e\u0022 \u0447\u0442\u043e\u0431\u044b \u0431\u044b\u0441\u0442\u0440\u043e \u0432\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a 1.",
            autoformat_heading3: "\u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430: \u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u003cstrong\u003e\u0022h3 Title.\u0022\u003c/strong\u003e \u0447\u0442\u043e\u0431\u044b \u0431\u044b\u0441\u0442\u0440\u043e \u0432\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a 3.",
            autoformat_code: "\u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430: \u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0022\u003cstrong\u003e{{code}}\u003c/strong\u003e\u0022 \u0447\u0442\u043e\u0431\u044b \u0431\u044b\u0441\u0442\u0440\u043e \u0432\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043c\u043e\u043d\u043e\u0448\u0438\u0440\u0438\u043d\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442."
        },

        "auiwindowmanager" : {
            cancel: "\u041e\u0442\u043c\u0435\u043d\u0438\u0442\u044c",
            ok: "\u041e\u041a"
        },

        "propertypanel" : {
            links_goto: "\u041f\u0440\u043e\u0439\u0442\u0438 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435",
            links_edit: "\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c",
            links_unlink: "\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0441\u0441\u044b\u043b\u043a\u0443",

            links_goto_disabled_tooltip: "\u042d\u0442\u0430 \u0441\u0441\u044b\u043b\u043a\u0430 \u0432\u0435\u0434\u0435\u0442 \u043d\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u0443\u0435\u043c\u043e\u0439 \u0432\u0430\u043c\u0438 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b",
            links_edit_tooltip: "\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0434\u0438\u0430\u043b\u043e\u0433 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0441\u0441\u044b\u043b\u043a\u0438",
            links_unlink_tooltip: "\u0417\u0430\u043c\u0435\u043d\u0438\u0442\u0435 \u0441\u0441\u044b\u043b\u043a\u0443 \u0441 \u0442\u0435\u043a\u0441\u0442\u043e\u043c \u044d\u0442\u043e\u0433\u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0433\u043e",

            images_small: "\u041c\u0430\u043b\u0435\u043d\u044c\u043a\u0438\u0439",
            images_medium: "\u0421\u0440\u0435\u0434\u043d\u0438\u0439",
            images_large: "\u041a\u0440\u0443\u043f\u043d\u044b\u0439",
            images_original: "\u041e\u0440\u0438\u0433\u0438\u043d\u0430\u043b\u044c\u043d\u044b\u0439",
            images_border: "\u0413\u0440\u0430\u043d\u0438\u0446\u0430",

            images_link_create: "\u0421\u0441\u044b\u043b\u043a\u0430",
            images_link_edit: "\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u0441\u044b\u043b\u043a\u0443",
            images_link_remove: "\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0441\u0441\u044b\u043b\u043a\u0443",
            images_link_create_tooltip: "\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0441\u0441\u044b\u043b\u043a\u0443 \u0434\u043b\u044f \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043d\u0430 \u0434\u0440\u0443\u0433\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u043d\u0442",
            images_link_edit_tooltip: "\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0441\u0441\u044b\u043b\u043a\u0443 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f",
            images_link_remove_tooltip: "\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0441\u0441\u044b\u043b\u043a\u0443 \u043d\u0430 \u044d\u0442\u043e \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435",

            images_sizing_tooltip: "\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f",
            images_small_tooltip: "\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0438\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0438 \u0432\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0441\u0441\u044b\u043b\u043a\u0443 \u043d\u0430 \u043e\u0440\u0438\u0433\u0438\u043d\u0430\u043b",
            images_medium_tooltip: "\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0441\u0440\u0435\u0434\u043d\u0438\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0438 \u0432\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0441\u0441\u044b\u043b\u043a\u0443 \u043d\u0430 \u043e\u0440\u0438\u0433\u0438\u043d\u0430\u043b",
            images_large_tooltip: "\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043a\u0440\u0443\u043f\u043d\u044b\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0438 \u0432\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0441\u0441\u044b\u043b\u043a\u0443 \u043d\u0430 \u043e\u0440\u0438\u0433\u0438\u043d\u0430\u043b",
            images_original_tooltip: "\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043e\u0440\u0438\u0433\u0438\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f",
            images_thumbnail_tooltip: "tinymce.propertypanel.images.thumbnail.tooltip",
            images_border_tooltip: "\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u043a\u043e\u043d\u0442\u0443\u0440 \u0432\u043e\u043a\u0440\u0443\u0433 \u0440\u0438\u0441\u0443\u043d\u043a\u0430"
        }
    };
});

require('confluence/module-exporter').exportModuleAsGlobal('confluence-editor/i18n/translations.i18n', 'TinyMCELang');

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'toolbar/toolbar.soy' */
// This file was automatically generated from toolbar.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace Confluence.Templates.Editor.Toolbar.
 */

if (typeof Confluence == 'undefined') { var Confluence = {}; }
if (typeof Confluence.Templates == 'undefined') { Confluence.Templates = {}; }
if (typeof Confluence.Templates.Editor == 'undefined') { Confluence.Templates.Editor = {}; }
if (typeof Confluence.Templates.Editor.Toolbar == 'undefined') { Confluence.Templates.Editor.Toolbar = {}; }


Confluence.Templates.Editor.Toolbar.toolbarButton = function(opt_data, opt_ignored) {
  return '<li id="' + soy.$$escapeHtml(opt_data.button.id) + '" class="toolbar-item ' + soy.$$escapeHtml(opt_data.button.className) + '" data-tooltip="' + soy.$$escapeHtml(opt_data.button.tooltip) + '" data-weight="' + soy.$$escapeHtml(opt_data.button.weight) + '"><a class="toolbar-trigger aui-button" href="#" data-control-id="' + soy.$$escapeHtml(opt_data.button.id) + '"><span class="icon ' + soy.$$escapeHtml(opt_data.button.icon) + '"></span><span class="trigger-text">' + soy.$$escapeHtml(opt_data.button.title) + '</span></a></li>';
};
if (goog.DEBUG) {
  Confluence.Templates.Editor.Toolbar.toolbarButton.soyTemplateName = 'Confluence.Templates.Editor.Toolbar.toolbarButton';
}

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/confcharmap/editor_plugin_src.js' */
/*
 * Extracted out our version of the charmap (from advanced theme).
 * It is easier to manage and upgrade tinymce this way.
 */
define('confluence-editor/tinymce3/plugins/confcharmap/editor_plugin_src', [
    'tinymce'
], function(
    tinymce
) {
    "use strict";

    return {
        init : function(ed, url) {
            // Register commands
            ed.addCommand('confCharmap', function() {

                ed.windowManager.open({
                    id: "insert-char-dialog",
                    url : tinymce.settings.editor_plugin_action_base_path + '/charmap.action',
                    width : 600 + parseInt(ed.getLang('advanced.charmap_delta_width', 0)),
                    height : 290 + parseInt(ed.getLang('advanced.charmap_delta_height', 0)),
                    inline : true,
                    name: "advanced.charmap_desc"
                });

            });
        },

        getInfo : function() {
            return {
                longname : 'Confluence Charmap Plugin',
                author : 'Atlassian',
                authorurl : 'http://www.atlassian.com',
                version : tinymce.majorVersion + "." + tinymce.minorVersion
            };
        }
    };
});

require('confluence/module-exporter').safeRequire('confluence-editor/tinymce3/plugins/confcharmap/editor_plugin_src', function(ConfCharmapPlugin) {
    var tinymce = require('tinymce');

    tinymce.create('tinymce.plugins.ConfCharmapPlugin', ConfCharmapPlugin);

    // Register plugin
    tinymce.PluginManager.add("confcharmap", tinymce.plugins.ConfCharmapPlugin);
});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/confluencelist/editor_plugin_src.js' */
/*
 * Confluence List Plugin
 */
define('confluence-editor/tinymce3/plugins/confluencelist/editor_plugin_src', [
    'jquery',
    'ajs',
    'tinymce'
], function(
    $,
    AJS,
    tinymce
) {
    "use strict";

    return {
        init : function(ed, url) {
            !tinymce.isIE8 && ed.onKeyDown.add(function (ed, e) {
                if (e.keyCode !== 8) { // backspace
                    return;
                }

                var range = ed.selection.getRng(true);
                var $currentListItem = $(range.startContainer).closest("li", ed.getBody());

                if ($currentListItem.length === 0) {
                    return;
                }

                if (!AJS.EditorUtils.isCursorAtStartOf($currentListItem[0], range)) {
                    return;
                }

                var $previousListItem = $currentListItem.prev("li");
                var previousListItem;
                var currentListItem = $currentListItem[0];
                var $cursorElement; // the cursor will be set just before this element

                /**
                 * Appends a trailing BR element if the last child of the specified element is:
                 *
                 * (a) inline
                 * (b) and not already a BR element
                 *
                 */
                function appendBr(element) {
                    if (!element || !element.lastChild) {
                        return;
                    }

                    if (!ed.dom.isBlock(element.lastChild) && !$(element.lastChild).is("br")) {
                        $(element).append("<br/>");
                    }
                }

                if ($previousListItem.length > 0) {
                    previousListItem = $previousListItem[0];

                    $cursorElement = $(currentListItem.firstChild);
                    if (tinymce.isIE9 && $cursorElement.length === 0) {
                        $cursorElement = $("<br/>").appendTo($currentListItem);
                    } else if ($cursorElement.is("p")) {
                        $cursorElement = $cursorElement.contents().first();
                    }

                    ed.undoManager.beforeChange();
                    ed.undoManager.add();

                    if ($(previousListItem.lastChild).is("p") && !ed.dom.isBlock(currentListItem.firstChild)) {
                        appendBr(previousListItem.lastChild);
                        $currentListItem.contents().each(function (index, element) {
                            if (ed.dom.isBlock(element)) {
                                return false; // stop iterating
                            }
                            $(previousListItem.lastChild).append($(element).detach());
                        });
                    } else if ($(currentListItem.firstChild).is("p") && !ed.dom.isBlock(previousListItem.lastChild)) {
                        appendBr(previousListItem);
                        $.each($.makeArray($previousListItem.contents()).reverse(), function (index, element) {
                            if (ed.dom.isBlock(element)) {
                                return false; // stop iterating
                            }
                            $(currentListItem.firstChild).prepend($(element).detach());
                        });
                    } else {
                        appendBr(previousListItem);
                    }

                    $previousListItem.append($currentListItem.detach().contents());

                    if ($cursorElement[0]) {
                        AJS.EditorUtils.setCursorAtStartOfContents($cursorElement[0]);
                    }

                    ed.undoManager.add();

                    return tinymce.dom.Event.cancel(e);
                }
            });
        },

        getInfo : function() {
            return {
                longname : 'Confluence List Plugin',
                author : 'Atlassian',
                authorurl : 'http://www.atlassian.com',
                version : tinymce.majorVersion + "." + tinymce.minorVersion
            };
        }
    };
});

require('confluence/module-exporter').safeRequire('confluence-editor/tinymce3/plugins/confluencelist/editor_plugin_src', function(ConfluenceListPlugin) {
    var tinymce = require('tinymce');

    tinymce.create('tinymce.plugins.ConfluenceListPlugin', ConfluenceListPlugin);

    tinymce.PluginManager.add("confluencelist", tinymce.plugins.ConfluenceListPlugin);
});



}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/atlassianemotions/editor_plugin_src.js' */
/**
 * editor_plugin_src.js
 *
 * Copyright 2009, Moxiecode Systems AB
 * Released under LGPL License.
 *
 * License: http://tinymce.moxiecode.com/license
 * Contributing: http://tinymce.moxiecode.com/contributing
 */
define('confluence-editor/tinymce3/plugins/atlassianemotions/editor_plugin_src', [
    'tinymce',
    'jquery'
], function(
    tinymce,
    $
) {
    "use strict";

    return {
        init : function(ed, url) {
            // Register commands
            ed.addCommand('mceEmotion', function() {
                ed.windowManager.open({
                    file : tinymce.settings.editor_plugin_action_base_path + '/emotions.action',
                    width : 190 + parseInt(ed.getLang('emotions.delta_width', 0)),
                    height : 125 + parseInt(ed.getLang('emotions.delta_height', 0)),
                    inline : 1,
                    id: "insert-emoticon-dialog",
                    name : "emotions_dlg.title"
                }, {
                    plugin_url : url
                });
            });

            // Register buttons
            ed.addButton('emotions', {title : 'emotions.emotions_desc', cmd : 'mceEmotion'});

            // CONFDEV-2652 - Deal with click of emoticons - reposition cursor to the left or right depending on where
            // the users clicked on the emoticon
            ed.onClick.add(function(ed, e) {
                var n = e.target;
                var $n;
                var rng;
                if(n.nodeName === 'IMG') {
                    $n = $(n);
                    if($n.hasClass('emoticon')) {
                        rng = ed.selection.getRng(true);
                        var clickOffsetX = e.offsetX || (e.layerX - n.x);
                        var width = n.width;
                        if(clickOffsetX < width / 2) {
                            // Click on left side - move cursor before
                            rng.setStartBefore(n);
                            rng.setEndBefore(n);
                        } else {
                            // Click on left side - move cursor after
                            rng.setStartAfter(n);
                            rng.setEndAfter(n);

                        }
                        ed.selection.setRng(rng);
                        ed.selection.collapse();

                        return tinymce.dom.Event.prevent(e);
                    }
                }
            });
        },

        getInfo : function() {
            return {
                longname : 'Emotions',
                author : 'Moxiecode Systems AB',
                authorurl : 'http://tinymce.moxiecode.com',
                infourl : 'http://wiki.moxiecode.com/index.php/TinyMCE:Plugins/emotions',
                version : tinymce.majorVersion + "." + tinymce.minorVersion
            };
        }
    };
});

require('confluence/module-exporter').safeRequire('confluence-editor/tinymce3/plugins/atlassianemotions/editor_plugin_src', function(EmotionsPlugin) {
    var tinymce = require('tinymce');
    tinymce.create('tinymce.plugins.EmotionsPlugin', EmotionsPlugin);
    // Register plugin
    tinymce.PluginManager.add('emotions', tinymce.plugins.EmotionsPlugin);
});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'com/atlassian/confluence/tinymceplugin/tinymce-confluence.js' */
/* eslint confluence/must-use-amd:0 */
//TODOXHTML extract some of the util methods from adapter to here
tinymce.confluence = tinymce.confluence || {};

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'breadcrumbs/tinymce-breadcrumbs-oninit-rte.js' */
define('confluence-editor/breadcrumbs/tinymce-breadcrumbs-oninit-rte', [
    'ajs',
    'jquery',
    'document'
], function(
    AJS,
    $,
    document
) {
    "use strict";

    return function () {
        // Move breadcrumbs into editor precursor
        function moveIntoEditor() {
            var bc = $('#breadcrumbs');
            bc.detach();
            if(!bc.find('.edited-page-title').length && $title.length) {
                bc.append($title);
            }
            $('#editor-precursor .cell').prepend(bc);
        }

        function moveIntoTitle() {
            var bc = $('#breadcrumbs').detach();
            $title.detach();
            $('#breadcrumb-section').append(bc);
        }

        if (AJS.Meta.get('content-type') !== 'comment') {

            var $quickEditBreadcrumbs = $('#quickedit-breadcrumbs');
            if ($quickEditBreadcrumbs.length > 0) {
                $('#breadcrumbs').detach();
                $quickEditBreadcrumbs.attr('id', 'breadcrumbs');
                $('#breadcrumb-section').append($quickEditBreadcrumbs);
            }

            // Remove breadcrumb title added by velocity for later use
            var $title = $('.edited-page-title').parent().detach();

            moveIntoEditor();

            // Move breadcrumbs between preview / edit
            $(document).bind("mode-changed", function (e, mode) {
                if (mode === "preview") {
                    moveIntoTitle();
                } else if (mode === "richtext") {
                    moveIntoEditor();
                }
            });
        }
    };
});

require('confluence/module-exporter').safeRequire('confluence-editor/breadcrumbs/tinymce-breadcrumbs-oninit-rte', function(init) {
    require('ajs').bind("init.rte", init);
});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'utils/tinymce-node-utils.js' */
define('confluence-editor/utils/tinymce-node-utils', [
    'tinymce',
    'ajs',
    'jquery'
], function(
    tinymce,
    AJS,
    $
) {
    "use strict";

    var uniqueIdCounter = 0;

    var that;
    that = {

        /**
         * Controls the editor while updating placeholder nodes with new data and attributes.
         *
         * - Handles data and attribute update requests to the server.
         * - Provides feedback to the user as to the progress of a placeholder's update.
         *
         * @param node The existing DOM node that will be updated
         * @returns a jQuery promise object to which you can attach callbacks.
         *
         * @note You will need to create your own undo steps before and/or after you call this function.
         */
        updateNode: function (node, newNode) {
            var ed = tinymce.activeEditor;
            var $oldNode = $(node, ed.getDoc());
            var synchronyId = 'confluence.update-node-' + uniqueIdCounter++;

            AJS.trigger('synchrony.stop', { id: synchronyId });

            var revertNodeState = that.prepareNodeForUpdate($oldNode);

            return that.replaceNode($oldNode, newNode)
                    .fail(revertNodeState)
                    .always(function() {
                        AJS.trigger('synchrony.start', { id: synchronyId });
                    })
                    .promise();
        },

        storeNodeState: function ($node, attrs) {
            var attributeCache = {};
            var attr;
            for (var i = 0, ii = attrs.length; i < ii; i++) {
                attr = attrs[i];
                attributeCache[attr] = $node.attr(attr);
            }
            return function() {
                for (var attr in attributeCache) {
                    $node.attr(attr, attributeCache[attr]);
                }
            };
        },

        prepareNodeForUpdate: function ($node) {
            var restoreNodeState = null;

            if ($node.is("img")) {
                restoreNodeState = that.storeNodeState($node, ["width", "height", "src", "class"]);

                // Update the image node to indicate we're doing something.
                $node.addClass("image-hotswap").attr({
                    "src": AJS.contextPath() + "/images/border/spacer.gif",
                    "width": $node.attr("width"),
                    "height": $node.attr("height")
                });
            }
            return restoreNodeState;
        },

        /**
         * Controls the replacement of old nodes in the editor with new ones.
         *
         * Handles replacement such that there should be no flashes of unstyled content,
         * as could be the case with images.
         *
         * @param oldNode The existing DOM node that will be replaced
         * @param newNode The html for a new node, the DOM element or a jQuery wrapped DOM node
         * @returns a jQuery promise object to which you can attach callbacks.
         */
        replaceNode: function (oldNode, newNode) {
            var ed = tinymce.activeEditor;
            var doc = that.getDoc();
            var $newNode = $(newNode, doc);
            var $oldNode = $(oldNode, doc);
            var synchronyId = 'confluence.replace-node-' + uniqueIdCounter++;

            AJS.trigger('synchrony.stop', { id: synchronyId });

            /**
             * Waiting for an image to be fully loaded into the DOM in the background is an asynchronous operation - hence use a jQuery.Deferred here.
             */
            return $.Deferred(function () {
                var deferred = this;

                if ($newNode.is("img")) {
                    /**
                     * Here we're delaying the replacement of the node until the image's src has been
                     * fully loaded by the browser.
                     */
                    $newNode[0].onload = function() {
                        AJS.debug("replaceNode: new node's src has been loaded by the browser.");
                        this.onload = null;
                        deferred.resolve(this);
                    };
                    // In Opera, the src has to be defined after the onLoad callback or it won't work.
                    if ($.browser.opera) {
                        $newNode[0].src = $newNode.attr('src');
                    }
                    /**
                     * Trigger rendering of the new DOM node, in turn requesting the image's src,
                     * ultimately triggering the onLoad event above.
                     */
                    doc.createDocumentFragment().appendChild($newNode[0]);
                } else {
                    deferred.resolve($newNode[0]);
                }
            }).always(function() {
                AJS.trigger('synchrony.start', { id: synchronyId });
            }).done(function(newNode) {
                $oldNode.replaceWith(newNode);
            }).promise();
        },

        /**
         * Replaces whatever the active range in the editor is with the node.
         * If no text is selected in the editor, the node will be placed at the cursor position,
         * and the cursor will be placed after the new node.
         * @param newNode element to put into the editor.
         */
        replaceSelection: function(newNode) {
            var ed = tinymce.activeEditor;
            var range = ed.selection.getRng(true);
            var node;
            var tmpNode;
            var selectRange;

            selectRange =  ed.getDoc().createRange();

            //we have a mess off event handlers, so we need to make sure we clone them too.
            node = $(newNode).clone(true,false)[0];
            // Delete the currently-selected content
            range.deleteContents();
            //the text node can not be empty for some reason in ie
            if(range.startContainer.nodeType === 3 && range.startContainer.nodeValue === "") {
                range.startContainer.nodeValue = AJS.Rte.HIDDEN_CHAR;
            }
            // Replace it with the new node
            range.insertNode(node);

            var text = ed.getDoc().createTextNode(AJS.Rte.HIDDEN_CHAR);
            ed.dom.insertAfter(text,node);
            tmpNode = text;

            selectRange.setStartBefore(tmpNode);
            selectRange.setEndAfter(tmpNode);
            selectRange.collapse(false);
            ed.selection.setRng(selectRange);
            return node;
        },

        /**
         * Wraps the browser's implementation of node.normalize()
         * and preserves the user's cursor position or text selection.
         *
         * Prevents CONF-23457, CONF-23461, CONF-23601 and CONFDEV-6141.
         * Sidesteps http://code.google.com/p/chromium/issues/detail?id=100687
         */
        normalize: function(node) {
            var ed = tinymce.activeEditor;
            var range = ed.selection.getRng(true);
            var newRange;
            var childNodeGraph = [];
            var values;
            var oldContainer;

            if (!node || !node.childNodes) { return; }

            /**
             * Returns an array of data about each child node of the node to be normalized.
             *
             * Each entry will contain an object with three values:
             *     isTextNode: whether the child @ this index is a text node or not.
             *     textNodesBefore: How many text nodes will be consolidated before this child.
             *     precedingTextLength: The cumulative length of all the *consecutive*
             *     text nodes prior to this one.
             *
             * These values can be used to determine the equivalence between children of
             * the node once it's been normalized.
             */
            function getChildNodeGraph(node) {
                var graph = [];
                var runningLength = 0;
                $.each(node.childNodes, function(i, child) {
                    var data = {};
                    var lastChild = (graph[i-1] || {});

                    // Set our values.
                    data.isTextNode = (child.nodeType === 3);
                    data.textNodesBefore = ((data.isTextNode && lastChild.isTextNode) ? 1 : 0) + ~~lastChild.textNodesBefore;
                    data.precedingTextLength = runningLength;

                    // Increment or reset our counters as required.
                    runningLength = (data.isTextNode) ? runningLength + child.nodeValue.length : 0;

                    graph.push(data);
                });
                return graph;
            }

            if (tinymce.isWebKit) {
                // Webkit's saving grace is that it updates the previous range's offsets to match the new normalized nodes.
                newRange = range;
            } else if (tinymce.isGecko) {
                // Firefox just places the cursor at the end of the consolidated node, which isn't useful.
                // Calculate what the new range's offsets should be after the nodes are consolidated.
                newRange = range.cloneRange();
                values = {
                    startIndex: $.inArray(range.startContainer, node.childNodes),
                    startOffset: newRange.startOffset,
                    endIndex: $.inArray(range.endContainer, node.childNodes),
                    endOffset: newRange.endOffset
                };
                if (values.startIndex > -1 || values.endIndex > -1) {
                    // the cursor/selection is inside an element that will be normalized.
                    // we will need to derive the correct containers later.
                    childNodeGraph = getChildNodeGraph(node);
                }
            }

            // Run the browser's Node.normalize() function
            node.normalize();

            /*
             * If the user's cursor was inside a text node,
             * Firefox will have just jumped the cursor to the end of the consolidated text node.
             *
             * We'll check the start and end containers of the original range.
             * If the original cursor/selection's container was in line to be normalized,
             * Use the graph created earlier to determine the index of the new equivalent text node,
             * and the cumulative length of the text that preceded the cursor/selection's boundary.
             */
            if (tinymce.isGecko) {
                // Adjust the start container+offset if required
                if (oldContainer = childNodeGraph[values.startIndex]) {
                    values.newStartIndex = values.startIndex - oldContainer.textNodesBefore;
                    values.newStartOffset = values.startOffset + oldContainer.precedingTextLength;
                    newRange.setStart(node.childNodes[values.newStartIndex], values.newStartOffset);
                }
                // Adjust the end container+offset if required
                if (oldContainer = childNodeGraph[values.endIndex]) {
                    values.newEndIndex = values.endIndex - oldContainer.textNodesBefore;
                    values.newEndOffset = values.endOffset + oldContainer.precedingTextLength;
                    newRange.setEnd(node.childNodes[values.newEndIndex], values.newEndOffset);
                }
            }

            // Put the cursor/selection back in the appropriate spot.
            newRange && ed.selection.setRng(newRange);
        },

        /**
         * For when you need to create elements on the correct document object.
         *
         * - Firefox and Opera won't fire callbacks or add nodes to the editor
         *   unless you use the page's document.
         * - Webkit works with either document object, but has an issue
         *   with the page's document where it will re-create the node when
         *   passing it to the editor's iframe, which will in turn cause its
         *   callbacks and handles to fire twice.
         * - IE needs to use the editor's document.
         *
         * @returns the best document object to create nodes on, depending on the browser.
         */
        getDoc: function() {
            var ed = tinymce.activeEditor;
            return ($.browser.mozilla || $.browser.opera) ? document : ed.getDoc();
        },

        /**
         * Dissects the DOM at the boundaries of the editor's currently selected range
         * to create a standalone, contextually valid document fragment. Adjusts the editor's
         * selection to wholly contain this document fragment.
         *
         * This is analogous to taking a mountain range and cutting it in two places,
         * running from the tip of a peak down to ground level.
         *
         *    /\|           |                /\    |                  |
         *   /  |\  /\      |/\             /  \   |   /\  /\         |   /\
         *  /   | \/  \    /|  \     ===>  /    \  |  /  \/  \    /\  |  /  \
         * /    |      \/\/ |   \         /      \ | /        \/\/  \ | /    \
         *      |           |    \                \|/                \|/      \
         *
         */
        isolateSelectedRange: function () {
            var ed = tinymce.activeEditor;
            var doc = that.getDoc();
            var selection = ed.selection;
            var r = selection.getRng(true);
            var start = r.startContainer;
            var startOffset = r.startOffset;
            var end = r.endContainer;
            var endOffset = r.endOffset;
            var adjustedEndOffset;
            var rangeStartNode;
            var rangeEndNode;

            // If there's nothing selected, there's no point doing anything at all.
            if (r.collapsed) {
                return r;
            }

            /**
             * Finds the optimal gap between two DOM nodes at which to
             * dissect the DOM and split it in to two parts.
             * If such a gap does not exist (such as inside a text node), it will be created.
             *
             * Returns an array of two nodes: the outside node and the inside node.
             * The inside node is always the first result in the array.
             * Returns undefined if no dissection needs to occur.
             *
             * @param start the node in which the content to dissect resides.
             * @param offset the position inside the start node at which the content must be dissected.
             * @param root the node at which dissection would go no further down.
             * @param outsideOnRight if true, the outside node will be the node to the immediate right of the inside node.
             *                       otherwise, it will be the node to the immediate left of the inside node.
             */
            function findIncisionPoint(start, offset, root, outsideOnRight) {
                var outside = null;
                var inside = null;
                var direction;
                var boundary;
                var temp;

                outsideOnRight = (outsideOnRight) ? true : false;
                direction = (outsideOnRight) ? "nextSibling" : "previousSibling";

                // determine if our incision point starts at a boundary point between two nodes.
                boundary = (offset === 0); // boundary is on the left edge of the node
                if (!boundary && outsideOnRight) {
                    // check if the split point is at the right edge of the node
                    if (start.nodeType === 3) {
                        boundary = (offset === start.length);
                    } else {
                        boundary = (offset === start.childNodes.length);
                    }
                }

                if (boundary) {
                    // our offset is already placed between two nodes.
                    // Just grab references to those two nodes.
                    outside = start[direction];
                    inside = start;

                    // Move the incision point as high as possible in the DOM
                    while (outside === null) {
                        if (inside === root) {
                            return;
                        } else if (inside.parentNode === root) {
                            // our incision point rests against the edge of the root node,
                            // so there's no outside node.
                            break;
                        }
                        inside = inside.parentNode;
                        outside = inside[direction];
                    }
                } else {
                    // we might need to split a node in half.
                    if (start.nodeType === 3) {
                        temp = start.data;
                        start.data = temp.slice(offset); // take end
                        outside = doc.createTextNode(temp.slice(0, offset)); // take start
                        inside = start;
                        $(outside).insertBefore(inside);

                        if (outsideOnRight) {
                            // Swap the two sides around.
                            temp = inside;
                            inside = outside;
                            outside = temp;
                        }
                    } else {
                        inside = start.childNodes[offset - (outsideOnRight ? 1 : 0)];
                        outside = inside[direction];
                    }
                }

                return [inside, outside];
            }

            /**
             * Splits the DOM in to two distinct and correctly-nested halves, using
             * the gap between the 'outside' and 'inside' node as the fulcrum to split around.
             *
             * @param root the node at which the dissection will stop at.
             * @param outsideOnRight if true, the outside node is considered to be the node to the immediate right of the inside node.
             *                       otherwise, it is considered to be the node to the immediate left of the inside node.
             */
            function dissect(outside, inside, root, outsideOnRight) {
                var outsideContainer;
                var insideContainer;
                var t1;
                var t2;
                outsideOnRight = (outsideOnRight) ? true : false;

                while (inside !== root && inside.parentNode !== root) {
                    insideContainer = inside.parentNode;
                    outsideContainer = insideContainer.cloneNode(false); // clones attribute, not children
                    if (outsideOnRight) {
                        $(outsideContainer).insertAfter(insideContainer);
                        t1 = outside;
                        while(t1) {
                            t2 = t1.nextSibling;
                            outsideContainer.appendChild(t1);
                            t1 = t2;
                        }
                    } else {
                        $(outsideContainer).insertBefore(insideContainer);
                        t1 = insideContainer.firstChild;
                        while(t1 !== inside) {
                            t2 = t1.nextSibling;
                            outsideContainer.appendChild(t1);
                            t1 = t2;
                        }
                    }

                    outside = outsideContainer;
                    inside = insideContainer;
                }
                return inside;
            }

            function split(start, offset, outsideOnRight) {
                var root;
                var halves;
                var rangeBoundaryNode;

                root = ed.dom.getParent(start, ed.dom.isBlock);

                if (!root) {
                    // tinyMce does not consider <body> to be a block-level element,
                    // which is actually always the highest block-level element available.
                    // So if root is null, manually set root to the <body>
                    root = ed.getBody();
                }

                // Find out if we need to split the DOM at all.
                halves = findIncisionPoint(start, offset, root, outsideOnRight);
                if (!halves) {
                    // no dissection is required.
                    rangeBoundaryNode = undefined;
                } else if (!halves[1]) {
                    // there is no outer content to be concerned with,
                    // so the range should be adjusted to include the inside node.
                    rangeBoundaryNode = halves[0];
                } else {
                    // dissect the DOM between the inside and outside node.
                    rangeBoundaryNode = dissect(halves[1], halves[0], root, outsideOnRight);
                }
                return rangeBoundaryNode;
            }


            if (start === end) {
                // Assuming the first split happens,
                // We need to adjust the offset for the end, as it will change.
                adjustedEndOffset = endOffset - startOffset;
            }

            rangeStartNode = split(start, startOffset);
            rangeStartNode && r.setStartBefore(rangeStartNode);
            if (start !== r.startContainer) {
                // If the start container has changed, affect the endOffset if required.
                endOffset = adjustedEndOffset || endOffset;
            }
            rangeEndNode = split(end, endOffset, true);
            rangeEndNode && r.setEndAfter(rangeEndNode);

            selection.setRng(r);
            return r;
        }
    };

    return that;
});

require('confluence/module-exporter').exportModuleAsGlobal('confluence-editor/utils/tinymce-node-utils', 'tinymce.confluence.NodeUtils');

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'autoformat/wiki-autoformat-oninit-rte.js' */
define('confluence-editor/wiki-autoformat', [
    'ajs',
    'jquery',
    'document',
    'window'
], function(
    AJS,
    $,
    document,
    window
) {
    "use strict";

    var WikiAutoformat = function (jQueryEvent, data) {

        var tinymce = require('tinymce');

        var rangeAfterAutoFormat;

        if (AJS.Meta.get('remote-user') && AJS.Meta.get('confluence.prefs.editor.disable.autoformat')) {
            return; //autoformat enabled by default and for anon-users
        }

        function encodeDomNode(domNode){
            return $('<div>').append( domNode.cloneNode(true) ).html();
        }
        function getStartContainer(lengthOfMatch, currentTextNode, currentOffset) {
            var siblingParent;
            var siblingIndex;
            if (!currentTextNode) {
                throw new Error("text node is null");
            }
            if (currentTextNode.nodeType !== 3) {
                currentTextNode = currentTextNode.childNodes[currentOffset - 1];
                currentOffset = currentTextNode.length;
            }

            for (var ps = currentTextNode, runningOffset = currentOffset; ps && ps.nodeType === 3; ps = ps.previousSibling) {
                if (runningOffset == -1) {
                    runningOffset = ps.nodeValue.length;
                }

                if (runningOffset > lengthOfMatch) {
                    return {
                        container: ps,
                        offset: runningOffset - lengthOfMatch
                    };
                } else if (runningOffset == lengthOfMatch) {
                    siblingIndex = 0;
                    siblingParent = ps.parentNode;
                    while (ps = ps.previousSibling) {
                        siblingIndex++;
                    }
                    return {
                        container: siblingParent,
                        offset: siblingIndex
                    };
                } else {
                    lengthOfMatch -= runningOffset;
                    runningOffset = -1;
                }
            }

            return null;
        }

        /**
         * Assuming | is the caret marker the caret could be positioned as such:
         * <p><textNode>content of text node|</textNode></p>
         *                                  ^
         * or (less obviously) as such:
         * <p><textNode>content of text node</textNode>|</p>
         *                                             ^
         */
        function getTextFromPreviousSiblingTextNodes(range) {
            var currentNode;
            var currentOffset;
            if (!range || !range.collapsed) {
                throw new Error("range is null or not collapsed");
            }
            currentNode = range.startContainer;
            currentOffset = range.startOffset;

            if (currentNode.nodeType === 1 && currentOffset > 0) {
                //descend into the relevent child node
                currentNode = currentNode.childNodes[range.startOffset - 1];
                if (currentNode.nodeType === 3) {
                    //It's a text node so we'll use it.
                    currentOffset = currentNode.nodeValue.length;
                } else {
                    //We're working under the assumption that the start container will never be
                    // higher than textnode.parentNode.
                    return "";
                }
            } else if (currentNode.nodeType !== 3) {
                //not a text node or element, we can assume "".
                return "";
            }

            var result = currentNode.nodeValue.substring(0, currentOffset);

            for (var ps = currentNode.previousSibling; ps && ps.nodeType === 3; ps = ps.previousSibling) {
                result = ps.nodeValue + result;
            }

            return result;
        }


        function createHandler(regex, fragmentCreator, swallowTriggerChar, containerFilter) {
            return {
                handles: function (ed) {
                    var result = false;
                    var range = ed.selection.getRng(true);
                    var candidateTextNode = range.commonAncestorContainer || {};

                    if (!range.collapsed) {
                        return false;
                    }

                    // CONFDEV-4376: Autoformat should be disabled in preformatted text.
                    if ($(candidateTextNode).closest("pre,.text-placeholder").length) {
                        return false;
                    }

                    if (containerFilter && $(candidateTextNode).closest(containerFilter).length) {
                        return false;
                    }

                    result = regex.test(getTextFromPreviousSiblingTextNodes(range));

                    return result;
                },
                execute: function (ed, nativeEvent, jQueryEvent) {
                    var range;
                    var combinedText;
                    var matchGroups;
                    var matchGroupsOffset = 1;
                    var startContainerData;
                    var commonAncestor;
                    var charCode = getCharCode(nativeEvent);

                    if (charCode === 32) {
                        ed.execCommand('mceInsertContent', false, '&nbsp;'); //spaces don't stick around for undos (it's tragic, I know)
                    } else {
                        ed.execCommand('mceInsertContent', false, String.fromCharCode(charCode));
                    }
                    ed.undoManager.beforeChange();
                    ed.undoManager.add();

                    range = ed.selection.getRng(true);
                    combinedText = getTextFromPreviousSiblingTextNodes(range);

                    //CONFDEV-4771 Just for tables, add a space at the end and change the offset for matchGroups
                    //This fixes and IE8 issue where the table autoformat didn't always work
                    if(combinedText[combinedText.length-1] == '|') {
                        combinedText += ' ';
                        matchGroupsOffset = 0;
                    }

                    matchGroups = regex.exec(combinedText.substring(0, combinedText.length-1)); // regexes need to work for handles() where trigger character has not been appended
                    startContainerData = getStartContainer(matchGroups[1].length+matchGroupsOffset, range.commonAncestorContainer, range.startOffset);
                    range.setStart(startContainerData.container, startContainerData.offset);
                    commonAncestor = $(range.commonAncestorContainer);
                    ed.selection.setRng(range); //we have to set the editors selection now that we have modified the range to have text selected

                    if (commonAncestor.closest(".wysiwyg-macro-body").length && range.toString() == commonAncestor.text()){
                        //if the entire text of container node is selected and we're in a macro, don't let let the macro get deleted
                        commonAncestor[0].innerHTML = "<br>";
                        ed.selection.select(commonAncestor[0].childNodes[0]);
                        ed.selection.collapse(true);//mceInsertContent throws an exception when only <br> is selected
                    } else {
                        //else delete the selection since the area will be kept cursor targetable by whatever else is there.
                        ed.execCommand('delete', false, {}, {skip_undo: true});
                    }

                    fragmentCreator(matchGroups, ed.selection.getRng(true));
                    rangeAfterAutoFormat = ed.selection.getRng(true);

                    if (swallowTriggerChar) {
                        jQueryEvent.preventDefault();
                        jQueryEvent.stopPropagation();
                        tinymce.dom.Event.cancel(nativeEvent);
                        // CONFDEV-2503 - cancelling the event stops the browser from scrolling to the new content
                        // so manually scroll there.
                        AJS.Rte.showElement(rangeAfterAutoFormat.startContainer);
                        return false;
                    }
                }
            };
        }

        function getCharCode (nativeEvent) {
            return $.browser.msie ? nativeEvent.keyCode : nativeEvent.which;
        }

        function HandlerManager () {
            this.handlers = {};
        }
        HandlerManager.prototype = {
            registerHandler: function (triggerCharCode, handler) {
                if (!this.handlers[triggerCharCode]) {
                    this.handlers[triggerCharCode] = [];
                }

                this.handlers[triggerCharCode].push(handler);
            },
            executeHandlers: function (triggerCharCode, ed, nativeEvent, jQueryEvent) {
                var result = true;
                $.each(this.handlers[triggerCharCode] || [], function (i, handler) {
                    if (handler.handles(ed)) {
                        result = handler.execute(ed, nativeEvent, jQueryEvent);
                        return false; // signal end of iteration
                    }
                });

                return result;
            }
        };

        var ed = data.editor;
        var handlerManager = new HandlerManager();

        /* Emoticons */

        /** Create an Emoticon object and register it with the handlerManager */
        function Emoticon(triggerChar, handlerRegex, emoticon, title, image, secret) {
            var triggerCharCode = triggerChar.charCodeAt(0);
            var imagePath = AJS.Rte.getResourceUrlPrefix() + "/images/icons/emoticons/" + image;
            var handler;

            handler = createHandler(handlerRegex, function() {
                var img = ed.dom.createHTML("img", {
                    "src" : imagePath,
                    "alt" : ed.getLang(title),
                    "title" : ed.getLang(title),
                    "border" : 0,
                    "class" : "emoticon emoticon-" + emoticon,
                    "data-emoticon-name" : emoticon
                });
                ed.execCommand('mceInsertContent', false, img, {skip_undo: true});
            }, true);
            this.imagePath = imagePath;
            handlerManager.registerHandler(triggerCharCode, handler);
        }

        var emoticons = [
            new Emoticon(")", WikiAutoformat.regularExpressions._REGEXES_EMOTICON.SMILE, "smile", "emotions_dlg.smile", "smile.png"),
            new Emoticon("(", WikiAutoformat.regularExpressions._REGEXES_EMOTICON.SAD, "sad", "emotions_dlg.sad", "sad.png"),
            new Emoticon("P", WikiAutoformat.regularExpressions._REGEXES_EMOTICON.CHEEKY, "cheeky", "emotions_dlg.tongue", "tongue.png"),
            new Emoticon("p", WikiAutoformat.regularExpressions._REGEXES_EMOTICON.CHEEKY_2, "cheeky", "emotions_dlg.tongue", "tongue.png"),
            new Emoticon("D", WikiAutoformat.regularExpressions._REGEXES_EMOTICON.LAUGH, "laugh", "emotions_dlg.biggrin", "biggrin.png"),
            new Emoticon(")", WikiAutoformat.regularExpressions._REGEXES_EMOTICON.WINK, "wink", "emotions_dlg.wink", "wink.png"),
            new Emoticon(")", WikiAutoformat.regularExpressions._REGEXES_EMOTICON.THUMBS_UP, "thumbs-up", "emotions_dlg.thumbs_up", "thumbs_up.png"),
            new Emoticon(")", WikiAutoformat.regularExpressions._REGEXES_EMOTICON.THUMBS_DOWN, "thumbs-down", "emotions_dlg.thumbs_down", "thumbs_down.png"),
            new Emoticon(")", WikiAutoformat.regularExpressions._REGEXES_EMOTICON.INFORMATION, "information", "emotions_dlg.information", "information.png"),
            new Emoticon(")", WikiAutoformat.regularExpressions._REGEXES_EMOTICON.TICK, "tick", "emotions_dlg.check", "check.png"),
            new Emoticon(")", WikiAutoformat.regularExpressions._REGEXES_EMOTICON.CROSS, "cross", "emotions_dlg.error", "error.png"),
            new Emoticon(")", WikiAutoformat.regularExpressions._REGEXES_EMOTICON.WARNING, "warning", "emotions_dlg.warning", "warning.png"),
            new Emoticon(")", WikiAutoformat.regularExpressions._REGEXES_EMOTICON.PLUS, "plus", "emotions_dlg.add", "add.png"),
            new Emoticon(")", WikiAutoformat.regularExpressions._REGEXES_EMOTICON.MINUS, "minus", "emotions_dlg.forbidden", "forbidden.png"),
            new Emoticon(")", WikiAutoformat.regularExpressions._REGEXES_EMOTICON.QUESTION, "question", "emotions_dlg.help_16", "help_16.png"),
            new Emoticon(")", WikiAutoformat.regularExpressions._REGEXES_EMOTICON.LIGHT_ON, "light-on", "emotions_dlg.lightbulb_on", "lightbulb_on.png"),
            new Emoticon(")", WikiAutoformat.regularExpressions._REGEXES_EMOTICON.LIGHT_OFF, "light-off", "emotions_dlg.lightbulb", "lightbulb.png"),
            new Emoticon(")", WikiAutoformat.regularExpressions._REGEXES_EMOTICON.YELLOW_STAR, "yellow-star", "emotions_dlg.star_yellow", "star_yellow.png"),
            new Emoticon(")", WikiAutoformat.regularExpressions._REGEXES_EMOTICON.YELLOW_STAR_2, "yellow-star", "emotions_dlg.star_yellow", "star_yellow.png"),
            new Emoticon(")", WikiAutoformat.regularExpressions._REGEXES_EMOTICON.RED_STAR, "red-star", "emotions_dlg.star_red", "star_red.png"),
            new Emoticon(")", WikiAutoformat.regularExpressions._REGEXES_EMOTICON.GREEN_STAR, "green-star", "emotions_dlg.star_green", "star_green.png"),
            new Emoticon(")", WikiAutoformat.regularExpressions._REGEXES_EMOTICON.BLUE_STAR, "blue-star", "emotions_dlg.star_blue", "star_blue.png"),
            new Emoticon("3", WikiAutoformat.regularExpressions._REGEXES_EMOTICON.HEART, "heart", "emotions_dlg.heart", "heart.png"),
            new Emoticon("3", WikiAutoformat.regularExpressions._REGEXES_EMOTICON.BROKEN_HEAR, "broken-heart", "emotions_dlg.broken_heart", "broken_heart.png")
        ];

        var i;

        // Preload the emoticon images for faster auto-complete response
        var emoticonImages = [];
        for (i=0; i < emoticons.length; i++) {
            emoticonImages[i] = new window.Image();
            emoticonImages[i].src = emoticons[i].imagePath;
        }

        /* End Emoticons */
        function formatInlineText (inlineFormat, content) {
            var format = ed.formatter.get(inlineFormat)[0];
            var domNode = ed.dom.create(format.inline, {style: format.styles});
            domNode.appendChild(document.createTextNode(content + "{$caret}"));
            ed.execCommand('mceInsertContent', false, encodeDomNode(domNode), {skip_undo: true});
            ed.formatter.remove(inlineFormat); //disable the format so that typing after doesn't come out formatted
        }

        //add handlers for common inline wikimarkup styling
        var handlerFormatMap = {'*':'bold', '_':'italic', '~':'subscript', '^':'superscript', '+':'underline', '-':'strikethrough'};
        $.each(handlerFormatMap, function(handler, format){
            var regex = new RegExp('(?:[\\s\\xA0\\u200b\\uFEFF]+|^)(\\' + handler + '(?=[^\\s' + handler + '])([^' + handler + ']*?[^\\s]))$'); //\\xA0 is &nbsp; which is used in ie to create cursor targets
            handlerManager.registerHandler(handler.charCodeAt(0), createHandler(regex, function (matchGroups) { // require a space before asterisk to handle people using asterisk to denote footnotes
                formatInlineText(format, matchGroups[2]);
            }, true));
        });

        //register the code element with tiny's text formatter engine (move this into tinymce.init config)
        ed.formatter.register('code', {inline : 'code'});
        handlerManager.registerHandler("}".charCodeAt(0), createHandler(/(?:[\s\xA0\u200b]+|^)({{(?=[^\s])([^}]*?[^\s])})$/, function (matchGroups) {
            formatInlineText('code', matchGroups[2]);
        }, true));

        //headers h1-h6
        for (i = 1; i <= 6; i++) {
            (function (count) {
                handlerManager.registerHandler(" ".charCodeAt(0), createHandler(new RegExp("^\\u200b?(h" + count + "\\.)$"), function () {
                    ed.execCommand('formatBlock', false, 'h' + count, {skip_undo: true});
                }, true));
            })(i);
        }

        handlerManager.registerHandler(" ".charCodeAt(0), createHandler(/^\u200b?(bq\.)$/, function () {
            ed.execCommand('formatBlock', false, 'blockquote', {skip_undo: true});
        }, true));

        handlerManager.registerHandler(" ".charCodeAt(0), createHandler(/^\u200b?(\*)$/, function () {
            ed.plugins.lists.applyList('UL', 'OL');
        }, true));

        handlerManager.registerHandler(" ".charCodeAt(0), createHandler(/^\u200b?(\#)$/, function () {
            ed.plugins.lists.applyList('OL', 'UL');
        }, true));

        handlerManager.registerHandler(" ".charCodeAt(0), createHandler(/^\u200b?(1\.)$/, function () {
            ed.plugins.lists.applyList('OL', 'UL');
        }, true));

        handlerManager.registerHandler(" ".charCodeAt(0), createHandler(/^\u200b?(\-)$/, function () {
            var dom = ed.dom;
            var list;
            ed.plugins.lists.applyList('UL', 'OL');
            list = dom.getParent(ed.selection.getNode(), 'OL,UL');
            if (list) {
                dom.setStyles(list, {listStyleType:'square'});
                list.removeAttribute('data-mce-style');
            }
        }, true));

        AJS.trigger("confluence.editor.registerHandlers", {handlerManager: handlerManager, createHandler: createHandler, ed: ed});
        /**
         * Handle "->" to be an arrow for left and right or both.
         */

        var bothArrowHandler = createHandler(/((\<\-\-?\>)([^\s-]*))$/, function (matchGroups) {
            var bothArrow = "\u2194";
            ed.execCommand('mceInsertContent', false, bothArrow + matchGroups[3], {skip_undo: true});
        }, false);
        handlerManager.registerHandler(" ".charCodeAt(0), bothArrowHandler);
        handlerManager.registerHandler(13, bothArrowHandler);

        var rightArrowHandler = createHandler(/((\-\-?\>)([^\s-]*))$/, function (matchGroups) {
            var rightArrow = "\u2192";
            ed.execCommand('mceInsertContent', false, rightArrow + matchGroups[3], {skip_undo: true});
        }, false);
        handlerManager.registerHandler(" ".charCodeAt(0), rightArrowHandler);
        handlerManager.registerHandler(13, rightArrowHandler);

        var leftArrowHandler = createHandler(/((\<\-\-?)([^\s-]*))$/, function (matchGroups) {
            var leftArrow = "\u2190";
            ed.execCommand('mceInsertContent', false, leftArrow + matchGroups[3], {skip_undo: true});
        }, false);
        handlerManager.registerHandler(" ".charCodeAt(0), leftArrowHandler);
        handlerManager.registerHandler(13, leftArrowHandler);

        /**
         * Handle em and en dashes where there are surrounding spaces
         */
        handlerManager.registerHandler(" ".charCodeAt(0), createHandler(/[^-]*[\s](\-\-\-?)$/, function (matchGroups) {
            var dash = matchGroups[1].length === 2 ? "\u2013" : "\u2014";
            ed.execCommand('mceInsertContent', false, dash, {skip_undo: true});
        }, false));
        /**
         * Handle em and en dashes with words on either side of the dashes. Delay the autoformat until a space or enter is
         * pressed after the last word has been typed. That is, for "foo--bar", only trigger when a space or enter is
         * pressed after "bar".
         */
        var dashHandler = createHandler(/(([^\s-]+)(\-\-\-?)([^\s-]+))$/, function (matchGroups) {
            var dash = matchGroups[3].length === 2 ? "\u2013" : "\u2014";
            ed.execCommand('mceInsertContent', false, matchGroups[2] + dash + matchGroups[4], {skip_undo: true});
        }, false);
        handlerManager.registerHandler(" ".charCodeAt(0), dashHandler);
        handlerManager.registerHandler(13, dashHandler);

        var hrHandler = createHandler(/^\u200b?(\-\-\-\-)$/, function () {
            ed.execCommand('mceInsertContent', false, '<hr />', {skip_undo: true});
        }, true);

        handlerManager.registerHandler(" ".charCodeAt(0), hrHandler);
        handlerManager.registerHandler(13, hrHandler);

        handlerManager.registerHandler(13, createHandler(/(^\u200b?\|\|\s*(?:[^|]*\s?\|\|\s?)+$)/, function (matchGroups) {
            var tableMarkup = "<table class='confluenceTable'><tr>";
            var tableRows = "";
            var cellsEmpty = true;
            var cellWords = $(matchGroups[1].slice(2,-2).split('||')).map(function(cellWord){
                cellWord = $.trim(this);
                cellsEmpty = cellsEmpty && cellWord == "";
                return cellWord;
            });
            if (cellsEmpty) {
                cellWords[0] = "\u043f\u0435\u0440\u0432\u0430\u044f \u044f\u0447\u0435\u0439\u043a\u0430";
            }

            for (var k = 0, l = cellWords.length; k < l; k++) {
                tableMarkup += "<th class='confluenceTh'>" + cellWords[k] + "</th>";
                tableRows += "<td class='confluenceTd'>" + AJS.Rte.ZERO_WIDTH_WHITESPACE + "</td>";
            }
            tableMarkup += "</tr><tr>" + tableRows + "</tr></table>";
            ed.execCommand('mceInsertContent', false, tableMarkup, {skip_undo: true});
            ed.selection.select($(ed.selection.getRng(true).commonAncestorContainer).parents('table').find(cellsEmpty ? 'th' : 'td')[0].childNodes[0]);
            $(ed.selection.getRng().startContainer).parent().closest('[contenteditable="true"]').focus();
        }, true));

        handlerManager.registerHandler(13, createHandler(/(^\u200b?\|\s?(?:[^|]*\s?\|\s?)+$)/, function (matchGroups) {
            var tableMarkup = "<table class='confluenceTable'><tr>";
            var cellsEmpty = true;
            var cellWords = $(matchGroups[1].slice(1,-1).split('|')).map(function(cellWord){
                cellWord = $.trim(this);
                cellsEmpty = cellsEmpty && cellWord == "";
                return cellWord;
            });
            if (cellsEmpty) {
                cellWords[0] = "\u043f\u0435\u0440\u0432\u0430\u044f \u044f\u0447\u0435\u0439\u043a\u0430";
            }
            for (var k = 0, l = cellWords.length; k < l; k++) {
                tableMarkup += "<td class='confluenceTd'>" + cellWords[k] + "</td>";
            }
            tableMarkup += "</tr></table>";
            ed.execCommand('mceInsertContent', false, tableMarkup, {skip_undo: true});
            cellsEmpty && ed.selection.select($(ed.selection.getRng(true).commonAncestorContainer).parents('table').find('td')[0].childNodes[0]);
            $(ed.selection.getRng().startContainer).parent().closest('[contenteditable="true"]').focus();
        }, true));

        var urlHandler = createHandler(/\b(((https?|ftp):\/\/|(www\.))[\w\.\$\-_\+!\*'\(\),/\?:@=&%#~;\[\]]+)$/, function (matchGroups) {
            //if a protocol is not provided, add http:// to the url.
            var url = matchGroups[3] ? matchGroups[1] : "http://" + matchGroups[1];
            var domNode = ed.dom.create('a', {href: url});
            domNode.appendChild(document.createTextNode(matchGroups[1]));
            ed.execCommand('mceInsertContent', false, encodeDomNode(domNode), {skip_undo: true});
            ed.getDoc().execCommand('unlink', false, {});
        }, false, 'a');
        handlerManager.registerHandler(" ".charCodeAt(0), urlHandler);
        handlerManager.registerHandler(13, urlHandler);

        var emailHandler = createHandler(
                /*eslint-disable max-len*/
                /\b((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)$/i,
                /*eslint-enable max-len*/
                function (matchGroups) {
                    var domNode = ed.dom.create('a', {href: 'mailto:' + matchGroups[1]});
                    domNode.appendChild(document.createTextNode(matchGroups[1]));
                    ed.execCommand('mceInsertContent', false, encodeDomNode(domNode), {skip_undo: true});
                    ed.getDoc().execCommand('unlink', false, {});
                }, false, 'a');
        handlerManager.registerHandler(" ".charCodeAt(0), emailHandler);
        handlerManager.registerHandler(13, emailHandler);

        var addQuickCorrect = function(regexLiteral, replacement) {
            var handler = createHandler(regexLiteral, function () {
                ed.execCommand('mceInsertContent', false, replacement, {skip_undo: true});
            }, false);
            handlerManager.registerHandler(" ".charCodeAt(0), handler);
            handlerManager.registerHandler(13, handler);
        };

        addQuickCorrect(/(?:\b|^)([Jj]ira)$/, "JIRA");
        addQuickCorrect(/(?:\b|^)(bitbucket|[Bb]itBucket)$/, "Bitbucket");
        addQuickCorrect(/(?:\b|^)(atlassian)$/, "Atlassian");
        addQuickCorrect(/(?:\b|^)([Hh]ipchat)$/, "HipChat");

        var WIKI_TRIGGER_TO_REGEX = {
            "]" : WikiAutoformat.regularExpressions._REGEXES.WIKI_LINK,
            "}" : WikiAutoformat.regularExpressions._REGEXES.WIKI_MACRO,
            "!" : WikiAutoformat.regularExpressions._REGEXES.WIKI_EMBED
        };
        $.each(WIKI_TRIGGER_TO_REGEX, function (trigger, regex) {
            handlerManager.registerHandler(trigger.charCodeAt(0), createHandler(regex, function (matchGroups, range) {
                var wiki = matchGroups[1] + trigger;
                var request = {
                    type : "POST",
                    contentType : "application/json; charset=utf-8",
                    url : AJS.Meta.get("context-path") + "/rest/tinymce/1/wikixhtmlconverter",
                    data : $.toJSON({
                        wiki : wiki,
                        entityId :  AJS.Meta.get("content-id"),
                        spaceKey : AJS.Meta.get("space-key"),
                        suppressFirstParagraph : true
                    }),
                    dataType : "text", // if this is switched back to json be sure to use "text json". See CONFDEV-4799 for details.
                    timeout : 5000
                };

                if (trigger == "}") {
                    tinymce.confluence.MacroUtils.insertMacro(request);
                } else if (trigger == "!") {
                    $.ajax(request).done(function (data) {
                        if (!wiki === data) {
                            tinymce.confluence.ImageUtils.insertImagePlaceholder(data);
                        }
                        else {
                            // insertImagePlaceholder doesn't handle unchanged text
                            ed.execCommand('mceInsertContent', false, data, {skip_undo: true});
                        }
                    });
                } else {
                    $.ajax(request).done(function (data) {
                        /**
                         * Skip undo here because the editor at this point is not in a state that we want to "undo" to.
                         * (specifically, the editor has just had the wiki text the user just typed in removed - in
                         * preparation for the insertion of the actual markup returned by the server.
                         */
                        ed.execCommand('mceInsertContent', false, data, {skip_undo: true});
                    });
                }

            }, true));
        });

        ed.onKeyPress.addToTop(function (ed, nativeEvent) {
            return handlerManager.executeHandlers(getCharCode(nativeEvent), ed, nativeEvent, jQueryEvent);
        });

        return {

        };
    };

    WikiAutoformat.regularExpressions = {
        /**
         * An internal map of regexes. Expose for testing.
         */
        _REGEXES : {
            WIKI_MACRO : /(?:\s|^)(\{[^{^}]+)$/,
            WIKI_LINK : /(?:\s|^)(\[[^\[^\]]+)$/,
            WIKI_EMBED : /(?:\s|^)(![^!]{5,})$/  // Wiki renderer says image names have to be at least 5 chars long
        },

        _REGEXES_EMOTICON: {
            SMILE: /\B(:-?)$/,
            SAD: /\B(:-?)$/,
            CHEEKY: /\B(:-?)$/,
            CHEEKY_2: /\B(:-?)$/,
            LAUGH: /\B(:-?)$/,
            WINK: /\B(;-?)$/,
            THUMBS_UP: /\B(\(y)$/,
            THUMBS_DOWN: /\B(\(n)$/,
            INFORMATION: /\B(\(i)$/,
            TICK: /\B(\(\/)$/,
            CROSS: /\B(\(x)$/,
            WARNING: /\B(\(!)$/,
            PLUS: /\B(\(\+)$/,
            MINUS: /\B(\(-)$/,
            QUESTION: /\B(\(\?)$/,
            LIGHT_ON: /\B(\(on)$/,
            LIGHT_OFF: /\B(\(off)$/,
            YELLOW_STAR: /\B(\(\*)$/,
            YELLOW_STAR_2: /\B(\(\*y)$/,
            RED_STAR: /\B(\(\*r)$/,
            GREEN_STAR: /\B(\(\*g)$/,
            BLUE_STAR: /\B(\(\*b)$/,
            HEART: /\B(<)$/,
            BROKEN_HEAR: /\B(<\/)$/
        }
    };

    return WikiAutoformat;
});

require('confluence/module-exporter').safeRequire('confluence-editor/wiki-autoformat', function(WikiAutoformat) {
    require('confluence/module-exporter').namespace("AJS.Rte.autoformat", WikiAutoformat.regularExpressions);
    require('ajs').bind("init.rte", WikiAutoformat);
});

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/confluencedrafts/editor_plugin_src.js' */
define('confluence-editor/tinymce3/plugins/confluencedrafts/editor_plugin_src', [
    'jquery',
    'ajs',
    'confluence/legacy',
    'tinymce'
], function(
    $,
    AJS,
    Confluence,
    tinymce
) {
    "use strict";

    return {

        init : function(ed) {

            var setIntervalId;

            function bindEventsToDraftDialog() {

                if ($("#draft-messages").is(':visible')) {
                    AJS.Confluence.Analytics.publish('rte.notification.draft');
                }

                $("#draft-messages").find("a.use-draft").click(function(e) {
                    e.stopPropagation();
                    e.preventDefault();
                    Confluence.Editor.Drafts.useDraft();
                    AJS.Confluence.Analytics.publish('rte.notification.draft.resume');
                });
                $("#draft-messages").find("a.discard-draft").click(function(e) {
                    e.stopPropagation();
                    e.preventDefault();
                    Confluence.Editor.Drafts.discardDraft(AJS.Meta.get('existing-draft-id'));
                    AJS.Confluence.Analytics.publish('rte.notification.draft.discard');
                });
            }

            /**
             * This should be a temporary feature to dogfood shared drafts.
             * If it ends up not being temporary, please implement correctly according to editor API status
             */
            function sharedDraftsFeatures(ed) {

                var setSharedDraftUrl = function (draftId, draftShareId) {
                    // If a draft exists, replaceState with a shareable URL
                    // Won't work for IE9 but that's ok as this is to temporary dogfood shared drafts technical milestone
                    if (draftId !== 0 && window.history && window.history.replaceState) {
                        window.history.replaceState(null, '', AJS.Meta.get("base-url") + "/pages/resumedraft.action?draftId=" + draftId + "&draftShareId=" + draftShareId);
                    }
                };

                setSharedDraftUrl(AJS.Meta.get("draft-id"), AJS.Meta.get("draft-share-id"));

                Confluence.Editor.UI.saveButton.text("\u041f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u0442\u044c");
                Confluence.Editor.UI.cancelButton.attr("data-tooltip", "\u0417\u0430\u043a\u043e\u043d\u0447\u0438\u0442\u044c \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438 \u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u0437\u0436\u0435");
                Confluence.Editor.UI.cancelButton.on("click", function() {
                    AJS.Confluence.Analytics.publish("confluence.editor.done.button.clicked");
                });
            }

            var init = function(ed) {

                // eventually this plugin will be in charge of
                // creating the required UI and not just toggling visibility
                $('#draft-status').show();
                // will be rendered by the velocity template if there is any draft messages to be displayed
                $('#draft-messages').show();

                Confluence.Editor.Drafts.bindUnloadMessage();
                Confluence.Editor.UI.cancelButton.click(function() {
                    // The save function checks whether the editor content has changed, and exits early otherwise.
                    // This check is important because we don't want to override (by saving over) an existing draft
                    // if the user left edit mode without resuming the draft or making any changes.
                    Confluence.Editor.Drafts.save({
                        // Skip error handler because it shows a BRIGHT RED draft save ERROR due to the browser
                        // cancelling in-flight ajax requests during page unload even if the server received the
                        // draft request and saved it successfully but did not respond in time.
                        skipErrorHandler: true
                    });
                });

                bindEventsToDraftDialog();

                if (AJS.Meta.getBoolean('shared-drafts')){
                    sharedDraftsFeatures(ed);
                }

                return setInterval(Confluence.Editor.Drafts.save, +AJS.params.draftSaveInterval || 30000);
            };

            function previewActionSelectedHandler (){
                if (Confluence.Editor.editorHasContentChanged()){
                    Confluence.Editor.Drafts.save({forceSave: true});
                }
            }

            ed.onInit.add(function(){
                AJS.bind("rte-preview-action-selected", previewActionSelectedHandler);
            });

            ed.onRemove.add(function(){
                AJS.unbind("rte-preview-action-selected", previewActionSelectedHandler);
            });

            // ** PLEASE READ THIS **
            // Ideally, we want to use the tinymce plugin interface (onInit, onRemove) to start and teardown the plugin.
            // We have some problems that we need to address first though:
            // - Confluence.Editor.UI is not bound yet on ed.onInit yet (what happens on init.rte), so
            // we need to rely on AJS.bind instead, which gets triggered much after.
            // TODO: this needs to be fixed.

            //ed.onInit.add(function(){ // this is the correct way of doing it that we should use in the future. See comment above.
            AJS.bind("rte-ready", function() {
                AJS.debug('confluence drafts plugin initialisation');
                setIntervalId = init(ed);
            });

            //ed.onRemove.add(function(){ // this is the correct way of doing it that we should use in the future. See comment above.
            AJS.bind("rte-destroyed", function() {
                AJS.debug('confluence drafts plugin tear down');
                clearInterval(setIntervalId);
            });

        },

        getInfo : function() {
            return {
                longname : 'Confluence Drafts',
                author : 'Atlassian',
                authorurl : 'http://www.atlassian.com',
                version : tinymce.majorVersion + "." + tinymce.minorVersion
            };
        }
    };
});

require('confluence/module-exporter').safeRequire('confluence-editor/tinymce3/plugins/confluencedrafts/editor_plugin_src', function(ConfluenceDraftsPlugin) {
    var tinymce = require('tinymce');

    tinymce.create('tinymce.plugins.ConfluenceDrafts', ConfluenceDraftsPlugin);

    // Register plugin
    tinymce.PluginManager.add('confluencedrafts', tinymce.plugins.ConfluenceDrafts);
});

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/referrer/editor_plugin_src.js' */
define('confluence-editor/tinymce3/plugins/referrer/editor_plugin_src', [
    'jquery',
    'tinymce'
], function(
    $,
    tinymce
) {
    "use strict";

    return {
        init : function(ed) {
            ed.onInit.add(function(){
                var $form = $('#createpageform');
                var $originalReferrer = $form.find('#originalReferrer');

                //If we are creating a new page that doesn't already has a referrer set and we have one
                if($form.length && !$originalReferrer.val() && document.referrer) {
                    $originalReferrer.val(document.referrer);
                }
            });
        },

        getInfo : function() {
            return {
                longname : 'Confluence Cancel Return Url',
                author : 'Atlassian',
                authorurl : 'http://www.atlassian.com',
                version : tinymce.majorVersion + "." + tinymce.minorVersion
            };
        }
    };
});

require('confluence/module-exporter')
        .safeRequire('confluence-editor/tinymce3/plugins/referrer/editor_plugin_src', function(ReferrerPlugin) {
            var tinymce = require('tinymce');

            tinymce.create('tinymce.plugins.Referrer', ReferrerPlugin);

            // Register plugin
            tinymce.PluginManager.add('referrer', tinymce.plugins.Referrer);
        });
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/watch/editor_plugin_src.js' */
/**
 * Confluence editor comment watch plugin.
 *
 * It will add the "watch" checkbox to the editor save bar if the global variable
 * AJS.Meta.get('use-watch') is set
 */
define('confluence-editor/tinymce3/plugins/watch/editor_plugin_src', [
    'jquery',
    'ajs',
    'tinymce',
    'confluence/templates'
], function(
    $,
    AJS,
    tinymce,
    Templates
) {
    "use strict";

    return {

        init : function(ed) {

            ed.onInit.add(function(){
                if (AJS.Meta.get('use-watch')) { // we can only guarantee that this variable will be populated when the editor is initialised
                    var params = {
                        userWatchingOwnContent: AJS.Meta.get('user-watching-own-content')
                    };
                    $('#rte-savebar-tinymce-plugin-point').append(Templates.Editor.SaveBar.Watch.render(params));
                }
            });

        },

        getInfo : function() {
            return {
                longname : 'Confluence Watch',
                author : 'Atlassian',
                authorurl : 'http://www.atlassian.com',
                version : tinymce.majorVersion + "." + tinymce.minorVersion
            };
        }
    };
});

require('confluence/module-exporter')
        .safeRequire('confluence-editor/tinymce3/plugins/watch/editor_plugin_src', function(ConfluenceWatchPlugin) {
            var tinymce = require('tinymce');

            tinymce.create('tinymce.plugins.ConfluenceWatch', ConfluenceWatchPlugin);

            // Register plugin
            tinymce.PluginManager.add('confluencewatch', tinymce.plugins.ConfluenceWatch);
        });

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/watch/watch.soy' */
// This file was automatically generated from watch.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace Confluence.Templates.Editor.SaveBar.Watch.
 */

if (typeof Confluence == 'undefined') { var Confluence = {}; }
if (typeof Confluence.Templates == 'undefined') { Confluence.Templates = {}; }
if (typeof Confluence.Templates.Editor == 'undefined') { Confluence.Templates.Editor = {}; }
if (typeof Confluence.Templates.Editor.SaveBar == 'undefined') { Confluence.Templates.Editor.SaveBar = {}; }
if (typeof Confluence.Templates.Editor.SaveBar.Watch == 'undefined') { Confluence.Templates.Editor.SaveBar.Watch = {}; }


Confluence.Templates.Editor.SaveBar.Watch.render = function(opt_data, opt_ignored) {
  return '<ul class="toolbar-group toolbar-group-watch-page" id="toolbar-group-watch-page-after-comment"><li class="toolbar-item"><input id="watchPage" name="watchPageAfterComment" value="true" type="checkbox" ' + ((opt_data.userWatchingOwnContent) ? 'checked="checked"' : '') + '/><label for="watchPage">' + soy.$$escapeHtml("\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u0442\u0435 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443") + '</label></li></ul>';
};
if (goog.DEBUG) {
  Confluence.Templates.Editor.SaveBar.Watch.render.soyTemplateName = 'Confluence.Templates.Editor.SaveBar.Watch.render';
}

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/notifywatchers/editor_plugin_src.js' */
define('confluence-editor/tinymce3/plugins/notifywatchers/editor_plugin_src', [
    'jquery',
    'ajs',
    'confluence/legacy',
    'tinymce'
], function(
    $,
    AJS,
    Confluence,
    tinymce
) {
    "use strict";

    return {
        init : function(ed) {
            ed.onInit.add(function(){
                var params = {
                    contentId: AJS.params.contentId,
                    defaultVersionComment : AJS.params.versionComment
                };
                $('#rte-savebar-tinymce-plugin-point').append(Confluence.Templates.Editor.SaveBar.NotifyWatchers.render(params));
            });

            require(['confluence/persistable']);
        },

        getInfo : function() {
            return {
                longname : 'Confluence Notify Watchers',
                author : 'Atlassian',
                authorurl : 'http://www.atlassian.com',
                version : tinymce.majorVersion + "." + tinymce.minorVersion
            };
        }
    };


});

require('confluence/module-exporter')
        .safeRequire('confluence-editor/tinymce3/plugins/notifywatchers/editor_plugin_src', function(ConfluenceNotifyWatchersPlugin) {
            var tinymce = require('tinymce');

            tinymce.create('tinymce.plugins.ConfluenceNotifyWatchers', ConfluenceNotifyWatchersPlugin);

            // Register plugin
            tinymce.PluginManager.add('confluencenotifywatchers', tinymce.plugins.ConfluenceNotifyWatchers);
        });

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/notifywatchers/notifywatchers.soy' */
// This file was automatically generated from notifywatchers.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace Confluence.Templates.Editor.SaveBar.NotifyWatchers.
 */

if (typeof Confluence == 'undefined') { var Confluence = {}; }
if (typeof Confluence.Templates == 'undefined') { Confluence.Templates = {}; }
if (typeof Confluence.Templates.Editor == 'undefined') { Confluence.Templates.Editor = {}; }
if (typeof Confluence.Templates.Editor.SaveBar == 'undefined') { Confluence.Templates.Editor.SaveBar = {}; }
if (typeof Confluence.Templates.Editor.SaveBar.NotifyWatchers == 'undefined') { Confluence.Templates.Editor.SaveBar.NotifyWatchers = {}; }


Confluence.Templates.Editor.SaveBar.NotifyWatchers.render = function(opt_data, opt_ignored) {
  return '<span class="minor-edit toolbar-item"><input id="notifyWatchers" name="notifyWatchers" value="true" type="checkbox" data-persist="checked" data-persist-scope="' + soy.$$escapeHtml(opt_data.contentId) + '" data-default-value="true" checked><label for="notifyWatchers"><span>' + soy.$$escapeHtml("\u0421\u043e\u043e\u0431\u0449\u0438\u0442\u044c \u043d\u0430\u0431\u043b\u044e\u0434\u0430\u0442\u0435\u043b\u044f\u043c") + '</span></label></span>';
};
if (goog.DEBUG) {
  Confluence.Templates.Editor.SaveBar.NotifyWatchers.render.soyTemplateName = 'Confluence.Templates.Editor.SaveBar.NotifyWatchers.render';
}

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/versioncomment/editor_plugin_src.js' */
define('confluence-editor/tinymce3/plugins/versioncomment/editor_plugin_src', [
    'jquery',
    'ajs',
    'tinymce',
    'confluence/templates'
], function(
    $,
    AJS,
    tinymce,
    Templates
) {
    "use strict";

    return {

        init : function(ed) {

            ed.onInit.add(function(){
                var params = {
                    versionComment : AJS.params.versionComment
                };
                $('#rte-savebar-tinymce-plugin-point').append(Templates.Editor.SaveBar.VersionComment.render(params));
            });

        },

        getInfo : function() {
            return {
                longname : 'Confluence Version Comment',
                author : 'Atlassian',
                authorurl : 'http://www.atlassian.com',
                version : tinymce.majorVersion + "." + tinymce.minorVersion
            };
        }
    };
});

require('confluence/module-exporter')
        .safeRequire('confluence-editor/tinymce3/plugins/versioncomment/editor_plugin_src', function(ConfluenceVersionCommentPlugin) {
            var tinymce = require('tinymce');

            tinymce.create('tinymce.plugins.ConfluenceVersionComment', ConfluenceVersionCommentPlugin);

            // Register plugin
            tinymce.PluginManager.add('confluenceversioncomment', tinymce.plugins.ConfluenceVersionComment);
        });

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/versioncomment/versioncomment.soy' */
// This file was automatically generated from versioncomment.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace Confluence.Templates.Editor.SaveBar.VersionComment.
 */

if (typeof Confluence == 'undefined') { var Confluence = {}; }
if (typeof Confluence.Templates == 'undefined') { Confluence.Templates = {}; }
if (typeof Confluence.Templates.Editor == 'undefined') { Confluence.Templates.Editor = {}; }
if (typeof Confluence.Templates.Editor.SaveBar == 'undefined') { Confluence.Templates.Editor.SaveBar = {}; }
if (typeof Confluence.Templates.Editor.SaveBar.VersionComment == 'undefined') { Confluence.Templates.Editor.SaveBar.VersionComment = {}; }


Confluence.Templates.Editor.SaveBar.VersionComment.render = function(opt_data, opt_ignored) {
  return '<span class="rte-toolbar-comment toolbar-item"><input id="versionComment" name="versionComment" ' + ((opt_data.versionComment) ? 'value="' + soy.$$escapeHtml(opt_data.versionComment) + '"' : '') + 'placeholder="' + soy.$$escapeHtml("\u0427\u0442\u043e \u0432\u044b \u0438\u0437\u043c\u0435\u043d\u0438\u043b\u0438?") + '" class="text" type="text" size="35"><label for="versionComment" class="assistive">' + soy.$$escapeHtml("\u0427\u0442\u043e \u0432\u044b \u0438\u0437\u043c\u0435\u043d\u0438\u043b\u0438?") + '</label></span>';
};
if (goog.DEBUG) {
  Confluence.Templates.Editor.SaveBar.VersionComment.render.soyTemplateName = 'Confluence.Templates.Editor.SaveBar.VersionComment.render';
}

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/imagedialog/editor_plugin_src.js' */
define('confluence-editor/tinymce3/plugins/imagedialog/editor_plugin_src', [
    'tinymce',
    'confluence/legacy'
], function(
    tinymce,
    Confluence
) {
    "use strict";

    return {
        init : function(ed) {
            ed.onInit.add(function(){
                ed.addCommand("mceConfimage", Confluence.Editor.defaultInsertImageDialog);
            });
        },

        getInfo : function() {
            return {
                longname : 'Confluence Image Dialog',
                author : 'Atlassian',
                authorurl : 'http://www.atlassian.com',
                version : tinymce.majorVersion + "." + tinymce.minorVersion
            };
        }
    };



});

require('confluence/module-exporter')
        .safeRequire('confluence-editor/tinymce3/plugins/imagedialog/editor_plugin_src', function(ConfluenceImageDialogPlugin) {
            var tinymce = require('tinymce');

            tinymce.create('tinymce.plugins.ConfluenceImageDialog', ConfluenceImageDialogPlugin);

            // Register plugin
            tinymce.PluginManager.add('confluenceimagedialog', tinymce.plugins.ConfluenceImageDialog);
        });

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/macrobrowser/editor_plugin_src.js' */
define('confluence-editor/tinymce3/plugins/macrobrowser/editor_plugin_src', [
    'tinymce'
], function(
    tinymce
) {
    "use strict";

    return {

        init : function(ed) {

            ed.onInit.add(function(){
                ed.addCommand("mceConfMacroBrowser", tinymce.confluence.macrobrowser.macroBrowserToolbarButtonClicked);
            });

        },

        getInfo : function() {
            return {
                longname : 'Confluence Macro Browser',
                author : 'Atlassian',
                authorurl : 'http://www.atlassian.com',
                version : tinymce.majorVersion + "." + tinymce.minorVersion
            };
        }
    };
});

require('confluence/module-exporter')
        .safeRequire('confluence-editor/tinymce3/plugins/macrobrowser/editor_plugin_src', function(ConfluenceMacroBrowserPlugin) {
            var tinymce = require('tinymce');

            tinymce.create('tinymce.plugins.ConfluenceMacroBrowser', ConfluenceMacroBrowserPlugin);

            // Register plugin
            tinymce.PluginManager.add('confluencemacrobrowser', tinymce.plugins.ConfluenceMacroBrowser);
        });

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/leavecomment/editor_plugin_src.js' */
/**
 * This plugin handles the navigation event when leaving a comment with a "dirty" editor.
 * It will prompt for user confirmation before leaving the page.
 */
define('confluence-editor/tinymce3/plugins/leavecomment/editor_plugin_src', [
    'jquery',
    'ajs',
    'tinymce',
    'confluence/legacy',
    'window'
], function(
    $,
    AJS,
    tinymce,
    Confluence,
    window
) {
    "use strict";

    return {

        init : function(ed) {

            function onLeavePage() {
                /*
                 Confluence.Editor.UI.isFormEnabled() is an undesirable dependency we require to avoid invoking the
                 a page-leave warning when saving a comment.

                 We don't want to rely on any state outside of the current editor instance though (so we can have
                 multiple editors in a page in the future), so we need to revisit this in the future.

                 To reproduce the scenario in which isFormEnabled() is required you need to perform an action that
                 forces the quick-editor to fall back into slow-edit mode, e.g. using the code macro.

                 The reason this is an issue at all is due to the isDirty() check being influenced by the isNotDirty
                 flag, which is set before the form is submitted in slow edit, but not in quick edit w/ fallback.
                 */
                if (Confluence.Editor.UI.isFormEnabled() && ed.isDirty() && !Confluence.Editor.isEmpty()){
                    return "\u0412\u0430\u0448 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 \u0431\u0443\u0434\u0435\u0442 \u0443\u0442\u0435\u0440\u044f\u043d.";
                }
            }

            ed.onInit.add(function () {
                $(window).bind('beforeunload', onLeavePage);
            });

            ed.onRemove.add(function () {
                $(window).unbind('beforeunload', onLeavePage);
            });
        },

        getInfo : function() {
            return {
                longname : 'Confluence Leave Comment',
                author : 'Atlassian',
                authorurl : 'http://www.atlassian.com',
                version : tinymce.majorVersion + "." + tinymce.minorVersion
            };
        }
    };
});

require('confluence/module-exporter')
        .safeRequire('confluence-editor/tinymce3/plugins/leavecomment/editor_plugin_src', function(ConfluenceLeaveCommentPlugin) {
            var tinymce = require('tinymce');

            tinymce.create('tinymce.plugins.ConfluenceLeaveComment', ConfluenceLeaveCommentPlugin);

            tinymce.PluginManager.add("confluenceleavecomment", tinymce.plugins.ConfluenceLeaveComment);
        });
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/leavetemplate/editor_plugin_src.js' */
/**
 * This plugin handles the navigation event when leaving a template with a "dirty" editor.
 * It will prompt for user confirmation before leaving the page.
 */
define('confluence-editor/tinymce3/plugins/leavetemplate/editor_plugin_src', [
    'jquery',
    'ajs',
    'confluence/legacy',
    'window',
    'tinymce'
], function(
    $,
    AJS,
    Confluence,
    window,
    tinymce
) {
    "use strict";

    return {

        init : function(ed) {

            function onLeavePage() {
                /*
                 Confluence.Editor.UI.isFormEnabled() is used here as a safeguard (and is not strictly necessary).

                 We don't want to rely on any state outside of the current editor instance though (so we can have
                 multiple editors in a page in the future), so we need to revisit this in the future.

                 However in the future if the template editor is quickened then this plugin would otherwise cease to
                 function properly and cause issues.
                 */
                if (Confluence.Editor.UI.isFormEnabled() && ed.isDirty() && !Confluence.Editor.isEmpty()){
                    return "\u041d\u0435\u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u043d\u044b\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0448\u0430\u0431\u043b\u043e\u043d\u0430 \u0431\u0443\u0434\u0443\u0442 \u0443\u0442\u0435\u0440\u044f\u043d\u044b.";
                }
            }

            ed.onInit.add(function () {
                $(window).bind('beforeunload', onLeavePage);
            });

            ed.onRemove.add(function () {
                $(window).unbind('beforeunload', onLeavePage);
            });
        },

        getInfo : function() {
            return {
                longname : 'Confluence Leave Template',
                author : 'Atlassian',
                authorurl : 'http://www.atlassian.com',
                version : tinymce.majorVersion + "." + tinymce.minorVersion
            };
        }
    };
});

require('confluence/module-exporter')
        .safeRequire('confluence-editor/tinymce3/plugins/leavetemplate/editor_plugin_src', function(ConfluenceLeaveTemplatePlugin) {
            var tinymce = require('tinymce');

            tinymce.create('tinymce.plugins.ConfluenceLeaveTemplate', ConfluenceLeaveTemplatePlugin);

            tinymce.PluginManager.add("confluenceleavetemplate", tinymce.plugins.ConfluenceLeaveTemplate);
        });
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/template-editor/editor_plugin_src.js' */
/**
 * Common behaviour for the template editor context
 */
define('confluence-editor/tinymce3/plugins/template-editor/editor_plugin_src', [
    'jquery',
    'tinymce'
], function(
    $,
    tinymce
) {
    "use strict";

    return {
        init : function(ed) {
            ed.onInit.add(function () {
                $(ed.getBody()).addClass('template-editor');
            });
        },

        getInfo : function() {
            return {
                longname : 'Confluence Template Editor',
                author : 'Atlassian',
                authorurl : 'http://www.atlassian.com',
                version : tinymce.majorVersion + "." + tinymce.minorVersion
            };
        }
    };
});

require('confluence/module-exporter')
        .safeRequire('confluence-editor/tinymce3/plugins/template-editor/editor_plugin_src', function(ConfluenceTemplateEditorPlugin) {
            var tinymce = require('tinymce');

            tinymce.create('tinymce.plugins.ConfluenceTemplateEditor', ConfluenceTemplateEditorPlugin);

            tinymce.PluginManager.add("confluencetemplateeditor", tinymce.plugins.ConfluenceTemplateEditor);
        });
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/customtoolbar/table-toolbar.js' */
define('confluence-editor/tinymce3/plugins/customtoolbar/table-toolbar', [
    'ajs',
    'jquery',
    'confluence/legacy',
    'tinymce',
    'document',
    'window'
],
function (
    AJS,
    $,
    Confluence,
    tinyMCE,
    document,
    window
) {
    "use strict";
    return {
        initContextToolbars: function (e, editor) {
            var aui = require('aui/templates');
            var handlingNodeChange;

            var getLang = function (key) {
                var title = editor.getLang(key);
                var shortcut = editor.getLang(key + "_shortcut", "");
                if (shortcut) {
                    title += " (" + shortcut + ")";
                }
                return title;
            };

            var isChildOfTable = function (node) {
                var table = $(node).closest("table:not(.wysiwyg-macro)");
                return table.length;
            };

            var hasColOrRowSpan = function (node) {
                //not the most efficent of solutions
                //but the table plugin is rather, well basically i am not touching it.
                function parseSpan(node, type) {
                    return parseInt(node.attr(type), 10);
                }

                return node.filter(function (index) {
                    var temp = $(this);
                    return parseSpan(temp, "rowspan") > 1 || parseSpan(temp, "colspan") > 1;
                }).length >= 1;
            };

            var updateSplitButton = function (node) {

                var clickedCell = $(node).closest("td,th");
                var selectedCells = $(".mceSelected", clickedCell.closest("table"));

                if (hasColOrRowSpan(clickedCell.add(selectedCells))) {
                    editor.plugins.customtoolbar.enableToolbarButton("aui-iconfont-table-split");
                } else {
                    editor.plugins.customtoolbar.disableToolbarButton("aui-iconfont-table-split");
                }
            };

            var updateTableMode = function(node) {
                $.fn.updateTableModeInToolbar && $(node).closest('table').updateTableModeInToolbar();
            };

            var storageManager = AJS.storageManager("atlassian.editor", "tables");

            /**
             * Creates table control extra settings menu on the toolbar
             *
             * @param {Object[]} itemList - array of itemList with options
             * @param {String} itemList[].text - text that will be displayed on the label
             * @param {String} itemList[].id - checkbox input id
             * @param {Boolean} [itemList[].isChecked=false] - item checked state
             * @param {Boolean} [itemList[].isDisabled=false] - item disabled state
             * @param {Function} [itemList[].onChange] - callback input value changes
             * @param {Function} [itemList[].onMenuOpen] - callback triggered when dropdown is opened
             * @param {Function} [itemList[].onMenuClose] - callback triggered when dropdown is closed
             */
            var TableMoreSettings = (function () {
                // AUI-UPGRADE - remove when upgrading to aui 5.9 when require will no longer be needed
                require('aui/inline-dialog2');

                var triggerButtonCachedTemplate = aui.buttons.button({
                    id: "table-more-settings-trigger",
                    text: "",
                    iconType: "aui",
                    iconClass: "aui-icon-small aui-iconfont-configure",
                    iconText: getLang("table.table_more_heading"),
                    extraAttributes: {
                        "type": "button",
                        "data-aui-trigger": "true",
                        "aria-controls": "table-more-settings",
                        "data-tooltip": getLang("table.table_more_heading")
                    }
                });

                var tableMoreSettingsInlineDialogCachedTemplate = aui.inlineDialog2.inlineDialog2({
                    alignment: "bottom left",
                    respondsTo: "toggle",
                    id: "table-more-settings"
                });

                var tableMoreSettingsCachedTemplate = aui.buttons.buttons({
                    content: triggerButtonCachedTemplate
                });

                return function (itemList) {
                    function renderDialogContents(itemList) {
                        var $contentContainer = $('<div></div>');
                        var $dialogHeader = $('<h2>' + getLang('table.table_more_heading') + '</h2>');
                        $contentContainer.append($dialogHeader);
                        // Add items to the dropdown and bind ther events
                        itemList.forEach(function (item) {
                            var $checkboxOption = $(aui.form.field({
                                type: "checkbox",
                                id: item.id,
                                labelContent: item.text,
                                isChecked: item.isChecked(),
                                isDisabled: item.isDisabled
                            }));

                            $checkboxOption.on("change", item.onChange); // we use change event so that it will also capture changes when click the item label

                            // add back to menu
                            $contentContainer.append($checkboxOption);
                        });

                        return $contentContainer;
                    }

                    this.render = function () {
                        var $tableMoreSettings = $(tableMoreSettingsCachedTemplate);
                        var $tableMoreSettingsInlineDialog = $(tableMoreSettingsInlineDialogCachedTemplate);
                        var tableMoreSettingsSkate = $tableMoreSettingsInlineDialog[0];

                        var hideDropdown = function () {
                            // skate methods are bound to the native html element
                            if (tableMoreSettingsSkate.hide) {
                                tableMoreSettingsSkate.hide();
                            }
                        };

                        // CONFDEV-42661 Render the dialog content on every aui-show event being triggered.
                        // It looks like during the initialization, AUI cloned the content objects we created and lost all event listeners bounds to these objects.
                        // The solution is to recreate, rebind events and replace all dialog contents, every time the AUI Inline Dialog is shown.
                        $tableMoreSettingsInlineDialog.on('aui-show', function(event) {
                            $('.aui-inline-dialog-contents', event.target).html(renderDialogContents(itemList));
                        });

                        // add the inline dialog to the tableMoreSettings button container
                        $tableMoreSettings.append($tableMoreSettingsInlineDialog);

                        // add hide events
                        $(window).on('resize', $.debounce(hideDropdown, 100)); // AUI-UPGRADE - when we update AUI we should check if the opened dropdown position keeps on the correct place
                        $(document).on("enableContextToolbarRow.Toolbar disableContextToolbarRow.Toolbar", hideDropdown);

                        return $tableMoreSettings;
                    };
                };
            })();

            // Can"t follow the event delegation model, as NodeChange events don"t supply an
            // event parameter (only an element), so the type of the event cannot be determined.
            editor.onNodeChange.add(function (ed, cm, e) {
                // required, as show/removing of toolbar seems to fire another nodeChangeEvent
                // CONFDEV-3419: Parent node null check to prevent table toolbar from being removed when
                // callbacks occur with the document or body nodes (this may happen when multiple cells are selected).
                var body = $("body");
                var animate = !body.hasClass("no-tools") || body.hasClass("no-tools-toolbars-visible");
                if ((!handlingNodeChange) && (e.parentNode != null) && (e.nodeName !== "BODY")) {
                    handlingNodeChange = true;
                    if (isChildOfTable(e)) {
                        $(document).trigger("createContextToolbarRow.Toolbar", {
                            buttons: Confluence.Editor.tableToolbar.Buttons,
                            topToolbar: true,
                            animate: animate
                        }).trigger("enableContextToolbarRow.Toolbar");

                        if (AJS.DarkFeatures.isEnabled("confluence.table.resizable")) {
                            updateTableMode(e);
                        }
                        updateSplitButton(e);

                    } else {
                        $(document).trigger("disableContextToolbarRow.Toolbar", {
                            animate: animate
                        });
                    }
                    handlingNodeChange = false;
                }
            });

            editor.onUndo.add(function (ed, cm, e) {
                //seems the bookmark gets restored after the node change from setcontent is triggered. Odd.
                ed.nodeChanged();
            });


            function highlightColourPicker() {
                var colourPicker = $("<ul/>").addClass("table-highlight-picker");
                var colourClasses = ["grey", "red", "green", "blue", "yellow", ""];
                var removeColour = [false, false, false, false, false, true];

                $.each(colourClasses, function (idx, colour) {
                    var li = $("<li/>");
                    var link = $("<a href='#'></a>");

                    if (removeColour[idx]) {
                        link.addClass("remove-highlight")
                                .attr("data-remove-highlight", true);
                    } else {
                        link.addClass("highlight-" + colour)
                                .attr("data-highlight-colour", colour);
                    }
                    li.append(link);
                    colourPicker.append(li);
                });

                return colourPicker;
            }

            function selectColour(e) {
                var $buttonLink = $(this);
                var colourWidget = $("#table-highlight-group");
                var currentHighlightColour = colourWidget.attr("data-highlight-colour");
                var currentHighlightRemoval = colourWidget.attr("data-remove-highlight");
                if (currentHighlightColour) {
                    colourWidget.removeClass("highlight-" + currentHighlightColour);
                    colourWidget.removeAttr("data-highlight-colour");
                }
                colourWidget.removeClass("remove-highlight");

                if (currentHighlightRemoval) {
                    colourWidget.removeAttr("data-remove-highlight");
                }

                var highlightColour = $buttonLink.attr("data-highlight-colour");
                if (highlightColour) {
                    colourWidget.addClass("highlight-" + highlightColour);
                    colourWidget.attr("data-highlight-colour", highlightColour);
                }
                if ($buttonLink.attr("data-remove-highlight")) {
                    colourWidget.addClass("remove-highlight");
                    colourWidget.attr("data-remove-highlight", true);
                }

                editor.focus();
                editor.execCommand("confTableSelectionToggleHighlight", false, {
                    alwaysHighlight: true
                });
                e.preventDefault();
            }

            function tableModeList() {
                var $ul = $("<ul/>").addClass("table-mode-list");
                var tableModes = [
                    {
                        name: getLang("table.responsive"),
                        mceCmd: "mceAutoWidth",
                        tooltip: getLang("table.responsive_tooltip")
                    },
                    {
                        name: getLang("table.fixed_width"),
                        mceCmd: "mceFixedWidth",
                        tooltip: getLang("table.fixed_width_tooltip")
                    }
                ];

                $.each(tableModes, function (idx, mode) {
                    var $li = $("<li/>").addClass("dropdown-item").attr("data-tooltip", mode.tooltip);
                    var $link = $("<a href='#'>" + mode.name + "</a>").addClass("item-link");
                    $li.on("click", function () {
                        tinyMCE.execCommand(mode.mceCmd, false, "");
                    });

                    $ul.append($li.append($link));
                });
                return $ul;
            }

            editor.onInit.add(function () {
                $(document).delegate("#table-highlight-colour .aui-dropdown a", "click", selectColour);
            });

            editor.onRemove.add(function () {
                $(document).undelegate("#table-highlight-colour .aui-dropdown a", "click", selectColour);
            });

            var classPrefix = "aui-icon aui-icon-small aui-iconfont-table-";
            Confluence.Editor.tableToolbar = {
                Buttons: [
                    new Confluence.Editor.Toolbar.Components.Group([
                        new Confluence.Editor.Toolbar.Components.Button({
                            text: getLang("table.row_before_desc"),
                            iconClass: classPrefix + "row-up",
                            click: function () {
                                tinyMCE.execCommand("mceTableInsertRowBefore", false, "");
                            }
                        }),

                        new Confluence.Editor.Toolbar.Components.Button({
                            text: getLang("table.row_after_desc"),
                            iconClass: classPrefix + "row-down",
                            click: function () {
                                tinyMCE.execCommand("mceTableInsertRowAfter", false, "");
                            }
                        }),

                        new Confluence.Editor.Toolbar.Components.Button({
                            text: getLang("table.delete_row_desc"),
                            iconClass: classPrefix + "row-remove",
                            click: function () {
                                tinyMCE.execCommand("mceTableDeleteRow", false, "");
                            }
                        })
                    ]),

                    new Confluence.Editor.Toolbar.Components.Group([
                        new Confluence.Editor.Toolbar.Components.Button({
                            text: getLang("table.cut_row_desc"),
                            iconClass: classPrefix + "cut-row",
                            click: function () {
                                tinyMCE.execCommand("mceTableCutRow", false, "");
                                editor.plugins.customtoolbar.enableToolbarButton("aui-iconfont-table-paste-row");
                            }
                        }),

                        new Confluence.Editor.Toolbar.Components.Button({
                            text: getLang("table.copy_row_desc"),
                            iconClass: classPrefix + "copy-row",
                            click: function () {
                                tinyMCE.execCommand("mceTableCopyRow", false, "");
                                editor.plugins.customtoolbar.enableToolbarButton("aui-iconfont-table-paste-row");
                            }
                        }),

                        new Confluence.Editor.Toolbar.Components.Button({
                            text: getLang("table.paste_row_before_desc"),
                            iconClass: classPrefix + "paste-row",
                            click: function () {
                                tinyMCE.execCommand("mceTablePasteRowBefore", false, "");
                            },
                            disabled: !storageManager.doesContain("copied")
                        })
                    ]),

                    new Confluence.Editor.Toolbar.Components.Group([
                        new Confluence.Editor.Toolbar.Components.Button({
                            text: getLang("table.col_before_desc"),
                            iconClass: classPrefix + "col-left",
                            click: function () {
                                tinyMCE.execCommand("mceTableInsertColBefore", false, "");
                            }
                        }),

                        new Confluence.Editor.Toolbar.Components.Button({
                            text: getLang("table.col_after_desc"),
                            iconClass: classPrefix + "col-right",
                            click: function () {
                                tinyMCE.execCommand("mceTableInsertColAfter", false, "");
                            }
                        }),

                        new Confluence.Editor.Toolbar.Components.Button({
                            text: getLang("table.delete_col_desc"),
                            iconClass: classPrefix + "col-remove",
                            click: function () {
                                tinyMCE.execCommand("mceTableDeleteCol", false, "");
                            }
                        })
                    ]),

                    new Confluence.Editor.Toolbar.Components.Group([
                        new Confluence.Editor.Toolbar.Components.Button({
                            text: getLang("table.merge_cells_desc"),
                            iconClass: classPrefix + "merge",
                            click: function () {
                                tinyMCE.execCommand("mceTableMergeCells", false, "");
                            }
                        }),

                        new Confluence.Editor.Toolbar.Components.Button({
                            text: getLang("table.split_cells_desc"),
                            iconClass: classPrefix + "split",
                            click: function () {
                                tinyMCE.execCommand("mceTableSplitCells", false, "");
                            }
                        })
                    ]),

                    new Confluence.Editor.Toolbar.Components.Group([
                        new Confluence.Editor.Toolbar.Components.Button({
                            text: getLang("table.row_highlight"),
                            iconClass: classPrefix + "header-row",
                            click: function () {
                                tinyMCE.execCommand("confTableRowToggleHeading", false);
                                tinyMCE.execCommand("mceTableUpdateNumberingCol", false);
                            }
                        }),

                        new Confluence.Editor.Toolbar.Components.Button({
                            text: getLang("table.col_highlight"),
                            iconClass: classPrefix + "header-column",
                            click: function () {
                                tinyMCE.execCommand("confTableColumnToggleHeading", false);
                            }
                        })
                    ]),

                    new Confluence.Editor.Toolbar.Components.SplitGroup([
                        new Confluence.Editor.Toolbar.Components.Button({
                            text: getLang("table.selection_highlight"),
                            iconClass: classPrefix + "bg",
                            click: function () {
                                tinyMCE.execCommand("confTableSelectionToggleHighlight", false);
                            }
                        })
                    ], {
                        id: "table-highlight-group",
                        dropDownOptions: {
                            id: "table-highlight-colour",
                            dropDownContent: highlightColourPicker(),
                            alignment: "right"
                        },
                        postProcess: function (group) {
                            group.attr("data-highlight-colour", "grey");
                            group.addClass("highlight-grey");

                            // Overlay for showing the current highlight colour
                            var highlightIndicator = $("<span>&nbsp;</span>");
                            highlightIndicator.addClass("highlight-indicator");

                            group.find(".icon.aui-iconfont-table-bg").after(highlightIndicator);
                        }
                    }),

                    new Confluence.Editor.Toolbar.Components.Group([
                        new Confluence.Editor.Toolbar.Components.Button({
                            text: getLang("table.del"),
                            iconClass: classPrefix + "remove",
                            click: function () {
                                tinyMCE.execCommand("mceTableDelete", false, "");
                            }
                        })
                    ])
                ],

                // takes an array of {type: tinymceEvent, shouldTrigger: function, callback: function, missed: function }
                Events: []
            };

            if (AJS.DarkFeatures.isEnabled("confluence.table.resizable")) {
                Confluence.Editor.tableToolbar.Buttons.splice(0, 0, new Confluence.Editor.Toolbar.Components.Group([
                        new Confluence.Editor.Toolbar.Components.DropDownButton({
                            id: "table-mode-picker",
                            text: getLang("table.auto_width"),
                            dropDownContent: tableModeList()
                        })
                    ]));
            }

            if (!AJS.DarkFeatures.isEnabled("confluence-table-enhancements.copy-cut-paste-cols.disabled")) {
                // We only add the buttons group in here because we need a way to dark-feature it
                Confluence.Editor.tableToolbar.Buttons.splice(3, 0,
                        new Confluence.Editor.Toolbar.Components.Group([
                            new Confluence.Editor.Toolbar.Components.Button({
                                text: getLang("table.col_cut_desc"),
                                iconClass: classPrefix + "cut-column",
                                click: function () {
                                    tinyMCE.execCommand("mceTableCutCol", false, "");
                                }
                            }),

                            new Confluence.Editor.Toolbar.Components.Button({
                                text: getLang("table.col_copy_desc"),
                                iconClass: classPrefix + "copy-column",
                                click: function () {
                                    tinyMCE.execCommand("mceTableCopyCol", false, "");
                                }
                            }),

                            new Confluence.Editor.Toolbar.Components.Button({
                                text: getLang("table.col_paste_desc"),
                                iconClass: classPrefix + "paste-column",
                                click: function () {
                                    tinyMCE.execCommand("mceTablePasteColBefore", false, "");
                                }
                            })
                        ])
                );
            }

            if (!AJS.DarkFeatures.isEnabled("confluence-table-enhancements.auto-row.disabled")) {
                var moreSettingButtons = [];
                if (!AJS.DarkFeatures.isEnabled("confluence-table-enhancements.auto-row.disabled")) {
                    moreSettingButtons.push({
                        text: getLang("table.numbering_column_desc"),
                        id: "insert-numbering-column",
                        isChecked: function () {
                            return $(editor.selection.getNode()).closest('table').find('.numberingColumn').length > 0;
                        },
                        onChange: function () {
                            tinyMCE.execCommand("mceTableInsertNumberingCol", false, "");
                        }
                    });
                }

                Confluence.Editor.tableToolbar.Buttons.push(new TableMoreSettings(moreSettingButtons));
            }
        }
    };
});

require('confluence/module-exporter').safeRequire('confluence-editor/tinymce3/plugins/customtoolbar/table-toolbar', function (TinyMceTableToolbar) {
    var $ = require('jquery');
    var document = require('document');

    $(document).bind("initContextToolbars.Toolbar", TinyMceTableToolbar.initContextToolbars);
});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/customtoolbar/editor_plugin_src.js' */
define('confluence-editor/tinymce3/plugins/customtoolbar/editor_plugin_src', [
    'jquery',
    'ajs',
    'confluence/legacy',
    'document',
    'tinymce'
], function(
    $,
    AJS,
    Confluence,
    document,
    tinymce
) {
    "use strict";

    function sourceMode() {
        var sourceToggleButton = $("#rte-button-source-mode");

        sourceToggleButton.click(function () {
            if (sourceToggleButton.hasClass("active")) {
                Confluence.Editor.changeMode(Confluence.Editor.MODE_RICHTEXT);
            } else {
                Confluence.Editor.changeMode(Confluence.Editor.MODE_SOURCE);
            }
        });
    }

    function wireToolbarContext(delegator,editor) {
        //not happy about this. Will be finding a better way to wind everything up.
        //don't want the dependence on the TableToolbar want to query for that some how.
        //the levels of async call backs and editor loading here made it hard.
        $(document).trigger("initContextToolbars.Toolbar", editor);
        $(document).bind("createContextToolbarRow.Toolbar", createContextToolbar)
            .bind('removeContextToolbarRow.Toolbar', removeContextToolbar)
            .bind('enableContextToolbarRow.Toolbar', enableContextToolbar)
            .bind('disableContextToolbarRow.Toolbar', disableContextToolbar);
        delegator.addEventsForComponent("TableToolbar", Confluence.Editor.tableToolbar.Events);
    }

    /**
     *  Adds bindings to close the dropdown menu when typed or clicked in the RTE
     */
    function bindCloseDropDown(dd) {
        var closeMenu = function() {
            dd && dd.hide();
        };

        $(document).bind("showLayer", function(e, type, data){
            if (type=="dropdown" && data == dd) {
                var editor = AJS.Rte.getEditor();
                editor.onClick.add(closeMenu);
                editor.onKeyUp.add(closeMenu);
            }
        }).bind("hideLayer", function(e, type, data) {
            if (type=="dropdown" && data == dd) {
                var editor = AJS.Rte.getEditor();
                editor.onClick.remove(closeMenu);
                editor.onKeyUp.remove(closeMenu);
            }
        });
    }

    //CONFDEV-1921 Formatting should not be allowed inside plain text macro bodies
    function disableDropDown(dropdown) {
        dropdown.addCallback('show', function() {
            if(dropdown.$.parents('.disabled').length) {
                dropdown.hide();
            }
        });
    }

    /**
     * Binds to the color controls and displays picker when needed
     */
    function colorPicker() {
        var control = $('#color-picker-control');

        if (!control.length) {
            return;
        }

        var menu = control.find('.aui-dd-parent');
        var changeColorButton = $('#rte-button-color');
        var colorPreview = changeColorButton.find('.selected-color');
        var dropdown = menu.dropDown('Standard', { alignment: 'left' })[0];
        var defaultColor = changeColorButton.attr('data-color');

        colorPreview.css('background-color', '#' + defaultColor);
        control.delegate('a[data-color]', 'click', function(e) {
            var $this = $(this);
            var color = $this.attr('data-color');

            e.preventDefault();
            if ( $this.closest('.disabled').length ) { //if this part of the toolbar is disabled
                return;
            }

            tinymce.execCommand('ForeColor',false,'#' + color);
            changeColorButton.attr('data-color', color);
            colorPreview.css('background-color','#' + color);
        });

        disableDropDown(dropdown);
        bindCloseDropDown(dropdown);
    }

    /**
     * Binds to the insert table control and displays the picker when needed
     */
    function tablePicker() {
        AJS.Rte.TablePicker.bindToControl(AJS.Rte.getEditor(), $('#insert-table-dropdown'));
    }

    function executeToolbarItem(item, event) {
        var macroName = item.attr("data-macro-name");
        var command = item.attr("data-command");
        var format = item.attr("data-format");
        var controlId = item.attr("data-control-id");
        var editor = AJS.Rte.getEditor();

        if (macroName) {
            tinymce.confluence.macrobrowser.macroBrowserToolbarButtonClicked({presetMacroName: macroName});
        }
        if (command) {
            editor.execCommand(command, false);
        }
        if (format) {
            editor.theme.controlHandlers['formatselect']['click'].dispatch(format);
        }
        if(controlId) {
            editor.theme.controlHandlers['buttons']['click'].dispatch(controlId);
        }
    }

    function enableContextToolbar(e, options) {
        var toolbarId = convertIdToRowId(options);

        $("#" + toolbarId).removeClass("disabled");
    }

    function disableContextToolbar(e, options) {
        var toolbarId = convertIdToRowId(options);

        $("#" + toolbarId).addClass("disabled");
    }

    //could be extended to disable a command as well
    function disableToolbarButton(buttonClass) {
        toggleButton($("." + buttonClass.replace(".","")),true);
    }

    function enableToolbarButton(buttonClass) {
        toggleButton($("." + buttonClass.replace(".","")),false);
    }

    /**
     * Used to toggle a button state
     *
     * @param {jQueryHTMLElement} $button - Button to be disabled
     * @param {boolean} disable - DisabledState
     */
    function toggleButton($button, disable) {
        if (disable) {
            $button.closest(".aui-button").prop("disabled", true).attr("aria-disabled", "true").toggleClass("disabled", disable);
        } else {
            $button.closest(".aui-button").prop("disabled", false).removeAttr("aria-disabled").toggleClass("disabled", disable);
        }
    }

    function isToolbarButtonEnabled(buttonClass) {
        var button = $("." + buttonClass.replace(".",""));
        return !button.closest(".aui-button").prop("disabled");
    }

    function focusToolbarButton(buttonClass) {
        $("." + buttonClass.replace(".","")).closest(".aui-button").focus();
    }

    /**
     * @return the HTML element representing the identified toolbar, or null if not found.
     */
    function getToolbarRow(id) {
        var rowId = convertIdToRowId({ id: id});

        var row = $("#" + rowId);
        if (row.length) {
            return row[0];
        } else {
            return null;
        }
    }

    /**
     * Toggles the disabled state of the toolbar buttons
     *
     * @param {boolean} state - DisabledState
     * @param {boolean} [disableFormatState=false] - Defaults to false
     * @param {boolean} [deep=false] - Disable all inner button and inputs.
     * @param {function} [deepFilter] - jQuery search filter to run on the inner deep disable, defaults to no filter
     */
    function toggleToolbarButtons(state, disableFormatState, deep, deepFilter) {
        var toolBar = $("#toolbar");
        var toolBarItems = toolBar.find(".toolbar-item");
        var moreMenu =   $("#insert-menu, #more-menu");
        var colorPicker = $("#insert-menu, #color-picker-control");
        var formatMenu = $("#format-dropdown");
        var disabledClass = "disabled";
        var filter = deepFilter || function() {
            return true;
        };

        toolBarItems.toggleClass(disabledClass, state);
        moreMenu.toggleClass(disabledClass, state);
        colorPicker.toggleClass(disabledClass, state);

        // format should not disabled by default
        formatMenu.toggleClass(disabledClass, !!disableFormatState);
        AJS.Rte.TablePicker[state ? "disable" : "enable"]();

        // Disable all inner buttons and inputs applied over a filter
        typeof deep!=="undefined" && toolBar.find("button, input").filter(filter).toggleClass("disabled", deep).prop("disabled", deep);
    }

    var formattingDisable = function() {
        var shouldDisable = function(node) {
                node = $(node).closest('PRE,BLOCKQUOTE,.text-placeholder');
                return function(type) {
                    return node.is(type);
                };
            };


        return function(ed,cm,e) {
            var isType = shouldDisable(e);
            var isBlockQuote = isType("BLOCKQUOTE");
            var isPre = isType("PRE");
            var isPlaceholder = isType(".text-placeholder");
            var isInsideNoFormatMacro;

            if (isPre) {
                //check to see if we area also in a macro
                isInsideNoFormatMacro = $(e).parents('table').is("[data-macro-body-type='PLAIN_TEXT']");
                toggleToolbarButtons(true, isInsideNoFormatMacro);
            } else if (isPlaceholder) {
                toggleToolbarButtons(true);
            } else if (isBlockQuote) {
                cm.setDisabled('justifyleft',isBlockQuote);
                cm.setDisabled('justifycenter', isBlockQuote);
                cm.setDisabled('justifyright', isBlockQuote);
            } else {
                //re-enable everything
                toggleToolbarButtons(false);
            }
        };
    };

    // Convert a supplied value to a value suitable for identifying a toolbar row
    function convertIdToRowId(options) {
        var toolbarId = "default";
        if (options && options.id) {
            toolbarId = options.id;
        }

        return "rte-toolbar-row-" + toolbarId;
    }

    // check if a toolbar with the supplied id already exists
    function isAlreadyPresent(val) {
        return $("#" + val).length > 0;
    }

    /**
     * @return true if the identifier toolbar is enabled.
     */
    function isToolbarRowEnabled(id) {
        var toolbarId = convertIdToRowId({ id: id });

        return isAlreadyPresent(toolbarId) && !$("#" + toolbarId).hasClass("disabled");
    }

    //added a timeouts to ensure that if we change between showing and hiding it will not flicker and slide in and out.
    //better ux
    var toolbarTimeout;

    function removeContextToolbar(e, options) {
        var animate = options.animate;
        if (animate == undefined) {
            animate = true;
        }

        var callback = function() {
            $(this).remove();
            $(document).trigger("resize.resizeplugin");
            if (options.onHide) {
                options.onHide();
            }
        };
        clearTimeout(toolbarTimeout);
        toolbarTimeout = setTimeout(function() {
            var toolbarId = convertIdToRowId(options);
            var toolbar = $("#" + toolbarId);
            if (animate) {
                toolbar.slideUp(400, callback);
            } else {
                toolbar.hide();
                callback.call(toolbar);
            }

        }, 100);
    }

    /**
     * options.editorAdjacent - if true then the toolbar is preferred to remain the nearest one to the editor
     * even when later toolbars are opened.
     */
    function createContextToolbar(e, options) {
        var toolbarId = convertIdToRowId(options);

        var animate = options.animate;
        if (animate == undefined) {
            animate = true;
        }

        if (isAlreadyPresent(toolbarId)) {
            // CONFDEV-25560 Prevent race condition when the deferred row.slideDown gets cancel
            // and we end up with an existent (but hidden) toolbar element that can not be shown again.
            // This pretends to be a small, safe change to avoid a major refactoring at this time.
            $("#" + toolbarId + ":hidden").slideDown(400, function(){
                AJS.debug('Prevented toolbar deferred display race condition');
            });
            return;
        }

        var row = $("<div></div>").addClass("toolbar-split toolbar-split-row toolbar-contextual");

        row.attr("id",toolbarId);

        if (options.editorAdjacent) {
            row.addClass("editor-adjacent");
        }

        //CONFDEV-39705: select toolbar which is visible to make sure it is element of active editor
        var toolbar = !options.topToolbar ? $("#savebar-container .aui-toolbar:visible")  : $("#rte-toolbar.aui-toolbar:visible");
        for(var i = 0, length = options.buttons.length; i < length; i++) {
            row.append(options.buttons[i].render());
        }

        row.css({"display": "none"});

        if (options.editorAdjacent) {
            toolbar.append(row);
        } else {
            // insert this new toolbar immediately before the first editorAdjacent one found
            var firstEditorAdjacentToolbar = $(".editor-adjacent", toolbar).filter(":first");
            if (firstEditorAdjacentToolbar.length) {
                firstEditorAdjacentToolbar.before(row);
            } else {
                toolbar.append(row);
            }
        }

        row.find('.toolbar-dropdown').each(function() {
            bindDropdownMenu(this);
        });

        var callback = function() {
            $(document).trigger("resize.resizeplugin").trigger("shown.contextToolbar");
            if (options.onVisible) {
                options.onVisible();
            }
        };

        clearTimeout(toolbarTimeout);
        toolbarTimeout = setTimeout(function() {
            if (animate) {
                row.slideDown(400, callback);
            } else {
                row.show();
                callback();
            }
        }, 100);
    }

    function bindDropdownMenu(id) {
        var menu = $(id);
        var dropdown = menu.dropDown("Standard", { alignment: menu.data('dropdown-alignment') || "left" })[0];

        menu.find(".dropdown-item").click(function(e) {
            var item = $(this);
            executeToolbarItem(item, e);
            dropdown.hide();
            e.preventDefault();
        });

        disableDropDown(dropdown);
        bindCloseDropDown(dropdown);
    }

    function editorHints() {
        var TinyMCELang  = require('confluence-editor/i18n/translations.i18n');
        var hints = [];
        for (var hint in TinyMCELang.hints) {
            hints.push("hints." + hint);
        }
        var hintManager = Confluence.hintManager(hints);
        var updateHint = function () {
            $("#rte-savebar .hints-text").html(AJS.Rte.getEditor().getLang(hintManager.getNextHint()));
        };
        updateHint();
        $("#rte-savebar a.hints-close").click(function (e) {
            $(this).closest(".toolbar-split").addClass("hidden");
            e.preventDefault();
        });
        $("#rte-savebar a.hints-next").click(function (e) {
            updateHint();
            e.preventDefault();
        });
    }

    return {

        init: function (ed) {
            bindDropdownMenu("#format-dropdown");
            bindDropdownMenu("#more-menu .aui-dd-parent");
            bindDropdownMenu("#insert-menu .aui-dd-parent");
            if ($("#pagelayout-menu").length) {
                bindDropdownMenu("#pagelayout-menu .aui-dd-parent");
            }
            if ($("#template-menu").length) {
                bindDropdownMenu("#template-menu .aui-dd-parent");
            }

            colorPicker();
            tablePicker();
            sourceMode();
            editorHints();

            // TODO: we still need to think about this
            wireToolbarContext(AJS.Rte.EventDelegator(ed),ed);

            var formatDropDown = $("#format-dropdown");
            var dropDownTextHolder = formatDropDown.find("span.dropdown-text");

            ed.onBeforeExecCommand.add(function(ed, cmd, ui, val, context) {
                // CONFDEV-3535: Reset to left alignment if in style that does not support alignment.
                $.each(['pre','blockquote'], function() {
                    if (cmd == "FormatBlock" && val == this) {
                        ed.formatter.remove('alignleft');
                        ed.formatter.remove('aligncenter');
                        ed.formatter.remove('alignright');
                    }
                });

                // CONFDEV-767/CONFDEV-1408: Prevent styles, links and macros from being used within a pre block or text placeholder.
                if ($(ed.selection.getNode()).closest("pre,.text-placeholder").length) {
                    var toDisable = ["Bold", "Italic", "Underline", "Strikethrough", "InsertUnorderedList",
                        "InsertOrderedList", "InsertInlineTaskList", "InsertInlineTaskListNoToggle", "superscript", "subscript", "mceConfMacroBrowser", "mceConfimage",
                        "mceConfAttachments", "mceEmotion", "InsertWikiMarkup", "mceConflink", "mceInsertTable",
                        "mceConfAutocompleteLink"];
                    var toDisableLen = toDisable.length;

                    for (var i = 0; i < toDisableLen; i++) {
                        if (cmd == toDisable[i]) {
                            context.terminate = true;
                        }
                    }
                }

                // Remove existing formatting before applying a pre style.
                if ((cmd == "FormatBlock") && (val == "pre")) {
                    ed.undoManager.add();
                    ed.execCommand("removeFormat");
                }

                // Block
                // if going from blockquote to paragraph format, we need to execute the
                // blockquote command again to remove formatting - that's just how tinymce works
                if (cmd == "FormatBlock" && val == "p") {
                    var blockquote = formatDropDown.find(".dropdown-item[data-format='blockquote']").text();
                    if (dropDownTextHolder.text() == blockquote) {
                        context.terminate = true;
                        ed.execCommand("FormatBlock", false, "blockquote");
                    }
                }
                // only remove format if text is selected
                else if (cmd == "FormatBlock" && val == "removeformat" && ed.selection.isCollapsed()) {
                    context.terminate = true;
                    AJS.debug("Not removing format for no selected text");
                }
            });

            // Update format dropdown display text
            ed.onExecCommand.add(function(ed, cmd, ui, val, context) {
                if (cmd == "FormatBlock") {
                    var format = formatDropDown.find(".dropdown-item[data-format='" + val + "']");
                    if (!format.length) { // default to paragraph format
                        format = formatDropDown.find(".dropdown-item[data-format='p']");
                    }
                    dropDownTextHolder.text(format.text());
                }
            });

            ed.onNodeChange.add(formattingDisable());

            ed.onInit.add(function(ed) {
                AJS.debug("customtoolbar: ed.onInit function");
                var toolbarButtons = {};
                $(".aui-toolbar").find('[data-control-id]').each(function(i, trigger) {
                    var toolbarItem;
                    var id;
                    var control;

                    trigger = $(trigger);
                    toolbarItem = trigger.closest(".toolbar-item");
                    id = trigger.attr("data-control-id");

                    if (id == "formatselect") {
                        // bindings for format drop down
                        control = ed.theme.controlHandlers[id];
                        control['state'].add(function(name) {
                            var editor = AJS.Rte.getEditor();
                            if (name == "p") {
                                var n = editor.selection.getNode();
                                // fix bug in advanced theme where it always shows paragraph format when in a blockquote
                                if($(n).closest("p").parent().is("blockquote")) {
                                    name = "blockquote";
                                }
                            }
                            var text = formatDropDown.find(".dropdown-item[data-format='" + name + "']").text();
                            if (text) {
                                dropDownTextHolder.text(text);
                            }
                        });
                    } else {
                        toolbarButtons[id] = trigger;
                    }
                });

                var control = ed.theme.controlHandlers['buttons'];

                //state can be: 'disabled' or 'active'
                control['state'].add(function(format, state, toggle){
                    var button = toolbarButtons[format];

                    if (!button) {
                        return;
                    }

                    var icon = button.find('.icon-check');

                    var toolbarItem = button.closest(".toolbar-item");

                    if (!icon.length) {
                        toolbarItem.toggleClass(state, toggle);
                    } else {
                        icon.toggleClass('hidden', !toggle);
                    }
                });

                $('.aui-toolbar').delegate('.toolbar-item', 'click', function (e) {
                    var $self = $(this);
                    if (!$self.hasClass('disabled')) {
                        var format = $self.children('.toolbar-trigger[data-control-id]').attr('data-control-id');
                        if (format) {
                            control['click'].dispatch(format);
                            e.preventDefault();
                        }
                    } else {
                        // stop activation of navigation to # (i.e. top of page) when disabled
                        e.preventDefault();
                    }
                });

                // https://jira.atlassian.com/browse/CONFDEV-11912#comment-439048
                $.support.shrinkWrapBlocks = false;

                AJS.debug("customtoolbar: finished ed.onInit function");
            });
        },
        toggleToolbarButton: toggleButton,
        disableToolbarButton: disableToolbarButton,
        enableToolbarButton: enableToolbarButton,
        focusToolbarButton: focusToolbarButton,
        isToolbarRowEnabled : isToolbarRowEnabled,
        getToolbarRow : getToolbarRow,
        isToolbarButtonEnabled : isToolbarButtonEnabled,
        bindDropdownMenu : bindDropdownMenu,
        toggleToolbarButtons: toggleToolbarButtons,

        getInfo: function () {
            return {
                longname: 'customtoolbar',
                author: 'Atlassian',
                authorurl: 'http://www.atlassian.com',
                infourl: 'http://www.atlassian.com/',
                version: "1.0"
            };
        }
    };
});

require('confluence/module-exporter')
        .safeRequire('confluence-editor/tinymce3/plugins/customtoolbar/editor_plugin_src', function(CustomToolbarPlugin) {
            var tinymce = require('tinymce');

            tinymce.create('tinymce.plugins.customtoolbar', CustomToolbarPlugin);

            // Register plugin
            //noinspection JSUnresolvedVariable
            tinymce.PluginManager.add('customtoolbar', tinymce.plugins.customtoolbar);
        });
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/customtoolbar/custom-toolbar-components.js' */
/*
 * The components that can be used on a custom toolbar.
 *
 * These objects are made available in the Confluence.Editor.Toolbar.Components namespace.
 */
define('confluence-editor/tinymce3/plugins/customtoolbar/custom-toolbar-components', [
    'jquery'
], function(
    $
) {
    "use strict";

    var CustomToolbarComponents = {};

    /**
     * options:
     *  @param text the text for the button
     *  @param iconClass the CSS class for the icon on the button
     *  @param click the click function for the button
     *  @param disabled true if the button should default to disabled.
     */
    CustomToolbarComponents.Button = function (options) {
        var text = options.text;
        var tooltip = options.tooltip;
        var triggerText = options.triggerText;
        var iconClass = options.iconClass;
        var click = options.click;
        var disabled = !!options.disabled;
        var id = options.id;

        /**
         * Create and return a visual representation of this component.
         */
        this.render = function() {

            var button = $('<button type="button"></button>').addClass("aui-button").attr('data-tooltip', tooltip || text);
            if (id) {
                button.attr("id", id);
            }

            if (disabled) {
                button.prop("disabled", true).attr("aria-disabled", "true");
            }

            button.click(function(e) {
                if (!button.prop("disabled")) {
                    click();
                }
            });

            if (iconClass) {
                var span = $("<span />");
                span.addClass("icon " + iconClass);
                span.text(text);
                button.append(span);
            }

            if(triggerText) {
                var triggerSpan = $("<span />");
                triggerSpan.addClass('trigger-text');
                triggerSpan.text(triggerText);
                button.append(triggerSpan);
            }

            return button[0];
        };
    };

    /**
     * options:
     *  @param id id of the control
     *  @param text the text for the button
     *  @param iconClass the CSS class for the icon on the button
     *  @param disabled true if the button should default to disabled.
     *  @param dropDownContent markup or element for inserting into the dropDownContainer;
     */
    CustomToolbarComponents.DropDownButton = function (options) {
        var id = options.id;
        var tooltip = options.tooltip;
        var text = options.text || "";
        var iconClass = options.iconClass;
        var disabled = !!options.disabled;
        var dropDownContent = options.dropDownContent;

        var dropDownContainer;

        /**
         * Create and return a visual representation of this component.
         */
        this.render = function() {

            var li = $("<div></div>").addClass("toolbar-item").addClass("toolbar-dropdown").attr('data-tooltip', tooltip);
            li.attr('id', id);
            var parent = $("<div/>").addClass("aui-dd-parent");
            var a = $("<a href='#'></a>");
            a.addClass("toolbar-trigger").addClass("aui-dd-trigger").addClass("aui-button");
            text && a.append("<span class='dropdown-text'>" + text + "</span>");

            if (disabled) {
                li.addClass("disabled");
                a.addClass("disabled");
            }

            if (iconClass) {
                var span = $("<span />");
                span.addClass("icon " + iconClass);
                span.text(text);
                a.append(span);
            }

            var dropDownIcon = $("<span/>");
            dropDownIcon.addClass("icon").addClass("icon-dropdown");
            a.append(dropDownIcon);

            dropDownContainer = $("<div/>").addClass("hidden").addClass("aui-dropdown");
            if(dropDownContent) {
                dropDownContainer.append(dropDownContent);
            }

            parent.append(a);
            parent.append(dropDownContainer);
            li.append(parent);

            return li[0];
        };
    };

    /**
     * options:
     *  @param text the text for the button
     *  @param click the click function for the button
     *  @param disabled true if the button should default to disabled.
     *  @param textClass the css class for the button text
     */
    CustomToolbarComponents.TextButton = function (options) {
        var text = options.text;
        var textClass = options.textClass;
        var click = options.click;
        var disabled = !!options.disabled;
        var tooltip = options.tooltip;

        /**
         * Create and return a visual representation of this component.
         */
        this.render = function() {

            var button = $('<button type="button"></button>').addClass("aui-button").addClass(textClass).text(text);
            if(tooltip) {
                button.attr('data-tooltip', tooltip);
            }

            if (disabled) {
                button.prop("disabled", true).attr("aria-disabled", "true");
            }

            button.click(function(e) {
                if (!button.prop("disabled")) {
                    click();
                }
            });

            return button[0];
        };
    };

    /**
     * options:
     * @param id the id for the text box (should be unique)
     * @param text the title for the text box (should be i18n)
     * @param name the name for the text box (should not be i18n)
     * @param keydown the keydown function
     * @param cssClass the css class
     */
    CustomToolbarComponents.TextBox = function (options) {
        var id = options.id;
        var text = options.text;
        var name = options.name;
        var keydown = options.keydown;
        var cssClass = options.cssClass;

        this.render = function()
        {
            var div = $("<div></div>").addClass("toolbar-item");
            div.append($("<label for='" + id + "'>" + text + "</label>"));
            var input = $("<input id='" + id + "' type='text' name='" + name + "' class='" + cssClass + " text' autocomplete='off'>");
            input.keydown(function(e) {
                keydown(e);
            });

            div.append(input);
            return div[0];
        };
    };

    /**
     * Create a group of other controls. This group will be visually separate from other groups.
     *
     * @param contents an array of other components that should be in this group. (Don't nest groups.)
     * @param options optional parameters for the group:
     *   @param id the id for the group
     *   @param groupClass the class for the group
     */
    CustomToolbarComponents.Group = function (contents, options) {

        var components = contents;

        /**
         * Create and return the visual representation of the spacer.
         */
        this.render = function() {
            var group = $("<div></div>");
            group.addClass("aui-buttons");

            if(options) {
                options.id && group.attr('id', options.id);
                options.groupClass && group.addClass(options.groupClass);
            }

            for (var i = 0, length = components.length; i < length; i++) {
                group.append(components[i].render());
            }

            return group[0];
        };
    };

    /**
     * Create a group of other controls. This group will be visually separate from other groups.
     *
     * @param contents an array of other components that should be in this group. (Don't nest groups.)
     * @param options optional parameters for the group:
     *   @param id the id for the group
     *   @param groupClass the class for the group
     */
    CustomToolbarComponents.SplitGroup = function (contents, options) {

        var components = contents;
        var dropDownOptions = (options && options.dropDownOptions) || {};

        function renderDropDown() {

            var id = dropDownOptions.id;
            var disabled = dropDownOptions.disabled;
            var dropDownContent = dropDownOptions.dropDownContent;
            var title = dropDownOptions.title;
            var alignment = dropDownOptions.alignment;

            var dropDownContainer;

            var li = $("<div></div>").addClass("toolbar-item").addClass("toolbar-dropdown").addClass("toolbar-splitbutton");
            id && li.attr('id', id);
            title && li.attr({'data-tooltip' : title });
            alignment && li.data('dropdown-alignment', alignment);
            var parent = $("<div/>").addClass("aui-dd-parent");
            var a = $("<a href='#'></a>");
            a.addClass("toolbar-trigger aui-dd-trigger");

            if (disabled) {
                li.addClass("disabled");
                a.addClass("disabled");
            }

            var dropDownIcon = $("<span/>");
            dropDownIcon.addClass("icon").addClass("icon-dropdown");
            a.append(dropDownIcon);

            dropDownContainer = $("<div/>").addClass("hidden").addClass("aui-dropdown");
            if(dropDownContent) {
                dropDownContainer.append(dropDownContent);
            }

            parent.append(a);
            parent.append(dropDownContainer);
            li.append(parent);

            return li[0];
        }

        /**
         * Create and return the visual representation of the spacer.
         */
        this.render = function() {
            var group = $("<div></div>");
            group.addClass("aui-buttons");

            if(options) {
                options.id && group.attr('id', options.id);
                options.groupClass && group.addClass(options.groupClass);
            }

            for (var i = 0, length = components.length; i < length; i++) {
                group.append(components[i].render());
            }

            // Add dropdown
            group.append(renderDropDown(options));

            options && options.postProcess && options.postProcess(group);

            return group[0];
        };
    };

    return CustomToolbarComponents;
});

require('confluence/module-exporter').exportModuleAsGlobal('confluence-editor/tinymce3/plugins/customtoolbar/custom-toolbar-components', 'Confluence.Editor.Toolbar.Components');
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/customtoolbar/thirdpartycode/tipsy.js' */
// tipsy, facebook style tooltips for jquery
// version 1.0.0a
// (c) 2008-2010 jason frame [jason@onehackoranother.com]
// released under the MIT license

// Modified by Atlassian

(function($) {

    // ATLASSIAN - CONF-30162 Improved version of autoBounds for automatic placement of chunky tips
    // The original autoBounds failed in two regards: 1. it would never return a 'w' or 'e', gravity even if they
    // were preferred and/or optimal, 2. it only respected the margin between the left hand side of an element and
    // left hand side of the viewport, and the top of an element and the top of the viewport. This version checks
    // to see if the bottom of an element is too close to the bottom of the screen, similarly for the right hand side
    $.fn.tipsy.autoBounds2 = function(margin, prefer) {
        return function() {
            var dir = {};
            var boundTop = $(document).scrollTop() + margin;
            var boundLeft = $(document).scrollLeft() + margin;
            var $this = $(this);

            // bi-directional string (ne, se, sw, etc...)
            if (prefer.length > 1) {
                dir.ns = prefer[0];
                dir.ew = prefer[1];
            } else {
                // single direction string (e, w, n or s)
                if (prefer[0] == 'e' || prefer[0] == 'w') {
                    dir.ew = prefer[0];
                } else {
                    dir.ns = prefer[0];
                }
            }

            if ($this.offset().top < boundTop) { dir.ns = 'n'; }
            if ($this.offset().left < boundLeft) { dir.ew = 'w'; }
            if ($(window).width() + $(document).scrollLeft() - ($this.offset().left + $this.width()) < margin) { dir.ew = 'e'; }
            if ($(window).height() + $(document).scrollTop() - ($this.offset().top + $this.height()) < margin) { dir.ns = 's'; }

            if (dir.ns) {
                return dir.ns + (dir.ew ? dir.ew : '');
            }
            return dir.ew;
        };
    };
})($);
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/customtoolbar/chunky-tips.js' */
define('confluence-editor/tinymce3/plugins/customtoolbar/chunky-tips', [
    'ajs',
    'tinymce',
    'jquery'
], function(
    AJS,
    tinymce,
    $
) {
    "use strict";

    function ChunkyTips() {
        AJS.debug('Enabling Chunky Tooltip for the editor');

        function tooltipExtractor() {
            // handle missing tooltip for buttons without a tooltip
            return $(this).attr('data-tooltip') || '';
        }

        var defaultOptions = {
            live: true, // Created links are handled automatically
            gravity: 'n', // Point the arrow to the top
            title: tooltipExtractor,
            delayIn: 250,
            delayOut: 0 // Can be removed once AUI-1214 is resolved
        };

        var tooltipBelowPreferredFn = $.fn.tipsy.autoBounds2(50, 'n');
        var tooltipAbovePreferredFn = $.fn.tipsy.autoBounds2(50, 's');
        var tooltipRightPreferredFn = $.fn.tipsy.autoBounds2(50, 'w');

        var tooltipDefaultBelowOptions = $.extend({}, defaultOptions, {gravity: tooltipBelowPreferredFn});
        var tooltipDefaultAboveOptions = $.extend({}, defaultOptions, {gravity: tooltipAbovePreferredFn});
        var tooltipDefaultToRightOptions = $.extend({}, defaultOptions, {gravity: tooltipRightPreferredFn});

        $('#rte-toolbar [data-tooltip]:not(.dropdown-item)').tooltip(tooltipDefaultBelowOptions);
        $('#rte-toolbar .dropdown-item[data-tooltip]').tooltip(tooltipDefaultToRightOptions);
        $('#rte-savebar [data-tooltip]').tooltip(tooltipDefaultAboveOptions);
        $('#editor-precursor [data-tooltip]').tooltip(tooltipDefaultBelowOptions);
        $('#property-panel [data-tooltip]').tooltip(tooltipDefaultBelowOptions);

        // Remove tooltips if a dropdown is shown or hidden:
        function removeDropdownTooltips(e, type, obj) {
            if (type === "dropdown") {
                $('.tipsy').remove();
                if (obj && obj.trigger && obj.trigger.jquery) {
                    var tipsyData = obj.trigger.data('tipsy');
                    if (tipsyData) {
                        tipsyData.hoverState = 'out';
                    }
                }
            }
        }

        $(document).bind("showLayer", removeDropdownTooltips);
        $(document).bind("hideLayer", removeDropdownTooltips);

        function removePropertyPanelTips(p1, p2, p3, p4) {
            $('.tipsy').remove();
        }

        AJS.bind("created.property-panel", removePropertyPanelTips);
        AJS.bind("destroyed.property-panel", removePropertyPanelTips);

        var replacePlus = /\+/g;

        AJS.bind("register-contexts.keyboardshortcuts", function () {
            // Defer to ensure shortcut code has had a chance to update the title on the save-bar buttons
            setTimeout(function () {
                $('#rte-savebar .aui-button[title]').each(function () {
                    var trigger = $(this);
                    var tooltip = trigger.attr('title');
                    trigger.removeAttr('title');
                    if (tinymce.isMac) {
                        // Remove + from shortcut text for Mac
                        var scIdx = tooltip.indexOf('(');
                        if (scIdx >= 0) {
                            tooltip = tooltip.substr(0, scIdx) + tooltip.substr(scIdx).replace(replacePlus, '');
                        }
                    }
                    trigger.attr('data-tooltip', tooltip);
                });
            }, 0);
        });
    }

    return ChunkyTips;
});


require('confluence/module-exporter').safeRequire('confluence-editor/tinymce3/plugins/customtoolbar/chunky-tips', function(ChunkyTips) {
    var AJS = require('ajs');

    AJS.bind("init.rte", ChunkyTips);
});

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/confluencepaste/linkify.js' */
define('confluence-editor/tinymce3/plugins/confluencepaste/linkify', function() {
    "use strict";
    /*

     Copyright (c) HipChat, Inc.

     Permission is hereby granted, free of charge, to any person obtaining
     a copy of this software and associated documentation files (the
     "Software"), to deal in the Software without restriction, including
     without limitation the rights to use, copy, modify, merge, publish,
     distribute, sublicense, and/or sell copies of the Software, and to
     permit persons to whom the Software is furnished to do so, subject to
     the following conditions:

     The above copyright notice and this permission notice shall be
     included in all copies or substantial portions of the Software.

     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
     MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
     LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
     OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
     WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

     */
    // commit hash: 7d49fae | 7d49faee4a08
    // https://bitbucket.org/hipchat/web/
    // https://bitbucket.org/hipchat/web/src/7d49faee4a08/www/js/chat/linkify.js
    return {
        // Static values used in creating the URL regexes
        RE_EMAIL_PATTERN: '(?:\\s|\\A|^)[\\w.-]+\\+*[\\w.-]+@(?:(?:[\\w-]+\\.)+[A-Za-z]{2,6}|(?:\\d{1,3}\\.){3}\\d{1,3})',
        RE_URL_SCHEME: '(?:[\\w-]{2,}):/{1,3}',  // protocol
        /*eslint-disable max-len*/
        RE_TLD: '(?:aero|arpa|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|travel|ac|ad|ae|af|ag|ai|al|am|an|ao|aq|ar|as|at|au|aw|az|ba|bb|bd|be|bf|bg|bh|bi|bj|bm|bn|bo|br|bs|bt|bv|bw|by|bz|ca|cc|cd|cf|cg|ch|ci|ck|cl|cm|cn|co|cr|cu|cv|cx|cy|cz|de|dj|dk|dm|do|dz|ec|ee|eg|eh|er|es|et|fi|fj|fk|fm|fo|fr|ga|gd|ge|gf|gg|gh|gi|gl|gm|gn|gp|gq|gr|gs|gt|gu|gw|gy|hk|hm|hn|hr|ht|hu|id|ie|il|im|in|io|iq|ir|is|it|je|jm|jo|jp|ke|kg|kh|ki|km|kn|kp|kr|kw|ky|kz|la|lb|lc|li|lk|lr|ls|lt|lu|lv|ly|ma|mc|md|mg|mh|mk|ml|mm|mn|mo|mp|mq|mr|ms|mt|mu|mv|mw|mx|my|mz|na|nc|ne|nf|ng|ni|nl|no|np|nr|nu|nz|om|pa|pe|pf|pg|ph|pk|pl|pm|pn|pr|ps|pt|pw|qa|re|ro|ru|rw|sa|sb|sc|sd|se|sg|si|sj|sk|sl|sm|sn|so|sr|st|sv|sy|sz|tc|td|tf|tg|th|tj|tk|tm|tn|to|tp|tr|tt|tv|tw|tz|ua|ug|uk|um|us|uy|uz|va|vc|ve|vg|vi|vn|vu|wf|ws|ye|yt|yu|za|zm|zw)',
        /*eslint-enable max-len*/
        // adapted from:
        // http://daringfireball.net/2010/07/improved_regex_for_matching_urls
        RE_URL_MIDCHAR: '(?:' +
        '[^\\s()]+' +    // non-space, non-()
        '|' +            // or
        '\\((\\S+)\\)' + // non-space in parens
        ')',
        RE_URL_ENDCHAR: '(?:' +
        '\\((\\S+)\\)' +                       // non-space in parens
        '|' +                                  // or
        '[^\\s`!()\\[\\]{};:\'".,<>?«»“”‘’]' + // none of these
        ')',

        // Intialize the linkification variables
        init: function () {
            // already initialized?
            if (this.RE_URL_ENDING) {
                return;
            }
            this.RE_URL_ENDING = '(?:' + this.RE_URL_MIDCHAR + '*' + this.RE_URL_ENDCHAR + ')?';
            this.RE_FULL_URL = this.RE_URL_SCHEME + '\\w+(?:.\\w+)' + this.RE_URL_ENDING;
            this.RE_OTHER_URL = '\\w[\\w_-]*(?:\\.\\w[\\w_-]*)*\\.' + this.RE_TLD + '(?:[\\/\\?#]' + this.RE_URL_ENDING + '|\\b)';
        },

        /**
         * Linkify a string, replacing text urls with <a href="url">url</a>
         * Note: init must be called before this function can be used
         *
         * @param text - String to be linkified
         * @param matched_links - Return param (pass by ref) - Array of links matched during linkification
         * @param config - Hash of options for linkifier
         *          add_wbrs (bool) - Add <wbr> tags to displayed text to allow wrapping?
         *          truncate_length (int) - Truncate displayed links to this length
         *          link_target (str) - Target attribute for links
         *          link_titles (bool) - Add titles for links?
         **/
        linkify: function (text, matched_links, config) {
            this.init();

            text = this.match_and_replace(this.RE_EMAIL_PATTERN, text, true, false, matched_links, config);
            text = this.match_and_replace(this.RE_FULL_URL, text, false, false, matched_links, config);
            text = this.match_and_replace(this.RE_OTHER_URL, text, false, true, matched_links, config);

            return text;
        },

        /**
         * Internal helper function for linkification
         **/
        match_and_replace: function (pattern, input, is_email, add_http, matched_links, config) {
            var start = 0;
            var offset = 0;
            var match_length = 0;
            var end_tag_pos = 0;
            var close_anchor_re = /<\/[aA]>/;
            var re = new RegExp(pattern, "g");

            // config
            var add_wbrs = (config.hasOwnProperty("add_wbrs") ? config.add_wbrs : null);
            var truncate_length = (config.hasOwnProperty("truncate_length") ? config.truncate_length : 100);
            var link_target = (config.hasOwnProperty("link_target") ? config.link_target : "_blank");
            var link_titles = (config.hasOwnProperty("link_titles") ? config.link_titles : null);

            var match = {};
            var max_iter = 20;
            var cur_iter = 0;
            while (match = re.exec(input)) {
                cur_iter++;
                if (cur_iter > max_iter) {
                    break;
                }

                start = match.index; // start of match
                match_length = match[0].length;

                // If we find an opening a tag, advance to its end and continue looking
                var substr = input.substring(offset, start);
                if (substr.search(/<[aA]/) >= 0) {
                    close_anchor_re.lastIndex = offset;
                    var close_anchor_pos = input.substring(offset, input.length).search(close_anchor_re);

                    // If we find an opening tag without a matching closing tag, just return the input we have
                    if (close_anchor_pos < 0) {
                        return input;
                    }

                    end_tag_pos = close_anchor_pos + offset;

                    // RegExp.lastIndex is used to tell the regexp where to start matching
                    re.lastIndex = end_tag_pos + 4;
                    offset = end_tag_pos + 4;

                    continue;
                }

                // Do the actual replecement of text with anchor tag
                var address = input.substr(start, match_length);

                // Since we escape before linkifying, we need to make sure that the matched link
                // doesn't actually end with an escaped character (&, <, or >)
                // If it does, move the match backwards so as not to include the escaped character
                // Then, keep moving the match back until it ends with a valid character (defined by RE_URL_ENDCHAR)
                var escaped_char_match_pos = address.search(/&(amp|gt|lt)$/);
                if (escaped_char_match_pos > 0 && input.length > start + match_length && input[start + match_length] == ';') {
                    var num_chars_matched = address.length - escaped_char_match_pos;
                    match_length -= num_chars_matched;
                    address = input.substr(start, match_length);
                    while (!address.match(this.RE_URL_ENDCHAR + "$") && match_length > 0) {
                        match_length--;
                        address = input.substr(start, match_length);
                    }
                }
                var actual = address;

                if (add_http) {
                    actual = 'http://' + actual;
                }

                var replacement = '<a';

                // link target?
                if (link_target) {
                    replacement += ' target="' + link_target + '"';
                }

                replacement += ' href="';

                if (is_email) {
                    replacement += 'mailto:';
                }

                actual = actual.replace(/"/g, '%22');
                replacement += actual + '"';

                // add title
                if (link_titles) {
                    var title = is_email ? 'Email ' + actual : actual;
                    replacement += ' title="' + title + '"';
                }

                // Truncate displayed text if requested
                if (truncate_length && address.length > truncate_length) {
                    address = address.substr(0, truncate_length) + '...';
                }

                // Add word break tags to allow wrapping where appropriate
                if (add_wbrs) {
                    address = address.replace(new RegExp("([/=])", 'g'), "<wbr>$1");
                }

                replacement += '>' + address + '</a>';

                // Record what was matched
                if (matched_links) {
                    matched_links.push(actual);
                }

                // Do the replacement
                input = input.slice(0, start) + replacement + input.slice(start + match_length, input.length);
                re.lastIndex = start + replacement.length;
                offset = start + replacement.length;
            }

            return input;
        }

    };
});

require('confluence/module-exporter').exportModuleAsGlobal('confluence-editor/tinymce3/plugins/confluencepaste/linkify', 'linkify');
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/confluencepaste/post-paste-node-filter.js' */
define('confluence-editor/tinymce3/plugins/confluencepaste/post-paste-node-filter', [
    'jquery',
    'confluence/legacy',
    'confluence-editor/tinymce3/plugins/confluencepaste/linkify',
    'ajs',
    'document',
    'tinymce'
],
function(
    $,
    Confluence,
    linkify,
    AJS,
    document,
    tinymce
) {
    "use strict";

    /**
     * We are adapting linkify to behave like a regex object with
     * 'exec' and 'test' behaviors, so that it can be replaced by a regex if needed
     * in the future.
     */
    var URL_REGEX = (function() {

        linkify.init();

        var FULL_URL = new RegExp(linkify.RE_FULL_URL);
        var OTHER_URL = new RegExp(linkify.RE_OTHER_URL);

        return {
            exec:function(str) {
                var ret = FULL_URL.exec(str);

                return ret ? ret : OTHER_URL.exec(str);
            },
            test: function(str) {
                return FULL_URL.test(str) || OTHER_URL.test(str);
            }
        };
    })();

    // once issue 'HC-3169' is resolved this function won't be required and we will be able to just use:
    // var EMAIL_REGEX = new RegExp(linkify.RE_EMAIL_PATTERN);
    var EMAIL_REGEX = (function() {

        var emailRegex = new RegExp(linkify.RE_EMAIL_PATTERN);

        return {
            exec: function(str) {
                var match = emailRegex.exec(str);

                if (match && /\s/.test(match[0][0])) {
                    // HC-3169 - We have a match however since we are using hipchat's linkify for the regex in case of
                    // the first character being an empty space we will need to strip it and update the index of the match.
                    match[0] = match[0].replace(/\s/, '');
                    match.index++;
                }

                return match;
            },
            test: function(str) {
                return emailRegex.test(str);
            }
        };
    }());

    function filterRelativePath(element, attribute) {
        var items = $(element).find('[' + attribute + ']');
        var item = '';
        var attr = '';
        var mceAttr = '';

        for(var i=0, ii=items.length; i<ii; i++) {
            item = $(items[i]);
            attr = item && ['/', item.attr(attribute)].join('');
            mceAttr = item && ['/', item.attr('data-mce-' + attribute)].join('');

            if(AJS.contextPath() && attr.indexOf(AJS.contextPath()) === 0) {
                items[i] = item.attr(attribute, attr);
            }

            if(AJS.contextPath() && mceAttr.indexOf(AJS.contextPath()) === 0) {
                items[i] = item.attr('data-mce-' + attribute, mceAttr);
            }
        }

        return items;
    }

    function createCssFromWhiteList(item, whiteList) {
        var newCss = [];
        var regex = '';
        var matchedValue;
        var styleAttr = item.attr('style');
        var mceStyleAttr = item.attr('data-mce-style');

        for(var i=0, ii=whiteList.length; i < ii; i++) {
            if(styleAttr && styleAttr.toLowerCase().indexOf(whiteList[i]) > -1) {
                newCss.push(whiteList[i] + ': ' + item.css(whiteList[i]) + ';');
            } else if(mceStyleAttr && mceStyleAttr.toLowerCase().indexOf(whiteList[i]) > -1) {
                regex = new RegExp(whiteList[i] + ':.+?(?:;|$)');
                matchedValue = mceStyleAttr.match(regex);
                newCss.push(matchedValue[0].indexOf(';') > -1 ? matchedValue : matchedValue + ';');
            }
        }
        return newCss.join(' ');

    }

    function createFromWhiteList(item, attribute, whiteList) {
        var newList = [];

        if(whiteList) {
            for(var i=0, ii=whiteList.length; i < ii; i++) {
                if(item.is('[' + attribute + '~=' + whiteList[i] + ']')) {
                    newList.push(whiteList[i]);
                }
            }
        }
        return newList.join(' ');
    }

    function filterAttribute(element, attribute, whiteList) {
        var items = $(element).find('[' + attribute + ']');
        var list = '';
        var item;
        var whiteListForItem;

        if(items) {
            for(var i=0, ii=items.length; i<ii; i++) {
                item = $(items[i]);

                whiteListForItem = whiteList.standard;
                for (var selector in whiteList) {
                    if(whiteList.hasOwnProperty(selector) && item.is(selector)) {
                        whiteListForItem = whiteList[selector];
                    }
                }

                if(attribute.indexOf('style') > -1) {
                    list = createCssFromWhiteList(item, whiteListForItem);
                } else {
                    list = createFromWhiteList(item, attribute, whiteListForItem);
                }

                item.removeAttr(attribute);
                if(list.length) {
                    item.attr(attribute, list);
                }
            }
        }
    }

    function filterAttributes(element, attributes) {
        var cssWhiteList = {};

        cssWhiteList.standard = ['text-decoration', 'text-align', 'margin-left'];
        cssWhiteList['.wysiwyg-macro'] = ['background-image'];
        cssWhiteList['p'] = ['margin-left', 'text-align'];
        cssWhiteList['span'] = ['color', 'text-decoration'];
        cssWhiteList['pre'] = ['margin-left'];
        cssWhiteList['td'] = cssWhiteList['th'] = ['text-align'];
        cssWhiteList['li'] = ['list-style-type', 'background-image'];
        /**
         * CONFDEV-39345: keep CSS width of <col> to avoid breaking UI of table
         * Table resize feature need this CSS
         */
        cssWhiteList['col'] = ['width'];
        //CONFDEV-40037
        cssWhiteList['table.confluenceTable.relative-table'] = ['width'];

        if(attributes.indexOf('style') > -1) {
            filterAttribute(element, 'style', cssWhiteList);
            filterAttribute(element, 'data-mce-style', cssWhiteList);
        }

        //Confusion with path names when pasting between pages within
        //the same domain. Add / to relative path in order to make absolute.
        //Gecko browsers only
        if ($.browser.mozilla) {
            if(attributes.indexOf('src') > -1) {
                filterRelativePath(element, 'src');
            }

            if(attributes.indexOf('href') > -1) {
                filterRelativePath(element, 'href');
            }
        }

        filterAttribute(element, 'face', { standard: []});
        filterAttribute(element, 'id', { standard: []});
        filterAttribute(element, 'data-mce-href', { standard: []});
        return element;
    }

    function removeNode(node, selector) {
        $(selector, node).contents().unwrap();
    }

    //Remove <br> tags from plain text and replace with paragraphs
    function processPlainText(element) {
        var node;
        var newHtml;
        node = $(element);
        newHtml = "<p>" + node.html().replace(/<br>/gi, "</p><p>") + "</p>";
        node.html(newHtml);
    }

    //If the only tags are <br> tags then we assume that we are pasting plain text
    function isPlainText(element) {
        var node = $(element);
        return node.children("br").length && !node.find(":not(br)").length;
    }

    function isInPlainTextMacro() {
        return $(tinymce.activeEditor.selection.getStart()).closest("[data-macro-body-type='PLAIN_TEXT']").length;
    }

    //Search for things that should always be removed but keep the content that these
    //elements may contain
    function filterNodes(node) {
        var toRemove = [".contentLayout", ".contentLayout2", ".columnLayout", ".header", ".footer", ".cell", ".innerCell", ".panelContent", ".panel", ".panelHeader", ".Apple-converted-space", "font", ".jira-status", ".jira-issue", ".diff-html-removed", ".diff-html-added", ".diff-html-changed"];
        $.each(toRemove, function(i, selector){
            removeNode(node, selector);
        });

        $('img', node).map(function() {
            $(this).attr('data-attachment-copy', '');

            //CONFDEV-4487 Pasting empty <img> tag breaks the editor
            !$(this).attr('src') && $(this).remove();
        });

        //CONF-27225 Confluence does not support definition lists <dl>. Pasting <dl>'s breaks the editor
        //Pasting a <dl> only inserts the text content and removes the offending markup
        $('dl', node).map(function() {
            $(this).replaceWith($('<p/>').text($(this).text()));
        });

        $('a', node).map(function() {
            // CONF-32907 if a link has any of those classes we want to remove it since it means the user copied and pasted
            // an already marshalled link.
            $(this).removeClass("confluence-userlink userLogoLink");
        });

    }

    /**
     * Check a single node link matches if found, wrap the link-part of the node in
     * an anchor.  Text on either side of the link part is re-added to nodesToTest.
     *
     * Note, this function adds more content to the nodesToTest stack. This mild nastiness avoids having
     * to do slow array concats or ugly looped pushes in makeLinks.
     */
    function makeLinkProcess(node, nodesToTest) {
        var match;
        var emailMatch;
        var urlMatch;
        var prefix;

        function applyRegex(prefix) {
            var endOfNode;
            var nodeWithoutStart;
            if (match.index) {
                nodeWithoutStart = node.splitText(match.index);
                node && nodesToTest.push(node);
                node = nodeWithoutStart;
            }
            endOfNode = node.splitText(match[0].length);
            endOfNode && nodesToTest.push(endOfNode);
            $(node).wrap("<a href='" + prefix + node.data + "'></a>");
        }

        emailMatch = EMAIL_REGEX.exec(node.data);
        urlMatch = URL_REGEX.exec(node.data);

        // foo.com.au matches as url so we need to check match as email first.
        if (emailMatch) {
            match = emailMatch;
            prefix = 'mailto:';
            applyRegex(prefix);
        } else if (urlMatch) {
            match = urlMatch;
            prefix = match && match[0].indexOf('://') === -1 ? 'http://' : '';
            applyRegex(prefix);
        }
    }

    function makeLinks(node) {
        var nodesToTest = $.makeArray(node.childNodes);
        var currentNode;

        while (nodesToTest.length) {
            currentNode = nodesToTest.pop();
            if (!$(currentNode).is("a")) {
                if (currentNode.nodeType === 3) {
                    makeLinkProcess(currentNode, nodesToTest);
                } else if (currentNode.nodeType === 1 && currentNode.childNodes && currentNode.nodeName.toLowerCase() !== "pre") {
                    nodesToTest = nodesToTest.concat($.makeArray(currentNode.childNodes));
                }
            }
        }
    }

    $(document).bind('postPaste', function(e, pl, o) {
        filterAttributes(o.node, 'style,src,href');

        filterNodes(o.node);
        if (!$.browser.msie) { //IE does this for us automatically
            makeLinks(o.node);
        }

        //If we are in firefox and the only tags in the paste are <br> tags then lets fix up the
        //formatting so we are not pasting in one giant paragraph
        if ($.browser.mozilla && isPlainText(o.node) && !isInPlainTextMacro() ) {
            processPlainText(o.node);
        }
    });

    return {
        URL: URL_REGEX,
        EMAIL: EMAIL_REGEX
    };
});

require('confluence/module-exporter').exportModuleAsGlobal('confluence-editor/tinymce3/plugins/confluencepaste/post-paste-node-filter', 'Confluence.Editor.regex');

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/confluencepastetable/editor_plugin_src.js' */
define('confluence-editor/tinymce3/plugins/confluencepastetable/editor_plugin_src', [
    'jquery',
    'document'
], function(
    $,
    document
) {
    "use strict";

    /*
     This plugin sanitises content when it is pasted into the editor.
     CONFDEV-2219 Cannot highlight a table row if the table was pasted from another source.

     The bugger of this is that we have to iterate though the whole paste, might need to do
     some performance enhancements...
     */
    var PasteTablePlugin = {

        init: function (ed) {

            /* We're not using recursion here to avoid 'Too much recursion errors'
             this iterative approach should be faster as well.*/
            function parseHtml(element, process) {
                var current = element;
                var previous = '';

                while (current) {
                    if (typeof process === 'function') {
                        current = process(current);
                    }

                    // if process has removed a node which had no child nodes then current will now be null
                    if (!current) {
                        break;
                    } else if (current.firstChild && !isParent(current, previous) && !isMacroPlaceHolder(current)) {
                        previous = current;
                        current = current.firstChild;
                    } else if (current.nextSibling) {
                        previous = current;
                        current = current.nextSibling;
                    } else {
                        previous = current;
                        current = current.parentNode;
                    }
                }

                return element;
            }

            /*
             if it's a table then we'll remove anything nasty and add in
             the appropriate classes to make it look like a confluence plugin.
             */
            function formatTable(element) {
                var attributeWhiteList = {
                    'id': true,
                    'class': true,
                    'style': true,
                    'rowspan': true,
                    'colspan': true,
                    'data-mce-style': true,
                    'data-mce-bogus': true,
                    'data-macro-name': true,
                    'data-macro-parameters': true,
                    'data-macro-body-type': true,
                    'data-highlight-colour' : true,
                    'data-highlight-class' : true /* deprecated since 4.3 */
                };
                var classWhiteList = [ 'highlight', 'nohighlight', 'relative-table', 'fixed-table' /* deprecated since 4.3 */ ];
                var attribute;
                var attributeIncrementor = 0;
                var className = [];
                var highlightClass;
                var highlightColour;
                var $element = $(element);

                //Not an element or a macro-placeholder? do nothing.
                if (!element || isMacroPlaceHolder(element)) {
                    return element;
                }

                if (isTableWrap(element)) {
                    var tableElement = $("table", element);
                    if (tableElement.length) {
                        $(tableElement).unwrap();
                        element = tableElement[0];
                    } else {
                        return null;
                    }
                }

                //Remove attributes not in the white list
                if (isTable(element) && element.attributes) {

                    while (attributeIncrementor <= element.attributes.length) {
                        attribute = element.attributes[attributeIncrementor];
                        if (attribute && attribute.specified === true && !attributeWhiteList[attribute.name]) {
                            element.removeAttribute(attribute.name);
                        } else {
                            attributeIncrementor++;
                        }
                    }

                    //overwrite existing classes, this is a conscious decision to prevent users
                    //from getting styling into their tables that they can't create with the editor
                    getTableClass(element) && className.push(getTableClass(element));

                    for (var i = 0, ii = classWhiteList.length; i < ii; i++) {
                        if(classWhiteList[i].exec) {
                            // regex

                        } else {
                            $element.hasClass(classWhiteList[i]) && className.push(classWhiteList[i]);
                        }
                    }

                    /* deprecated since 4.3 */
                    highlightClass = $element.attr('data-highlight-class');
                    highlightClass && className.push(highlightClass);

                    highlightColour = $element.attr('data-highlight-colour');
                    highlightColour && className.push("highlight-" + highlightColour);

                    $element.attr('class', className.join(' '));
                }
                return element;
            }

            /* This is a table paste plugin so we only want to format table elements.
             If the element is not a table element then we don't want to do anything with it */
            function isTable(element) {
                return !element.tagName ? false :
                    element.tagName === 'TABLE' ? true :
                        element.tagName === 'TR' ? true :
                            element.tagName === 'TH' ? true :
                                element.tagName === 'TD' ? true :
                                    element.tagName === 'TBODY' ? true :
                                        element.tagName === 'THEAD' ? true :
                                            element.tagName === 'TFOOT' ? true :
                                                element.tagName === 'COL' ? true :
                                                    element.tagName === 'COLGROUP' ? true :
                                                    element.tagName === 'CAPTION';
            }

            /* Confluence tables have an annoying class structure which we will need
             to replicate with any table being pasted into the editor */
            function getTableClass(element) {
                return !element.tagName ? '' :
                    element.tagName === 'TABLE' ? 'confluenceTable' :
                        element.tagName === 'TH' ? 'confluenceTh' :
                            element.tagName === 'TD' ? 'confluenceTd' : '';
            }

            function isMacroPlaceHolder(element) {
                var className = '';

                if (element && element.getAttribute)  {
                    className = element.getAttribute('class');
                }

                return !element.tagName ? false :
                    element.tagName !== 'TABLE' ? false :
                        !className ? false : className.indexOf('wysiwyg-macro') !== -1;
            }

            // Is this a table wrapping div which we generating when rendering tables (see ViewTableWrappingFragmentTransformer)
            // This wrapping div should not exist in the editor so remove it.
            function isTableWrap(element) {
                var className;
                if (element && element.getAttribute) {
                    className = element.getAttribute('class');
                }

                return className && className.indexOf('table-wrap') >= 0;
            }

            //is the first element a parent of the second element.
            function isParent(firstElement, secondElement) {
                return secondElement.parentNode === firstElement;
            }

            function postPasteHandler (e, pl, o) {
                o.node = parseHtml(o.node, formatTable);
            }

            ed.onInit.add(function () {
                $(document).bind('postPaste', postPasteHandler);
            });

            ed.onRemove.add(function () {
                $(document).unbind('postPaste', postPasteHandler);
            });
        },

        getInfo: function () {
            return {
                longname: 'ConfluencePasteTablePlugin',
                author: 'Atlassian',
                authorurl: 'http://www.atlassian.com',
                infourl: 'http://www.atlassian.com',
                version: '1.0'
            };
        }
    };

    return PasteTablePlugin;
});

require('confluence/module-exporter')
    .safeRequire('confluence-editor/tinymce3/plugins/confluencepastetable/editor_plugin_src', function(PasteTablePlugin) {
        var tinymce = require('tinymce');
        tinymce.create('tinymce.plugins.ConfluencePasteTablePlugin', PasteTablePlugin);
        tinymce.PluginManager.add('confluencepastetableplugin', tinymce.plugins.ConfluencePasteTablePlugin);
    });
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/confluencepastemacro/editor_plugin_src.js' */
/*
 This plugin removes all the html for the clipboard leaving only the text.
 CONFDEV-4233 Only text from the clipboard should be pasted into the body of plain text macro
 CONFDEV-4451 Code macro strips whitespace
*/
define('confluence-editor/tinymce3/plugins/confluencepastemacro/editor_plugin_src', [
    'jquery',
    'document',
    'tinymce'
], function(
    $,
    document,
    tinymce
) {
    "use strict";

    return {
        init: function(ed) {
            var that = this;
            var postPasteHandler = function(e, pl, o) {
                var document = ed.getDoc();
                var newPreNode;
                var newDivNode;

                if ( $(ed.selection.getStart()).closest("[data-macro-body-type='PLAIN_TEXT']").length ){
                    that.bindPostSerializeHandler(ed);
                    newPreNode = that.parseHtml(ed, o.node);
                    newDivNode = document.createElement('div');

                    newDivNode.appendChild(newPreNode);
                    o.node = newDivNode;
                }
            };

            ed.onInit.add(function() {
                $(document).bind('postPaste', postPasteHandler);
            });

            ed.onRemove.add(function(ed) {
                $(document).unbind('postPaste', postPasteHandler);
            });
        },

        /**
         * When pasting into a <pre> tag we create an extra <pre> tag inside of the standard div
         * That all pasted content is moved into. This causes TinyMCE's serializer to keep arbitrary
         * whitespace. Here we bind a callback to postProcess of TinyMCE's serializer to remove that
         * wrapping pre tag so that extra nesting is avoided.
         *
         * @param ed The editor instance whose serializer to bind callback against
         */
        bindPostSerializeHandler: function(ed){
            var onPostProcess = ed.serializer.onPostProcess;
            function postProcessCallback(scope, o) {
                //remove the wrapping pre
                o.content = o.content.replace(/^<pre>|<\/pre>$/g, '');
                onPostProcess.remove(postProcessCallback);
            }
            onPostProcess.add(postProcessCallback);
        },

        /* We're not using recursion here to avoid a stack overflow */
        parseHtml: function(ed, element) {
            var stack = $.makeArray(element.childNodes);
            var current;
            var insertElem;
            var document = ed.getDoc();
            var content = document.createElement('pre');

            while (stack.length) {
                current = stack.shift();

                if (current.childNodes.length) {
                    tinymce.html.Schema.blockElementsMap[current.nodeName] && stack.unshift(document.createElement('br'));
                    stack = $.makeArray(current.childNodes).concat(stack);
                } else {
                    insertElem = this.formatMacroContent(current, document);
                    insertElem && content.appendChild(insertElem);
                }
            }

            return content;
        },

        //Strip out html when pasting into a plain text macro
        formatMacroContent: function(element, document) {
            var content;
            var textNode = 3;
            var nonBreakingSpace = /\xA0/g;
            document = document || window.document;

            if (element.nodeType === textNode){
                content = document.createTextNode($(element).text().replace(nonBreakingSpace, ' '));
            } else if (element.nodeName === 'BR') {
                content = document.createElement('br');
            }

            return content;
        },

        getInfo: function() {
            return {
                longname: 'ConfluencePasteMacroPlugin',
                author: 'Atlassian',
                authorurl: 'http://www.atlassian.com',
                infourl: 'http://www.atlassian.com',
                version: '1.0'
            };
        }
    };
});

require('confluence/module-exporter')
        .safeRequire('confluence-editor/tinymce3/plugins/confluencepastemacro/editor_plugin_src', function(ConfluencePasteMacroPlugin) {
            var tinymce = require('tinymce');

            tinymce.create('tinymce.plugins.ConfluencePasteMacroPlugin', ConfluencePasteMacroPlugin);

            tinymce.PluginManager.add('confluencepastemacroplugin', tinymce.plugins.ConfluencePasteMacroPlugin);
        });
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/confcursortarget/editor_plugin_src.js' */
define('confluence-editor/tinymce3/plugins/confcursortarget/editor_plugin_src', [
    'jquery',
    'ajs',
    'tinymce'
], function(
    $,
    AJS,
    tinymce
) {
    "use strict";

    /**
     * A plugin which ensures that there is always somewhere for a user to place their cursor when editing.
     * A typical problem is when there are two macro placeholders following each other then a user is unable to
     * insert the cursor between them.
     *
     * (This functionality originally lived in tinymce-cursor.js but that isn't a TinyMCE plugin and therefore
     * doesn't bind to onSetContent early enough to do the necessary processing.)
     *
     * Copyright 2011, Atlassian
     */

    /** The jQuery selector for the blocks we are interested in fixing. */
    var blocksToFixSelector = ".wysiwyg-macro,.placeholder,table";

    return {
        cursorTarget : {
            addFixSelector: function(sel) {
                blocksToFixSelector += ',' + sel;
            }
        },
        cursorTargetPlugin : {

            /**
             * Initialises the plugin - executed after the plugin has been created.
             * This call is done before the editor instance has finished it's initialisation so use the onInit event
             * of the editor instance to intercept that event.
             *
             * @param {tinymce.Editor} ed Editor instance that the plugin is initialised in.
             * @param {string} url Absolute URL to where the plugin is located.
             */
            init : function (ed, url) {

                /**
                 * Passing true to tinymce.Editor.selection.getRng() returns a W3C range (even in IE - returns tinyMCE's implementation of w3c range over ie's textRange).
                 */
                var W3C_RANGE = true;

                var BLOCK_ELEMENT_SELECTOR = "ol, ul, p, pre, table, blockquote, div, h1, h2, h3, h4, h5, h6";
                var KEY_CODE = $.ui.keyCode;

                /**
                 * Go through the entire editor content and ensure that 'cursor target' paragraphs are added where needed.
                 */
                function addCursorTargetParagraphsToContent(dom) {
                    $(blocksToFixSelector, dom).each(function (index, element) {
                        addSurroundingCursorTargetParagraph(element);
                    });
                }

                /**
                 * CONFDEV-4041: Go through the entire editor content and ensure that empty paragraphs are correctly
                 * formatted for the user's browser. Note that our storage format stores empty paragraphs
                 * as <p>&nbsp;</p>, which becomes irritating to the user as there is an extra space.
                 * CONFDEV-4285: Fix spaces in empty table cells as well.
                 */
                function convertEmptyParagraphs(dom) {
                    // IE8 does not support the Gecko/Webkit compatible <p><br/></p>
                    // IE8 should be able to handle empty paragraphs like <p/> but they appear collapsed
                    // Temporary workaround is to keep empty paragraphs in IE as <p>&nbsp;</p>
                    var emptyParagraph = (tinymce.isIE) ? "&nbsp;" : "<br/>";

                    function containsSingleNbsp(element) {
                        return element && element.childNodes && element.childNodes.length === 1 && element.childNodes[0].nodeType === 3 && element.childNodes[0].nodeValue && element.childNodes[0].nodeValue.length === 1 && element.childNodes[0].nodeValue.charCodeAt(0) === 160;
                    }

                    $("p, td.confluenceTd, th.confluenceTh", dom).each(function(index, element) {
                        if (containsSingleNbsp(element)) {
                            $(element).html(emptyParagraph);
                        }
                    });
                }

                /**
                 * For the supplied DOM element check if it requires surrounding cursor target paragraphs added.
                 */
                function addSurroundingCursorTargetParagraph(element) {
                    var $element = $(element);

                    /**
                     * Empty paragraphs in FF, webkit and IE 9 can look like this <p><br/></p>.
                     * Empty paragraphs in IE 8 must look like this: <p>&nbsp;</p> (without the NBSP, IE 8 won't render the paragraph.
                     *
                     * Implementing empty paragraphs with the BR will avoid the use of an NBSP which takes up space
                     * and needs to be deleted manually (which may be bothersome to the user). The BR allows the cursor to be placed inside the paragraph.
                     */
                    function padEmptyParagraph($paragraphElement) {
                        if ($paragraphElement.length === 0) {
                            throw new Error("no paragraph element specified");
                        }

                        var paragraphElement = $paragraphElement[0];
                        if (paragraphElement.childNodes.length === 0) {
                            if (tinymce.isIE && !tinymce.isIE9) {
                                paragraphElement.innerHTML = "&nbsp;";
                            } else {
                                paragraphElement.innerHTML = "<br />";
                            }
                        }
                        return paragraphElement;
                    }

                    function isInline(element) {
                        return !$(element).is(BLOCK_ELEMENT_SELECTOR);
                    }

                    function createCursorTargetFor(element, siblingMethod) {
                        var $cursorTarget = $("<p/>");

                        if ($(element.parentNode).is("li, td, th")) { /* CONFDEV-5521 */
                            while (element[siblingMethod] && isInline(element[siblingMethod])) {
                                $cursorTarget[siblingMethod == "previousSibling" ? "prepend" : "append"](element[siblingMethod]);
                            }
                        }

                        return padEmptyParagraph($cursorTarget);
                    }

                    if (!$element.prev().length
                            || $element.prev(blocksToFixSelector).length
                            || ($(element.parentNode).is("li, td, th") && isInline(element.previousSibling)) /* CONFDEV-5521 */) {
                        $element.before(createCursorTargetFor(element, "previousSibling"));
                    }

                    if (!$element.next().length
                            || $element.next(blocksToFixSelector).length
                            || $element.next('.synchrony-container').length /* WD-409 */
                            || ($(element.parentNode).is("li, td, th") && isInline(element.nextSibling)) /* CONFDEV-5521 */) {
                        $element.after(createCursorTargetFor(element, "nextSibling"));
                    }

                    /**
                     * Cut or keyboard deleted non-collapsed selections can leave unusual structures in the browser such as
                     * a macro place holder with just an empty <br> before or after it. This function deals with the cases
                     * we have encountered and converts these cases into a "proper" cursor target paragraph.
                     *
                     * Other structures encountered are various forms of empty <p> or just multiple <br/> elements.
                     *
                     * @param $blockEl the jQuery wrapped block element to ensure is properly surrounded with cursor-target spacers
                     */
                    function checkForEmptiedParagraphs($blockEl) {

                        /**
                         * If the supplied $structure is of the required type then convert it (in place in the DOM) to
                         * being a cursor target.
                         *
                         * @param $structure
                         */
                        function convertCutStructureToCursorTarget($structure) {
                            // On Firefox you can be left with a <BR> after the cut of a "trailing" paragraph
                            if ($structure[0].nodeName === "BR" || isTextContainerEmpty($structure[0])) {
                                // replace with the correct 'empty' structure (it may already be the correct structure - no matter).
                                $structure.replaceWith(padEmptyParagraph($("<p/>")));
                            }
                        }

                        /**
                         * "is An After Cursor Target" - should the supplied node be a 'cursor target' for after a block element.
                         *
                         * If the node parameter has no next sibling OR the next sibling is a block then the node should be
                         * considered a cursor target.
                         *
                         * If the node has next siblings that are all BRs or Ps then it should also be considered a cursor target.
                         * This unusual case can arise from cut operations on non-collapsed selections in the browser.
                         *
                         * @param $node a jQuery wrapped node
                         * @return true if this node should be considered a cursor target after a block
                         */
                        function isAnAfterCursorTarget($node) {
                            var $next = $node.next();
                            while ($next.length && !$next.is(blocksToFixSelector)) {
                                var next = $next[0];
                                if (next.nodeName !== "BR" && next.nodeName !== "P") {
                                    return false;
                                }

                                $next = $next.next();
                            }

                            return true;
                        }

                        /**
                         * "is A Before Cursor Target" - should the supplied node be a 'cursor target' for before a block element.
                         *
                         * If the node parameter has no previous sibling OR the previous sibling is a block then the node should be
                         * considered a cursor target.
                         *
                         * If the node has previous siblings that are all BRs or Ps then it should also be considered a cursor target.
                         * This unusual case can arise from cut operations on non-collapsed selections in the browser.
                         *
                         * @param $node a jQuery wrapped node
                         * @return true if this node should be considered a cursor target before a block
                         */
                        function isABeforeCursorTarget($node) {
                            var $prev = $node.prev();
                            while ($prev.length && !$prev.is(blocksToFixSelector)) {
                                var prev = $prev[0];
                                if (prev.nodeName !== "BR" && prev.nodeName !== "P") {
                                    return false;
                                }

                                $prev = $prev.prev();
                            }

                            return true;
                        }

                        var $prev = $blockEl.prev();
                        if ($prev.length && isABeforeCursorTarget($prev)) {
                            convertCutStructureToCursorTarget($prev);
                        }

                        var $next = $blockEl.next();
                        if ($next.length && isAnAfterCursorTarget($next)) {
                            convertCutStructureToCursorTarget($next);
                        }
                    }

                    checkForEmptiedParagraphs($element);
                }

                /**
                 * Go through the entire editor content and ensure that any empty paragraphs which are single
                 * spacers before or after block content are removed.
                 *
                 * In addition any 'cursor targets' found that are no longer empty will have their marker class removed.
                 *
                 * @param dom the dom to be modified
                 * @return the modified dom
                 */
                function processCursorTargets(dom) {
                    // now find all paragraphs and remove those that are empty and associated with a block
                    // (i.e. are cursor targets only)
                    // do this in 2 steps (mark then delete, otherwise you will end up removing all empty paragraphs on the page :))
                    $("p", dom).each(function(index, element) {
                        if (isTextContainerEmpty(element) && isCursorTarget(element)) {
                            $(element).attr("data-tag", "marked-for-deletion");
                        }
                    });
                    $("p[data-tag=marked-for-deletion]", dom).remove();

                    return dom;
                }

                /**
                 * Check the various different forms of 'empty' that can arise in TinyMCE.
                 * These 'forms of empty' have all been observed in testing. So don't just
                 * go assuming I'm mental and remove checks from here :-)
                 *
                 * Some cases that cause a "non-standard" empty paragraph -
                 * 1) Removing a selection that ranges from part way into a place holder to the end of a document will result in
                 * an 'empty' paragraph which actually contains a &nbsp; (Chrome and Firefox)
                 * 2) Removing a selection that ranges from the last paragraph on a page back to the end of a placeholder body will
                 * result in <P>&nbsp;</p> (IE8 & 9 - this is non-standard for IE).
                 * 3) The steps aren't clear, but on Chrome you can get a <p></p> which is non-standard for non IE browsers.
                 * 4) There are others I haven't pinned down yet.
                 *
                 * @param target the dom object to check.
                 * @return true if empty.
                 */
                function isTextContainerEmpty(target) {
                    /**
                     * Handles:
                     * <p> </p>
                     * <p> <br/></p>
                     * <p><br/> </p>
                     * <p> ... with multiple text nodes that are empty with at least one containing a space ... </p>
                     * <p> ... with multiple text nodes that are empty ... </p>
                     */
                    function _containsOptionalWhiteSpaceOrOptionalBr(container) {
                        var brCount = 0;
                        var whiteSpaceCount = 0;

                        for (var i = 0, l = container.childNodes.length; i < l; i++) {
                            var childNode = container.childNodes[i];
                            if (childNode.nodeName === "BR") {
                                if (++brCount > 1) {
                                    return false;
                                }
                            } else if (/^[\s|\u00A0]$/.test(childNode.nodeValue)) {
                                if (++whiteSpaceCount > 1) {
                                    return false;
                                }
                            } else if (childNode.nodeValue !== "") {
                                return false;
                            }
                        }

                        return true;
                    }

                    return target.nodeType === 1 && target.childNodes.length === 0 || _containsOptionalWhiteSpaceOrOptionalBr(target);
                }

                /**
                 * Checks if the current node is a cursor target.
                 *
                 * @param node the node to check
                 * @return true if the node is a 'cursor target' node
                 */
                function isCursorTarget(node) {
                    if (!node || node.nodeType !== 1) {
                        return false;
                    }

                    var prev = _getSiblingWithinBlockDisregardingNesting(node, false);
                    var next = _getSiblingWithinBlockDisregardingNesting(node, true);

                    var prevIsNullOrBlock = isNullOrCell(prev) || $(prev).is(blocksToFixSelector);
                    var nextIsNullOrBlock = isNullOrCell(next) || $(next).is(blocksToFixSelector);
                    var isBetweenTwoNullsOrCells = isNullOrCell(prev) && isNullOrCell(next);
                    return prevIsNullOrBlock && nextIsNullOrBlock && !isBetweenTwoNullsOrCells;
                }

                function isNullOrCell(node) {
                    if(!node) {
                        return true;
                    } else {
                        return node.className && /cell|header|footer/.test(node.className);
                    }
                }

                /**
                 * Get the next/previous sibling to the one supplied within the current block but coping with nested structures.
                 *
                 * For instance, in the case of next checking, if the current node was an <li> within a <ul> and there is no
                 * next sibling to the <li> then the parent <ul> will be checked for a next sibling instead. If there was another
                 * bullet item just after the <li> then it would be the sibling.
                 *
                 * The checking will stop once any of ".cell, .mceContentBody, td, li" are reached
                 *
                 * @param node the DOM node whose next/previous sibling you are interested in
                 * @param next if true then you want to check for the next sibling. If false then check the previous sibling.
                 * @return the next/previous sibling DOM node or null if there is none.
                 */
                function _getSiblingWithinBlockDisregardingNesting(node, next) {

                    var containerSelector = ".cell, .mceContentBody, td, li";
                    var $currentNode = $(node);

                    // Check for siblings, traversing up the tree from this node
                    do {
                        var sibling = (next) ? $currentNode[0].nextSibling : $currentNode[0].previousSibling;
                        if (sibling) { return sibling; }

                        $currentNode = $currentNode.parent();
                    } while ($currentNode.length > 0 && !$currentNode.is(containerSelector));

                    return null;
                }

                /**
                 * Returns true if the cursor is at the start of the given collapsed selection.
                 *
                 * @param ed the editor
                 * @return true if the cursor is at the start of the selection.
                 */
                function isCursorAtStartOfContainer(range) {
                    var startContainer = range.startContainer;
                    if (startContainer.nodeType === 3) {
                        // deal with un-normalized situations where there could be multiple text nodes.
                        // this can occur when for instance a paragraph and a bullet list are merged (via a delete)
                        var hasPreviousSiblingContent = startContainer.previousSibling &&
                                (startContainer.previousSibling.nodeType === 3 || $(startContainer.previousSibling).is("br"));
                        return !hasPreviousSiblingContent && range.startOffset === 0;
                    } else if (startContainer.nodeType === 1) {
                        return range.startOffset === 0;
                    }

                    return false;
                }

                /**
                 * Returns true of the cursor is at the start of the document
                 * @param range
                 */
                function isCursorAtStartOfDocument(range) {
                    var body = ed.getBody();
                    if(body.childNodes.length) {
                        return range.collapsed && range.startOffset === 0 && body.childNodes[0] == range.startContainer;
                    }
                    return false;
                }

                /**
                 * Returns true if the cursor is at the end of a given collapsed selection.
                 *
                 * @return true if the cursor is at the end of the container.
                 */
                function isCursorAtEndOfContainer(range) {
                    var startContainer = range.startContainer;
                    if (startContainer.nodeType === 3) {
                        // deal with un-normalized situations where there could be multiple text nodes.
                        // this can occur when for instance a paragraph and a bullet list are merged (via a delete)
                        var hasNextSiblingTextNode = startContainer.nextSibling &&
                                (startContainer.nextSibling.nodeType === 3 || $(startContainer.nextSibling).is("br"));
                        return !hasNextSiblingTextNode && range.endOffset == startContainer.nodeValue.length;
                    } else if (startContainer.nodeType === 1) {
                        var nodeAfterCursor = startContainer.childNodes[range.startOffset];
                        // TinyMCE uses <p><br><p> structures for empty paragraphs in some browsers
                        // In such a scenario the cursor will be just before the <br> even though that
                        // is effectively the final position in the <p>
                        if ($(nodeAfterCursor).is("br") && nodeAfterCursor.nextSibling == null) {
                            return true;
                        } else {
                            return range.endOffset == startContainer.childNodes.length;
                        }
                    }

                    return false;
                }

                /**
                 * Returns true if the supplied Element node has non-empty text nodes, not as immediate children
                 * but as a deeper descendant.
                 */
                function doesContainerHaveNestedContent(container) {
                    var children = $(container).children();
                    var i;
                    for (i = 0; i < children.length; i++) {
                        if (isTextContainerEmpty(children[i])) {
                            continue;
                        }

                        if ($(children[i]).contents().filter(function() {
                                    return this.nodeType === 3;
                                }).length || doesContainerHaveNestedContent(children[i])) {
                            return true;
                        }
                    }

                    return false;
                }

                /**
                 * Check if the current cursor position (range) is in one of the positions unique to tables
                 * of immediately before or immediately after the table (on the same 'line' as the table).
                 *
                 * @param before set true if you want to check if the cursor is before the table. If false then check
                 * if the cursor is after the table.
                 * @param range w3c range that provides the current cursor position
                 */
                function isCursorBeforeAfterTable(before, range) {
                    function _isCursorAtTable(before, range) {
                        var currentNodeIndex = range.startOffset;
                        if (!before) {
                            currentNodeIndex--;
                        }

                        return currentNodeIndex >= 0 && currentNodeIndex < range.startContainer.childNodes.length && range.startContainer.childNodes[currentNodeIndex].nodeName === "TABLE";
                    }

                    return range.startContainer == range.endContainer
                            && range.startContainer.nodeType === 1
                            && _isCursorAtTable(before, range);
                }

                function isCursorAtEndOfBottomRightCellInTable(range) {
                    if (!range.collapsed) {
                        return false;
                    }

                    var node = range.startContainer;
                    var nextSibling;

                    if (node.nodeType === 3) {
                        nextSibling = _getSiblingWithinBlockDisregardingNesting(node, true);
                        return range.startOffset == node.nodeValue.length && (nextSibling == null || $(nextSibling).is("br"));
                    } else if (node.nodeType === 1) {
                        if ($(node).is("td, th") && range.startOffset === 0 && node.childNodes.length > 0) {
                            return $(node.childNodes[0]).is("br");
                        } else {
                            var index = (range.startOffset === 0) ? 0 : range.startOffset - 1;
                            nextSibling = _getSiblingWithinBlockDisregardingNesting(node.parentNode.childNodes[index], true);
                            return nextSibling == null || $(nextSibling).is("br");
                        }
                    } else {
                        return false;
                    }
                }

                function containsSoloBrElement(element) {
                    return element && element.childNodes.length === 1 && $(element.childNodes[0]).is("br");
                }

                function shouldCancelDelete(selectedNode, range) {
                    if (tinymce.isWebKit && isCursorBeforeAfterTable(false, range)) {
                        return true;
                    } else if (tinymce.isGecko) {
                        if (isCursorAtEndOfBottomRightCellInTable(range)
                                    /* firefox 3.6 will remove <p><br/></p> and <li><br/></li> on delete */
                                || (isCursorTarget(selectedNode) && range.startOffset === 0 && containsSoloBrElement(selectedNode))) {
                            return true;
                        }
                    }

                    return false;
                }

                function shouldCancelBackspace(selectedNode, range) {
                    /**
                     * In WebKit, when you have <table></table> (or any block content), followed by say <p>foo</p>, if the cursor
                     * is inside and at the _start_ of the P element, hitting backspace will remove the table.
                     *
                     * The desired behaviour is to prevent this. Both MS Word and IE implement this.
                     */
                    if (tinymce.isWebKit &&
                            (isCursorBeforeAfterTable(true, range) ||
                            (isCursorAtStartOfContainer(range) && isCursorTarget(selectedNode)) ||
                            isCursorAtStartOfDocument(range))) {
                        return true;
                    } else if (tinymce.isGecko && isCursorAtStartOfContainer(range) && isCursorTarget(selectedNode) && containsSoloBrElement(selectedNode)) {
                        return true;
                    }

                    return false;
                }

                /**
                 * Backspace and delete suppression involves processing a few different key related events (depending on browsers)
                 * so this method centralising the processing of the events.
                 *
                 * Disallow backspace in a block if -
                 * 1) the cursor is at the start of the block AND
                 * 2) the preceding element is a  pre, div, blockquote or table AND
                 * 3) there is no following element or the following element is a pre, div, blockquote or table
                 *
                 * Disallow delete in a paragraph, pre, blockquote and div if -
                 * 1) the cursor is at the end of the paragraph (empty is a degenerative case) AND
                 * 2) the following element is a 'blocksToFixSelector'
                 *
                 * @param ed the editor firing the event being handled
                 * @param e the event itself.
                 * @return true if the event should be allowed or false if it should be suppressed
                 */
                function deleteAndBackspaceKeyHandling(ed, e) {
                    var keyCode = e.keyCode;
                    if (keyCode !== KEY_CODE.BACKSPACE && keyCode !== KEY_CODE.DELETE) {
                        return true;
                    }

                    if (!ed.selection.isCollapsed()) {
                        addCursorTargetParagraphsToContent(ed.getBody());
                    } else if (keyCode === KEY_CODE.BACKSPACE && shouldCancelBackspace(ed.selection.getNode(), ed.selection.getRng(W3C_RANGE))) {
                        tinymce.dom.Event.prevent(e);
                    } else if (keyCode === KEY_CODE.DELETE && shouldCancelDelete(ed.selection.getNode(), ed.selection.getRng(W3C_RANGE))) {
                        tinymce.dom.Event.prevent(e);
                    }

                    return true;
                }

                ed.onSetContent.add(function(ed, o) {
                    addCursorTargetParagraphsToContent(ed.getBody());
                    convertEmptyParagraphs(ed.getBody());
                });

                ed.onGetContent.add(function(ed, args) {
                    var startRootNodeString = "<div class='root-node'>";
                    var endRootNodeString = "</div>";
                    var wrappedContent = startRootNodeString + args.content + endRootNodeString;
                    var modifiedDom = processCursorTargets($(wrappedContent));
                    var serialised = AJS.Rte.getEditor().serializer.serialize(modifiedDom[0], args);
                    // remove the root-node wrapper
                    args.content = serialised.substring(startRootNodeString.length, serialised.length - endRootNodeString.length);
                });

                var addCursorTargetParagraphsToContentBinder = function() {
                    addCursorTargetParagraphsToContent(ed.getBody());
                };

                // TODO: This file should be refactored!
                // - Investigate: Why are we binding some editor events inside ed.onInit and some outside it ?

                // The editor only has a selection after it has initialised so hook onto selection events on editor init.
                ed.onInit.add(function() {
                    // Insert macro, table or wiki markup all end up calling selection.setContent.
                    // We should ensure that all necessary cursor targets exist after these operations.
                    ed.selection.onSetContent.add(addCursorTargetParagraphsToContentBinder);

                    // Browser cut event
                    ed.dom.bind(ed.getBody(), "cut", addCursorTargetParagraphsToContentBinder);

                    AJS.bind('cursor-target-refresh', addCursorTargetParagraphsToContentBinder);
                });

                // since the editor is now reloadable we need to make sure we do some cleanup.
                ed.onRemove.add(function(){
                    AJS.unbind('cursor-target-refresh', addCursorTargetParagraphsToContentBinder);
                });

                // ATLASSIAN - CONFDEV-5541 - Fix cursor position if enter / return / delete / backspace is pressed.
                if(tinymce.isGecko) {
                    ed.onKeyDown.add(function(ed, e) {
                        if ((e.keyCode === KEY_CODE.ENTER || e.keyCode === KEY_CODE.BACKSPACE || e.keyCode === KEY_CODE.DELETE)) {
                            // Enter may be broken if the cursor is in the wrong position - fix first
                            ed.selection.normalize();
                        }
                    });
                }


                // Webkit will fire keyDown and keyUp for backspace and delete (even if one is suppressed).
                ed.onKeyDown.add(deleteAndBackspaceKeyHandling);
                ed.onKeyUp.add(deleteAndBackspaceKeyHandling);

                // FF will fire all three key events for backspace and delete. If you register this on IE and Chrome
                // then you get CONFDEV-4062 which is fun.
                tinymce.isGecko && ed.onKeyPress.add(deleteAndBackspaceKeyHandling);

                ed.onPaste.add(addCursorTargetParagraphsToContentBinder);

                /**
                 * Expose functions for unit testing
                 */
                $.extend(this, {
                    _isTextContainerEmpty: isTextContainerEmpty,
                    _processCursorTargets: processCursorTargets,
                    _isCursorAtStartOfContainer: isCursorAtStartOfContainer,
                    _isCursorAtEndOfContainer: isCursorAtEndOfContainer,
                    _getSiblingWithinBlockDisregardingNesting : _getSiblingWithinBlockDisregardingNesting,
                    _doesContainerHaveNestedContent : doesContainerHaveNestedContent,
                    isCursorBeforeAfterTable : isCursorBeforeAfterTable,
                    isCursorTarget: isCursorTarget,
                    _addCursorTargetParagraphsToContent: addCursorTargetParagraphsToContent,
                    _isCursorAtEndOfBottomRightCellInTable: isCursorAtEndOfBottomRightCellInTable,
                    _shouldCancelDelete: shouldCancelDelete,
                    _shouldCancelBackspace: shouldCancelBackspace
                });


                // TODO cannot detect menu delete in any decent way across different browsers.
                // I either need to run a repeating fix up operation or fallback to keyboard navigation capturing.

                AJS.Rte.Cursor = AJS.Rte.Cursor || {};

                $.extend(AJS.Rte.Cursor, {
                    isTextContainerEmpty: isTextContainerEmpty,
                    fixCursorTargets : addCursorTargetParagraphsToContent
                });

            },

            getInfo : function() {
                return {
                    longname : 'Cursor Target plugin',
                    author : 'Atlassian',
                    authorurl : 'http://www.atlassian.com',
                    version : "1.0"
                };
            }
        }
    };
});

require('confluence/module-exporter')
        .safeRequire('confluence-editor/tinymce3/plugins/confcursortarget/editor_plugin_src', function(CursorTargetModule) {
            require('confluence/module-exporter').namespace('AJS.Rte.CursorTarget', CursorTargetModule.cursorTarget);

            var tinymce = require('tinymce');
            tinymce.create('tinymce.plugins.CursorTargetPlugin', CursorTargetModule.cursorTargetPlugin);
            tinymce.PluginManager.add('cursorTarget', tinymce.plugins.CursorTargetPlugin);
        });

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/confcleanup/editor_plugin_src.js' */
define('confluence-editor/tinymce3/plugins/confcleanup/editor_plugin_src', [
    'tinymce',
    'jquery'
], function(
    tinymce,
    $
) {
    return {
        init: function(ed) {
            //CONFDEV-2853/CONFDEV-3594 - When you delete in webkit the there is possibility that a Apple-style-span could be added. Make sure that it is removed.
            if(tinymce.isWebKit) {
                var colorMap = {};
                var getOrCreateMap = function (map, key) {
                    var value = map[key];
                    if (!value) {
                        value = {};
                        map[key] = value;
                    }
                    return value;
                };
                var getFormat = function (span) {
                    var weightMap = colorMap[span.css("color")];
                    var sizeMap;
                    if (weightMap) {
                        sizeMap = weightMap[span.css("font-weight")];
                        if (sizeMap) {
                            return sizeMap[span.css("font-size")];
                        }
                    }

                    return null;
                };

                // CONFDEV-4061 - Map the heading formats to their corresponding styles.
                $("#format-dropdown").find("ul.aui-dropdown li").each(function () {
                    var link = $("a", this);
                    var size = link.css("font-size");
                    var weight = link.css("font-weight");
                    var color = link.css("color");
                    var weightMap = getOrCreateMap(colorMap, color);
                    var sizeMap = getOrCreateMap(weightMap, weight);

                    if (!sizeMap[size]) {
                        sizeMap[size] = $(this).attr("data-format");
                    }
                });

                ed.onNodeChange.add(function(ed, e) {
                    var appleStyleSpans = ed.dom.select('span.Apple-style-span', ed.dom.doc.body);
                    var appleStyleFonts = ed.dom.select('font.Apple-style-span', ed.dom.doc.body);
                    var appleStyle= appleStyleSpans.concat(appleStyleFonts);

                    for(var i=0, ii=appleStyle.length; i<ii; i++) {
                        if (ed.dom.is(appleStyle[i], '[face="mceinline"]')) {
                            break; //don't remove if it's mceinline as tiny places these in and later formats them correctly
                        }

                        var format = getFormat($(appleStyle[i]));
                        //if we find a format to use, replace the span with the format, otherwise, leave the apple-style-span
                        if (format) {
                            var bm = ed.selection.getBookmark();
                            format && ed.dom.remove(appleStyle[i], 1);
                            ed.selection.moveToBookmark(bm);
                            ed.execCommand("FormatBlock", false, format);
                        }
                    }
                });
            }

            // CONFDEV-3864 - Firefox 3.6 creates extra img tags as part of its drag and drop behaviour when dragging
            // an image into the editor, with the src of these tags pointing to the local filesystem. This cleans these img tags up.
            ed.onNodeChange.add(function(ed) {
                var localPrefix = "file:///";
                var images = ed.dom.select('img',  ed.dom.doc.body);
                var numImages = images.length;

                for (var i = 0; i < numImages; i++) {
                    var image = $(images[i]);
                    var local = image.attr('src');

                    if (local.substr(0, localPrefix.length) === localPrefix) {
                        ed.dom.remove(images[i]);
                    }
                }
            });

            // HACK - CONFDEV-6230, CONFDEV-6628: remove this if the placement of the cursor in an empty body is fixed in IE9.
            if (tinymce.isIE9) {
                function fillBody(ed) {
                    if (!ed.getBody().childNodes.length) {
                        ed.setContent("<p>\uFEFF</p>");
                    }
                }

                ed.onNodeChange.add(fillBody);
                ed.onSetContent.add(fillBody);
            }
        },

        getInfo: function() {
            return {
                longname: 'ConfluenceCleanupPlugin',
                author: 'Atlassian',
                authorurl: 'http://www.atlassian.com',
                infourl: 'http://www.atlassian.com',
                version: '1.0'
            };
        }
    };
});

require('confluence/module-exporter').safeRequire('confluence-editor/tinymce3/plugins/confcleanup/editor_plugin_src', function(ConfluenceCleanupPlugin) {
    var tinymce = require('tinymce');
    tinymce.create('tinymce.plugins.ConfluenceCleanupPlugin', ConfluenceCleanupPlugin);
    tinymce.PluginManager.add('confluencecleanupplugin', tinymce.plugins.ConfluenceCleanupPlugin);
});

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'com/atlassian/confluence/tinymceplugin/auiwindowmanager.js' */
define('confluence-editor/tinymceplugin/auiwindowmanager', [
    'ajs',
    'tinymce',
    'jquery',
    'raphael',
    'window',
    'confluence/api/constants'
], function(
    AJS,
    tinymce,
    $,
    Raphael,
    window,
    CONSTANTS
) {
    "use strict";

    // Hard coded numbers not nice at all, but see dialog.js HEADER_HEIGHT and BUTTONS_HEIGHT :(
    var DIALOG_HEADER_SIZE = 56;
    var DIALOG_BUTTON_PANEL_SIZE = 51;
    var DIALOG_CONTENT_PADDING = 20;

    var Dispatcher = tinymce.util.Dispatcher;
    var each = tinymce.each;
    var isIE = tinymce.isIE;
    var isOpera = tinymce.isOpera;

    var AUIWindowManager = {
        init : function(ed, url) {
            // Replace window manager
            ed.onBeforeRenderUI.add(function() {
                ed.windowManager = new tinymce.AUIWindowManager(ed);
                // DOM.loadCSS(url + '/skins/' + (ed.settings.inlinepopups_skin || 'clearlooks2') + "/window.css");
            });
        },

        getInfo : function() {
            return {
                longname : 'AUIWindowManager',
                author : 'Atlassian',
                authorurl : 'http://www.atlassian.com',
                version : tinymce.majorVersion + "." + tinymce.minorVersion
            };
        }
    };

    var WindowManager = {

        /**
         * Create the AUIWindowManager plugin.
         * @constructor
         */
        AUIWindowManager : function(ed) {
            var t = this;

            t.editor = ed;
            t.onOpen = new Dispatcher(t);
            t.onClose = new Dispatcher(t);
            t.params = {};
            t.features = {};
            t.modalDialogsStack = [];
            t.dialogs = {};
            t.count = 0;
        },

        /**
         * Open and return a window as specified by the settings parameter.
         *
         * The created window is returned and should be supplied to the close function to dismiss it later.
         *
         * Note that regardless of the setting, all windows in this Window Manager are modal. Likewise, they are
         * not resizeable and their position is centred regardless of the position requested.
         *
         * The following settings are supported -
         *     name (string) - Window title resource key - will be localized.
         *     file (string) - URL of the file to open in the window.
         *     content (string) - HTML Content to be used. This is only applicable for non-popup windows and will be used
         *     in preference to the file setting
         *     width (int) - Width in pixels. (default 400)
         *     height (int) - Height in pixels. (default 250)
         *     popup (boolean) - defaults to true. Indicates that the window contents should be rendered in an
         *                       iframe, for compatibility with standard TinyMCE plugins.
         *
         * The following custom params are supported -
         *     cssClass (string) - a CSS class to put on the opened dialog (default is tinymce-auidialog)
         *     helpLink (string) - the property name of a help link you want added to the dialog.
         *     buttons (array[Object]) - an array of buttons to be added in order.
         *                               Each item in the array should have a label String and an action function.
         *     cancelLink (boolean) - specified whether a cancel button should be automatically added - defaults to true.
         *
         * @returns the id of the dialog opened.
         */
        open: function (settings, params) {
            var t = this;
            var f = '';
            var x;
            var y;
            var sw;
            var sh;
            var vp = tinymce.DOM.getViewPort();
            var u;

            settings = settings || {};
            t.initialiseSettings(settings);

            params = params || {};
            sw = isOpera ? vp.w : screen.width; // Opera uses windows inside the Opera window
            sh = isOpera ? vp.h : screen.height;

            params = this.setDefaultParameters(params);
            params.mce_width = settings.width;
            params.mce_height = settings.height;
            params.mce_auto_focus = settings.auto_focus;

            if (isIE) {
                settings.center = true;
                settings.help = false;
                settings.dialogWidth = settings.width + 'px';
                settings.dialogHeight = settings.height + 'px';
            }

            t.features = settings;
            t.params = params;
            t.onOpen.dispatch(t, settings, params);

            var height = settings.height;
            if (settings.name) {
                height += DIALOG_HEADER_SIZE;
            }

            if (params.cancelLink || params.buttons) {
                height += DIALOG_BUTTON_PANEL_SIZE;
            }

            // include the padding
            height += (2* DIALOG_CONTENT_PADDING);

            // add an arbitrary amount to cope with the user agent border that is often applied to iframes
            if (settings.popup) {
                height = height + 8;
            }

            var id = settings.id || tinymce.DOM.uniqueId();
            var dialog = new AJS.ConfluenceDialog({
                width: settings.width,
                height: height,
                id: id,
                onCancel: function() {
                    dialog.hide().remove();
                }
            });
            if (settings.name) {
                dialog.addHeader(this.editor.getLang(settings.name));
            }

            this.createDialogButtons(dialog, params, id);

            settings.file = settings.file || settings.url;
            if (settings.file) {
                settings.file = tinymce._addVer(settings.file);
            }

            this.createDialogContent(dialog, settings, params, id);
            params.helpLink && this.createHelpLink(dialog, params.helpLink, params.helpName, id);
            params.hintText && this.createHintText(dialog, params.hintText, id);

            // Add window so it can be managed elsewhere if necessary
            var dialogDetails = {
                id : id,
                settings : settings,
                params : params,
                dialog : dialog
            };

            this.modalDialogsStack.push(dialogDetails);
            this.dialogs[id] = dialogDetails;
            this.count++;

            AJS.Rte.BookmarkManager.storeBookmark();
            dialog.show();

            if (dialog.takeFocus != undefined) {
                dialog.takeFocus();
            }

            // IE 8 is getting confused with the panel size layout and always including scrollbars.
            // This fixes it.
            if (isIE) {
                $("#" + id).css("overflow", "hidden");
                $("#" + id + " ." + params.cssClass).css("overflow", "hidden");
            }

            return id;
        },

        initialiseSettings : function (settings) {
            settings.width = parseInt(settings.width || 400,10);
            settings.height = parseInt(settings.height || 250,10);
            settings.resizable = false;
            if (settings.popup == undefined) {
                settings.popup = true;
            }

            if (settings.popup && settings.content != undefined) {
                settings.popup = false;
            }

            if (settings.scrollbars) {
                settings.scrollbars = "yes";
            } else {
                settings.scrollbars = "no";
            }
        },

        /**
         * Create any specified buttons on the dialog, as well as adding a help link if the parameter
         * is supplied
         */
        createDialogButtons : function (dialog, parameters, dialogId) {
            if (parameters.buttons) {
                var i = 0;
                for (i=0; i < parameters.buttons.length; i++) {
                    var buttonDef = parameters.buttons[i];
                    dialog.addButton(this.editor.getLang(buttonDef.label), buttonDef.action);
                }
            }

            if(parameters.cancelLink) {
                dialog.addCancel(this.editor.getLang("auiwindowmanager.cancel"), function () { return tinymce.activeEditor.windowManager.close(dialogId); });
            }
        },


        /**
         * Create the content of the dialog taking into account whether an iframe is required or
         * dynamic loading into the DOM.
         */
        createDialogContent : function (dialog, settings, params, id) {

            var contentId = this.createContentId(id);
            var panelId = "panel_" + contentId;
            if (settings.popup) {
                dialog.addPanel(panelId, $("<iframe id='" + contentId + "' width='100%' height='" + settings.height + "px' frameborder='0' name='auidialogiframe' src='" + settings.file + "' scrolling='" + settings.scrollbars + "'></iframe>"), params.cssClass);
                dialog.takeFocus = function() {
                    $("#" + contentId).focus();
                };
            } else {
                if (settings.content == undefined) {
                    // Dynamically loading the panel content from the settings.file
                    dialog.addPanel(panelId, $("<div id='" + contentId + "'/>"), params.cssClass);
                    // Load the content of the window
                    $("#" + contentId).load(settings.file);
                    // TODOXHTML Add some error handling for when the content doesn't load
                } else {
                    // Statically provided panel content
                    dialog.addPanel(panelId, $("<div id='" + contentId + "'>" + settings.content + "</div>"), params.cssClass);
                }

                dialog.takeFocus = function() {
                    // set the focus to the first input element found
                    var inputs = $("#" + contentId + " :input");
                    if (inputs.length) {
                        $(inputs[0]).focus();
                    } else {
                        // set focus to the first button found on the dialog
                        var buttons = $("#" + contentId + " .button-panel button");
                        if (buttons.length) {
                            $(buttons[0]).focus();
                        }
                    }
                };
            }

            dialog.gotoPanel(0,0);
        },

        //can be used to render help text directly instead of making a request for a link
        createHintText : function(dialog, hintText, id) {
            var tip = $("<div></div>").addClass("dialog-tip");
            tip.text(tinymce.activeEditor.getLang(hintText));
            $("#" + id + " .dialog-button-panel").append(tip);
        },

        /**
         * If specified in the settings then add a help link to the button bar of the dialog.
         */
        createHelpLink : function (dialog, linkKey, linkName, id) {
            var helpLink = $("<div></div>").addClass("dialog-help-link");
            helpLink.load(CONSTANTS.CONTEXT_PATH + "/plugins/tinymce/helplink.action", { linkUrlKey : linkKey, linkNameKey: (linkName || "") });
            $("#" + id + " .dialog-components .dialog-title").prepend(helpLink);
        },

        /**
         * Close the specified window
         */
        close : function(win, id) {
            var dialogId;
            var dialog;
            if (typeof win === 'string') {
                dialogId = win;
            } else if (id) {
                dialogId = id;
            } else {
                // a window was supplied, without an id so we just assume the last opened dialog is to
                // be closed
                dialog = this.modalDialogsStack.pop();
                if (dialog) {
                    dialogId = dialog.id;
                }
            }

            if (!this.dialogs[dialogId]) {
                AJS.log("Couldn't find id " + dialogId + " in dialogs array so dialog is not closed.");
            } else {
                this.count--;
                dialog = this.dialogs[dialogId];
                dialog.dialog.remove();
                this.dialogs[dialogId] = null;

                // set focus back to the editor
                tinymce.activeEditor.focus();

                AJS.Rte.BookmarkManager.restoreBookmark();
            }
            return false;
        },

        alert : function(title, callback, scope, w) {
            var settings = {
                content : "<p>" + title + "</p>",
                width : 500,
                height : 160,
                popup : false
            };

            var alertDialogId;

            var okCallback = function() {
                tinymce.activeEditor.windowManager.toggleOtherDialogs(alertDialogId, true);
                tinymce.activeEditor.windowManager.close(alertDialogId);
                if (callback) {
                    callback.call(scope || this);
                }
            };

            var params = {
                buttons : [{
                    label : "auiwindowmanager.ok",
                    action : okCallback
                }],
                cancelLink: false,
                cssClass : "tinymce-auidialog-alert"
            };

            alertDialogId = this.open(settings, params);

            // Disable the buttons on all the other dialogs while the alert is shown.
            this.toggleOtherDialogs(alertDialogId, false);
        },

        createInstance : function(cl, a, b, c, d, e) {
            var f = tinymce.resolve(cl);

            return new f(a, b, c, d, e);
        },

        // Hide the button panel on all dialogs except the alert one that was just opened.
        // The button panel may contain a cancel link so disabling is not enough. A hide is required.
        toggleOtherDialogs: function(alertDialogId, enable) {
            var i = 0;
            for (i = 0; i < this.modalDialogsStack.length; i++) {
                var dialog = this.modalDialogsStack[i];
                if (dialog.id != alertDialogId) {
                    $("#" + dialog.id + " .dialog-button-panel").toggle(enable);
                }
            }
        },

        confirm : function(t, cb, s, w) {
            w = w || window;

            cb.call(s || this, w.confirm(this._decode(this.editor.getLang(t, t))));
        },

        /**
         * Change the busy status of the dialog. If true then the dialog will indicate it is busy and not accept
         * any input. If false then the dialog should revert to it's normal state.
         *
         *  @param dialogId The id of the dialog to change the status of
         *  @param status true or false.
         */
        setBusy : function (dialogId, busy) {
            var dialog = this.dialogs[dialogId];
            if (!dialog) {
                return;
            }

            if (busy) {
                var busyId;
                var busyPanel;
                var content;
                var contentId;

                // hide the content panel for this dialog
                contentId = this.createContentId(dialogId);
                content = $("#" + contentId);

                content.hide();
                var contentHolder = content.parent();
                busyId = this.createBusyContentId(dialogId);
                busyPanel = $("#" + busyId, contentHolder);
                if (!busyPanel.length) {
                    contentHolder.append($("<div id='" + busyId + "' class='spinner'></div>"));
                    busyPanel = $("#" + busyId, contentHolder);
                    Raphael.spinner(busyPanel[0], 50, "#666");
                }

                $(".button-panel button" ,$("#" + dialogId)).each(function(index,element) {
                    $(element).prop("disabled",true);
                });

                $(busyPanel[0]).show();
            } else {
                // hide the busy panel and show the content again
                busyId = this.createBusyContentId(dialogId);
                busyPanel = $("#" + busyId);
                if (busyPanel.length) {
                    $(busyPanel[0]).hide();
                }

                contentId = this.createContentId(dialogId);
                content = $("#" + contentId);

                $(".button-panel button" ,$("#" + dialogId)).each(function(index,element) {
                    $(element).prop("disabled",false);
                });

                $(content[0]).show();
            }
        },

        logMCESelection : function (title) {
            var s = tinymce.activeEditor.selection;
            AJS.log("******************************");
            AJS.log("Logging TinyMCE selection title:    " + title);
            AJS.log("Bookmark:");
            AJS.log(s.getBookmark());
            var rangeNodeText = $(s.getRng().startContainer).text() || $(s.getRng().startContainer.parentNode).text();
            AJS.log("Range: " + rangeNodeText);
            AJS.log(s.getRng());
        },

        //
        // ---- Internal functions --------------------------------------------
        //
        setDefaultParameters: function (params) {
            params.inline = false;

            if (!params.cssClass) {
                params.cssClass = "tinymce-auidialog";
            }

            if (params.cancelLink != false) {
                params.cancelLink = true;
            }

            return params;
        },

        /**
         * @param id the id to create a content id for.
         * @return a contentId for the supplied id
         */
        createContentId : function (id) {
            return "content_" + id;
        },

        createBusyContentId : function (id) {
            return "content_busy_" + id;
        }

    };

    return {
        AUIWindowManager: AUIWindowManager,
        WindowManager: WindowManager
    };
});


require('confluence/module-exporter').safeRequire('confluence-editor/tinymceplugin/auiwindowmanager', function(windowManager) {
    var tinymce = require('tinymce');

    tinymce.create('tinymce.plugins.AUIWindowManager', windowManager.AUIWindowManager);
    tinymce.create('tinymce.AUIWindowManager:tinymce.WindowManager', windowManager.WindowManager);

    // Register plugin
    tinymce.PluginManager.add('auiwindowmanager', tinymce.plugins.AUIWindowManager);
});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'macrobrowser/tinymce-macrobrowser.js' */
define('confluence-editor/macrobrowser/tinymce-macrobrowser', [
    'jquery',
    'tinymce',
    'ajs',
    'confluence/legacy',
    'confluence/api/constants'
], function(
    $,
    tinymce,
    AJS,
    Confluence,
    CONSTANTS
) {
    "use strict";

    return {
        /**
         * The current selection range in the editor
         */
        storedRange: null,
        /**
         * The current bookmark location in the editor
         */
        bookmark: null,

        getCurrentNode: function () {
            return $(tinymce.activeEditor.selection.getNode());
        },
        isMacroDiv: function (node) {
            return $(node).hasClass("wysiwyg-macro");
        },
        isMacroTag: function (node) {
            var $node = $(node);
            return $node.hasClass("wysiwyg-macro") || $node.hasClass("editor-inline-macro");
        },
        isBodylessMacro: function (node) { /** FIXME: This method's name is misleading. */
            return $(node).hasClass("editor-inline-macro");
        },
        isMacroWithBody: function (node) {
            return $(node).hasClass("wysiwyg-macro");
        },
        isMacroStartTag: function (node) {
            return $(node).hasClass("wysiwyg-macro-starttag");
        },
        isMacroEndTag: function (node) {
            return $(node).hasClass("wysiwyg-macro-endtag");
        },
        isMacroBody: function (node) {
            return $(node).hasClass("wysiwyg-macro-body");
        },
        hasMacroBody: function (node) {
            return $(node).attr("macrohasbody") == "true";
        },
        /**
         * Returns an array of macro names for macro divs enclosing the current node.
         */
        getNestingMacros: function (node) {
            var $node = $(node || this.getCurrentNode());
            var nestingMacros = [];
            $node.parents(".wysiwyg-macro").each(function () {
                nestingMacros.push($(this).attr("data-macro-name"));
            });
            return nestingMacros;
        },

        logMCESelection: function (title) {
            var s = tinymce.activeEditor.selection;
            AJS.log("******************************");
            AJS.log("Logging TinyMCE selection title:    " + title);
            AJS.log("Bookmark:");
            AJS.log(s.getBookmark());
            var rangeNodeText = $(s.getRng().startContainer).text() || $(s.getRng().startContainer.parentNode).text();
            AJS.log("Range: " + rangeNodeText);
            AJS.log(s.getRng());
        },

        getSelectedMacro: function (editor) {
            var t = tinymce.confluence.macrobrowser;
            var $selectionNode = t.getCurrentNode();
            AJS.log("getSelectedMacro: $selectionNode=" + $selectionNode[0]);
            return t.isMacroDiv($selectionNode) ? $selectionNode : tinymce.confluence.MacroUtils.isInMacro($selectionNode);
        },

        openMacro: function (macroDefinition) {
            AJS.MacroBrowser.open({
                selectedMacro: macroDefinition,
                onComplete: tinymce.confluence.macrobrowser.macroBrowserComplete,
                onCancel: tinymce.confluence.macrobrowser.macroBrowserCancel
            });
        },

        editMacro: function (macroNode) {
            var t = tinymce.confluence.macrobrowser;
            var $macroDiv = $(macroNode);
            t.editedMacroDiv = $macroDiv[0];

            /**
             * serialize() to ensure that any bogus tinymce tags + dirty browser markup are cleaned up.
             * macro node should be cloned before serialization, as we don't want serialization tampering with the actual DOM element.
             */
            var macroHtml = AJS.Rte.getEditor().serializer.serialize($macroDiv.clone()[0], {
                forced_root_block: false // Prevent serialize from wrapping in a <p></p>
            });

            AJS.Rte.getEditor().selection.select($macroDiv[0]);
            AJS.Rte.BookmarkManager.storeBookmark();

            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                url: CONSTANTS.CONTEXT_PATH + "/rest/tinymce/1/macro/definition",
                data: $.toJSON({
                    contentId: Confluence.getContentId(),
                    macroHtml: macroHtml
                }),
                dataType: "text",
                success: function (macro) {
                    t.openMacro($.secureEvalJSON(macro));
                }
            });

        },

        /**
         * Called to insert a new macro.
         * If user has not selected text, just open the Macro Browser.
         * If user has selected text, it will convert it to wiki markup for the body of the macro
         */
        macroBrowserToolbarButtonClicked: function (options) {

            var t = tinymce.confluence.macrobrowser;
            var editor = tinymce.activeEditor;
            var $node = t.getCurrentNode();
            AJS.Rte.BookmarkManager.storeBookmark();

            // Inserting new macro
            var settings = $.extend({
                presetMacroName: null,
                nestingMacros: t.getNestingMacros($node),
                onComplete: t.macroBrowserComplete,
                onCancel: t.macroBrowserCancel,
                mode: "insert",
                selectedHtml: "",
                selectedText: ""
            }, options);

            if (!options.ignoreEditorSelection) {
                settings.selectedHtml = editor.selection.getContent();
                settings.selectedText = editor.selection.getContent({format: "text"});
            }
            AJS.MacroBrowser.open(settings);
        },
        /**
         * Takes macro markup (usually generated by the Macro Browser) and inserts/updates the relevant Macro macroHeader
         * in the RTE.
         * @param macro macro object describing inserted/edited macro
         */
        macroBrowserComplete: function (macro) {
            var t = tinymce.confluence.macrobrowser;
            var macroRenderRequest = {
                contentId: AJS.Meta.get('content-id') || "0",
                macro: {
                    name: macro.name,
                    params: macro.params,
                    defaultParameterValue: macro.defaultParameterValue,
                    body: macro.bodyHtml
                }
            };

            AJS.Rte.BookmarkManager.restoreBookmark();

            if (t.editedMacroDiv) {
                tinymce.confluence.MacroUtils.insertMacro(macroRenderRequest, t.editedMacroDiv);
                delete t.editedMacroDiv;
            } else {
                tinymce.confluence.MacroUtils.insertMacro(macroRenderRequest);
            }
        },

        // Called when the macro browser is closed to clean up and reset data.
        macroBrowserCancel: function () {
            var t = tinymce.confluence.macrobrowser;
            AJS.Rte.BookmarkManager.restoreBookmark();
            t.editedMacroDiv = null;
            t.editedMacro = null;
        }
    };
});

require('confluence/module-exporter').exportModuleAsGlobal('confluence-editor/macrobrowser/tinymce-macrobrowser', 'tinymce.confluence.macrobrowser');
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'utils/tinymce-image-utils.js' */
define('confluence-editor/utils/tinymce-image-utils', [
    'jquery',
    'confluence/api/logger',
    'confluence/meta',
    'ajs',
    'tinymce',
    'confluence/api/constants'
], function(
    $,
    logger,
    Meta,
    AJS,
    tinymce,
    CONSTANTS
) {
    "use strict";

    /**
     *  Keys of properties that should be stored as attributes of the image element.
     */
    var imageElementAttributeKeys =  ["imagetext", "src", "align", "border", "width", "height"];

    /**
     * Regex matches if an image is attached to Confluence content
     */
    var contentImageRegex = /\/download\/(thumbnails|attachments)\/([0-9]+)\//;

    /**
     * The pageId for the content owning the image attachment is not
     * stored against the image element directly, so we extract it from the
     * image element's src attribute.
     *
     * e.g. /confluence/download/attachments/2129935/ca5.gif extracts "2129935"
     *      /confluence/download/thumbnails/2129935/ca5.gif ALSO extracts "2129935"
     */
    var getPageIdFromImageElement = function (imgEl) {
        var src = $(imgEl).attr("src");
        var matches = src.match(contentImageRegex);
        if (matches && matches.length === 3) {
            return matches[2];
        }
        logger.log("ERROR: could not parse page id from image url " + src);
        return "0";
    };

    /**
     * Creates the string to store in the src attribute of the img element.
     *
     * e.g. /confluence/download/attachments/884738/hedgehog.jpg
     */
    var getSrc = function (imgProps) {
        var destination = imgProps.destination;
        if (ImageUtils.isRemoteImg(destination)) {
            return destination;
        }
        var thumbnailDir = '/thumbnails/';
        var attachmentsDir = '/attachments/';
        return (imgProps.thumbnail) ? destination.replace(attachmentsDir, thumbnailDir) :
                destination.replace(thumbnailDir, attachmentsDir);
    };

    /**
     * Returns true iff this is a Confluence image tag with a wiki-markup "imagetext" attribute.
     */
    var isEmbeddedImage = function(imgEl) {
        return imgEl && $.nodeName(imgEl, 'img') && $(imgEl).hasClass("confluence-embedded-image");
    };

    /**
     * Resize embedded image to default size if it is bigger that default size
     * @param image
     * @param width image's width
     * @param height image's height
     * @param isScaledByWidth
     * @param defaultSize
     */
    var resizeImage = function (image, width, height, isScaledByWidth, defaultSize) {
        if (isScaledByWidth) {
            if (width >= defaultSize) {
                image.width = defaultSize;
            }
            image.style.maxWidth = ""; //this is necessary so that user can resize image to bigger size using property panel
        } else {
            if (height >= defaultSize) {
                image.height = defaultSize;
            }
            image.style.maxHeight = ""; //this is necessary so that user can resize image to bigger size using property panel
        }
    };

    var newImageCounter = 0;

    var ImageUtils;

    /**
     * ImageProperties class represents all of the attributes of an image in the
     * RTE:
     *      imageFileName
     *      thumbnail
     *      border
     *      width
     *      height
     *      url (optional) the full url of the image for an external image
     *      pageId (optional if url exists) the id of the page owning the image attachment
     *      destination (optional) the full "wiki" path to the image, eg "TST:Foo^bar.jpg"
     *
     *  It can return calculated values, such as:
     *      src
     *      imagetext
     */
    var ImageProperties = function (props) {
        if (isEmbeddedImage(props)) {
            // props is an img element
            var imgEl = $(props);

            props = {
                destination: imgEl.attr("src"),
                url: imgEl.attr("src"),
                border: (imgEl.attr("class") && imgEl.attr("class").indexOf("confluence-content-image-border") !== -1) ? 1 : 0,
                width: imgEl.prop("width"),
                height: imgEl.prop("height"),
                originalSelected: !imgEl.attr("width") && !imgEl.attr("height")
            };

            if (!ImageUtils.isRemoteImg(props.destination)  && (!$(imgEl).hasClass("confluence-external-resource"))) {
                props.pageId = getPageIdFromImageElement(imgEl);
            }

            return $.extend({}, props);

        } else if (props.destination) {
            // props is a map of ImageProperties values
            props.imageFileName = props.imageFileName || props.destination;

            return $.extend({}, props);
        }
        // not an image element and not a valid properties object - return nothing
        return null;
    };

    ImageUtils = {
        isScaledByWidth: function () {
            return false;
        },

        /**
         * Loads the image properties into the passed img element.
         * @param img an HtmlImageElement or a jQuery wrapping one.
         * @param imgProps the image properties to update the element with.
         */
        updateImageElement: function (img, imgProps) {

            var $img = $(img);

            imgProps.src = getSrc(imgProps);

            // Renderer & TinyMCE both add style tags to show borders - these both need updating, if present, or they'll
            // override any border attribute set.
            $img.toggleClass("confluence-content-image-border", !!imgProps.border);
            $img.toggleClass("confluence-thumbnail", !!imgProps.thumbnail);

            for (var i = 0, ii = imageElementAttributeKeys.length; i < ii; i++) {
                var key = imageElementAttributeKeys[i];
                var val = imgProps[key];
                if (val !== false && val != null) {
                    $img.attr(key, val);
                } else {
                    $img.removeAttr(key);
                }
            }
            tinymce.activeEditor.undoManager.add();
        },

        /**
         * Insert an external image or an image placeholder with the specified properties.
         * @param properties {Object} Required fields: filename, contentId, url (if external).
         *                            Optional: thumbnail, alignment, border
         * @param hidePropertiesPanel {boolean} hide the properties panel
         */
        insertFromProperties: function (properties, hidePropertiesPanel) {
            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                url: CONSTANTS.CONTEXT_PATH + "/rest/tinymce/1/embed/placeholder/image",
                data: $.toJSON(properties),
                dataType: "text",
                success: function (data) {
                    ImageUtils.insertImagePlaceholder(data, hidePropertiesPanel);
                }
            });
        },
        /**
         * Insert an image element to the editor
         * @param imagePlaceholderHtml {HTML} image element
         * @param hidePropertiesPanel {boolean} hide the properties panel
         */
        insertImagePlaceholder: function (imagePlaceholderHtml, hidePropertiesPanel) {
            var defaultSize;
            var isScaledByWidth = ImageUtils.isScaledByWidth();
            var $image = $(imagePlaceholderHtml);

            if (isScaledByWidth) {
                defaultSize = AJS.Confluence.PropertyPanel.Image.getPresetImageSize("large");
            } else {
                defaultSize = (Meta.get("content-type") === "comment") ?
                        AJS.Confluence.PropertyPanel.Image.getPresetImageSize("small") : AJS.Confluence.PropertyPanel.Image.getPresetImageSize("medium");
            }

            var propertyName = isScaledByWidth ? "max-width" : "max-height";
            $image.css(propertyName, defaultSize + "px");

            // there is no simple way to get back at the inserted image, so we put
            // a temporary id on it before inserting
            var ed = tinymce.activeEditor;
            var id = "_" + (+new Date());
            var div = $("<div></div>").append($image.attr("id", id));

            ed.selection.setContent(div.html());

            var imgElem = ed.dom.get(id);
            ed.dom.setAttrib(imgElem, "id", "");

            if (!$image.hasClass("confluence-external-resource")) {
                resizeImage(imgElem, $image.attr("data-image-width"), $image.attr("data-image-height"), isScaledByWidth, defaultSize);
            }

            // CONFDEV-5735: In IE8 only, the load event fires multiple times, i.e. when clicking
            // the Preview button. Ensure that the property panel is only triggered once.
            $(imgElem).one("load", function () {
                if ($image.hasClass("confluence-external-resource")) {
                    resizeImage(this, this.width, this.height, isScaledByWidth, defaultSize);
                }

                // CONFDEV-3749 - make sure new element is visible
                AJS.Rte.showSelection(function () {
                    if (!hidePropertiesPanel) {
                        AJS.trigger("trigger.property-panel", {elem: imgElem});
                    }
                    ed.undoManager.add();
                });

                ed.onChange.dispatch();
            });
        },

        /**
         * Checks if an image has a url as its destination instead of a wiki link.
         * @return true if image text starts with http or https protocol
         */
        isRemoteImg: function (destination) {
            var currentbaseurl = AJS.Rte.getCurrentBaseUrl();
            return destination.match('(https?://)') && destination.indexOf(currentbaseurl) === -1;
        },

        /**
         * Check whether a thumbnail should be loaded
         * @returns {boolean} true if the image is a landscape image and requiredSize
         * is less than or equal maxThumbWidth/maxThumbHeight, or the image is a portrait/landscape image and
         * requiredWidth/requiredHeight is less than or equal the thumbnail width/height.
         * Otherwise, return false.
         */
        isThumbnailUsable: function(requiredWidth, requiredHeight, imageWidth, imageHeight, maxThumbWidth, maxThumbHeight) {
            var requiredSize;
            if (requiredWidth) {
                requiredSize = requiredWidth;
                if (requiredSize > maxThumbWidth) {
                    // The maximum thumbnail width is less than the required width,
                    // so there is no option to use a thumbnail.
                    return false;
                }

                var imageWidthHeightRatio = imageWidth / imageHeight;
                if (imageWidthHeightRatio >= 1) {
                    // This image has landscape orientation, so its thumbnail width
                    // must be greater than or equal the requested width and the
                    // thumbnail can be used.
                    return true;
                }

                // If the image has portrait orientation, its thumbnail width may be
                // greater or less than the required width.
                var thumbnailWidth = imageWidthHeightRatio * maxThumbHeight;
                return thumbnailWidth >= requiredSize;
            } else {
                // when scale by height, input requiredSize can be width (when user input custom size)
                // or height (when user click on small/meidum/large buttons
                requiredSize = requiredHeight;
                if (requiredSize > maxThumbHeight) {
                    // The maximum thumbnail height is less than the required height,
                    // so there is no option to use a thumbnail.
                    return false;
                }

                var imageHeightWidthRatio = imageHeight / imageWidth;
                if (imageHeightWidthRatio >= 1) {
                    // This image has portrait orientation, so its thumbnail height
                    // must be greater than or equal the requested height and the
                    // thumbnail can be used.
                    return true;
                }

                // If the image has landscape orientation, its thumbnail height may be
                // greater or less than the required height.
                var thumbnailHeight = imageHeightWidthRatio * maxThumbWidth;
                return thumbnailHeight >= requiredSize;
            }
        }
    };

    return {
        "ImageProperties": ImageProperties,
        "ImageUtils": ImageUtils
    };
});

require('confluence/module-exporter').safeRequire('confluence-editor/utils/tinymce-image-utils', function(ImageUtils) {
    var tinymce = require('tinymce');

    tinymce.confluence.ImageProperties = ImageUtils.ImageProperties;
    tinymce.confluence.ImageUtils = ImageUtils.ImageUtils;
});

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'utils/tinymce-macro-utils.js' */
define('confluence-editor/utils/tinymce-macro-utils', [
    'tinymce',
    'ajs',
    'confluence/legacy',
    'jquery'
], function(
    tinymce,
    AJS,
    Confluence,
    $
) {
    "use strict";

    var that;

    /**
     * Places the editor cursor inside a bodied macro placeholder.
     */
    function focusMacroNode(macroNode) {
        var mb = tinymce.confluence.macrobrowser;
        var ed = tinymce.activeEditor;
        var doc = ed.getDoc();
        var nodeToFocus;
        var range = ed.selection.getRng(true);

        if (mb.isMacroWithBody(macroNode)) {
            // add a BR to allow the cursor to be positioned in the placeholder
            !tinymce.isIE && $("p, pre", macroNode).each(function () {
                if (this.childNodes.length === 0) {
                    this.appendChild(doc.createElement("br"));
                }
            });

            nodeToFocus = ed.dom.select('.wysiwyg-macro-body', macroNode)[0].firstChild;
            if (nodeToFocus) {
                range.setStart(nodeToFocus, 0);
                range.setEnd(nodeToFocus, 0);
            } else {
                AJS.debug("focusMacroNode: couldn't find anything to focus, cap'n!");
            }
        } else {
            range.setStartAfter(macroNode);
            range.setEndAfter(macroNode);
        }

        ed.selection.setRng(range);
    }

    var insertMacro = function (macro, nodeToReplace) {
        var request;

        if (macro.macro && macro.contentId) { // if macro data
            request = {
                type: "POST",
                url: AJS.contextPath() + "/rest/tinymce/1/macro/placeholder",
                contentType: "application/json; charset=utf-8",
                data: $.toJSON(macro),
                dataType: "text"
            };
        } else if (macro.url && macro.type) { // if jQuery AJAX request
            request = macro;
        } else {
            throw new Error("illegal argument received: " + macro);
        }

        /**
         * insertMacro consists of one or more asynchronous operations. This purpose of this $deferred object is to
         * allow insertMacro() and clients of insertMacro() to queue up callbacks to run after the asynchronous operation is complete.
         */
        var $deferred = $.Deferred();
        var ed = AJS.Rte.getEditor();
        var tempNode;
        var placeholderId;

        if (!nodeToReplace) {
            // Insert a temporary node that will be used to hold the fort while we wait for the server
            placeholderId = "macro-" + (new Date()).getTime();
            tempNode = ed.dom.create("span", {id: placeholderId});

            ed.selection.setNode(tempNode);
            /**
             * tinymce.dom.Selection.setNode() takes the node passed in, makes a copy of it internally
             * and then inserts into the editor's DOM. It does not return a reference to node it creates :/
             * hence we have to manually get a reference to it here.
             */
            nodeToReplace = tempNode = ed.dom.select("#" + placeholderId)[0];

            $deferred.fail(function () {
                $(tempNode).remove();
            });
        }

        /**
         * Mandate a sensible timeout. We don't want the editor buttons disabled for an unreasonable amount of time.
         * Better to re-enable them and fail the macro insertion and allow the user to save any changes they have made.
         */
        $.extend(request, {timeout: that.DEFAULT_INSERT_MACRO_TIMEOUT});

        AJS.debug('Insert macro timeout = ' + request.timeout);

        Confluence.Editor.UI.setButtonsState(false);

        $.ajax(request).done(function (macroMarkup) {
            if (macroMarkup[0] !== '<') {
                //change the markup into a text node so that it can be handled by jQuery
                macroMarkup = document.createTextNode(macroMarkup);
            }

            /**
             * Check if the node is still there before going any further.
             * The user could have deleted the node while the xhr request was in progress.
             * If that's the case and we manipulate a deleted node, we could expect some nasty
             * behaviour like CONFDEV-21949
             */
            function validNodeAttached(node) {
                return node && node.parentNode;
            }

            if (!validNodeAttached(nodeToReplace)) {
                AJS.logError("The node to be replaced has been already deleted from the document");
                $deferred.rejectWith(this, arguments);
            }
            else {
                tinymce.confluence.NodeUtils.updateNode(nodeToReplace, macroMarkup)
                        .done(function (newNode) {
                            $deferred.resolve(newNode, macroMarkup);
                        })
                        .fail($deferred.reject); // updateNode does not reject at this point in time
            }
        })
                .fail(function (jqXHR, textStatus, errorThrown) {
                    AJS.logError("Macro placeholder request failed " + textStatus + ": '" + errorThrown + "'");
                    $deferred.rejectWith(this, arguments);
                });

        /**
         * All operations that are to happen after all asynchronous operations are complete should be queued up here.
         */
        $deferred
                .done(function (newNode, newNodeMarkup) {
                    Confluence.Editor.UI.setButtonsState(true);

                    /**
                     * Split out body macro placeholder if it is inside a heading or paragraph (tables are not allowed inside these tags according to the html spec)
                     */
                    if (tinymce.confluence.macrobrowser.isMacroWithBody(newNode)
                            && /P|H\d/.test(newNode.parentNode.nodeName)) {
                        ed.dom.split(newNode.parentNode, newNode);
                    }

                    focusMacroNode(newNode);

                    /**
                     * One reason to call this here is to ensure the toolbar buttons are disabled when inside a plain text macro placeholder
                     */
                    ed.nodeChanged();

                    // ATLASSIAN - CONFDEV-3749 - make sure new element is visible
                    // ATLASSIAN - CONFDEV-6400 - Make sure that the whole macro is visible
                    AJS.Rte.showElement(newNode);

                    ed.selection.onSetContent.dispatch(ed.selection, {
                        content: newNodeMarkup,
                        format: "html"
                    });

                    tinymce.activeEditor.undoManager.add();

                    // This event is used with AJS.trace to allow WD tests to wait until the macro placeholder
                    // has been added to the Editor.
                    AJS.trigger("macro-browser.macro-inserted");
                })
                .fail(function () {
                    Confluence.Editor.UI.setButtonsState(true);
                });

        return $deferred.promise();
    };

    that = {

        DEFAULT_INSERT_MACRO_TIMEOUT: 5000,

        /**
         * Inserts a macro into the editor asynchronously. The specified macro could be either:
         *
         * (1) macro data (consisting of macro and a contentId)
         * (2) an jQuery ajax request that returns macro markup in editor format
         *
         * @param macro macro data or a macro AJAX request
         * @param nodeToReplace (optional) if specified, this node will be replaced with the macro being inserted
         *
         * @return a jQuery promise object to allow callbacks to be queued up that will be invoked when this asynchronous operation is complete.
         */
        insertMacro: insertMacro,

        isInMacro: function (node) {
            var $node = node.jquery ? node : $(node);
            return $node.closest(".wysiwyg-macro").length > 0;
        },

        updateMacro: function (updatedParameters, updatedMacroBody, macroName, existingMacroNode) {

            var macroRenderRequest = {
                contentId: Confluence.getContentId(),
                macro: {
                    name: macroName,
                    params: updatedParameters,
                    body: updatedMacroBody ? updatedMacroBody : ""
                }
            };

            return insertMacro(macroRenderRequest, existingMacroNode);
        }
    };

    return that;
});

require('confluence/module-exporter').exportModuleAsGlobal('confluence-editor/utils/tinymce-macro-utils', 'tinymce.confluence.MacroUtils');
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/confluence/editor_plugin_src.js' */
/**
 * Confluence TinyMCE plugin. Creates controls and commands for:
 * - inserting images
 * - macro browser
 * - unlinking
 *
 * TODOXHTML: clean this up and split into separate TinyMCE plugins
 */
define('confluence-editor/tinymce3/plugins/confluence/editor_plugin_src', [
    'jquery',
    'ajs',
    'confluence/legacy',
    'tinymce'
], function(
    $,
    AJS,
    Confluence,
    tinymce
) {
    "use strict";

    return {
        init : function(ed, url) {
            ed.addCommand("mceConfUnlink", function (ui, val) {
                var ed = AJS.Rte.getEditor();
                var s = ed.selection;
                var n = val || s.getNode();
                var $n = $(n);

                if (n.nodeName !== 'A') {
                    var parent = $n.closest("a");
                    if (!parent.length) {
                        return;
                    }
                    n = parent[0];
                    $n = parent;
                }

                var href = $n.attr("href");
                if (!href) { // fix broken links before attempting to unlink
                    href = "#";
                    $n.attr("href", href);
                }
                // unlinking external links requires wrapping it a span with a class
                // so we don't automatically convert them to links on the server
                var removeTrailingSlash = function (text) {
                    var trailingSlashRegexResult = /(.*)[\/]$/.exec(text);
                    return trailingSlashRegexResult != null ? trailingSlashRegexResult[1] : text;
                };
                if (!$n.attr("data-linked-resource-id") && Confluence.Link.isExternalLink(href) && $n.text() == removeTrailingSlash(href)) {
                    var span = ed.dom.create("span", {"class": "nolink"}, href);
                    ed.dom.replace(span, n, false);
                }
                else {
                    s.select(n);
                    // Firefox doesn't remove link classes when it unlinks so we remove them manually
                    $n.removeClass("createlink unresolved");
                    ed.execCommand("UnLink");
                }
            });

            // Register buttons
            ed.addButton("confimage", {title : "confluence.confimage_desc", cmd : "mceConfimage"});
            ed.addButton("conf_macro_browser", {title : "confluence.conf_macro_browser_desc", cmd : "mceConfMacroBrowser"});
        },

        getInfo : function () {
            return {
                longname : "Confluence TinyMCE Plugin",
                author : "Atlassian",
                authorurl : "http://www.atlassian.com",
                version : tinymce.majorVersion + "." + tinymce.minorVersion
            };
        }
    };
});

require('confluence/module-exporter').safeRequire('confluence-editor/tinymce3/plugins/confluence/editor_plugin_src', function(ConfluencePlugin) {
    var tinymce = require('tinymce');

    // Register commands and onclicks
    tinymce.create('tinymce.plugins.ConfluencePlugin', ConfluencePlugin);

    // Register plugin
    tinymce.PluginManager.add("confluence", tinymce.plugins.ConfluencePlugin);
});

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/macroplaceholder/editor_plugin_src.js' */
define('confluence-editor/tinymce3/plugins/macroplaceholder/editor_plugin_src', [
    'jquery',
    'ajs',
    'tinymce'
], function(
    $,
    AJS,
    tinymce
) {
    "use strict";

    /**
     * Macro placeholders.
     *
     * Copyright 2010, Atlassian
     */
    var VK = tinymce.VK;

    return {
        /**
         * Initializes the plugin, this will be executed after the plugin has been created.
         * This call is done before the editor instance has finished it's initialization so use the onInit event
         * of the editor instance to intercept that event.
         *
         * param {tinymce.Editor} ed Editor instance that the plugin is initialized in.
         * param {string} url Absolute URL to where the plugin is located.
         */
        init : function(ed) {

            var t = this;

            /**
             * Ensure that placeholders inserted inside P's are moved out as P's should only contain inline content.
             */
            ed.onInit.add(function (ed) {
                /**
                 * ed.selection is initialized until after the editor has completed initialization.
                 * Hence the registering of this listener be added to the 'onInit' event.
                 */
                ed.selection.onSetContent.add(function (ed) {
                    tinymce.each(ed.dom.select('p > .wysiwyg-macro'), function (macroPlaceholderNode) {
                        var parentParagraphNode = ed.dom.getParent(macroPlaceholderNode.parentNode, 'p');
                        try {
                            ed.dom.split(parentParagraphNode, macroPlaceholderNode);
                        } catch (ex) {
                            // IE can sometimes fire an unknown runtime error so we just ignore it
                        }
                    });
                });
            });

            /**
             * TinyMCE will strip empty <PRE> blocks (which causes problems for plain text
             * macros - CONFDEV-3998). Ensure that each <pre> inside a macro
             * has a <br>
             */
            ed.onSetContent.add(function (ed) {
                tinymce.each(ed.dom.select('.wysiwyg-macro[data-macro-body-type="PLAIN_TEXT"] .wysiwyg-macro-body'), function (macroBody) {
                    var pre = ed.dom.select('pre', macroBody);
                    if (!pre.length) {
                        if (tinymce.isIE) {
                            ed.dom.setHTML(macroBody, "<pre></pre>");
                        } else {
                            ed.dom.setHTML(macroBody, "<pre><br /></pre>");
                        }
                    }
                });
            });

            /**
             * CONFDEV-4357
             * If the user selects a bodied macro in its entirety (by clicking its title)
             * and starts typing, the text should go inside its body.
             * Does not preserve the macro when content is pasted over it.
             */
            ed.onKeyDown.add(function(ed, e) {
                var selection = ed.selection;
                var selectedNode;
                var body;

                /**
                 * Figure out if the combination of keys pressed would result in
                 * a content-modifying operation or not.
                 * FIXME: Extraction of abstraction is the key to happiness.
                 * Find all this key-wrangling detection behaviour a nicer home.
                 */
                var ignoreKeys = [VK.BACKSPACE, VK.DELETE, VK.ENTER, VK.ESCAPE];

                function isModifierKey(e) {
                    var isModifier = false;
                    if (e.charCode === 0) {
                        isModifier = ($.inArray(e.keyCode, [VK.SHIFT, VK.CTRL, VK.ALT, VK.META]) != -1);
                    }
                    return isModifier;
                }

                // Don't save the macro if a deletion action is about to occur.
                // We only need to care if there's an active selection.
                // NOTE: Pressing enter to replace the macro is also a valid approach to deleting it.
                if ($.inArray(e.keyCode, ignoreKeys) != -1 || isModifierKey(e) || selection.isCollapsed()) {
                    return;
                }

                if (e.ctrlKey || e.metaKey || (!tinymce.isMac && e.altKey)) {
                    // If one of these keys is held down,
                    // it's likely to not be a content-related operation.
                    return;
                }
                /* end key-wrangling detection behaviour */

                selectedNode = selection.getNode();

                if (tinymce.confluence.macrobrowser.isMacroWithBody(selectedNode)) {
                    var $macroBody = $(".wysiwyg-macro-body", selectedNode);

                    if ($macroBody.length > 0) {
                        AJS.debug("MacroPlaceholderPlugin: Adjusting text selection to only include macro's body.");
                        selection.select($macroBody[0], true);
                    }
                }
            });

            /**
             * Allow the user to double-click the title area of a macro placeholder to quickly open
             * the dialog to edit it.
             */
            ed.onDblClick.add(function(ed, e) {
                var $target = $(e.target);
                var macroPlaceholderEl = function ($element) {
                    return $element.closest("[data-macro-name]");
                };
                var $macroNode = macroPlaceholderEl($target);

                if ($macroNode.length) {
                    AJS.debug("Double-click triggered inside a macro.");

                    // This prevents people double-clicking arbitrary content inside macros and getting the dialog.
                    // Only proceed if we're dealing with the container element of the macro itself.
                    // inline macros have no macro body and no macro-body-type.
                    if ($macroNode.attr("data-macro-body-type")) {
                        // Allow clicking inside the table cell in IE8 to give it a chance of allowing double-click.
                        if (tinymce.isIE) {
                            if ($target.hasClass("wysiwyg-macro-body") || $target.hasClass("wysiwyg-macro")) {
                                AJS.debug("Double-click inside macro body, but its IE so its OK I guess...");
                            } else {
                                AJS.debug("Double-click was inside bodied macro content, even in IE. Skipping.");
                                return;
                            }
                        }
                        // For every normal browser that allows padding inside tables, ignore all clicks inside the content area.
                        else if ($target.closest(".wysiwyg-macro-body").length) {
                            AJS.debug("Double-click was inside bodied macro content. Skipping.");
                            return;
                        }
                    }

                    tinymce.confluence.macrobrowser.editMacro($macroNode);
                    // Because the user has essentially bypassed the property-panel, we should close it.
                    if (AJS.Confluence.PropertyPanel && AJS.Confluence.PropertyPanel.current) {
                        AJS.Confluence.PropertyPanel.destroy();
                    }
                }
            });

            /**
             * When the user is inside a plain text macro body placeholder, we do not want to expose any of the
             * rich text controls in the browser.
             */
            ed.onNodeChange.addToTop(function(ed) {
                var selectedNode = ed.selection.getNode();
                if (selectedNode.nodeName === 'PRE' && $(selectedNode).closest('.wysiwyg-macro').length) {
                    t._setTinymceControlsState(ed, 0);
                } else {
                    t._setTinymceControlsState(ed, 1);
                }
            });

            ed.addCommand("mceConfRemoveMacro", function(macroNode) {
                $(macroNode).remove();
                if (tinymce.isGecko) {
                    // Repaint to clear the image handles from their old positions.
                    AJS.Rte.getEditor().execCommand('mceRepaint', false);
                }
            });

            /**
             * Registers a key listener in a such a way as to ensure that when a user presses and holds the key,
             * that the default action can be effectively cancelled across webkit and firefox.
             *
             * Webkit is actually not fussy: registering against keydown is sufficient.
             *
             * On Firefox, one needs to register against keypress and keyup in addition to keydown.
             *
             * param listener a key listener
             */
            function registerKeyListener(listener) {
                ed.onKeyDown.add(listener);

                if (tinymce.isGecko) {
                    ed.onKeyPress.add(listener);
                    ed.onKeyUp.add(listener);
                }
            }

            /**
             * Determines if the node is an empty node (in the sense that it contains only a single child BR node.
             *
             * param node the node to test
             * param selector the specified node must pass this css selector
             */
            function nodeContainsSoloBrElementAndMatchesSelector(node, selector) {
                return node && node.childNodes.length === 1 && $(node).is(selector) && $(node.firstChild).is("br");
            }

            /**
             * Checks to see if the cursor is inside a node that is the only child of its parent (and the parent is the only
             * child of it's parent and so and so on until the placeholder body element (marked with class="wysiwyg-macro-body" is encountered).
             * If we can traverse successfully to the placeholder body element return true, otherwise return false.
             *
             * For example, for the following nested structure:
             *
             * <td class="wysiwyg-macro-body>
             *     <p>
             *         <strong>
             *             <u>
             *                 <em>CURSOR HERE text<br/></em>
             *             </u>
             *         </strong>
             *     </p>
             * </td>
             *
             * Will return true if the cursor is there.
             *
             * Note that:
             * <ul>
             *     <li>the cursor is inside an element that is the only child of its parent, and the parent is also the only child of it's parent, and so and so forth
             *     <li>the EM element that we are testing has to be the only child of it's parent. However, the EM element itself is permitted to have multiple children.
             * </ul>
             *
             * param range
             */
            function isCursorInMostNestedElement(range) {
                if (!range.collapsed) {
                    return false;
                }

                var node = range.startContainer.nodeType === 3 ? range.startContainer.parentNode : range.startContainer;

                if (!node || !node.parentNode) {
                    return false;
                }

                while (node && !$(node).is(".wysiwyg-macro-body")) {
                    if (node.previousSibling || node.nextSibling) { // if node is only child (don't use :only-child as it does not respect text nodes)
                        return false;
                    }
                    node = node.parentNode;
                }

                return true;
            }
            t._isCursorInMostNestedElement = isCursorInMostNestedElement;

            /**
             * Prevent the last empty P or PRE in a placeholder from being deleted (emulating MS word behaviour)
             */
            (function () {
                (tinymce.isWebKit || tinymce.isGecko) && registerKeyListener(function (ed, e) {
                    if (e.keyCode === 46 && isCursorInLastParagraphOrPre(ed.selection.getRng(true))) {
                        return tinymce.dom.Event.cancel(e);
                    }
                });

                function isCursorInLastParagraphOrPre(range) {
                    if (!range.collapsed) {
                        return false;
                    }

                    var node = range.startContainer.nodeType === 3 ? range.startContainer.parentNode : range.startContainer;

                    return node.previousSibling && !node.nextSibling && nodeContainsSoloBrElementAndMatchesSelector(node, "p, pre");
                }
                t._isCursorInLastParagraphOrPre = isCursorInLastParagraphOrPre;
            })();

            /**
             * This will prevent a delete or backspace key event from removing the whole placeholder when the cursor is inside
             * a nested element. For example:
             *
             * <table ...>
             *     ...
             *     <td class="wysiwyg-macro-body>
             *         <p>
             *             <strong><em><u>CURSOR HERE<br/></u></em></strong>
             *         </p>
             *     </td>
             *     ...
             * </table>
             *
             * This does does not prevent backspace when the cursor is inside an a LI element intentionally
             * (as we would prefer to allow the user to outdent in this scenario)
             */
            (function () {
                tinymce.isWebKit && registerKeyListener(function (ed, e) {
                    if (e.keyCode !== 8 && e.keyCode !== 46) {
                        return true;
                    }

                    var range = ed.selection.getRng(true);
                    var node = range.startContainer.nodeType === 3 ? range.startContainer.parentNode : range.startContainer;

                    if (isCursorInNestedElementContainingSoloBr(range)
                        && (e.keyCode === 8 ? !$(node).is("li") : true) /* LI and keyCode 8 is handled by another handler */) {
                        return tinymce.dom.Event.cancel(e);
                    }

                    return true;
                });

                function isCursorInNestedElementContainingSoloBr(range) {
                    if (!range.collapsed) {
                        return false;
                    }

                    var node = range.startContainer.nodeType === 3 ? range.startContainer.parentNode : range.startContainer;

                    return isCursorInMostNestedElement(range) && node.childNodes.length === 1 && $(node.firstChild).is("br");
                }
            })();

            /**
             * Pressing delete when inside a bullet item inside a table cell should remove the bullet item.
             *
             * Currently, if you are in a placeholder, hitting delete removes the whole placeholder including the bullet.
             *
             * Also, if you are inside a table cell in a normal table, hitting delete will not remove the bullet but just
             * move the cursor to the previous cell.
             *
             * <table ...>
             *     ...
             *     <td>
             *         <p>
             *             <ul><li>CURSOR HERE<br/></li></ul>
             *         </p>
             *     </td>
             *     ...
             * </table>
             *
             * This does not handle nested LI elements intentionally (as we would prefer to allow the user to unindent in this scenario)
             */
            (function () {
                tinymce.isWebKit && registerKeyListener(function (ed, e) {
                    if (e.keyCode !== 8) {
                        return true;
                    }

                    if (isCursorInsideMacroPlacholderInsideListItemContainingSoloBr(ed.selection.getRng(true))) {
                        ed.execCommand("Outdent");
                        return tinymce.dom.Event.cancel(e);
                    }

                    return true;
                });

                function isCursorInsideMacroPlacholderInsideListItemContainingSoloBr(range) {
                    if (!range.collapsed) {
                        return false;
                    }

                    var node = range.startContainer.nodeType === 3 ? range.startContainer.parentNode : range.startContainer;

                    return range.startOffset === 0 && $(node).is(".wysiwyg-macro-body > ul > li") && node.childNodes.length === 1 && $(node.firstChild).is("br");
                }
                t._isCursorInsideMacroPlacholderInsideListItemContainingSoloBr = isCursorInsideMacroPlacholderInsideListItemContainingSoloBr;
            })();

            /**
             * Webkit removes the whole table-based placeholder when its body only contains the following:
             *
             * <p>CURSOR HERE<br/></p>
             * <p><br/></p>
             *
             * And the user hits delete
             */
            (function () {
                tinymce.isWebKit && registerKeyListener(function(ed, e) {
                    if (e.keyCode !== 46) {
                        return true;
                    }

                    var range = ed.selection.getRng(true);
                    var node = range.startContainer.nodeType === 3 ? range.startContainer.parentNode : range.startContainer;
                    var $node = $(node);

                    if (isCursorInFirstParagraphWhenThereAreTwoEmptyParagraphs(range)) {
                        var nextSibling = node.nextSibling;
                        $node.remove();
                        ed.selection.select(nextSibling, true);

                        return tinymce.dom.Event.cancel(e);
                    }
                });

                function isCursorInFirstParagraphWhenThereAreTwoEmptyParagraphs(range) {
                    var node = range.startContainer.nodeType === 3 ? range.startContainer.parentNode : range.startContainer;
                    var $node = $(node);

                    return range.startOffset === 0
                        && nodeContainsSoloBrElementAndMatchesSelector(node, "p, pre")
                        && $node.parent().is("td.wysiwyg-macro-body")
                        && !node.previousSibling
                        && node.nextSibling
                        && nodeContainsSoloBrElementAndMatchesSelector(node.nextSibling, "p, pre");
                }
                t._isCursorInFirstParagraphWhenThereAreTwoEmptyParagraphs = isCursorInFirstParagraphWhenThereAreTwoEmptyParagraphs;
            })();

            /**
             * Webkit removes the whole table-based placeholder when its body only contains the following:
             *
             * <p><br/></p>
             * <p>CURSOR HERE<br/></p>
             *
             * And the user hits backspace.
             */
            (function () {
                tinymce.isWebKit && registerKeyListener(function(ed, e) {
                    if (e.keyCode !== 8) {
                        return true;
                    }

                    var range = ed.selection.getRng(true);
                    var node = range.startContainer.nodeType === 3 ? range.startContainer.parentNode : range.startContainer;
                    var $node = $(node);

                    if (isCursorInSecondParagraphWhenThereAreTwoEmptyParagraphs(range)) {
                        var previousSibling = node.previousSibling;
                        $node.remove();
                        ed.selection.select(previousSibling, true);

                        return tinymce.dom.Event.cancel(e);
                    }
                });

                function isCursorInSecondParagraphWhenThereAreTwoEmptyParagraphs(range) {
                    var node = range.startContainer.nodeType === 3 ? range.startContainer.parentNode : range.startContainer;
                    var $node = $(node);

                    return range.startOffset === 0 && nodeContainsSoloBrElementAndMatchesSelector(node, "p, pre")
                        && $node.parent().is("td.wysiwyg-macro-body")
                        && !node.nextSibling // is this the last child
                        && node.previousSibling
                        && !node.previousSibling.previousSibling // the previousSibling has not previousSibling, meaning this will determine whether the previousSibling is in fact the first child
                        && nodeContainsSoloBrElementAndMatchesSelector(node.previousSibling, "p, pre");
                }
                t._isCursorInSecondParagraphWhenThereAreTwoEmptyParagraphs = isCursorInSecondParagraphWhenThereAreTwoEmptyParagraphs;
            })();

            /**
             * Do not allow a single <p><br/></p> or <pre><br/></pre> inside a macro placeholder body to be deleted by backspace or delete
             */
            (function () {
                (tinymce.isWebKit || tinymce.isGecko) && registerKeyListener(function (ed, e) {
                    if (e.keyCode !== 8 && e.keyCode !== 46) {
                        return true;
                    }

                    if (isCursorInSoloParagraphOrPreInsidePlaceholder(ed.selection.getRng(true))) {
                        return tinymce.dom.Event.cancel(e);
                    }
                });

                function isCursorInSoloParagraphOrPreInsidePlaceholder(range) {
                    if (!range.collapsed) {
                        return false;
                    }

                    var node = range.startContainer.nodeType === 3 ? range.startContainer.parentNode : range.startContainer;
                    var $node = $(node);

                    if (!node || range.startOffset > 0) {
                        return false;
                    }

                    /**
                     * this will remove any empty text nodes that proceed the BR element (I've personally encountered when I outdented a single bullet item inside a placeholder)
                     * Empty text nodes interfere with the :only-child check that we will perform in the rest of the logic in this function
                     */
                    tinymce.confluence.NodeUtils.normalize(node);

                    return node && range.startOffset === 0
                        && nodeContainsSoloBrElementAndMatchesSelector(node, "p, pre")
                        && $node.parent().is("td.wysiwyg-macro-body")
                        && !node.previousSibling && !node.nextSibling; // p or pre is the only child
                }
                t._isCursorInSoloParagraphOrPreInsidePlaceholder = isCursorInSoloParagraphOrPreInsidePlaceholder;
            })();

            /**
             * Webkit deletes the whole table-based placeholder when the last character or element (excluding the BR) is removed via
             * backspace or delete.
             *
             * Firefox inserts a <BR/> element outside of the P when the last character is deleted. That is you get:
             *
             * <td>
             *     <p><br/></p>
             *     <br/>
             * </td>
             *
             * This is problematic markup and its confusing behaviour.
             *
             * The following code checks for the condition where this is only one text node or one element left
             * and manually performs the removal of the node and cancels the backspace or delete key event (hence bypassing the
             * default browser handling which causes the above mentioned problems).
             */
            (function () {

                function isTrailingBR(node) {
                    return node && node.parentNode && node.nodeName === "BR" && node === node.parentNode.lastChild;
                }

                (tinymce.isWebKit || tinymce.isGecko) && registerKeyListener(function(ed, e) {
                    if (e.keyCode !== 8 && e.keyCode !== 46) {
                        return true;
                    }

                    var range = ed.selection.getRng(true);
                    var node = range.startContainer.nodeType === 3 ? range.startContainer.parentNode : range.startContainer;

                    // Don't run if the cursor isn't inside a macro.
                    if (!$(node).closest(".wysiwyg-macro-body").size()) {
                        return true;
                    }

                    tinymce.confluence.NodeUtils.normalize(node);

                    if ((e.keyCode === 46 && (isCursorBehindOnlyCharacterInNestedElement(range) || isCursorBehindOnlyChildInNestedElement(range)))
                        || (e.keyCode === 8 && (isCursorAfterOnlyCharacterInNestedElement(range) || isCursorAfterOnlyChildInNestedElement(range)))) {

                        if (node.lastChild && !$(node.lastChild).is("br")) {
                            $(node).append("<br/>"); // this is required so we have a place to put the cursor
                        }

                        $(node.firstChild).remove();
                        ed.selection.select(node, 1);

                        return tinymce.dom.Event.cancel(e);
                    }

                    return true;
                });

                function isCursorBehindOnlyCharacterInNestedElement(range) {
                    if (!range.collapsed) {
                        return false;
                    }

                    var node = range.startContainer;

                    return node && range.startOffset === 0
                        && node.nodeType === 3
                        && isCursorInMostNestedElement(range)
                        && node.nodeValue.length === 1
                        && !node.previousSibling && (!node.nextSibling || isTrailingBR(node.nextSibling));
                }

                function isCursorAfterOnlyCharacterInNestedElement(range) {
                    if (!range.collapsed) {
                        return false;
                    }

                    var node = range.startContainer;

                    return node && range.startOffset === 1
                        && node.nodeType === 3
                        && isCursorInMostNestedElement(range)
                        && node.nodeValue.length === 1
                        && !node.previousSibling && (!node.nextSibling || isTrailingBR(node.nextSibling));
                }

                function isCursorBehindOnlyChildInNestedElement(range) {
                    if (!range.collapsed) {
                        return false;
                    }

                    var node = range.startContainer;

                    return node && range.startOffset === 0
                        && node.nodeType === 1
                        && node.childNodes.length === 1
                        && isCursorInMostNestedElement(range)
                        && !node.previousSibling && !node.nextSibling;
                }

                function isCursorAfterOnlyChildInNestedElement(range) {
                    if (!range.collapsed) {
                        return false;
                    }

                    var node = range.startContainer;

                    return node && range.startOffset === 1
                        && node.nodeType === 1
                        && node.childNodes.length === 1
                        && isCursorInMostNestedElement(range)
                        && !node.previousSibling && !node.nextSibling;
                }

                t._isCursorBehindOnlyCharacterInNestedElement = isCursorBehindOnlyCharacterInNestedElement;
                t._isCursorAfterOnlyCharacterInNestedElement = isCursorAfterOnlyCharacterInNestedElement;
                t._isCursorBehindOnlyChildInNestedElement = isCursorBehindOnlyChildInNestedElement;
                t._isCursorAfterOnlyChildInNestedElement = isCursorAfterOnlyChildInNestedElement;
            })();

            (function () {
                tinymce.isWebKit && registerKeyListener(function(ed, e) {
                    if (e.keyCode !== 8 && e.keyCode !== 46) {
                        return true;
                    }

                    var range = ed.selection.getRng(true);
                    if (isMacroBodySelected(range)) {
                        var $macroBody = $(range.startContainer).closest(".wysiwyg-macro-body");

                        if ($macroBody.length > 0) {
                            var isPlainTextMacro = $($macroBody[0].firstChild).is("pre"); //plain text macros will always have one or more PRE elements

                            ed.undoManager.add();
                            $macroBody.empty();

                            var $container;
                            if (isPlainTextMacro) {
                                $container = $("<pre><br/></pre>").appendTo($macroBody);
                            } else {
                                $container = $("<p><br/></p>").appendTo($macroBody);
                            }

                            ed.selection.select($container[0], true);

                            return tinymce.dom.Event.cancel(e);
                        }
                    }

                    return true;
                });

                function isMacroBodySelected(range) {
                    if (range.collapsed) {
                        return false;
                    }

                    var isFirstChild = function (n) {
                        return !n.previousSibling;
                    };
                    var isLastChild = function (n) {
                        return !n.nextSibling;
                    };

                    return range.startOffset === 0
                        && isMacroBodyElementReachableViaSelector(range.startContainer, isFirstChild)
                        && isOffsetAtEndOfNode(range.endContainer, range.endOffset)
                        && isMacroBodyElementReachableViaSelector(range.endContainer, isLastChild);
                }
                t._isMacroBodySelected = isMacroBodySelected;

                /**
                 * Returns true if the macro body element can be reached from the specified node.
                 *
                 * SPECIAL CASE:
                 *
                 * Return true if the specified node "is" the macro body element.
                 *
                 * param node the node
                 * param f function used to test parent nodes on the way to the macro body element
                 */
                function isMacroBodyElementReachableViaSelector(node, f) {
                    if (!node) {
                        return false;
                    }

                    if ($(node).is(".wysiwyg-macro-body")) {
                        return true;
                    }

                    do {
                        if (!f(node)) {
                            return false;
                        }
                        node = node.parentNode;
                    } while (node && !$(node).is(".wysiwyg-macro-body"));

                    return true;
                }

                function isOffsetAtEndOfNode(node, offset) {
                    if (!node) {
                        return false;
                    }

                    if (node.nodeType === 3) {
                        return offset === node.nodeValue.length;
                    } else if (node.nodeType === 1) {
                        if (node.childNodes.length === 1 && $(node.firstChild).is("br")) {
                            return offset === 0; // SPECIAL CASE: Return true if the endContainer is a node containing a BR like <XXX><br/></XXX>, where the endOffset is 0.
                        } else {
                            return offset === node.childNodes.length;
                        }
                    } else {
                        return false;
                    }
                }

            })();

            /**
             * Prevent the delete key when the cursor is:
             * ... miscellaneous content ...
             * <p>CURSOR HERE<br/></p>
             * ... placeholder markup ...
             *
             * If we don't, webkit will "select" the placeholder for a split second (you will see light blue cover
             * face of the placeholder, and then the selection will go away and the cursor is no where to be seen.
             * Focus is lost from the editor.
             */
            (function () {
                tinymce.isWebKit && registerKeyListener(function (ed, e) {
                    if (e.keyCode === 46 && isCursorInEmptyParagraphPrecedingPlaceholder(ed.selection.getRng(true))) {
                        return tinymce.dom.Event.cancel(e);
                    }
                });

                function isCursorInEmptyParagraphPrecedingPlaceholder(range) {
                    if (!range.collapsed) {
                        return false;
                    }

                    var node = range.startContainer.nodeType === 3 ? range.startContainer.parentNode : range.startContainer;
                    var $node = $(node);

                    return range.startOffset === 0 && nodeContainsSoloBrElementAndMatchesSelector(node, "p") && $node.next().is("table");
                }
                t._isCursorInEmptyParagraphPrecedingPlaceholder = isCursorInEmptyParagraphPrecedingPlaceholder;
            })();

            // CONFDEV-4248
            (function() {
                tinymce.isWebKit && tinymce.isMac && registerKeyListener(function(ed, e) {
                    var currentRange = ed.selection.getRng();

                    if ((e.metaKey || e.ctrlKey) && e.shiftKey && e.keyCode === VK.LEFT) {
                        var range = _selectTillStart(currentRange);
                        if (range !== currentRange) {
                            ed.selection.setRng(range);
                            return tinymce.dom.Event.cancel(e);
                        }
                    }
                });

                function _findTextContainer(node) {
                    if (!node || $(node.parentNode).is(".wysiwyg-macro td")) {
                        return null;
                    }
                    if ($(node.parentNode).is("p")) {
                        return node.parentNode;
                    }

                    return _findTextContainer(node.parentNode);
                }

                function _findFirstTextNode(node) {
                    if (!node) {
                        return null;
                    }
                    if (node.nodeType === 3) {
                        return node;
                    }

                    return _findFirstTextNode(node.firstChild) || _findFirstTextNode(node.nextSibling);
                }

                function _findNearestPrecedingBr(node) {
                    if (!node || node.nodeName === "PRE" || node.nodeName === "TD") {
                        return null;
                    }
                    if (node.nodeName === "BR") {
                        return node;
                    }

                    return _findNearestPrecedingBr(node.previousSibling) || _findNearestPrecedingBr(node.parentNode);
                }

                /**
                 * webkit, at the time of writing, selects too much when a user hits CMD+SHIFT+LEFT inside the macro body.
                 * Instead of selecting just text, webkit will also include the placeholder in the selection.
                 * If the user deletes, the whole placeholder is deleted instead.
                 *
                 * To resolve this, we modify the start of the range on the fly.
                 * If there are any BR tags preceding the cursor, we want to fall back to the browser's default handling.
                 */
                function _selectTillStart(range) {
                    var firstTextNode;
                    var $pre;

                    if ($(range.commonAncestorContainer).closest(".wysiwyg-macro td").length > 0) {
                        if (!_findNearestPrecedingBr(range.startContainer)) {
                            firstTextNode = _findFirstTextNode(_findTextContainer(range.startContainer));
                        }
                    }

                    if (($pre = $(range.commonAncestorContainer).closest(".wysiwyg-macro td > pre")).length > 0) {
                        if (!_findNearestPrecedingBr(range.startContainer)) {
                            firstTextNode = _findFirstTextNode($pre[0]);
                        }
                    }

                    if (firstTextNode) {
                        range = range.cloneRange();
                        range.setStart(firstTextNode, 0);
                    }

                    return range;
                }

                t._selectTillStart = _selectTillStart; // expose for testing
            })();

            (function () {
                ed.onKeyDown.add(function(ed, e) {
                    if (e.keyCode !== tinymce.VK.TAB) {
                        return;
                    }

                    var range = ed.selection.getRng(1);
                    var node = range.startContainer.nodeType === 3 ? range.startContainer.parentNode : range.startContainer;

                    if ($(node).is(".wysiwyg-macro-body > pre")) {
                        ed.undoManager.beforeChange();
                        ed.undoManager.add();

                        var tabSpace = ed.getDoc().createTextNode('\t');
                        range.insertNode(tabSpace);
                        ed.selection.setCursorLocation(tabSpace, 1);

                        ed.undoManager.add();

                        return tinymce.dom.Event.prevent(e);
                    }
                });
            })();
        },

        _setTinymceControlsState: function (ed, state) {
            tinymce.each(ed.controlManager.controls, function(c) {
                c.setDisabled(!state);
            });
        },

        getInfo : function() {
            return {
                longname : 'Macro Place Holder plugin',
                author : 'Atlassian',
                authorurl : 'http://www.atlassian.com',
                version : "1.0"
            };
        }
    };
});

require('confluence/module-exporter')
    .safeRequire('confluence-editor/tinymce3/plugins/macroplaceholder/editor_plugin_src', function(MacroPlaceHolderPlugin) {
        var tinymce = require('tinymce');
        tinymce.create('tinymce.plugins.MacroPlaceHolderPlugin', MacroPlaceHolderPlugin);
        tinymce.PluginManager.add('macroplaceholder', tinymce.plugins.MacroPlaceHolderPlugin);
    });
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/insertwiki/editor_plugin_src.js' */
define('confluence-editor/tinymce3/plugins/insertwiki/editor_plugin_src', [
    'jquery',
    'ajs',
    'confluence/legacy',
    'tinymce',
    'underscore',
    'confluence/api/constants'
], function(
    $,
    AJS,
    Confluence,
    tinymce,
    _,
    CONSTANTS
) {
    "use strict";

    // we flipped the switch, so if the key is found it means that the feature is DISABLED
    var WIKI_MARKDOWN_DIALOG_ENABLED = !AJS.DarkFeatures.isEnabled("editor.insert-wiki-markdown");

    // supported wiki types and their respective rest apis.
    var SUPPORTED_WIKI_TYPES = {
        DEFAULT: null,
        HELP_REST_API: AJS.contextPath() + "/plugins/tinymce/helplink.action",
        WIKI: {
            CONFLUENCE: {
                val: 'CONFLUENCE',
                label: "Confluence wiki",
                helpLink: "help.insert.wiki.markup",
                restApi: '/rest/tinymce/1/wikixhtmlconverter'
            },
            MARKDOWN: {
                val: 'MARKDOWN',
                label: "Markdown",
                helpLink: "help.insert.wiki.markup.markdown",
                restApi: '/rest/tinymce/1/markdownxhtmlconverter'
            }
        }
    };

    var localStorageCacheManager = new Confluence.localStorageCacheManager("insert-wiki-markup-dialog");

    return {
        init : function(ed, url) {
            // Register commands
            ed.addCommand('InsertWikiMarkup', function() {

                var settings = {
                    dialog: {
                        id: "insert-wiki-markup-dialog",
                        content : WIKI_MARKDOWN_DIALOG_ENABLED ?
                                Confluence.Templates.InsertWiki.wikiMarkupDialog() :
                                Confluence.Templates.InsertWiki.originalDefaultTempWikiMarkupDialog(),
                        width : 980,
                        height : 500,
                        popup : false,
                        name : "confluence.conf_wikimarkup_desc"
                    },
                    markupEditId: 'insert-wiki-textarea',
                    previewAreaId: 'insert-wiki-textarea-preview',
                    selectionMenuId: 'wiki-parser-selection-tool',
                    serverRequestTimer: 300,
                    entityId :  AJS.Meta.get("content-id"),
                    spaceKey : AJS.Meta.get("space-key")
                };

                // set confluence wiki markup as the default parser or get a previously selected user renderer.
                SUPPORTED_WIKI_TYPES.DEFAULT = SUPPORTED_WIKI_TYPES.WIKI[localStorageCacheManager.get("parser") || "CONFLUENCE"];

                var cachedElement = {

                    /**
                     * Caches jQuery elements selector.
                     *
                     * eg:
                     * cachedElement.getElement('#selector');
                     *
                     * @param selector
                     * @returns {*}
                     */
                    getElement: function(selector) {
                        cachedElement[selector] =  cachedElement[selector] || $(selector);

                        return cachedElement[selector];
                    }
                };

                // the body reference on the preview iframe.
                var $previewIframeBody = null;


                /**
                 * Creates the wiki selector menu from the template and returns reference to it
                 *
                 * @param parentId
                 * @returns {*|HTMLElement} - the select jquery html reference
                 */
                var createWikiSelectorMenu = function(parentId) {

                    var wikiSelectorMenuTemplate = $(Confluence.Templates.InsertWiki.wikiParserSelector(SUPPORTED_WIKI_TYPES));
                    var menuBar =  cachedElement.getElement("#insert-wiki-insert-title");

                    menuBar.append(wikiSelectorMenuTemplate);

                    return cachedElement.getElement('#'+settings.selectionMenuId);
                };


                /**
                 * Creates the preview area by adding a new iframe with the same resources as the editor.
                 *
                 * @param parentId
                 * @returns {*|HTMLElement} - the iframe body reference
                 */
                var createPreviewArea = function(parentId) {

                    // getting resources from the editor
                    var context = $("#wysiwygTextarea_ifr").contents().find("head").html();
                    var template = Confluence.Templates.InsertWiki.previewWikiIframeContent();
                    var iframe = $("<iframe tabindex='-1' id='insert-wiki-markup-preview' />");
                    var iframeRef;
                    var doc;
                    var body;

                    // add iframe to the preview area
                    cachedElement.getElement("#"+parentId).append(iframe);

                    // once the iframe is added to the dom we can refer to it
                    iframeRef = iframe.contents();

                    // get the correct reference for 'document'.
                    doc = iframeRef[0];

                    // write the html template to the document
                    doc.open();
                    doc.write(template);
                    doc.close();

                    // add html Resources to the iFrame head element.
                    iframeRef.find("head").html(context);

                    // store the body reference
                    $previewIframeBody = iframeRef.find("body");
                };

                /**
                 * Return the current active parser
                 *
                 * @returns {string|string}
                 */
                var getSelectedParser = function() {
                    var optionMenu = cachedElement.getElement('#'+settings.selectionMenuId);
                    var wikiKey = optionMenu.length ? optionMenu.val() : SUPPORTED_WIKI_TYPES.DEFAULT.val;

                    return wikiKey;
                };


                /**
                 * Return the API rest interface for the specified wiki type, defaults to confluence wiki.
                 * It will get the right wiki format type form the menu. If the menu doesn't exist, it will user
                 * the default value.
                 *
                 * @returns {string|string}
                 */
                var getParserRestApi = function() {
                    return CONSTANTS.CONTEXT_PATH + SUPPORTED_WIKI_TYPES.WIKI[getSelectedParser()].restApi;
                };


                /**
                 * Get the converted text form the conversion service.
                 *
                 * @param option.textToConvert - Text to convert
                 * @param option.API - Conversion service full URL
                 * @param option.successCallback
                 * @param option.errorCallback
                 */
                var getConvertedText = function(option) {

                    option = option || {};

                    if(option.setBusy) {
                        ed.windowManager.setBusy(settings.dialog.id, true);
                    }

                    var conversionData = {
                        wiki : option.textToConvert,
                        entityId :  settings.entityId,
                        spaceKey : settings.spaceKey
                    };

                    $.ajax( {
                        type : "POST",
                        contentType : "application/json; charset=utf-8",
                        url: option.API,
                        data : $.toJSON(conversionData),
                        dataType : "text", // if this is switched back to json be sure to use "text json". See CONFDEV-4799 for details.
                        success : option.successCallback,
                        error: option.errorCallback || function(e){
                            AJS.logError(e);
                        },
                        timeout: 7500
                    });
                };


                /**
                 * Enables the property panel for image manipulation by giving a class to images.
                 *
                 * @param {string} data
                 * @returns {string} transformed data
                 */
                var enableImageProperyPanel = function(originalData) {
                    var $data;
                    var transformedData;

                    $data = $(originalData);
                    $data.find("img").addClass("confluence-embedded-image"); // CONFDEV-20109 - Enabling the property panel by post processing.

                    // We need now to convert it back to a string
                    // NOTE: the reason why we don't use .outerHTML is because it would only work for a single node and not for
                    // a collection of nodes example "</p>foo</p><h1>bar</h1>" since we can't call the outerHTML of that.
                    transformedData = $('<div>').append($data.clone()).html();

                    return transformedData;
                };


                /**
                 * Insert the transformed content into the editor itself and close window
                 *
                 * @param data
                 */
                var insertToEditorAndCloseWindow = function(data) {

                    var dialogId = settings.dialog.id;
                    var parser = getSelectedParser();

                    ed.windowManager.setBusy(dialogId, false);

                    tinymce.EditorManager.activeEditor.windowManager.close(dialogId);

                    if(WIKI_MARKDOWN_DIALOG_ENABLED) {
                        // Track how many users are using wiki/markdown.
                        AJS.trigger("analytics", {name: "insert-wiki-markup-dialog." + parser});

                        if(parser === "MARKDOWN") {
                            data = enableImageProperyPanel(data);
                        }
                    }

                    ed.execCommand('mceInsertContent', false, data);
                    splitParas(ed);
                };


                /**
                 * Handle error by displaying a inline dialog message when the server returns an invalid response or
                 * the request times out.                 *
                 *
                 * @param XMLHttpRequest
                 * @param textStatus
                 * @param errorThrown
                 */
                var erroredConversion = function(XMLHttpRequest, textStatus, errorThrown) {
                    ed.windowManager.setBusy(settings.dialog.id, false);

                    var errorMessage = {
                        warningMessage: tinymce.EditorManager.activeEditor.getLang("confluence.conf_wikimarkup_errors"),
                        exceptionMessage: textStatus === "timeout" ?
                                tinymce.EditorManager.activeEditor.getLang("confluence.conf_wikimarkup_timeout") :
                        AJS.escapeHtml(textStatus) + " : " + AJS.escapeHtml(errorThrown)
                    };

                    var errorTemplate = Confluence.Templates.InsertWiki.wikiErrorSubDialog(errorMessage);

                    tinymce.EditorManager.activeEditor.windowManager.alert(errorTemplate);
                };


                /**
                 * Updates the preview with the parsed result from the text response from the rest conversion API.
                 * In case there is an empty value on the markupEditArea than update the preview accordingly without
                 * doing a server an unnecessary request.
                 *
                 */
                var updatePreview = function() {
                    var renderElement = cachedElement.getElement("#"+settings.markupEditId);
                    var text = renderElement.val();
                    if(!$.trim(text)) {
                        $previewIframeBody.html(text);
                    } else { // we only try to parse if we have non empty values
                        getConvertedText({
                            API: getParserRestApi(),
                            textToConvert: text,
                            successCallback: function(data) {
                                $previewIframeBody.html(data);
                            },
                            errorCallback: function() {
                                $previewIframeBody.html(renderElement.val());
                            }
                        });
                    }
                };

                /**
                 * Adds the appropriate hash for the helpLink of the current selected parser.
                 * @param {String} selectedParser - Key value for the current selected parser.
                 */
                var updateHelpLink = function(selectedParser) {
                    var helpLinkElement = cachedElement.getElement('#'+settings.dialog.id).find('.dialog-help-link');
                    var helpLink = SUPPORTED_WIKI_TYPES.WIKI[selectedParser].helpLink;

                    helpLinkElement.load(SUPPORTED_WIKI_TYPES.HELP_REST_API, { linkUrlKey : helpLink });
                };

                /**
                 * Add to Storage user selected parser and also updated preview.
                 */
                var updateParser = function() {
                    var selectedParser = getSelectedParser();

                    localStorageCacheManager.put("parser", selectedParser);
                    updateHelpLink(selectedParser);
                    updatePreview();
                };


                /**
                 * The problem is that we currently insert the HTML we generate straight
                 * inside a P tag (where the cursor is currently in).
                 *
                 * refer to CONFDEV-1548.
                 *
                 * @param editor
                 * @param params
                 */
                var splitParas = function(editor, params) {
                    tinymce.each(editor.dom.select('p > p'), function (p) {
                        try {
                            editor.dom.split(p.parentNode, p);
                        } catch (ex) {
                            // IE can sometimes fire an unknown runtime error so we just ignore it
                            AJS.logError('insertwikimarkup - splitParas()', ex);
                        }
                    });
                };

                // Creates the main dialog
                ed.windowManager.open(settings.dialog, {
                    buttons : [{
                        label : "confluence.conf_insert_button_title",
                        action : function() {
                            getConvertedText({
                                API: getParserRestApi(),
                                successCallback: insertToEditorAndCloseWindow,
                                errorCallback: erroredConversion,
                                textToConvert: cachedElement.getElement("#"+settings.markupEditId).val(),
                                setBusy: true
                            });
                        }
                    }],
                    plugin_url : url,
                    helpLink : SUPPORTED_WIKI_TYPES.DEFAULT.helpLink,
                    hintText : "confluence.conf_wikimarkup_hint",
                    cssClass : "insert-wiki-markup-panel"
                });

                if(WIKI_MARKDOWN_DIALOG_ENABLED) {

                    // the preview area need to be created as an iframe in order to share same resources as the editor.
                    createPreviewArea(settings.previewAreaId);

                    // create the selection menu and attach events to update the preview
                    createWikiSelectorMenu(settings.dialog.id).on('change', updateParser);

                    // add events to the markupEdit area to update the preview
                    cachedElement.getElement('#'+settings.markupEditId).on('keydown', _.debounce(updatePreview, settings.serverRequestTimer));
                }
            });

            ed.addButton('insertwikimarkup', {title : 'confluence.conf_wikimarkup_desc', cmd : 'InsertWikiMarkup'});

        },

        getInfo : function() {
            return {
                longname : 'InsertWikiMarkip',
                author : 'Atlassian',
                authorurl : 'http://www.atlassian.com',
                infourl : 'http://www.atlassian.com/',
                version : "1.1"
            };
        }
    };
});

require('confluence/module-exporter')
        .safeRequire('confluence-editor/tinymce3/plugins/insertwiki/editor_plugin_src', function(InsertWikiMarkupPlugin) {
            var tinymce = require('tinymce');

            tinymce.create('tinymce.plugins.InsertWikiMarkupPlugin', InsertWikiMarkupPlugin);

            // Register plugin
            tinymce.PluginManager.add('insertwikimarkup', tinymce.plugins.InsertWikiMarkupPlugin);
        });

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/propertypanel/editor_plugin_src.js' */
/**
 * Confluence property panels for images and links.
 */
define('confluence-editor/tinymce3/plugins/propertypanel/editor_plugin_src', [
    'jquery',
    'ajs',
    'document',
    'tinymce'
], function(
    $,
    AJS,
    document,
    tinymce
) {
    "use strict";

    var handlers = [];
    AJS.bind("add-handler.property-panel", function (e, data) {
        data && handlers.push(data);
    });

    return {
        init : function(ed) {
            /*
             A single selection event might have several contexts:
             - No current property panel
             -- Selected element that DOESN'T fire a panel
             -- Selected element that DOES fire a panel
             - Current property panel
             -- Selected element that DOESN'T fire a panel
             -- Selected element that DOES fire a panel
             --- Selected the anchor of the CURRENT property panel
             --- Selected a different element that DOES fire a panel
             ---- Selected a different element that DOES fire a panel of the SAME type
             ---- Selected a different element that DOES fire a panel of a DIFFERENT type

             To begin with it will be the responsibility of the element-specific code (img/a/etc) to determine the context;
             if enough overlap between IMG and A is found it can be centralized here.
             */
            AJS.debug("init property panel plugin");
            var boundElement;
            var isToolBarShowing = function() {
                return !!$(".toolbar-contextual").length;
            };
            var isElementInTable = function(el) {
                return !!el.closest("table:not(.wysiwyg-macro,.editor-inline-macro)").length;
            };
            var isRightClick = function (e) {
                if (e.type != "click") { return false; }
                if (e.which) { return (e.which === 3); }
                if (e.button) { return (e.button == 2); }
            };
            var getClosestAnchor = function($element) {
                if ($element.is("img")) {
                    return $element[0];
                }

                // WTF - everything is pluggable but this...
                var closest = $element.closest("a,table,.wysiwyg-macro,.editor-inline-macro,.text-placeholder");
                if (closest.length) {
                    return closest[0];
                }

                return "";
            };
            var handler = function (ed, e, focusedEl) {
                var data = {
                    focusedEl: focusedEl,
                    focusedNodeName: focusedEl.nodeName && focusedEl.nodeName.toLowerCase(),
                    ed: ed,
                    e: $.extend({},e) //lookds odd, but is needed for what appears to be a GC bug in ie8/9
                };
                var containerEl = getClosestAnchor($(focusedEl));
                var isInTable = isElementInTable($(focusedEl));
                var toolbarActive = isToolBarShowing();
                data.containerEl = containerEl;

                AJS.trigger("user-blurred-rte-element", data);
                if (containerEl && !isRightClick(e) && !isPanelShowing() &&  AJS.Confluence.PropertyPanel.shouldCreate) {
                    for (var i = 0, len = handlers.length; i < len; i++) {
                        if (handlers[i].canHandleElement($(containerEl))) {
                            if(toolbarActive || !isInTable) {
                                return handlers[i].handle(data);
                            }
                            //this now means that you get no return.
                            //if this becomes a problem we could use a promise
                            (function(handler) {
                                $(document).bind("shown.contextToolbar",function(e) {
                                    handler.handle(data);
                                });
                            })(handlers[i]);
                        }
                    }
                }
            };
            var isPanelShowing = function () {
                return !!AJS.Confluence.PropertyPanel.current;
            };

            /* All versions of IE apply drag/resize handles
             * (those white dots along the edges of elements)
             * to select elements in contentEditable regions that prevent the normal click
             * event from propagating.
             * Here, we're going to work around that fact.
             */
            if(tinymce.isIE) {
                ed.onMouseDown.add(function(ed, e) {
                    // Avoid memory leaks; kill any previous bound events.
                    // Bound to a custom namespace to avoid clobbering other click events.
                    boundElement && boundElement.unbind('mouseup.IEDragHandlesWorkaround');
                    boundElement = $(e.target);
                    // IE's drag/resize handles are applied to tables and images.
                    boundElement.filter("img, table").bind('mouseup.IEDragHandlesWorkaround', function() {
                        handler(ed, e, e.target);
                    });
                });
            }

            AJS.bind("trigger.property-panel", function(e, data) {
                handler(ed, e, data.elem);
            });

            ed.onClick.add(function(ed, e) {
                handler(ed, e, e.target);
            });
            ed.onKeyUp.addToTop(function (ed,e,o) {
                if (e.keyCode === 27) { return; } // ignore esc, it's handled by keydown listener
                handler(ed, e, ed.selection.getNode());
            });
            ed.onContextMenu.add(function() { // destroy property panel when a context menu is shown
                AJS.Confluence.PropertyPanel.destroy();
            });

            AJS.bind("user-blurred-rte-element", function (e, data) {
                if (isPanelShowing()) {
                    if (!data.containerEl || AJS.Confluence.PropertyPanel.current.hasAnchorChanged(data.containerEl)) {
                        AJS.Confluence.PropertyPanel.destroy();
                    } else {
                        AJS.trigger("same-anchor.property-panel");
                    }
                }
            });
            AJS.bind("created.property-panel", function (e, data) {
                // Need to defer (for IE) and activating the property panel can cause an initial scroll event to fire that we want to miss.
                setTimeout(function() {
                    AJS.Rte.bindScroll("property-panel", function (e) {
                        AJS.Confluence.PropertyPanel.destroy();
                    });
                }, 0);
                $(ed.getDoc()).bind("keydown.property-panel.escape", function (e) {
                    if (e.keyCode === 27 && isPanelShowing()) { // esc key
                        AJS.Confluence.PropertyPanel.destroy();
                    }
                });
            });
            AJS.bind("destroyed.property-panel", function (e, data) {
                AJS.Rte.unbindScroll("property-panel");
                $(ed.getDoc()).unbind("keydown.property-panel.escape");
            });
        },

        getInfo : function() {
            return {
                longname : 'Image, Link and Macro Property Panels',
                author : 'Atlassian',
                authorurl : 'http://www.atlassian.com',
                version : tinymce.majorVersion + "." + tinymce.minorVersion
            };
        }
    };
});

require('confluence/module-exporter')
        .safeRequire('confluence-editor/tinymce3/plugins/propertypanel/editor_plugin_src', function(PropertyPanelPlugin) {
            var tinymce = require('tinymce');

            tinymce.create('tinymce.plugins.PropertyPanel', PropertyPanelPlugin);

            // Register plugin
            tinymce.PluginManager.add('propertypanel', tinymce.plugins.PropertyPanel);
        });
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/confmonospace/editor_plugin_src.js' */
/*
 * Monospace formatting in the Editor "More Menu"
 */

define('confluence-editor/tinymce3/plugins/confmonospace/editor_plugin_src', [
    'tinymce'
], function(
    tinymce
) {
    "use strict";

    return {
        init : function(ed, url) {
            // Register commands
            ed.addCommand('confMonospace', function() {
                ed.formatter.toggle("monospace", undefined);
            });

            tinymce.activeEditor.onInit.add(function(ed) {
                ed.formatter.register({monospace : {inline : 'code'}});

                ed.editorCommands.addCommands({
                    'confMonospace': function(){
                        return ed.formatter.match('monospace');
                    }
                }, 'state');
            });

            // Register button
            ed.addButton('monospace', {title : 'monospace', cmd : 'confMonospace'});
        },

        getInfo : function() {
            return {
                longname : 'Monospace Formatting',
                author : 'Atlassian',
                authorurl : 'http://www.atlassian.com',
                version : tinymce.majorVersion + "." + tinymce.minorVersion
            };
        }
    };
});

require('confluence/module-exporter')
        .safeRequire('confluence-editor/tinymce3/plugins/confmonospace/editor_plugin_src', function(ConfMonospacePlugin) {
            var tinymce = require('tinymce');

            tinymce.create('tinymce.plugins.ConfMonospacePlugin', ConfMonospacePlugin);

            // Register plugin
            tinymce.PluginManager.add("confmonospace", tinymce.plugins.ConfMonospacePlugin);
        });
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/propertypanel/js/property-panel-links.js' */
define('confluence-editor/tinymce3/plugins/propertypanel/js/property-panel-links', [
    'ajs',
    'jquery',
    'confluence/legacy',
    'tinymce',
    'window'
], function(
    AJS,
    $,
    Confluence,
    tinymce,
    window
) {
    "use strict";

    // Keep a count of the number of panels opened, so the "Goto location" button always opens the link location in a
    // new named window
    var linkPanelCounter = 0;

    return {
        name : "link",

        canHandleElement : function ($element) {
            return $element.is("a") && $element.attr('href') != '#' && !$element.hasClass('unresolved');
        },

        handle : function(data) {
            var link = data.containerEl;

            var ed = data.ed;
            var getLang = function(key) { return AJS.Rte.getEditor().getLang(key); };
            var options = {
                anchorIframe: AJS.Rte.getEditorFrame()
            };
            // Don't attempt to go to anchors on the edited page - they might not exist yet.
            var gotoDisabled = $(link).attr('href').indexOf('#') === 0;
            var buttons = [{
                className: "link-property-panel-goto-button",
                text: getLang("propertypanel.links_goto"),
                tooltip: gotoDisabled ? getLang("propertypanel.links_goto_disabled_tooltip") : link.href,
                href: link.href,
                disabled: gotoDisabled,
                click: function () {
                    AJS.Confluence.PropertyPanel.destroy();

                    // Give the window a name to help testing, but make sure the name is unique.
                    // Note: IE doesn't allow named windows; just open an unnamed one.
                    var windowName = tinymce.isIE ? "_blank" : "confluence-goto-link-" + AJS.params.pageId + "-" + linkPanelCounter;

                    // mailto links in IE can return null sometimes for window.open
                    // see http://msdn.microsoft.com/en-us/library/ms536651(VS.85).aspx
                    var win = window.open(link.href, windowName);
                    if (win) { win.focus(); }

                }
            }, {
                className: "link-property-panel-edit-button",
                text: getLang("propertypanel.links_edit"),
                tooltip: getLang("propertypanel.links_edit_tooltip"),
                disabled: $(link).hasClass("createlink") || !link.href,
                click: function () {
                    AJS.Confluence.PropertyPanel.destroy();
                    ed.selection.select(link);
                    Confluence.Editor.LinkBrowser.open();
                }
            }, {
                className: "link-property-panel-unlink-button",
                text: getLang("propertypanel.links_unlink"),
                tooltip: getLang("propertypanel.links_unlink_tooltip"),
                click: function () {
                    AJS.Confluence.PropertyPanel.destroy();
                    ed.execCommand("mceConfUnlink", false, link);
                    ed.focus();
                }
            }];

            // trigger event so other plugins can add buttons to link property panel
            var customButtons = [];
            AJS.trigger("link-property-panel-buttons.created", { buttons: customButtons, link: link });
            buttons = buttons.concat(customButtons);

            AJS.Confluence.PropertyPanel.createFromButtonModel(this.name, link, buttons, options);

            linkPanelCounter++;
        }
    };
});

require('confluence/module-exporter').exportModuleAsGlobal('confluence-editor/tinymce3/plugins/propertypanel/js/property-panel-links', 'AJS.Confluence.PropertyPanel.Link', function(PropertyPanelLink) {
    var AJS = require('ajs');

    AJS.bind("init.rte", function() {
        // defer trigger to ensure any listeners have had a chance to load.
        AJS.trigger("add-handler.property-panel", PropertyPanelLink);
    });
});

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/propertypanel/js/property-panel-images.js' */
define('confluence-editor/tinymce3/plugins/propertypanel/js/property-panel-images', [
    'jquery',
    'ajs',
    'tinymce',
    'confluence-editor/utils/tinymce-image-utils',
    'confluence/meta',
    'confluence/legacy',
    'confluence/api/browser',
    'confluence/property-panel'
], function(
    $,
    AJS,
    tinymce,
    TinyMCEImageUtils,
    Meta,
    Confluence,
    Browser,
    PropertyPanel
) {
    "use strict";

    var ImageUtils = TinyMCEImageUtils.ImageUtils;

    var isScaledByWidth = ImageUtils.isScaledByWidth();
    /**
     * Pixel sizes for image resize buttons.
     */
    var sizes;

    if (isScaledByWidth) {
        sizes = {
            small: 100,
            medium: 300,
            large: 500
        };
    } else {
        sizes = {
            small: 150,
            medium: 250,
            large: 400
        };
    }

    /**
     * Image resizing button classes.
     */
    var buttons = {
        small: ".image-size-small",
        medium: ".image-size-medium",
        large: ".image-size-large",
        original: ".image-size-original"
    };

    var lowerImageSizeBound = 16;  // The lower bound for an image size in pixels.
    var upperImageSizeBound = 90000; // The upper bound for an image size in pixels.

    /**
     * Unselects all sizing buttons on the property panel.
     */
    function clearImageSizeButtons() {
        var arr = [];
        $.each(buttons, function(i, val) {
            arr.push(val);
        });
        PropertyPanel.current.panel.find(arr.join(", ")).removeClass("selected");
    }

    /**
     * Returns the displayed image size. Example - '200px'.
     */
    function getImageSizeText() {
        return ($("#image-size-input").val());
    }

    /**
     * Resizes an image's width/height to the specified size. The image proportions will be constrained.
     * when widthpx is set => resizeImage by width
     * when height is set => resizeImage by Height
     * @param imageProps The image properties
     * @param widthpx The resize in pixels to resize the width to
     * @param heightpx The resize in pixels to resize the height to
     * @return true if the image was resized, false otherwise
     */
    function resizeImage(imageProps, widthpx, heightpx) {
        var requiredWidth = validateSize(imageProps, widthpx);
        var requiredHeight = validateSize(imageProps, heightpx);

        var sizepx = requiredWidth || requiredHeight;

        if (sizepx) {
            var $image = PropertyPanel.getAnchor();
            var width = $image.width();
            var height = $image.height();
            var maxThumbWidth = Meta.get("max-thumb-width");
            var maxThumbHeight = Meta.get("max-thumb-height");
            var isNotRemoteImage = !ImageUtils.isRemoteImg(imageProps.destination);

            if (isNotRemoteImage) {
                imageProps.thumbnail = ImageUtils.isThumbnailUsable(requiredWidth, requiredHeight, width, height, maxThumbWidth, maxThumbHeight);

            } else {
                imageProps.thumbnail = false;
            }

            imageProps.originalSelected = false;

            if (widthpx) {
                delete imageProps["height"];
                imageProps["width"] = sizepx;
            } else {
                delete imageProps["width"];
                imageProps["height"] = sizepx;
            }
            updateImageElement(imageProps);
            clearImageSizeButtons();
            return true;
        }

        return false;
    }

    /**
     * Given a size name, resizes the image width/height correspondingly. The proportions will be constrained.
     * @param imageProps The image properties
     * @param size The size - can be small, medium or large
     * @return true if the image was resized, false otherwise
     */
    function resizeImageToPresetSize(imageProps, size) {
        var result;
        if (isScaledByWidth) {
            result = resizeImage(imageProps, sizes[size]);
        }
        else {
            result = resizeImage(imageProps, null, sizes[size]);
        }

        if (result) {
            selectButton(size);
            updateImageElement(imageProps);
            return true;
        }
        return false;
    }

    /**
     * Resizes an image to its original width and height.
     * @param imageProps
     * @return true if the image was resized
     */
    function resizeImageToOriginalWidth(imageProps) {
        delete imageProps.width;
        delete imageProps.height;
        imageProps.thumbnail = false;
        imageProps.originalSelected = true;
        clearImageSizeButtons();
        selectButton("original");
        updateImageElementForOriginal(imageProps);
        return true;
    }

    var rebindAndSnap = function (ppanel) {
        ppanel.current.updating = false;
        ppanel.current.snapToElement({
            animate: true,
            animateDuration: 100
        });
    };

    function updateImageElementForOriginal(imageProps) {
        var ppanel = PropertyPanel;
        var $img = ppanel.getAnchor();

        // Turn off scroll binding, in case an img resize causes a scroll event, and rebind after the resize.
        ppanel.current.updating = true;

        $img.one('load', function () {
            rebindAndSnap(ppanel);
            updateImageSizeText(imageProps);
            imageProps["width"] = Math.floor($img.width());
            imageProps["height"] = Math.floor($img.height());
        });

        // This updates the image src attribute, which triggers the load event.
        // Note: the src can point to the original image or the image's thumbnail.
        ImageUtils.updateImageElement($img, imageProps);
        if (tinymce.isGecko) {
            // Repaint to clear the image handles from their old positions.
            AJS.Rte.getEditor().execCommand('mceRepaint', false);
        }

        $img.each(function () {
            // Cache fix for browsers that don't trigger .load()
            if (this.complete) {
                $(this).trigger('load');
            }
        });
    }

    /**
     * Given a size, selects the corresponding button.
     * @param size Can be small, medium, large or original.
     */
    function selectButton(size) {
        var selectedButton = PropertyPanel.current.panel.find(buttons[size]);
        selectedButton.addClass("selected");
    }

    /**
     * Toggles the image's border.
     * @param imageProps The image properties
     */
    function toggleBorder(imageProps) {
        $(".image-border-toggle").toggleClass("selected", !imageProps.border);
        imageProps.border = +!imageProps.border || false;
        updateImageElement(imageProps);
    }

    /**
     * Update the image element to match the ImageProperties passed in, relocate the property panel to match the
     * resized image, and cleanup any image-selection handles.
     */
    function updateImageElement(imageProps) {
        var ppanel = PropertyPanel;
        var $img = ppanel.getAnchor();
        var oldSrc = $img.attr("src");
        var oldHeight = $img.height();

        // Turn off scroll binding, in case an img resize causes a scroll event, and rebind after the resize.
        ppanel.current.updating = true;

        ImageUtils.updateImageElement($img, imageProps);
        if (tinymce.isGecko) {
            // Repaint to clear the image handles from their old positions.
            AJS.Rte.getEditor().execCommand('mceRepaint', false);
        }

        if (imageProps.src != oldSrc) {
            // Image source changed - may have to wait for height to change to snapToElement
            var snapInterval = setInterval(function() {
                var newHeight = $img.height();
                if (newHeight != oldHeight) {
                    AJS.debug("updateImageElement : height changed after image src change - " + oldHeight + " to " + newHeight);
                    clearTimeout(snapInterval);
                    snapInterval = null;
                    rebindAndSnap(ppanel);
                }
            }, 10);
            setTimeout(function() {
                if (snapInterval) {
                    clearTimeout(snapInterval);
                    snapInterval = null;
                    rebindAndSnap(ppanel);
                }
            }, 1000);
        } else {
            rebindAndSnap(ppanel);
        }

        updateImageSizeText(imageProps);
    }

    /**
     * Updates the image-size field with the current image width. If this is not available in
     * the imageProps, the image element's width is used.
     * @param imageProps The image properties.
     */
    function updateImageSizeText(imageProps) {
        var width = (imageProps.width) ? imageProps.width : PropertyPanel.getAnchor().width();
        width = Math.floor(width);
        $("#image-size-input").val(width + 'px');
    }

    /**
     * Validates a provided image size. The image size must be numeric. If it is greater than the upper
     * bound for image size, the upper bound is returned. If it is less than the lower bound for image
     * size, the lower bound is returned.
     * @param imageProps The image properties
     * @param sizepx The size in pixels to validate
     * return The validated image size, or null if the provided size could not be parsed.
     */
    function validateSize(imageProps, sizepx) {
        sizepx = parseInt(sizepx);
        if (!isNaN(sizepx)) {
            // Restrict the size to the upper and lower bounds.
            if (sizepx < lowerImageSizeBound) {
                sizepx = lowerImageSizeBound;
            } else if (sizepx > upperImageSizeBound) {
                sizepx = upperImageSizeBound;
            }
            return sizepx;
        } else {
            return null;
        }
    }

    function makeController(imageProps) {
        return {
            setPresetSize: function (size) {
                resizeImageToPresetSize(imageProps, size);
            },

            setPixelSize: function (size) {
                resizeImage(imageProps, size);
            },

            setToOriginalSize: function () {
                resizeImageToOriginalWidth(imageProps);
            },

            toggleBorder: function () {
                toggleBorder(imageProps);
            },

            getWidth: function () {
                return imageProps["width"];
            },

            getHeight: function () {
                return imageProps["height"];
            },

            getDisplayWidth: function () {
                return getImageSizeText();
            },

            isButtonSelected: function(button) {
                return PropertyPanel.current.panel.find(buttons[button]).hasClass("selected");
            }
        };
    }

    return {
        _resizeImage: resizeImage,
        pluginButtons: [],

        name : "image",

        getPresetImageSize: function(size) {
            return sizes[size];
        },

        canHandleElement : function ($element) {
            return ($element.is("img")
            && !$element.hasClass("editor-inline-macro")
            && !$element.hasClass("template-variable"));
        },

        handle : function (data) {
            // This function may be called directly or via an event handler. If it is called
            // directly, the image node can be passed in.
            var img;
            if (data.nodeName === "IMG") {
                img = data;
            } else {
                img = data.containerEl;
            }

            var $img = $(img);
            var imageProps = tinymce.confluence.ImageProperties(img);
            if (!imageProps) {
                return; // not a "proper" image, e.g. an emoticon, some non-image placeholder
            }

            var isUnknownAttachment = $img.attr('data-resource-id'); // only unknown attachment has "data-resource-id" attribute

            if (isUnknownAttachment) {
                return;
            }

            var ed = AJS.Rte.getEditor();
            var getLang = function(key) { return ed.getLang(key); };

            var imageSizeButton = function (size) {
                return {
                    className: "image-size-" + size,
                    text: getLang("propertypanel.images_" + size),
                    tooltip: getLang("propertypanel.images_" + size + "_tooltip"),
                    click : function (a) {
                        resizeImageToPresetSize(imageProps, size);
                        AJS.trigger('analyticsEvent', {name: 'confluence.editor.image.resize.' + size});
                    },
                    selected: isScaledByWidth ? imageProps["width"] == sizes[size] : imageProps["height"] == sizes[size]
                };
            };
            var buttons = [
                {
                    className: "editable",
                    tooltip: getLang("propertypanel.images_sizing_tooltip"),
                    html: "<input id=\"image-size-input\"/>"
                },
                null,
                imageSizeButton("small"),
                imageSizeButton("medium"),
                imageSizeButton("large"),
                {
                    className: "image-size-original",
                    text: getLang("propertypanel.images_original"),
                    tooltip: getLang("propertypanel.images_original_tooltip"),
                    click: function (a) {
                        resizeImageToOriginalWidth(imageProps);
                        AJS.trigger('analyticsEvent', {name: 'confluence.editor.image.resize.original'});
                    },
                    selected: imageProps.originalSelected
                },
                null,   // separator
                {
                    className: "image-border-toggle",
                    text: getLang("propertypanel.images_border"),
                    tooltip: getLang("propertypanel.images_border_tooltip"),
                    click: function (a) {
                        toggleBorder(imageProps);
                    },
                    selected: (imageProps.border || imageProps.border == 1)
                }
            ];

            buttons.push(null);     // spacer

            var parent = $img.parent();
            if (parent.is("a[href]")) {
                // An already-linked image. Show buttons for Editing and Removing the link.
                buttons.push({
                    className: "image-link-edit",
                    text: getLang("propertypanel.images_link_edit"),
                    tooltip: getLang("propertypanel.images_link_edit_tooltip"),
                    click: function () {
                        PropertyPanel.destroy();
                        ed.selection.select(parent[0]);
                        Confluence.Editor.LinkBrowser.open();
                    }
                });
                buttons.push({
                    className: "image-link-remove",
                    text: getLang("propertypanel.images_link_remove"),
                    tooltip: getLang("propertypanel.images_link_remove_tooltip"),
                    click: function () {
                        PropertyPanel.destroy();
                        ed.execCommand("mceConfUnlink", false, img);
                        ed.focus();
                    }
                });
            } else {
                // Not a linked image - show 'Link' creation button
                buttons.push({
                    className: "image-make-link",
                    text: getLang("propertypanel.images_link_create"),
                    tooltip: getLang("propertypanel.images_link_create_tooltip"),
                    click: function () {
                        PropertyPanel.destroy();
                        ed.selection.select(img);
                        Confluence.Editor.LinkBrowser.open();
                    }
                });
            }

            var pluginButtons = PropertyPanel.Image.pluginButtons;
            for (var i = 0; i < pluginButtons.length; i++){
                if (pluginButtons[i] === null){
                    buttons.push(null);
                }
                else{
                    var nextButton = pluginButtons[i].create($img);
                    if (nextButton){
                        buttons.push(nextButton);
                    }
                }
            }

            PropertyPanel.createFromButtonModel(this.name, img, buttons, { anchorIframe: AJS.Rte.getEditorFrame() });

            var imageSizeInput = $("#image-size-input");

            imageSizeInput.bind("focus", function() {
                $(this).select();
            });

            function onLoseFocusOrEnterKey() {
                resizeImage(imageProps, getImageSizeText()) ? true : updateImageSizeText(imageProps);
                AJS.trigger('analyticsEvent', {name: 'confluence.editor.image.resize.custom'});
            }

            imageSizeInput.bind('change', function() {
                onLoseFocusOrEnterKey();
            });

            var browser = new Browser(window.navigator.userAgent);
            if (browser.isIE()) {
                imageSizeInput.bind('keyup', function (event) {
                    if (event.keyCode === 13) {
                        onLoseFocusOrEnterKey();
                    }
                });
            }

            // Store the state of the image so it can be updated later
            PropertyPanel.current.imageProps = imageProps;
            updateImageSizeText(imageProps);

            return makeController(imageProps);
        }
    };
});

require('confluence/module-exporter')
        .exportModuleAsGlobal('confluence-editor/tinymce3/plugins/propertypanel/js/property-panel-images', 'AJS.Confluence.PropertyPanel.Image', function(PropertyPanelImages) {
            var AJS = require('ajs');
            AJS.bind("init.rte", function() {
                // defer trigger to ensure any listeners have had a chance to load.
                AJS.trigger("add-handler.property-panel", PropertyPanelImages);
            });
        });
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/propertypanel/js/property-panel-macros.js' */
define('confluence-editor/tinymce3/plugins/propertypanel/js/property-panel-macros', [
    'ajs',
    'tinymce',
    'jquery',
    'confluence/legacy',
    'document',
    'confluence/macro-js-overrides',
    'underscore'
], function(
    AJS,
    tinymce,
    $,
    Confluence,
    document,
    MacroJsOverrides,
    _
) {
    "use strict";

    var registeredEvents = [];
    var globalInitHandlers = [];
    var macroInitHandlers = {};
    var eventNamespace = ".property-panel";
    var spacerKey = "__PROPERTY_PANEL_SPACER";
    var spacer = [{key: spacerKey}];

    return {
        name : "macro",

        registeredEvents: registeredEvents,

        canHandleElement : function ($element) {
            return ($element.hasClass("editor-inline-macro") || $element.hasClass("wysiwyg-macro"));
        },

        handle : function (data) {
            if (data.e.type !== "click" && data.e.type !== "mouseup") { // only activate this panel on click
                return;
            }

            var descriptor = this;
            var macroNode = data.containerEl;
            var $macroNode = $(macroNode);
            var macroName;
            var macroButtons = [];
            var bodyMacro = !$macroNode.hasClass("editor-inline-macro");
            var isKnownMacro = !$macroNode.hasClass("wysiwyg-unknown-macro");
            var buttons = [];
            var options = {
                originalHeight : bodyMacro && $macroNode.height(),
                anchorIframe: AJS.Rte.getEditorFrame()
            };

            var createButtonHandlerKey = function(eventName, macroName) {
                return  eventName + "-button-click" + (macroName ? macroName + ".macro" : "") + eventNamespace;
            };

            var asMacroButtons = function(controlsArray)
            {
                // At the moment we only support button controls
                var buttonsArray = _.filter(controlsArray, function(connectButton) { return connectButton.type === "button";});
                return _.map(buttonsArray, function(connectButton) {
                    return {
                        key: connectButton.key,
                        label: connectButton.name.value
                    };
                });
            };

            function storeButtonsForKnownMacro() {
                var connectControlsResolved = $.Deferred();
                macroName = $macroNode.attr("data-macro-name");
                if (AJS.MacroBrowser.getMacroMetadata(macroName)) {
                    macroButtons = AJS.MacroBrowser.getMacroMetadata(macroName).buttons;
                }
                var getConnectControls = MacroJsOverrides.getFunction(macroName, "getControls");
                if (getConnectControls) {
                    getConnectControls(function(controls)
                    {
                        var originalButtons = macroButtons;
                        var connectButtons = asMacroButtons(controls);
                        // Add spacers on either side of the connect buttons
                        macroButtons = originalButtons.concat(spacer).concat(connectButtons).concat(spacer);
                        connectControlsResolved.resolve();
                    });
                } else {
                    connectControlsResolved.resolve();
                }

                return connectControlsResolved.done(function() {
                    var editClass = "macro-placeholder-property-panel-edit-button";
                    if (macroButtons.length > 0 && macroButtons[0].key == spacerKey) {
                        editClass += " last";
                    }

                    buttons.push({
                        className: editClass,
                        text: "\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c",
                        click: function () {
                            AJS.Confluence.PropertyPanel.destroy();
                            tinymce.confluence.macrobrowser.editMacro($macroNode);
                        }
                    });

                    $.each(macroButtons, function(i, item) {
                        if (item.key == spacerKey) {
                            return;
                        }
                        var cls = "macro-property-panel-" + item.key;
                        if (i > 0 && macroButtons[i-1].key == spacerKey) {
                            cls += " first";
                        }
                        if (i < (macroButtons.length - 1) && macroButtons[i+1].key == spacerKey) {
                            cls += " last";
                        }

                        buttons.push({
                            className: cls,
                            text: item.label,
                            parameterName: item.key,
                            click: function() {
                                $(document).trigger(createButtonHandlerKey(item.key), $macroNode); // legacy support
                                $(document).trigger(createButtonHandlerKey(item.key, macroName), $macroNode);
                                AJS.Confluence.PropertyPanel.destroy();
                            }
                        });
                    });
                });
            }

            function setupOtherButtonsAndCreatePropertyPanel() {
                // Always add the remove button, whether we are known macro or not
                var removeClass = "macro-placeholder-property-panel-remove-button";
                if (macroButtons.length > 0 && macroButtons[macroButtons.length-1].key == spacerKey) {
                    removeClass += " first";
                }
                buttons.push({
                    className: removeClass,
                    text: "\u0423\u0434\u0430\u043b\u0438\u0442\u044c",
                    click: function () {
                        AJS.Confluence.PropertyPanel.destroy();
                        // Using a command makes sure the code goes through the tinymce undo code paths.
                        // Ideally, we would use this command to remove the macro but there seems to be selection problems.
                        // AJS.Rte.getEditor().execCommand("mceRemoveNode", false, macroNode);
                        AJS.Rte.getEditor().execCommand("mceConfRemoveMacro", macroNode);
                    }
                });

                // If the macro has an 'atlassain-macro-output-type' parameter, add inline and block buttons
                if ($macroNode.attr("data-macro-parameters")) {

                    var macroParameters = Confluence.MacroParameterSerializer.deserialize($macroNode.attr("data-macro-parameters"));

                    if ("atlassian-macro-output-type" in macroParameters) {

                        var createClickHandlerFor = function (macroOutputType) {
                            return function (buttonElement) {
                                macroParameters["atlassian-macro-output-type"] = macroOutputType;
                                $macroNode.attr("data-macro-parameters", Confluence.MacroParameterSerializer.serialize(macroParameters));

                                if (macroOutputType == "INLINE") {
                                    $(".macro-placeholder-property-panel-display-newline-button").removeClass("selected");
                                } else {
                                    $(".macro-placeholder-property-panel-display-inline-button").removeClass("selected");
                                }

                                $(buttonElement).addClass("selected");
                            };
                        };

                        buttons.push(null); // spacer
                        buttons.push({
                            className: "macro-placeholder-property-panel-display-newline-button",
                            tooltip: "\u041e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c \u043d\u0430 \u043d\u043e\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435",
                            selected: macroParameters["atlassian-macro-output-type"] == "BLOCK",
                            click: createClickHandlerFor("BLOCK")
                        });
                        buttons.push({
                            className: "macro-placeholder-property-panel-display-inline-button",
                            tooltip: "\u041e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c \u0432\u043d\u0443\u0442\u0440\u0438 \u0441\u0442\u0440\u043e\u043a\u0438",
                            selected: macroParameters["atlassian-macro-output-type"] == "INLINE",
                            click: createClickHandlerFor("INLINE")
                        });
                    }
                }

                // Bind button handlers registered with 'registerButtonHandler'
                $.each(registeredEvents, function() {
                    if(!this.macroName /* legacy support */ || this.macroName == macroName) {
                        $(document).bind(createButtonHandlerKey(this.id, this.macroName), this.handler);
                    }
                });

                // Merge global init handlers with macro specific init handlers and then run them all
                var mergedInitHandlers = globalInitHandlers;
                if(macroName && macroInitHandlers[macroName]) {
                    mergedInitHandlers = mergedInitHandlers.concat(macroInitHandlers[macroName]);
                }
                $.each(mergedInitHandlers, function() {
                    try {
                        this(macroNode, buttons, options);
                    } catch (ex) {
                        AJS.debug("Property panel init handler failed for : " + macroName + ".  Is global handler : " + ($.inArray(this, globalInitHandlers) > -1), ex);
                    }
                });

                // Create property panel and inject iframe if macro has been added via connect
                if (buttons.length > 0) {
                    var currentPanel = AJS.Confluence.PropertyPanel.createFromButtonModel("macro", macroNode, buttons, options);

                    var propertyPanelIFrameInjector = MacroJsOverrides.getFunction(macroName, "propertyPanelIFrameInjector");
                    if (propertyPanelIFrameInjector) {
                        propertyPanelIFrameInjector(currentPanel);
                    }
                }
            }

            if (isKnownMacro) {
                storeButtonsForKnownMacro().then(setupOtherButtonsAndCreatePropertyPanel());
            } else {
                setupOtherButtonsAndCreatePropertyPanel();
            }
        },

        registerButtonHandler: function(ids, handler, macroName) {
            if (!Array.isArray(ids)) {
                ids = [ids];
            }
            ids.forEach(function(id) {
                registeredEvents.push({
                    id: id,
                    handler: handler,
                    macroName: macroName
                });
            });
        },

        registerInitHandler: function(handler, macroName) {
            if(macroName) {
                macroInitHandlers[macroName] = macroInitHandlers[macroName] || [];
                macroInitHandlers[macroName].push(handler);
            } else {
                globalInitHandlers.push(handler);
            }
        },

        yieldButtonFor: function(buttonsArray, parameterName) {
            var button;
            $.each(buttonsArray, function() {
                if(this.parameterName && this.parameterName == parameterName) {
                    button = this;
                }
            });
            return button;
        }
    };
});

require('confluence/module-exporter').exportModuleAsGlobal('confluence-editor/tinymce3/plugins/propertypanel/js/property-panel-macros', 'AJS.Confluence.PropertyPanel.Macro', function(PropertyPanelMacro) {
    var AJS = require('ajs');

    AJS.bind("init.rte", function() {
        // defer trigger to ensure any listeners have had a chance to load.
        AJS.trigger("add-handler.property-panel", PropertyPanelMacro);
    });
});

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/conftable/editor_plugin_src.js' */
/**
 * Plugin that encapsulates Confluence customizations to tables.
 */
define('confluence-editor/tinymce3/plugins/conftable/editor_plugin_src', [
    'jquery',
    'tinymce'
], function(
    $,
    tinymce
) {
    "use strict";

    return {
        init : function(ed, url) {

            /**
             * ALT + UP / DOWN adds a new row above or below the current row.
             */
            !tinymce.isIE8 && ed.onKeyDown.add(function (ed, e) {
                if (!e.altKey || (e.keyCode !== 38 && e.keyCode !== 40)) {
                    return;
                }

                var range = ed.selection.getRng(true);
                var $targetCell = $(range.startContainer).closest("td.confluenceTd, th.confluenceTh", ".mceContent");

                if ($targetCell.length === 0) {
                    return;
                }

                ed.execCommand(e.keyCode === 38 ? "mceTableInsertRowBefore" : "mceTableInsertRowAfter");

                // place cursor in first cell of new row
                var firstCell = $targetCell.parent()[e.keyCode === 38 ? "prev" : "next"]().find("td:first-child")[0];

                // If we're in a table with a numbering column, we can't put the cursor in the first cell of the row
                var $firstCell = $(firstCell);
                if ($firstCell.hasClass('numberingColumn')) {
                    firstCell = $firstCell.next()[0];
                }

                range.setStart(firstCell, 0);
                range.setEnd(firstCell, 0);
                ed.selection.setRng(range);

                return tinymce.dom.Event.prevent(e);
            });
        },

        getInfo : function () {
            return {
                longname : "Confluence Table Plugin",
                author : "Atlassian",
                authorurl : "http://www.atlassian.com",
                version : tinymce.majorVersion + "." + tinymce.minorVersion
            };
        }
    };
});

require('confluence/module-exporter')
        .safeRequire('confluence-editor/tinymce3/plugins/conftable/editor_plugin_src', function(ConfluenceTablePlugin) {
            var tinymce = require('tinymce');

            tinymce.create('tinymce.plugins.ConfluenceTablePlugin', ConfluenceTablePlugin);

            tinymce.PluginManager.add("conftable", tinymce.plugins.ConfluenceTablePlugin);
        });

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/deletecommand/editor_plugin_src.js' */
define('confluence-editor/tinymce3/plugins/deletecommand/editor_plugin_src', [
    'jquery',
    'ajs',
    'tinymce'
], function(
    $,
    AJS,
    tinymce
) {
    "use strict";
    /**
     * Plugin that encapsulates a custom "delete" command with custom delete behaviour.
     *
     * It was introduced to override some undesirable behaviour in webkit, where if the whole contents of macro placeholder (which is a single cell
     * and single row table) were selected, running the native browser document.execCommand("Delete") will cause the
     * whole table to be removed.
     *
     * It is intended that this custom delete command will delegate to the native command in other circumstances.
     */
    return {
        init : function (ed) {
            ed.addCommand("mceDelete", function (ui, value) {

                /**
                 * Performs custom delete.
                 *
                 * @returns true if the custom delete was performed, false otherwise.
                 */
                function customDelete() {
                    if (tinymce.isWebKit) {
                        var range = ed.selection.getRng(1);

                        if (range.collapsed) {
                            return false;
                        }

                        var macroPlaceholderBody = $(range.startContainer).closest(".wysiwyg-macro-body", ed.getBody())[0];

                        if (macroPlaceholderBody && AJS.EditorUtils.isRangeAtStartOf(macroPlaceholderBody, range) && AJS.EditorUtils.isRangeAtEndOf(macroPlaceholderBody, range)) {
                            var plainText = $(macroPlaceholderBody.firstChild).is("pre");
                            var nodeName = (plainText ? "pre" : "p");
                            var filler = $("<" + nodeName + "><br data-mce-bogus='1'></" + nodeName + ">")[0];

                            $(macroPlaceholderBody).html(filler);
                            ed.selection.select(filler, 1);

                            return true;
                        }
                    }

                    return false;
                }

                if (!customDelete()) {
                    ed.getDoc().execCommand('Delete', ui, value);
                }
            });
        },

        getInfo : function() {
            return {
                longname : 'Delete Command Plugin',
                author : 'Atlassian',
                authorurl : 'http://www.atlassian.com',
                version : tinymce.majorVersion + "." + tinymce.minorVersion
            };
        }
    };
});

require('confluence/module-exporter')
        .safeRequire('confluence-editor/tinymce3/plugins/deletecommand/editor_plugin_src', function(DeleteCommandPlugin) {
            var tinymce = require('tinymce');

            tinymce.create('tinymce.plugins.DeleteCommandPlugin', DeleteCommandPlugin);

            tinymce.PluginManager.add('deletecommand', tinymce.plugins.DeleteCommandPlugin);
        });

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/draggable/editor_plugin_src.js' */
define('confluence-editor/tinymce3/plugins/draggable/editor_plugin_src', [
    'jquery',
    'ajs'
], function(
    $,
    AJS
) {
    "use strict";

    if($.browser.msie && $.browser.version <= 8) {
        return; // Don't support IE8 or less;
    }

    var MOVE_SELECTOR = 'img.confluence-embedded-image,img.editor-inline-macro,table.wysiwyg-macro';//,td.draggable-table,td.draggable-column,td.draggable-row';
    var MOVE_INLINE_FILTER = 'img';
    var MIN_MOVEMENT = 10; // pixels

    // -------------------------

    var editor;
    var editorWin;
    var editorDoc;
    var editorBody;
    var containerWin;
    var adjustTop;
    var adjustLeft;
    var initialPageX;
    var initialPageY;
    var dragTarget;
    var dragOrigStyle;
    var firstMove;
    var scroller;
    var cm;

    // -------------------------

    var SCROLL_RATE = [
        800, 800, 400, 400, 400,
        300, 300, 300, 300, 300,
        300, 300, 300, 300, 300,
        200, 200, 200, 200, 200,
        200, 200, 200, 200, 200,
        200, 200, 200, 200, 200,
        100, 100, 100, 100, 100,
        100, 100, 100, 100, 100,
        100, 100, 100, 100, 100
    ];

    var synchronyId = 'confluence.draggable-plugin' ;

    function Scroller(scrollTarget) {

        var currentRate = 0;

        return {
            scrollUp : function(rate) {
                var duration;

                if(currentRate === -rate) {
                    return; // no rate change
                }

                currentRate = -rate;
                duration = (scrollTarget.scrollTop() / rate) * 1000;

                scrollTarget.stop(false, false);
                scrollTarget.animate({
                    scrollTop: 0
                }, {
                    duration: duration
                });
            },

            scrollDown : function(rate) {
                var duration;
                var height;

                if(currentRate === rate) {
                    return; // no rate change
                }

                currentRate = rate;
                height = scrollTarget[0].scrollHeight; // TODO cache?? // will adding a cursor change this ??
                duration = ((height - scrollTarget.scrollTop()) / rate) * 1000;

                scrollTarget.stop(false, false);
                scrollTarget.animate({
                    scrollTop: height
                }, {
                    duration: duration
                });
            },

            cancelScrolling : function() {
                currentRate = 0;

                scrollTarget.stop(true, false);
            },

            scrollHeight: function() {
                return scrollTarget[0].scrollHeight;
            }
        };
    }

    var PAGE_LAYOUT_TARGET = 'div.innerCell,div.cell';
    var SIMPLE_LAYOUT_TARGET = 'body';
    var VALID_TARGET = 'p,h1,h2,h3,h4,h5,h6,blockquote,li,td,th,img';
    var NONPREFERRED_TARGET = 'li,td,th';
    var PREFERRED_TARGET = 'p,h1,h2,h3,h4,h5,h6,blockquote';
    var INLINE_TARGET = 'li,td,th';

    function CursorManager(dragTarget) {

        // Should not change for the life of the CursorManager
        var hasPageLayout = !!editorBody.children('.contentLayout,.contentLayout2').length;

        function getIndicator() {
            return editorDoc.find('#move-indicator');
        }

        function hasIndicator() {
            return getIndicator().length > 0;
        }

        function isIndicator(el) {
            return el.attr('id') === 'move-indicator';
        }

        function createIndicator() {
            return $('<span id="move-indicator">|</span>');
        }

        function positionCursorNear(clientX, clientY) {
            var target;
            var before;
            target = findValidTarget(clientX, clientY);
            if(target) {
                positionIndicator(target.target, target.before);
            }
        }

        function findValidTarget(clientX, clientY) {
            var target = $(editorDoc[0].elementFromPoint(clientX, clientY));
            var before = true;

            if(isValidTarget(target)) {
                return {
                    target: target,
                    before: isBeforeTarget(target, clientX, clientY)
                };
            }

            if(isLayoutTarget(target)) {
                target = adjustLayoutTarget(target);
                if(isAtTopOfLayout(target, clientY)) {
                    // position indicator as start of layout
                    target = target.children().first();
                } else if(isAtBottomOfLayout(target, clientY)) {
                    // position indicator at end of layout
                    target = target.children().last();
                    before = false;
                } else if(isIndicatorInLayout(target)) {
                    // no need to move a indicator (i.e. just moved into an elements margin, falling through to it's layout cell)
                    return null;
                } else {
                    // find somewhere to put a cursor in the layout
                    target = findDefaultTarget(target);
                    before = false;
                }
                return {
                    target: target,
                    before: before
                };
            }
            return null;
        }

        function isValidTarget(target) {
            if(target.is(VALID_TARGET) && !isIndicator(target)) {
                // additional special checks
                if(target.is('td.wysiwyg-macro-body')) {
                    if(target.closest('table').attr('data-macro-body-type') === 'PLAIN_TEXT') {
                        // In plain text macro body - don't allow.
                        return false;
                    }
                }
                if(target.is('img') && !dragTarget.is('img')) {
                    // only allow images to be places inline with other images
                    return false;
                }
                return true;
            }
            return false;
        }

        function isLayoutTarget(target) {
            if(hasPageLayout) {
                return target.is(PAGE_LAYOUT_TARGET);
            }

            return target.is(SIMPLE_LAYOUT_TARGET);
        }

        function adjustLayoutTarget(target) {
            if(target.is('div.cell')) {
                return target.children('div.innerCell').first();
            }
            return target;
        }

        function adjustToPreferredTarget(target) {
            if(target.is(NONPREFERRED_TARGET)) {
                // attempt to move into a block element
                var possibleTarget = target.children().first();
                if(possibleTarget.is(PREFERRED_TARGET)) {
                    target = possibleTarget;
                }
            }
            return target;
        }

        function isAtTopOfLayout(layout, clientY) {
            return getDeltaFromTopOfTarget(layout.children().first(), clientY) < 0;
        }

        function isAtBottomOfLayout(layout, clientY) {
            return getDeltaFromBottomOfTarget(layout.children().last(), clientY) > 0;
        }

        function isIndicatorInLayout(layout) {
            return hasIndicator() && (getIndicator().parent(layout).length > 0);
        }

        function findDefaultTarget(layout) {
            var defaultTarget = dragTarget.parent(VALID_TARGET);

            // Not found a thing. Find the last valid target anywhere (since this is most likely due to the cursor below the last layout element).
            if(!defaultTarget.length) {
                defaultTarget = layout.find(VALID_TARGET).last();
            }

            if(!defaultTarget.length) {
                defaultTarget = editorBody.find(VALID_TARGET).last();
            }

            return defaultTarget;
        }

        function positionIndicator(target, before) {
            if(isIndicator(target)) {
                return;
            }

            var indicator = getIndicator();

            if(target.is(NONPREFERRED_TARGET) && target.find(indicator).length) {
                // indicator is in a non-prefered container and just bubbled up (i.e. don't move)
                return;
            }

            if(!indicator.length) {
                indicator = createIndicator();
            } else {
                indicator.detach();
            }

            target = adjustToPreferredTarget(target);

            if(!target.is('img') && AJS.Rte.Cursor.isTextContainerEmpty(target[0])) {
                // target is empty, always put cursor at start of element to prevent "jumping"
                target.prepend(indicator);
            } else if(target.is(INLINE_TARGET)) {
                if(before) {
                    target.prepend(indicator);
                } else {
                    target.append(indicator);
                }
            } else {
                if(before) {
                    target.before(indicator);
                } else {
                    target.after(indicator);
                }
            }
            // Include this if we can find a away to avoid it if a user wants to scroll down while
            // still hovering over the same page layout cell
            //AJS.Rte.showElement(target);
        }

        function isBeforeTarget(target, clientX, clientY) {
            if(target.is('img')) {
                // left / right check for images
                var relX = getDeltaFromLeftOfTarget(target, clientX);
                var targetWidth = target.width();
                return relX < (targetWidth / 2);
            }
            var relY = getDeltaFromTopOfTarget(target, clientY);
            var targetHeight = target.height();
            return relY < (targetHeight / 2);
        }

        function getDeltaFromTopOfTarget(target, clientY) {
            var pos = target.offset();
            var absY = clientY + editorDoc.scrollTop();
            var relYTop = absY - pos.top;
            return relYTop;
        }

        function getDeltaFromLeftOfTarget(target, clientX) {
            var pos = target.offset();
            var absX = clientX + editorDoc.scrollLeft();
            var relXLeft = absX - pos.left;
            return relXLeft;
        }

        function getDeltaFromBottomOfTarget(target, clientY) {
            var relYTop = getDeltaFromTopOfTarget(target, clientY);
            var targetHeight = target.height();
            var relYBottom = relYTop - targetHeight;
            return relYBottom;
        }

        function replaceIndicatorWith(el) {
            var indicator = getIndicator();
            if(indicator.length) {
                if(el.is(MOVE_INLINE_FILTER) && isLayoutTarget(indicator.parent())) {
                    // cursor is not in a block element, and el is not a block element - wrap
                    el = $('<p></p>').append(el);
                }
                indicator.replaceWith(el);
                AJS.Rte.showElement(el);
                editor.selection.select(el[0]);
                editor.selection.collapse(true);
            } else {
                AJS.debug('No cursor - abort drop');
                editor.undoManager.undo();
            }
            AJS.Rte.Cursor.fixCursorTargets(AJS.Rte.getEditor().getBody());
        }

        function destroyCursor() {
            var indicator = getIndicator();
            if(indicator.length) {
                indicator.remove();
                AJS.Rte.Cursor.fixCursorTargets(AJS.Rte.getEditor().getBody());
            }
        }

        return {
            positionNear : positionCursorNear,
            replaceWith : replaceIndicatorWith,
            destroy : destroyCursor
        };
    }

    function adjustDragTarget(clicked) {
        dragOrigStyle = clicked.attr('style') || '';
        return clicked;
    }

    function startMove(e) {
        if(e.which !== 1) {
            return; // left click only
        }

        if(e.target !== e.currentTarget) {
            return; // nested draggable objects - ignore
        }

        if(dragTarget) {
            // dragging is still active (can occur if moves mouse outside of iframe and release button). Click now will end the drag.
            endMove(e);
            return;
        }

        dragTarget = $(e.target);

        editor.selection.select(e.target);
        e.preventDefault();

        editorDoc.bind({
            "mousemove.moveable-zone": showMove,
            "mouseup.moveable-zone": endMove,
            "keydown.moveable-zone": escapeListener,
            "mouseover.moveable-zone": removeTableSelection
        });
        var offset = dragTarget.offset();
        initialPageX = e.pageX;
        initialPageY = e.pageY;
        adjustTop = offset.top - initialPageY;
        adjustLeft = offset.left - initialPageX;
        firstMove = true;
        dragTarget = adjustDragTarget(dragTarget);
    }

    function escapeListener(e) {
        if(e.keyCode === 27) {
            cancelMove(e);
        }
    }

    function removeTableSelection() {
        editorDoc.find('.mceSelected').removeClass('mceSelected');
    }

    function notMovedEnough(e) {
        var deltaX = Math.abs(initialPageX - e.pageX);
        var deltaY = Math.abs(initialPageY - e.pageY);
        return deltaX < MIN_MOVEMENT && deltaY < MIN_MOVEMENT;
    }

    function showMove(e) {
        var top;
        var left;
        if(firstMove) {
            if(notMovedEnough(e)) {
                return;
            }

            AJS.Rte.BookmarkManager.storeBookmark();

            editor.undoManager.beforeChange();
            editor.undoManager.typing = true; // treat draggable as "typing" from an undo perspective
            editor.undoManager.add();
            AJS.trigger('synchrony.stop', { id: synchronyId });

            clearSelection();
            dragTarget.css({
                position: 'absolute',
                width: dragTarget.css('width'), // grab current width so it's the same when dragged (e.g. macro's in a table)
                'max-width': '50%'  // For large images
            });
            // HACK - to make sure property panel is removed
            AJS.Confluence.PropertyPanel.current && AJS.Confluence.PropertyPanel.destroy();
            // Detach, and make sure all cursor targets are valid (e.g. we removed something between 2 macros)
            dragTarget.detach();
            AJS.Rte.Cursor.fixCursorTargets(AJS.Rte.getEditor().getBody());
            editorBody.append(dragTarget);

            cm = CursorManager(dragTarget);

            firstMove = false;
        }

        e.preventDefault();

        dragTarget.hide(); // hide so we can find the target underneath the dragTarget

        scrollIfRequired(e.clientX, e.clientY);
        cm.positionNear(e.clientX, e.clientY);

        top = Math.min(e.pageY + adjustTop, scroller.scrollHeight() - dragTarget.outerHeight());
        left = e.pageX + adjustLeft;
        dragTarget.css({
            top: top,
            left: left,
            opacity: 0.5
        });

        dragTarget.show();
    }

    function clearSelection() {
        // While this call is successful in IE9, the cursor still remains visible and sometimes in the wrong spot
        // after making, for example, an image floating. IE9 is just a lost cause here.
        var selection = editor.selection.getSel();
        selection && selection.removeAllRanges && selection.removeAllRanges();
    }

    function scrollIfRequired(clientX, clientY) {
        var viewPortHeight;
        var clientYFromBottom;
        var scrollZoneHeight = SCROLL_RATE.length;
        clientY = Math.max(clientY, 0);
        if(clientY < scrollZoneHeight) {
            scroller.scrollUp(SCROLL_RATE[clientY]);
            return;
        }
        viewPortHeight = editorWin.height(); // TODO is this expensive - should we cache it??
        clientYFromBottom = Math.max(0, viewPortHeight - clientY);
        if(clientYFromBottom < scrollZoneHeight) {
            scroller.scrollDown(SCROLL_RATE[clientYFromBottom]);
            return;
        }

        // Outside scroll range, make sure we stop any existing scrolling.
        scroller.cancelScrolling();
    }

    function endMove(e) {
        editorDoc.unbind('.moveable-zone');
        scroller.cancelScrolling();
        if(firstMove) {
            // no movement - was a click
            dragTarget = null;
            return;
        }
        e.preventDefault();

        dragTarget.detach();
        dragTarget.attr('style', dragOrigStyle);
        cm.replaceWith(dragTarget);
        cm.destroy();
        dragTarget = null;
        cm = null;

        removeTableSelection();

        editor.undoManager.add();
        AJS.trigger('synchrony.start', { id: synchronyId });
    }

    function cancelMove(e) {
        scroller.cancelScrolling();
        editorDoc.unbind('.moveable-zone');
        editor.undoManager.undo();
        editor.selection.select(dragTarget[0]);
        editor.selection.collapse(false);
        dragTarget = null;
    }

    function bindMove() {
        editorDoc.delegate(MOVE_SELECTOR, {
            mousedown: startMove
        });
    }

    function ignore(e) {
        e.preventDefault();
    }

    return {
        init : function(ed,url){
            editor = ed;
            ed.onInit.add(function(e, l) {
                var scrollElement;
                editorWin = $(ed.getWin());
                editorDoc = $(ed.getDoc());
                editorBody = $(ed.getBody());
                containerWin = $(editorWin[0].parent);
                if($.browser.webkit) {
                    scrollElement = editorBody;
                } else {
                    scrollElement = editorDoc.find('html');
                }
                scroller = Scroller(scrollElement);
                bindMove();
                // TODO enable when stable:
                // bindTableDecorators();
            });
        },

        getInfo : function() {
            return {
                longname : 'Draggable objects (images, tables, placeholders) around the document via drag and drop',
                author : 'Atlassian',
                authorurl : 'http://www.atlassian.com',
                version : "1.0"
            };
        }
    };
});

require('confluence/module-exporter')
        .safeRequire('confluence-editor/tinymce3/plugins/draggable/editor_plugin_src', function(DraggablePlugin) {
            var tinymce = require('tinymce');

            tinymce.create('tinymce.plugins.draggable', DraggablePlugin);

            tinymce.PluginManager.add('draggable', tinymce.plugins.draggable);
        });

/** WIP Code
 // TODO Tables: fix copy and paste - need to remove decoration before copy
 // TODO Tables: be colspan / rowspan aware.

 function adjustDragTarget(clicked) {
     dragOrigStyle = '';
     if(clicked.hasClass('draggable-table')) {
         // clicked in cell - we want to move the whole table
         AJS.log('clicked in cell - we want to move the whole table');
         var table = clicked.closest('table');
         dragOrigStyle = table.attr('style');
         return table;
     } else if(clicked.hasClass('draggable-row')) {
         // extract row
         var detachedTable = $('<table class="confluenceTable"><tbody></tbody></table>');
         var row = clicked.closest('tr').detach();
         row.children('td:eq(0)').remove(); // remove decoration
         detachedTable.find('tbody').append(row);
         // First mouse move will position this correct. Just render offscreen and absolute to avoid glitching / reflow
         detachedTable.css({
             position: 'absolute',
             // left: -9999,
             // top: 0
         });
         editorBody.append(detachedTable);
         return detachedTable;
     } else if(clicked.hasClass('draggable-column')) {
         var detachedTable = $('<table class="confluenceTable"></table>');
         var tbody = $('<tbody></tbody>');
         var table = clicked.closest('table');
         var rows = table.children('tbody').children('tr').slice(1);
         var colNum = clicked.index() + 1;
         AJS.log('colNum: ' + colNum);
         rows.each(function() {
             var row = $(this);
             var newRow = $('<tr></tr>');
             var cell = row.children(':nth-col(' + colNum + ')');
             AJS.log('cell');
             AJS.log(cell);
             cell.detach();
             newRow.append(cell);
             tbody.append(newRow);
         });
         detachedTable.append(tbody);
         detachedTable.css({
             position: 'absolute',
             // left: -9999,
             // top: 0
         });
         editorBody.append(detachedTable);
         AJS.log('detachedTable:');
         AJS.log(detachedTable);
         return detachedTable;
     }
     dragOrigStyle = clicked.attr('style') || '';
     return clicked;
 }

 function repeat(s, num) {
     return new Array(num + 1).join(s);
 }


 function addTableDecorators() {
     AJS.log('adding table decorators');
     var tables = editorDoc.find('table.confluenceTable:not(.draggable)');
     tables.each(function() {
         var table = $(this);
         var sections = table.children('thead,tbody,tfoot');
         var rows = sections.children('tr');
         var numCol = rows.eq(0).children().length;
         // add row at the top.
         var grabCell = '<td></td>';
         var topRow = $('<tr class="draggable" contentEditable="false">' + repeat(grabCell, numCol + 1) + '</tr>');
         var topRowCells = topRow.find('td');
         topRowCells.eq(0).addClass('draggable-table');
         topRowCells.slice(1).addClass('draggable-column');
         sections.eq(0).prepend(topRow);
         // add column to left
         rows.prepend('<td class="draggable-row" contentEditable="false"></td>');
         table.addClass('draggable');
     })
 }

 function removeTableDecorators() {
     AJS.log('removing table decorators');
     var tables = editorDoc.find('table.draggable');
     tables.removeClass('draggable');
     tables.find('tr.draggable').remove(); // deals with draggable-table, draggable-column td's
     tables.find('td.draggable-row').remove();
 }

 function bindTableDecorators() {
     editor.onBeforeGetContent.add(function(e, o) {
         // Remove decorators - so they're not saved/etc.
         removeTableDecorators();
     });
     editor.onGetContent.add(function(e, o) {
         // Restore decorators
         addTableDecorators();
     });
     editor.onSetContent.add(function(e, o) {
         // Add decorators
         addTableDecorators();
     });
     // editor.onNodeChange.add(function(e, o)) {
     //     // Add decorators
     //     addTableDecorators();
     // }
     addTableDecorators();
 }

 */

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'editor/atlassian-editor.js' */
define('confluence-editor/editor/atlassian-editor', [
    'tinymce',
    'ajs',
    'jquery',
    'window',
    'document'
], function(
    tinymce,
    AJS,
    $,
    window,
    document
) {
    "use strict";

    var browserVersion = parseInt($.browser.version, 10);

    /**
     * When given an html element or jquery element:
     * - normalise to the html element,
     * - switch to the parent for text or <br>
     * - filter out document nodes
     * - return the element or return null for documents or null
     */
    function asHtmlElementWithHeightOrNull(element) {
        element = element && element.jquery ? element[0] : element;
        if (!element) { return false; }

        if (element.tagName === "BR" || element.nodeType === 3) { // Node.TEXT_NODE = 3
            element = element.parentNode; // No height on a BR or text nodes, so get parent
        }
        if (element && element.nodeType === 9) { // Node.DOCUMENT_NODE = 9
            element = null; // disallow the document element
        }
        return element;
    }

    var AtlassianEditor = {};

    AtlassianEditor.Rte = {
        // Used to ensure that a TextNode exists under the search-text span when the ranges are set.
        HIDDEN_CHAR: "\ufeff",
        ZERO_WIDTH_WHITESPACE: "&#x200b;",

        editorId : "wysiwygTextArea",

        isQuickEdit: false,

        /**
         * Returns the current active editor
         */
        getEditor : function () {
            return tinymce.activeEditor;
        },

        /**
         * Gets the base url from the current location.
         */
        getCurrentBaseUrl : function() {
            if (!this.currentBaseUrl) {
                var l = document.location;
                this.currentBaseUrl = l.protocol + "//" + l.hostname + (l.port ? ":" + l.port : "");
            }
            return this.currentBaseUrl;
        },

        /**
         * Scrolls the current editor selection if not visible, or completely visible.
         *
         * @param afterShown function to call after selection becomes visible
         */
        showSelection: function(afterShown) {
            AJS.Rte.showElement(tinymce.activeEditor.selection.getStart(), afterShown);
        },

        /**
         * Returns true if an element is visible at all.
         *
         * @param element an HTML element or jquery element.
         */
        isAnyPartShown: function(element) {
            element = asHtmlElementWithHeightOrNull(element);
            if(!element) {
                AJS.debug('AJS.Rte.isAnyPartShown: no element to find');
                return false;
            }

            var $element = $(element);
            var elementTop = $element.offset().top;
            var elementBottom = elementTop + $element.outerHeight();
            var viewTop = $(AJS.Rte.getEditor().getDoc()).scrollTop();
            var viewBottom = viewTop + $(AJS.Rte.getEditorFrame()).height();

            return elementBottom > viewTop && elementTop < viewBottom;
        },

        /**
         * Scrolls to an element if not visible, or completely visible
         *
         * @param e an HTML element
         * @param afterShown function to call after element becomes visible
         */
        showElement: function(e, afterShown) {
            var checkNode = asHtmlElementWithHeightOrNull(e);

            if(!checkNode) {
                AJS.log('AJS.Rte.showElement: no element to show - skipping');
                return false;
            }

            var $e = $(checkNode);
            var ed = AJS.Rte.getEditor();
            var doc = $(ed.getDoc());
            var top = $e.offset().top;
            var bottom = top + $e.outerHeight();
            var viewTop = doc.scrollTop();
            var viewBottom = viewTop + $(AJS.Rte.getEditorFrame()).height();
            var bindAfterShown = function() {
                AJS.Rte.bindScroll("AJS.Rte.showElement", function() {
                    AJS.Rte.unbindScroll("AJS.Rte.showElement");
                    // defer so to run outside of this event handler (required for property panel on added images)
                    setTimeout(afterShown, 1); // ATLASSIAN CONFDEV-6400 timeout value of 1 rather than 0
                });
            };

            if(top < viewTop) {
                AJS.Rte.scrollTo(top);
                afterShown && bindAfterShown();
            } else if(bottom > viewBottom) {
                AJS.Rte.scrollTo(Math.min(top, viewTop + bottom - viewBottom));
                afterShown && bindAfterShown();
            } else {
                afterShown && afterShown();
            }
        },

        scrollTo : function (pos) {
            var ed = AJS.Rte.getEditor();
            pos = Math.ceil(pos); //Normalise the number that will be scrolled to. (FF rounds / Webkit only rounds up)
            $(ed.getDoc()).scrollTop(pos);
        },
        /**
         * Binds a namespaced callback to the editor scroll event.
         * @param namespace used for unbinding e.g. property-panel
         * @param callback the function to run when the event occurs
         */
        bindScroll: function(namespace, callback) {
            var ed = AJS.Rte.getEditor();
            $(document).add(ed.getDoc()).add(ed.getWin()).bind("scroll." + namespace, callback);
        },

        /**
         * Unbinds a namespace bound to the RTE window scroll event
         * @param namespace
         */
        unbindScroll: function(namespace) {
            var ed = AJS.Rte.getEditor();
            $(document).add(ed.getDoc()).add(ed.getWin()).unbind("scroll." + namespace);
        },

        /**
         * @returns a reference to the main editor instance.
         * @deprecated since 4.1 use AJS.Rte.getEditor
         */
        getMainEditor: function () {
            var e = tinymce.EditorManager.editors[AJS.Rte.editorId];
            if (!e) {
                throw new Error("Main editor has not been initialised yet and is therefore not accessible via tinymce.EditorManager.editors");
            }
            return e;
        },

        /**
         * @returns the element atlassian draws the editor into
         */
        getEditorContainer : function () {
            return $("#wysiwyg");
        },

        /**
         * @returns the iframe containing the current active editor
         */
        getEditorFrame: function() {
            return $("#" + AJS.Rte.getEditor().id + "_ifr")[0];
        },

        /**
         * @returns a jquery object containing a table that houses the current active editor iframe
         * @deprecated since 4.1 there is no table.
         */
        getEditorTable: function() {
            return $("#" + AJS.Rte.getEditor().id + "_tbl");
        },

        webResourcePath : "/download/resources/com.atlassian.confluence.tinymceplugin%3Atinymceeditor/",

        /**
         * @returns the static resource url prefix, which will include the caching headers
         */
        getResourceUrlPrefix : function() {
            if (!this.resourceUrlPrefix) {
                this.resourceUrlPrefix = this.getCurrentBaseUrl() + AJS.Meta.get('editor-plugin-resource-prefix');
            }
            return this.resourceUrlPrefix;
        },

        /**
         * @returns the absolute url path to the tinymce web resources, which will include the caching headers
         */
        getTinyMceBaseUrl : function() {
            if (!this.absoluteUrl) {
                this.absoluteUrl =  this.getResourceUrlPrefix() + this.webResourcePath + "tinymcesource/";
            }
            return this.absoluteUrl;
        },

        getMinEditorHeight: function() {
            return + AJS.Meta.get('min-editor-height');
        },

        /**
         * Returns the total height of the editor including the toolbar and anything in the header.
         * @param extraHeight
         */
        getTinyMceEditorMinHeight: function(extraHeight) {
            extraHeight = extraHeight || 0;
            var height = AJS.Rte.getMinEditorHeight();
            var chromeHeight = 0;
            if (height) { return height; }

            $("#editor-precursor,#header-precursor,#header").each(function() {
                chromeHeight += $(this).outerHeight(true);
            });
            return ($(window).height() - chromeHeight -  extraHeight);
        },

        /**
         * Firefox seems to have some odd behaviour sometimes around cursor positioning and focus in the editor.
         * Setting the contentEditable off/on seems to re-enforce caret mode in the editor.

         * @deprecated since 5.6
         * @param bookmark
         */
        fixEditorFocus: function(bookmark) {
            AJS.log('WARNING: The fixEditorFocus method has been deprecated and it will be removed in an upcoming Confluence release.');
            if (tinymce.isGecko && !isNaN(browserVersion) && browserVersion < 30) {
                var ed = AJS.Rte.getEditor();
                var b = ed.getBody();

                AJS.log("Fixing FF cursor positioning");

                if(b.contentEditable == "true") {
                    b.contentEditable = false;
                    b.contentEditable = true;
                }
            }
        },

        /**
         * Focus method
         *
         * This is sort of the way tinymce uses to auto_focus (if you set settings.auto_focus)
         * tinymce defers the focus though using a setTimeout, and it uses ed.getBody() instead of ed.dom.getRoot,
         * so we have our own focus function what give us more granular control.
         *
         * @since 5.6
         * @param ed editor
         */
        editorFocus: function (ed) {
            if (!ed || ed.destroyed){
                return;
            }

            function getFocusTarget() {
                var targetNode = ed.dom.getRoot(); // this will get use the default root, so it will be Page Layouts aware.
                if (tinymce.isWebKit && !$(targetNode).parents("body").length){ // CONFDEV-28137
                    // set focus on the first paragraph element.
                    // be aware that this wouldn't work in IE11 for example, since we are not placing any empty paragraph in empty documents (we probably should)
                    targetNode = $(ed.getBody()).find("p:first-child")[0];
                }
                return targetNode;
            }

            var focusNode = getFocusTarget();
            if (focusNode) {
                ed.selection.select(focusNode, 1);
                ed.selection.collapse(1);
                focusNode.focus();
            } else {
                AJS.log("editorFocus was called with an invalid node");
            }

            ed.getBody().focus(); // required for FF
            ed.getWin().focus();
        }

    };

    AtlassianEditor.KEYS = {
        BACKSPACE: 8,
        TAB: 9,
        ENTER: 13,
        SHIFT: 16,
        CTRL: 17,
        ALT: 18,
        ESCAPE: 27,
        LEFT: 37,
        UP: 38,
        RIGHT: 39,
        DOWN: 40,
        DELETE: 46,
        META: 91 // Command key on OSX, WinKey on Windows.
    };

    return AtlassianEditor;
});

require('confluence/module-exporter').safeRequire('confluence-editor/editor/atlassian-editor', function(AtlassianEditor) {
    var AJS = require('ajs');
    var $ = require('jquery');
    var tinymce = require('tinymce');

    AJS.Rte = $.extend(AtlassianEditor.Rte, AJS.Rte);

    // Extend tinymce's VK space with some more key shortcuts
    tinymce.VK = $.extend(AtlassianEditor.KEYS, tinymce.VK);
});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'editor/atlassian-editor-content.js' */
define('confluence-editor/editor/atlassian-editor-content', [
    "jquery",
    "ajs"
], function(
    $,
    AJS
) {
    "use strict";

    return {
        /**
         * Returns the offset of the element in relation to the parent frame.
         * @param element
         */
        offset: function (element) {
            var $node = $(element);
            // offset of the element in relation to the frame
            var offset = $node.offset();
            // offset of the editor
            var frame = $(AJS.Rte.getEditorFrame());
            var frameOffset = frame.offset();
            // Needed because IE doesn't like $body.scrollTop/Left()
            var frameDoc = frame[0].contentWindow.document;
            var $body = $(AJS.Rte.getEditor().getBody());
            var scrollOffset = {
                top : ($.support.boxModel && frameDoc.documentElement.scrollTop  || $body.scrollTop()),
                left : ($.support.boxModel && frameDoc.documentElement.scrollLeft  || $body.scrollLeft())
            };
            return {
                top: offset.top - scrollOffset.top + frameOffset.top,
                left: offset.left - scrollOffset.left + frameOffset.left
            };
        },

        /**
         * Returns the text currently selected in the RTE
         */
        getSelectedText : function(){
            var ed = AJS.Rte.getEditor();
            var selection = ed.selection;
            return selection.getRng().text || (selection.getSel() && selection.getSel().toString && selection.getSel().toString()) || "";
        },

        /**
         * put the text in newValue into the editor. This is called when the editor needs new
         * content -- it is *not* called to set the initial content. That should be done either by providing the
         * editor with the content as part of the initial HTML, or by calling javascript from editorOnLoad()
         * @param newValue the html to set the content to.
         */
        setHtml : function (newValue) {
            if (newValue) {
                AJS.Rte.getEditor().setContent(newValue);
            }
        },

        /**
         * @returns the current HTML contents of the editor. This *must* return a JavaScript string,
         * not a JavaObject wrapping a java.lang.String
         */
        getHtml : function () {
            return "" + AJS.Rte.getEditor().getContent();
        },

        /**
         * @returns true if there is no content (other than spaces or &nbsp;). False if there is content.
         */
        isEmpty: function() {
            var content = AJS.Rte.getEditor().getContent().replace("&nbsp;", " ");
            return !$.trim(content);
        },

        /**
         * @returns true if the contents of the editor has been modified by the user since
         * the last time editorResetContentChanged()
         */
        editorHasContentChanged : function () {
            return AJS.Rte.getEditor().isDirty();
        },

        /**
         * Resets the contents change indicator
         */
        editorResetContentChanged : function () {
            AJS.Rte.getEditor().setDirty(false);
        },

        /**
         * Finds the index of the supplied childNode in the parentNode
         * @returns the index of the child node in the parent node. If the child
         * cannot be found in the parent -1 is returned.
         */
        getChildIndex: function(parentNode, childNode) {
            var children = parentNode.childNodes;
            for (var i = 0, len = children.length; i < len; i++) {
                if (children[i] == childNode) {
                    return i;
                }
            }
            return -1;
        }
    };
});

require('confluence/module-exporter').exportModuleAsGlobal('confluence-editor/editor/atlassian-editor-content', 'AJS.Rte.Content');

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'bookmark/atlassian-editor-bookmark-manager.js' */
define('confluence-editor/atlassian-editor-bookmark-manager', [
    'tinymce',
    'ajs'
], function(
    tinyMCE,
    AJS
) {
    "use strict";

    var bookmark;

    return {

        /**
         * Stores the currently selected range and scroll position of the editor so we can get back to to it later using
         * restoreBookmark.
         */
        storeBookmark : function() {
            var editor = tinyMCE.activeEditor;
            var vp = tinyMCE.DOM.getViewPort(tinyMCE.activeEditor.getWin());
            var selection;
            var rng;
            var rngCopy;

            // The editor (iframe) should be given focus at this point to ensure browsers (like IE8) can retrieve the selection.
            // See CONFDEV-2454
            editor.focus();
            //ensure the focus doesn't throw off scroll position in IE.
            selection = editor.selection;
            rng = selection.getRng();

            if (rng.cloneRange && typeof rng.cloneRange === "function") {
                rngCopy = rng.cloneRange();
            } else {
                // If an IE TextRange make a copy, else it will be an IE IHTMLControlRange so store it directly as it can't
                //  be copied.
                rngCopy = rng.duplicate && rng.duplicate() || rng;
            }

            bookmark = {
                scrollX : vp.x,
                scrollY : vp.y,
                range : rngCopy
            };
            AJS.log("Storing bookmark");
            AJS.log(bookmark);
        },

        /**
         * Moves the scroll position and selected range in the editor back to where it used to be based on the
         * last call to storeBookmark.
         */
        restoreBookmark : function() {
            var selection = tinyMCE.activeEditor.selection;
            var win = tinyMCE.activeEditor.getWin();

            AJS.log("Restoring bookmark");
            AJS.log(bookmark);
            if (bookmark) {
                win.scrollTo(bookmark.scrollX, bookmark.scrollY);
                win.focus();
                selection.setRng(bookmark.range);
            }
            bookmark = null;
        }
    };
});

require('confluence/module-exporter').exportModuleAsGlobal('confluence-editor/atlassian-editor-bookmark-manager', 'AJS.Rte.BookmarkManager');
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'support/atlassian-editor-support.js' */
define('confluence-editor/support/atlassian-editor-support', [
    'ajs'
], function(
    AJS
) {
    "use strict";

    return {
        inlineTasks: function() {
            var useInlineTasks = AJS.Meta.get('use-inline-tasks');
            return useInlineTasks === "true" || useInlineTasks === true;
        }
    };
});

require('confluence/module-exporter').exportModuleAsGlobal('confluence-editor/support/atlassian-editor-support', 'AJS.Rte.Support');

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'event/tinymce-event-delegator.js' */
//TODO: this needs a better data structure, not happy with the two loops in the eventHandler.
//i think i might sacrifice creation time for event speed and unpack the component events a little bit.
//

//Window exists so we can parse in a test window, or even the editor window if we really want to
define('confluence-editor/event/tinymce-event-delegator', [
], function(
) {
    "use strict";

    return function(ed) {

        var eventRegister = {};
        var boundEvents = {};
        var eventHandler = function(ed,e) {
            var eventType;
            var event;
            for(event in eventRegister) {
                if(eventRegister.hasOwnProperty(event) &&  eventRegister[event].isEnabled) {
                    for (var i = 0, ii = eventRegister[event].events.length; i < ii; i++) {
                        eventType = eventRegister[event].events[i];
                        if(eventType.type.toLowerCase().indexOf(e.type) > -1) {
                            if(eventType.shouldTrigger(ed,e)) {
                                eventType.callback.apply(this,[e.target]);
                            }
                            else {
                                eventType.missed && eventType.missed();
                            }
                        }
                    }
                }
            }
        };

        return {
            //takes an array of {type: tinymceEvent, shouldTrigger: tagname|function(e.target), callback: function, missed: function()}
            addEventsForComponent : function(component,events){
                if(!(component in eventRegister)) {
                    eventRegister[component] = {};
                    eventRegister[component].events = [];
                    eventRegister[component].isEnabled = true;
                }
                var item;
                var triggerTag;
                for(var i = 0, ii = events.length; i < ii; i++) {
                    item = null;
                    !(events[i].type in boundEvents) &&  (function() {
                        boundEvents[events[i].type] = true;
                        ed[events[i].type].add(eventHandler);
                    })();
                    if(!(typeof(events[i].shouldTrigger) === "function")) {

                        (function(triggerTag) {
                            events[i].shouldTrigger = function(ed,e) {
                                return e.target.tagName.toLowerCase() == triggerTag;
                            };
                        })(events[i].shouldTrigger);

                    }
                    eventRegister[component].events.push(events[i]);
                }
            },
            disableEventsForComponent : function(component) {
                for(var i = 0, ii = eventRegister.length; i < ii; i++) {
                    if(component in eventRegister) {
                        eventRegister[component].isEnabled = false;
                        return true;
                    }
                }
                return false;
            },
            enableEventsForComponent : function(component) {
                for(var i = 0, ii = eventRegister.length; i < ii; i++) {
                    if(component in eventRegister) {
                        eventRegister[component].isEnabled = true;
                        return true;
                    }
                }
                return false;
            }
        };
    };
});

require('confluence/module-exporter').exportModuleAsGlobal('confluence-editor/event/tinymce-event-delegator', 'AJS.Rte.EventDelegator');

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'oninit/tinymce-cursor-fixes.js' */
//
// This file should probably be converted into a tinymce plugin
//

define('confluence-editor/oninit/tinymce-cursor-fixes', [
    "jquery",
    "tinymce",
    "ajs"
], function(
    $,
    tinymce,
    AJS
) {
    "use strict";

    /**
     * @return false if the table cell containing the supplied text node contains any other text nodes prior to this one.
     * If the text node is not within a table then just return true.
     */
    function isTextNodeFirstInCell(textNode) {
        if ($(textNode).closest("td").length === 0) {
            return true;
        }

        var currentContainer = textNode.parentNode;

        while (currentContainer.nodeName.toLowerCase() !== "td" ) {
            var previousTextNodes = $(currentContainer).prevAll().contents().filter(function () {
                return this.nodeType === 3;
            });

            if (previousTextNodes.length) {
                return false; // there are text nodes in the previous siblings so this node isn't first
            }

            currentContainer = currentContainer.parentNode;
        }

        return true; // we didn't find any previous text nodes within this cell
    }

    /**
     * Returns true if the cursor is at the start of the given range.
     */
    function isCursorAtStart(ed, rng, selectedNode) {
        // compareEndPoints is only supported by <= IE8
        if (rng.compareEndPoints) {
            var tempTextRange = ed.getBody().createTextRange();
            tempTextRange.moveToElementText(selectedNode);
            tempTextRange.collapse(1);
            return rng.compareEndPoints("StartToStart", tempTextRange) === 0 && isTextNodeFirstInCell(selectedNode);
        }

        if (!ed.selection.getSel().isCollapsed) {
            return false;
        }

        function isTextNodeContainingNewLineCharacter(node) {
            return node.nodeType === 3 && node.nodeValue == "\n";
        }

        var startContainer = rng.startContainer;
        if (startContainer.nodeType === 3) {
            return !startContainer.previousSibling && rng.startOffset === 0 && isTextNodeFirstInCell(startContainer);
        } else if ($(startContainer).is("p:first-child")) { // we occasionally get a range with the startContainer being a P with offset 0 when the cursor is inside <p><br/></p>
            return rng.startOffset === 0;
        } else if ($(startContainer).is(".wysiwyg-macro-body")) { // the first block element inside a macro body placeholder is always preceded by a textnode (containing a newline character) in FF and Webkit
            return rng.startOffset == 1 && isTextNodeContainingNewLineCharacter(rng.startContainer.childNodes[0]);
        }
    }
    /**
     * Returns true if the cursor is at the end of the given range.
     */
    function isCursorAtEnd(ed, rng, node) {
        // compareEndPoints is only supported by <= IE8
        if (rng.compareEndPoints) {
            var tempTextRange = ed.getBody().createTextRange();
            tempTextRange.moveToElementText(node);
            tempTextRange.collapse(0);
            return rng.compareEndPoints("EndToEnd", tempTextRange) === 0;
        }

        if (!ed.selection.getSel().isCollapsed) {
            return false;
        }

        var endContainer = rng.endContainer;
        if (endContainer.nodeType === 3) {
            return (endContainer.wholeText.length == rng.endOffset);
        }

        var elementAfterCursor = endContainer.childNodes[rng.endOffset];
        return $(elementAfterCursor).is(":last-child");
    }

    /**
     * Inserts a paragraph before/after the given element
     */
    function insertParagraph(ed, $element, insertAfter) {
        var p = ed.dom.create('p', 0, tinymce.isIE ? '&nbsp;' : '<br data-mce-bogus="1" />');

        if(insertAfter) {
            $element.after(p);
        }
        else {
            $element.before(p);
        }

        ed.selection.select(p, true);
        ed.selection.collapse();
    }

    /**
     * Returns true if the given paragraph is emtpy. It is also considered emtpy if
     * only contains a BR or a non breaking space.
     */
    function isEmptyParagraph($p) {
        var contents = $p.contents();
        if (!contents.length) {
            return true;
        }

        if (contents.length === 1) {
            if (contents.is("br")) {
                return true;
            } else if (contents.html() == "&nbsp;" || contents.text().charCodeAt(0) === 160) {
                return true;
            } else if (contents[0].nodeType === 3 && contents[0].nodeValue == AJS.Rte.HIDDEN_CHAR) {
                return true;
            }
        }
        return false;
    }

    /**
     * Returns true if the given element is the first child of the editor body
     */
    function isFirstBodyElement(ed, element) {
        return ed.getBody().firstChild == element;
    }

    /**
     * Returns true if the given element is the last child of the editor body
     */
    function isLastBodyElement(ed, element) {
        return ed.getBody().lastChild == element;
    }

    function bindCursorFixes() {
        var ed = AJS.Rte.getEditor();

        /*
         * In IE, hitting ENTER on the first paragraph inside a macro body placeholder produces a weird issue.
         * In addition to creating a new paragraph, IE adds white space ABOVE the FIRST paragraph. There is no
         * actual element there, just white space that I couldn't for the life of me remove.
         * <p>
         * Solution: don't trust IE to insert the second paragraph after the first. Intercept the ENTER key event
         * and insert one ourselves.
         */
        tinymce.isIE && ed.onKeyPress.add(function(ed, e) {
            var selection = ed.selection;
            var selectedNode = selection.getNode();

            if (e.keyCode === 13 && selectedNode.nodeName === 'P' && ed.dom.is(selectedNode, ":first-child") && tinymce.confluence.MacroUtils.isInMacro(selectedNode)) {
                var newParagraph = ed.dom.create("p", "&#x200b");
                ed.dom.insertAfter(newParagraph, selectedNode);
                selection.select(newParagraph, 1);
                selection.collapse();
                return tinymce.dom.Event.cancel(e);
            }
        });

        tinymce.isGecko && ed.onKeyPress.add(function (ed, e) {
            var selectedNode;
            var anchor;
            var rng;

            if (e.charCode == $.ui.keyCode.SPACE) {
                selectedNode = ed.selection.getNode();
                anchor = $(selectedNode).closest("a");
                rng = ed.selection.getRng();

                if (anchor.length && isCursorAtEnd(ed, ed.selection.getRng(), selectedNode)) {
                    rng.setStartAfter(anchor[0]);
                    rng.setEndAfter(anchor[0]);
                    ed.selection.setRng(rng);
                    ed.selection.collapse();
                }
            }
        });

        // Handle Enter key for blockquote and preformat.
        // - if cursor is at start of the format, insert new p before
        // - if double enter (i.e. enter on empty p) insert a new p after
        ed.onKeyPress.addToTop(function(ed, e) {
            if (e.keyCode === 13 && !e.shiftKey) {
                var selectedNode = ed.selection.getNode();
                var pre = $(selectedNode).closest("pre");

                // handle pre before blockquote, cause pre can be in a blockquote
                if(pre.length && !tinymce.confluence.MacroUtils.isInMacro(pre) && isCursorAtEnd(ed, ed.selection.getRng(), selectedNode)) {
                    insertParagraph(ed, pre, true);
                    return tinymce.dom.Event.cancel(e);
                }

                var blockquote = $(selectedNode).closest("blockquote");

                if (blockquote.length) {
                    var $p = $(selectedNode).closest("p");

                    if ($p.is(":first-child") && isCursorAtStart(ed, ed.selection.getRng(), selectedNode)) {
                        insertParagraph(ed, blockquote, false);
                        return tinymce.dom.Event.cancel(e);
                    }

                    if ($p.is(":last-child") && isEmptyParagraph($p)) {
                        ed.dom.remove($p[0], false);
                        insertParagraph(ed, blockquote, true);
                        return tinymce.dom.Event.cancel(e);
                    }
                }
            }
            return true;
        });
    }

    return {
        insertParagraph: insertParagraph,
        isCursorAtStart: isCursorAtStart,
        isCursorAtEnd: isCursorAtEnd,
        bindCursorFixes: bindCursorFixes
    };
});

require('confluence/module-exporter').safeRequire('confluence-editor/oninit/tinymce-cursor-fixes', function(tinymceCursorFixes) {
    var AJS = require('ajs');
    var $ = require('jquery');

    AJS.Rte = AJS.Rte || {};
    AJS.Rte.Cursor = AJS.Rte.Cursor || {};

    $.extend(AJS.Rte.Cursor, {
        insertParagraph: tinymceCursorFixes.insertParagraph,
        isCursorAtStart: tinymceCursorFixes.isCursorAtStart,
        isCursorAtEnd: tinymceCursorFixes.isCursorAtEnd
    });

    AJS.bind("init.rte", tinymceCursorFixes.bindCursorFixes);
});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/highlightnode/editor_plugin_src.js' */
define('confluence-editor/tinymce3/plugins/highlightnode/editor_plugin_src', [
    'jquery',
    'ajs',
    'document',
    'tinymce'
], function(
    $,
    AJS,
    document,
    tinymce
) {
    "use strict";

    return {
        init : function(ed) {

            AJS.debug("Hightlight Current Node Plugin");

            var includeElements = ['strong', 'em', 'u', 's', 'sub', 'sup', 'a', 'code', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'pre'];
            var commands = {strong: 'Bold', em: 'Italic', u: 'Underline', s: 'Strikethrough', sub: 'subscript', sup: 'superscript'};

            ed.onNodeChange.add(function(ed, cm, n) {
                var $currentElement = $(n);
                var $oldCurrentElement = $(".highlight-marker", ed.getBody());

                // check if we are inside formated node we check if
                // 1. node is actually one of the included elements
                // 2. there were no commands to an editor or formatter to clear current formatting (they enqueue them before actually executing)
                var insideFormatedNode = ($.inArray(n.nodeName.toLowerCase(), includeElements) != -1)
                        && !(n.nodeName.toLowerCase() in commands && !ed.queryCommandState(commands[n.nodeName.toLowerCase()]))
                        && !(!(n.nodeName.toLowerCase() in commands) && !ed.formatter.match(n.nodeName.toLowerCase()));

                if ($currentElement.hasClass("highlight-marker") && insideFormatedNode) {
                    return;
                }

                // clean up the old element
                if ($oldCurrentElement) {
                    $oldCurrentElement.removeClass("highlight-marker");
                }

                // if we are not inside one of the node that needs highlighting
                if (!insideFormatedNode) {
                    return;
                }


                $currentElement.addClass("highlight-marker");
            });

            var removeAllHighlighting = function(content)
            {
                var $highlightedElement = $(".highlight-marker", content);

                // there is supposed to be only one highlightedElement but there was a bug where
                // we didn't clean up it correctly so now they might be more than one
                $highlightedElement.each(function(){
                    $(this).removeClass("highlight-marker");
                });
            };

            $(document).bind("mode-changed", function(e, mode) {
                if (mode === "preview") {
                    removeAllHighlighting($("iframe").contents().find("#content"));
                }
            });

            ed.onSaveContent.add(function(ed, o) {
                var $content = $("<div>" + o.content + "</div>");
                removeAllHighlighting($content);
                o.content = $content[0].innerHTML;
            });

        },

        getInfo : function () {
            return {
                longname : "Atlassian Show Current Node",
                author : "Atlassian",
                authorurl : "http://www.atlassian.com",
                version : tinymce.majorVersion + "." + tinymce.minorVersion
            };
        }
    };
});

require('confluence/module-exporter')
        .safeRequire('confluence-editor/tinymce3/plugins/highlightnode/editor_plugin_src', function(HighlightNodePlugin) {
            var tinymce = require('tinymce');
            var AJS = require('ajs');

            tinymce.create('tinymce.plugins.ShowCurrentNode', HighlightNodePlugin);

            if (AJS.DarkFeatures.isEnabled('highlightnode')) {
                // Register plugin
                tinymce.PluginManager.add("highlightnode", tinymce.plugins.ShowCurrentNode);
            }
        });

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/iosediting/editor_plugin_src.js' */
define('confluence-editor/tinymce3/plugins/iosediting/editor_plugin_src', [
    'jquery',
    'ajs',
    'tinymce'
], function(
    $,
    AJS,
    tinymce
) {
    "use strict";

    /**
     * UX tweak so users understand how to comment using the iPad.
     */
    return {
        init : function(ed) {
            if (tinymce.isIDevice) {
                setTimeout(function(){
                    var $body = $(AJS.Rte.getEditor().getBody());
                    $body.addClass('ios');
                }, 0);
            }
        },
        getInfo : function () {
            return {
                longname : "iOS Comments Plugin",
                author : "Atlassian",
                authorurl : "http://www.atlassian.com",
                version : tinymce.majorVersion + "." + tinymce.minorVersion
            };
        }
    };
});

require('confluence/module-exporter')
        .safeRequire('confluence-editor/tinymce3/plugins/iosediting/editor_plugin_src', function(iOSEditingPlugin) {
            var tinymce = require('tinymce');

            tinymce.create('tinymce.plugins.iOSEditing', iOSEditingPlugin);

            tinymce.PluginManager.add('iosediting', tinymce.plugins.iOSEditing);
        });

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/overrides/dom-utils.js' */
/**
 * Overridden so that if the current node has a table layout DIV parent, it will be
 * returned as the root element. This is used when normalizing selections and wrapping blocks.
 */
define('confluence-editor/tinymce3/overrides/dom-utils', [
    'ajs',
    'jquery'
], function(
    AJS,
    $
) {
    "use strict";

    var DOMUtils = {};

    DOMUtils.getRoot = function () {
        var ed = AJS.Rte.getEditor();
        // We don't set root_element but keeping this from tinymce src for forwards compatibility.
        var dom = ed.dom;
        var settings = dom.settings;

        function getRootNode(dom) {
            var $pageLayoutDiv = $(ed.selection.getNode()).closest("div.innerCell");
            if ($pageLayoutDiv.length > 0) {
                return $pageLayoutDiv[0];
            }
            return dom.doc.body;
        }

        return (settings && dom.get(settings.root_element)) || getRootNode(dom);
    };

    DOMUtils.setRoot = function (element) {
        var ed = AJS.Rte.getEditor();
        ed.dom.settings.root_element = element;
    };

    return DOMUtils;
});


require('confluence/module-exporter').safeRequire('confluence-editor/tinymce3/overrides/dom-utils', function(DOMUtils) {
    var tinymce = require('tinymce');

    tinymce.dom.DOMUtils.prototype.getRoot = DOMUtils.getRoot;
    tinymce.dom.DOMUtils.prototype.setRoot = DOMUtils.setRoot;
});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'toolbar/toolbar-configuration-manager.js' */
define('confluence-editor/toolbar/toolbar-configuration-manager', [
    'jquery'
], function(
    $
) {
    "use strict";

    /**
     * Editor toolbar configuration manager
     * At the moment it is tinymce agnostic.
     *
     * IMPORTANT: This is not meant to be used publicly since it will change once our toolbar
     * gets created dynamically on the client side instead of using a velocity template.
     */
    return function ($toolbar) {

        var TOOLBAR_GROUP_SELECTOR_MAP = {

            // left toolbar split
            Formatting: '.rte-toolbar-group-formatting',
            Style: '.rte-toolbar-group-style',
            Indentation: '.rte-toolbar-group-indentation',
            Lists: '.rte-toolbar-group-lists',
            Tasks: '.rte-toolbar-group-task-lists',
            Justification: '.rte-toolbar-group-justification',
            Links: '.rte-toolbar-group-link',
            Table: '.rte-toolbar-group-table',
            Insert: '.rte-toolbar-group-insert',
            Undo: '.rte-toolbar-group-undo',
            PageLayouts : '#page-layout-2-group',

            // right toolbar split
            SearchReplace: '.rte-toolbar-group-searchreplace',
            Help: '.rte-toolbar-group-help'

        };

        function hideGroup(groupSelector){
            $(groupSelector, $toolbar).hide();
        }

        /**
         * Hide a specific toolbar group
         *
         * @param {object/boolean} groupOptions. It can be a boolean, so we disable the toolbar group at all,
         * or it can contain an object, like { Bold : false}, for when we implement more
         * granular button visibility control in the future.
         * @param {string} groupSelector toolbar group selector
         */
        function setVisibilityForGroup(groupOptions, groupSelector) {
            if (groupOptions === false){
                hideGroup(groupSelector);
            }

            // we probably don't need it right now, but in the future we can be more granular
            // maintaining this same API just by parsing the options parameter as an object as well,
            // after checking that is not a boolean, like in:
            // options = { Formatting.bold : true }'
        }

        function configureToolbar (toolbarOptions){
            if (toolbarOptions === false) { // explicitly hiding toolbar
                $toolbar.hide();
                return;
            }

            toolbarOptions = toolbarOptions || {};

            for (var key in toolbarOptions){
                if (toolbarOptions.hasOwnProperty(key)) {
                    if (TOOLBAR_GROUP_SELECTOR_MAP[key]) { // valid config option
                        setVisibilityForGroup(toolbarOptions[key], TOOLBAR_GROUP_SELECTOR_MAP[key]);
                    }
                }
            }
        }

        return {

            /**
             * Sets what default toolbar groups to display.
             *
             * @param {object} toolbarOptions toolbar display options
             *
             *      toolbar: {
             *           Formatting : false,
             *           Style: false,
             *           Indentation: false,
             *           Lists: false,
             *           Justification: true,
             *           Links: false,
             *           Table: false,
             *           Insert: false,
             *           Undo: false,
             *           SearchReplace: false,
             *           Help: false
             *       }
             */
            configureToolbar: configureToolbar
        };
    };
});

require('confluence/module-exporter').exportModuleAsGlobal('confluence-editor/toolbar/toolbar-configuration-manager', 'AJS.Confluence._ToolbarConfigurationManager');

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'loader/tinymce-bootstrap.js' */
/**
  * Initialises the editor
  */
define('confluence-editor/loader/tinymce-bootstrap', [
    'ajs',
    'underscore',
    'jquery',
    'document'
], function(
    AJS,
    _,
    $,
    document
) {
    "use strict";

    var defaultSettings = {
        atlassian: true,
        keep_values: true,
        convert_urls: true,
        relative_urls: false,
        // CONFDEV-1555 - Required for IE and SSL to ensure complete URLs for inline style urls. Otherwise IE displays security warnings.
        remove_script_host: false,
        button_tile_map: true,
        gecko_spellcheck : true,
        apply_source_formatting: false, //we don't want new lines between html elements when serialized and sent to the backend
        list_outdent_on_enter: true,

        // table settings
        visual: false,
        confluence_table_style: "confluenceTable",
        confluence_table_cell_style: "confluenceTd",
        confluence_table_heading_style: "confluenceTh",
        confluence_table_default_rows: 4,
        confluence_table_default_cols: 3,
        confluence_table_default_heading: true,

        // output settings
        cleanup: true,
        /**
         * This is to ensure that any empty elements that require padding are padded with an &nbsp; (say PRE, P, DIV etc.)
         * These spaces are an editor concern and should not be persisted to our storage.
         */
        cleanup_on_startup: true,

        /**
         * This must be false since browsers depend on broken list markup to provide working bullet functionality.
         * We fix up the broken list markup on the server side before we save it so its not necessary here anyway.
         */
        fix_list_elements : false,
        fix_table_elements : true,

        valid_elements : // Theoretically, most elements are allowed to have a wysiwyg parameter set.  See ExternallyDefinedConverter
                '@[id|class|style|title|wysiwyg|dir<ltr?rtl|lang|xml::lang|onclick|ondblclick|onmousedown|onmouseup|onmouseover|onmousemove|onmouseout|onkeypress|onkeydown|onkeyup],' +
                    // We add extra link attributes to help conversion to wiki markup
                        'a[*],' +
                        'strong/b,em/i,s,u,' +
                    // User paragraphs indicate a blank line.  See DefaultWysiwygConverter.isUserNewline
                        '#p[align|user],' +
                        '-ol[type|compact],-ul[type|compact],li,br,' +
                    // The ImageConverter uses an imagetext attribute
                        'img[imagetext|longdesc|usemap|src|border|alt=|title|hspace|vspace|width|height|align],' +
                        '-sub,-sup,'+
                    // the markup tag is used to distinguish bq. markup from {quote}s.  See BlockQuoteConverter.java
                        '-blockquote[cite|markup],' +
                        '-table[*],' +
                        '-tr[rowspan|width|height|align|valign|bgcolor|background|bordercolor],tbody,thead,tfoot,' +
                        '#td[colspan|rowspan|width|height|align|valign|bgcolor|background|bordercolor|scope],' +
                        '#th[colspan|rowspan|width|height|align|valign|scope],caption,' +
                        'div[*],' +
                        '#span[*],-code,#pre[*],address,-h1,-h2,-h3,-h4,-h5,-h6,hr[size|noshade],' +
                        '-font[face|size|color],dd,dl,dt,cite,abbr,acronym,del[datetime|cite],ins[datetime|cite],object[classid|width|height|codebase|*],param[name|value],' +
                        'embed[type|width|height|src|*],map[name],area[shape|coords|href|alt|target],bdo,button,col[align|char|charoff|span|valign|width],' +
                        'colgroup[align|char|charoff|span|valign|width],dfn,fieldset,form[action|accept|accept-charset|enctype|method],' +
                        'input[accept|alt|checked|disabled|maxlength|name|readonly|size|src|type|value],kbd,label[for],legend,noscript,' +
                        'optgroup[label|disabled],option[disabled|label|selected|value],q[cite],samp,select[disabled|multiple|name|size],small,' +
                        'textarea[cols|rows|disabled|name|readonly],tt,var,big',

        extended_valid_elements: "img[*],time[class|datetime|contenteditable|onselectstart|unselectable|oncontrolselect]",

        //white list the removeformat elements we want to support
        formats: {
            removeformat : [
                {selector : 'h1,h2,h3,h4,h5,h6,pre',
                   remove : 'all', split : true, expand : false, block_expand : true, deep : true, block: '*'},
                {selector : 'address,article,b,big,blockquote,center,cite,code,date,dd,del,dfn,dl,dt,em,embed,font,footer,' +
                        'header,hgroup,i,ins,kbd,link,menu,nav,object,param,q,s,samp,script,' +
                        'section,small,strike,strong,style,sub,sup,time,tt,u,var',
                    remove : 'all', split : true, expand : false, block_expand : true, deep : true},
                {selector : 'span', attributes : ['style','class'], remove : 'empty', split : true, expand : false, deep : true}, // colored text
                {selector : 'table', attributes : ['cellpadding','cellspacing','border'], split : false, expand : false, deep : true},
                {selector : '*', attributes : ['style','color','bgcolor','title','lang'], split : false, expand : false, deep : true}
            ]
        },

        forced_root_block : 'p',
        force_p_newlines: true, // default
        force_br_newlines: false, // default

        oninit: "AJS.Rte.BootstrapManager.onInit",

        /**
         * Disable resize controls on tables and images in firefox. They render out of place when margins are applied to the table.
         */
        object_resizing: false,

        //Trigger a pre paste event that can be captured by the Confluence paste plugin
        paste_preprocess : function(pl, o) {
          $(document).trigger('prePaste', [pl, o]);
        },
        // add class=" confluence-embedded-image" to images so that we get the image property panel if image clicked.
        // The 'not' operation is to avoid the property panel applying to copy and pasted emoticons and macro placeholders.
        paste_postprocess : function(pl, o) {
            $("img", o.node)
                    .not('[data-emoticon-name]')
                    .not('.editor-inline-macro')
                    .not('.confluence-embedded-image')
                    .not('.template-variable')
                    .addClass("confluence-embedded-image confluence-external-resource");
            //Trigger a post paste event that can be captured by the confluence paste plugin
             $(document).trigger('postPaste', [pl, o]);
        }
    };

    /**
     * This can be called at any point once the TinyMCELang and the tinymce.Editor are available.
     */
    var initialiseTranslations = function(languagePrefix) {
        var tinymce = require('tinymce');
        var TinyMCELang = require('confluence-editor/i18n/translations.i18n');

        AJS.debug("Bootstrap: set locale translations");
        if (typeof TinyMCELang == undefined) {
            AJS.log("ERROR: could not find the TinyMCE language pack");
        }

        var ctrlTrans = new RegExp(TinyMCELang.ctrl_key + "\\+", 'g');
        var shiftTrans = new RegExp(TinyMCELang.shift_key + "\\+", 'g');

        // helper to make tool-tips mac friendly
        var replaceForMac = function(str) {
            return str.replace(ctrlTrans, "\u2318").replace(shiftTrans, "\u21E7");
        };

        for (var key in TinyMCELang) {
            var langGroup = TinyMCELang[key];
            if (typeof langGroup === "object") {
                for (var strKey  in langGroup) {
                    if(tinymce.isMac) {
                        langGroup[strKey] = replaceForMac(langGroup[strKey]);
                    }
                }
            }

            tinymce.EditorManager.addI18n(languagePrefix + "." + key, TinyMCELang[key]);
        }

        // fix up the the tooltips on the toolbar
        if (tinymce.isMac) {
            $("#rte-toolbar .toolbar-item, #rte-toolbar .dropdown-item, #rte-savebar .aui-button").each(function() {
                var $this = $(this);
                var title = $this.attr("title");
                var dataTooltip = $this.attr("data-tooltip");
                if (title) {
                    $this.attr("title", replaceForMac(title));
                }
                if(dataTooltip) {
                    $this.attr("data-tooltip", replaceForMac(dataTooltip));
                }
            });
        }
    };

    /**
     * Resolve plugins to be initialized with editor
     *
     * @param {string} originalPlugins The original plugins before initialization
     * @param {Array} includePlugins List of additional plugins to be included
     * @param {Array} excludePlugins List of plugins to be excluded, plugins in this list will override plugins from the parameter before
     */
    function resolvePlugins(originalPlugins, includePlugins, excludePlugins){
        var editorPlugins = originalPlugins.split(',');
        // Underscore will conveniently do the parameters validation when processing arrays
        editorPlugins = _.chain(editorPlugins).union(includePlugins).difference(excludePlugins).value();

        return editorPlugins.join(',');
    }

    var BootstrapManager = {
        /**
         * Non interface methods & variables
         */
        _tinyMceHasInit : false,
        _beforeInitCallbacks : [],
        _tinymcePluginInits : [],
        /**
         * The settings used (or to be used) for initialising
         */
        _settings : null,

        /**
         * @return true when TinyMCE has initialised. Note that this does not
         * mean there is an Editor active, it simply means that TinyMCE is in
         * a state where it could activate an editor.
         */
        isInitComplete: function () {
            return this._tinyMceHasInit;
        },

        /**
         * @return true if there is currently an Editor active.
         */
        isEditorActive: function() {
            var tinymce = require('tinymce');
            return this.isInitComplete() && tinymce && tinymce.activeEditor;
        },

        onInit : function() {
            this._tinyMceHasInit = true;
            var ed = AJS.Rte.getEditor();

            // At this point, the editor may not be fully initialised yet
            // Please use "rte-ready" to bind editor initialisation related events
            // "init.rte" will be eventually deprecated
            AJS.trigger("init.rte",{ editor: ed });

            // get editor-auto-focus parameter.
            // This parameter is optional and defaults to true, unless it is explicitly set to false.
            var autoFocus = AJS.Meta.get('editor-auto-focus') !== false;
            if (autoFocus) {
                AJS.Rte.editorFocus(ed);
            }
            else {
                AJS.debug("Bootstrap: editor-auto-focus=false. Do not focus the editor automatically.");
            }
        },

        /**
         * Adds a callback that will be executed after this editor instance has been initialised.
         * @param callback
         * @deprecated since 4.1 use AJS.bind("init.rte", callback);
         */
        addOnInitCallback: function(callback) {
            if ($.isFunction(callback)) {
                if (this._tinyMceHasInit) {
                    callback();
                }
                else {
                    AJS.bind("init.rte", callback);
                }
            } else {
                throw new Error('Attempt made to register an oninit callback that is not a function. Received: ' + callback);
            }
        },

        /**
         * Add a function to be called immediately before AJS.Rte.BootstrapManager.initialise. A typical usage would
         * be to refresh any settings that may have changed or become available since AJS.Rte.BootstrapManager.preInitialise.
         *
         * @param func the function to be called before initialise. This function can take a single parameter which will
         * be the TinyMCE settings object.
         */
        addBeforeInitCallback: function(func) {
            this._beforeInitCallbacks.push(func);
        },

        addTinyMcePluginInit: function(func) {
            this._tinymcePluginInits.push(func);
        },

        /**
         * This prepares for TinyMCE initialisation although it does not instigate the initialisation.
         *
         * @param settings - tinymce settings to be used when initialise is later called.
         */
        preInitialise : function(settings) {
            this._settings = $.extend(defaultSettings, settings);
        },

        /**
         * Initialises the TinyMCE editor. The HTML for the Editor must be available at the point
         * you call this function.
         *
         * @param options {object}
         * @param options.plugins {Array} List of additional plugins to load the editor with
         * @param options.excludePlugins {Array} List of loaded plugins to be excluded from the editor
         * @param options.onInitialise {Function} Callback to be executed right after TinyMCE was initialised
         */
        initialise : function (options) {
            var tinymce = require('tinymce');

            if (!this._settings) {
                AJS.log("Bootstrap:initialise: No settings found. Has preInitialise been called?");
                return;
            }

            options = $.extend({}, options); // copy to prevent reference mutation
            var settings = $.extend({}, this._settings); // copy to prevent reference mutation

            AJS.Rte.isQuickEdit = options.isQuickEdit || false;

            AJS.debug("Bootstrap:initialise: Initialising TinyMce version " + tinymce.majorVersion + "." + tinymce.minorVersion);

            // Some settings are taken from the DOM for the Editor. This isn't necessary available until this point.
            // (You can't initialise without the DOM being available.)
            // This is really an artifact of the fact that we either use the Editor from a full page load, or we
            // load it dynamically after the initial page load. It is assumed that in the future the Editor will
            // always be dynamically initiated which means this mechanism can be replaced with something more
            // appropriate.
            $.each(this._beforeInitCallbacks, function(index, func) {
                func(settings);
            });

            // plugin point for tinymce plugins to configure settings
            for (var i = 0, ii = this._tinymcePluginInits.length; i < ii; i++) {
                if (typeof this._tinymcePluginInits[i] === "function") {
                    this._tinymcePluginInits[i](settings);
                }
            }

            initialiseTranslations(settings.language);

            // configure toolbar
            var toolbarManager = new AJS.Confluence._ToolbarConfigurationManager($('#toolbar'));
            toolbarManager.configureToolbar(options.toolbar);

            settings.plugins = resolvePlugins(settings.plugins, options.plugins, options.excludePlugins);

            /**
             * CONFDEV-37087
             * provide ability to setup some handlers right after editor is initialised
             * can not rely on postInitialise, b/c it is too late, some events had been triggered before postInitialise (e.g onLoad)
             */
            settings.setup = options.onInitialise;

            /**
             * tinyMCE initialisation
             */
            tinymce.init(settings);

            // so we don't trigger drafts due to macro manipulation
            AJS.Rte.Content.editorResetContentChanged();

            /*
             * Add a tab index to the Editor. The Save button will be given 101
             */
            $(AJS.Rte.getEditorFrame()).attr("tabindex", 100);

            if (tinymce.isIE) {
                $(AJS.Rte.getEditorFrame()).attr("hidefocus", "hidefocus");
            }

            // At this point, the editor is ready to be used.
            // Please use rte-ready to bind editor initialisation related events
            AJS.trigger("rte-ready");
        }
    };

    return BootstrapManager;
});

require('confluence/module-exporter').exportModuleAsGlobal('confluence-editor/loader/tinymce-bootstrap', 'AJS.Rte.BootstrapManager');
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'utils/environment.js' */
define("confluence-editor/utils/environment", [
    'ajs'
],
function (
    AJS
) {
    "use strict";

    var module = {
        isMac: (navigator.platform.indexOf('Mac') >= 0),

        transformCmdKeyTextBasingOnOS: function (text) {
            var ctrl = "Ctrl"; //for non-Mac
            var cmd = '\u2318'; //for Mac

            return this.isMac ? text.replace(new RegExp(ctrl, 'g'), cmd) : text;
        }
    };

    return module;
});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'utils/editor-utils.js' */
define('confluence-editor/utils/editor-utils', [
    'jquery',
    'tinymce'
], function(
    $,
    tinymce
) {
    "use strict";

    /**
     * EditorUtils to encapsulate useful and often repeated logic for editor operations (e.g. cursor logic).
     */
    var SHALLOW = true;

    function isEmptyTextNode(node) {
        return node && node.nodeType === 3 && node.nodeValue.length === 0;
    }

    var that = {
        /**
         * Returns true if the cursor is at the start and there are no previous siblings within the specified context.
         *
         * @param node (required) a DOM element
         * @param range (required) the range
         */
        isCursorAtStartOf: function (node, range) {
            return range.collapsed && that.isRangeAtStartOf(node, range);
        },

        /**
         * "Start Of" is defined as: if there is no element preceeding where the range begins (in the context or confines of the specified node)
         *
         * This can be used for collpased or non-collapsed ranges.
         *
         * @param node the node
         * @param range the range
         */
        isRangeAtStartOf: function (node, range) {
            if (!range || !range.startContainer) {
                throw new Error("range is invalid. received: " + range);
            }

            if (!node || !node.nodeType) {
                throw new Error("context is invalid. received: " + node);
            }

            var startContainer = range.startContainer;
            var nodeAfterCursor;

            if (startContainer.nodeType === 3) {
                if (range.startOffset !== 0) { // cursor is not at the start of the text node
                    return false;
                }

                nodeAfterCursor = startContainer;
            } else {
                nodeAfterCursor = startContainer.childNodes[range.startOffset];

                //CONF-32529:
                //nodeAfterCursor === undefined when startContainer has no child
                //or actually there is no element after cursor
                if (nodeAfterCursor === undefined &&
                    startContainer.childNodes.length > 0) {
                    //mean that there is at least one element before the current range
                    return false;
                }
            }

            var walker = new tinymce.dom.TreeWalker(nodeAfterCursor, node);
            var nodeBeforeCursor;

            /**
             * Skip past any empty text nodes (text nodes with nodeValue of length 0).
             */
            do {
                nodeBeforeCursor = walker.prev(SHALLOW);
            } while (isEmptyTextNode(nodeBeforeCursor))

            return nodeBeforeCursor === undefined;
        },

        /**
         * Returns true if the cursor is at the end and there are no next siblings within the specified context.
         *
         * @param node (required) a DOM node
         * @param range (required) the range
         */
        isCursorAtEndOf: function (node, range) {
            return range.collapsed && that.isRangeAtEndOf(node, range);
        },

        /**
         * "End Of" is defined as: if there is no element that comes after where the range ends (in the context or confines of the specified node)
         *
         * This can be used for collpased or non-collapsed ranges.
         *
         * @param node the node
         * @param range the range
         */
        isRangeAtEndOf: function (node, range) {
            if (!range || !range.endContainer) {
                throw new Error("range is invalid. received: " + range);
            }

            if (!node || !node.nodeType) {
                throw new Error("container is invalid. received: " + node);
            }

            var endContainer = range.endContainer;
            var nodeBeforeCursor;

            if (endContainer.nodeType === 3) {
                if (range.endOffset != endContainer.nodeValue.length) { // cursor is in the middle of the text node
                    return false;
                }

                nodeBeforeCursor = endContainer;
            } else {
                nodeBeforeCursor = endContainer.childNodes[range.endOffset === 0 ? range.endOffset : range.endOffset - 1];
            }

            var walker = new tinymce.dom.TreeWalker(nodeBeforeCursor, node);
            var nodeAfterCursor;

            /**
             * Skip past any empty text nodes (text nodes with nodeValue of length 0).
             */
            do {
                nodeAfterCursor = walker.next(SHALLOW);
            } while (isEmptyTextNode(nodeAfterCursor))

            return nodeAfterCursor === undefined
                /**
                 * Some browsers (like FF and webkit) can terminate a P with a BR element. If this is BR element is the last child
                 * and the cursor is before it, we still consider a cursor in this position to be "at the end".
                 */
                || (nodeAfterCursor.nodeName === "BR" && walker.next(SHALLOW) === undefined);
        },

        /**
         * Sets the cursor at the start of the contents of the specified element.
         *
         * If the element is a text node, the cursor will be set inside and at the beginning of the text node.
         *
         * If the element is a DOM element with child nodes, the first text node in this list of child nodes will be selected as the one to contain the cursor.
         * The cursor will be set inside and at the start of this text node.
         *
         * @param element the element
         */
        setCursorAtStartOfContents: function (element) {
            if (!element) {
                throw new Error("element is required.");
            }
            if (element.nodeType !== 1 && element.nodeType !== 3) {
                throw new Error("invalid argument: expected a DOM element or text node, got: " + element);
            }

            var editor = tinymce.activeEditor;
            var range = editor.dom.createRng();

            if ($(element).is("br, img")) {
                range.setStartBefore(element);
                range.setEndBefore(element);
                editor.selection.setRng(range);
            } else {
                editor.selection.select(element, true);
                editor.selection.collapse(true);
            }
        }
    };

    return that;

});

require('confluence/module-exporter').exportModuleAsGlobal('confluence-editor/utils/editor-utils', 'AJS.EditorUtils');
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/table/atlassian-table.js' */
define('confluence-editor/tinymce3/plugins/table/atlassian-table', [
    'jquery',
    'ajs',
    'tinymce'
], function ($,
        AJS,
        tinymce) {
    "use strict";

    /**
     * Customisations to tinymce table plugin.
     */
    function getSelectedHighlightColour() {
        return $('#table-highlight-group').attr('data-highlight-colour') || '';
    }

    function isHighlightRemoval() {
        return !!$('#table-highlight-group').attr('data-remove-highlight');
    }

    function isDefaultColour() {
        return !getSelectedHighlightColour();
    }

    function setBackgroundColour(cells) {
        var colour;
        clearBackgroundColour(cells);
        if (!isDefaultColour()) {
            colour = getSelectedHighlightColour();
            cells.attr('data-highlight-colour', colour);
            cells.addClass('highlight-' + colour);
        }
    }

    function clearBackgroundColour(cells) {
        var i;
        var l;
        var cell;
        for(i = 0, l = cells.length; i < l; i++) {
            cell = cells.eq(i);
            if(cell.attr('data-highlight-colour')) {
                cell.removeAttr('data-highlight-colour');
            }
            /**
             * CONFDEV-37873
             * somehow, there are many CSS class "highlight-" on a cell
             * should remove all of them, not only the one stored in "data-highlight-colour"
             */
            cell[0].className = cell[0].className.replace(/( |^)highlight(-\w+)+/g, "");
        }
    }

    function isSelectedColour(highlights) {
        var hlColour = getSelectedHighlightColour();
        var i;
        var l;
        var cellColour;
        for (i = 0, l = highlights.length; i < l; i++) {
            cellColour = highlights.eq(i).attr('data-highlight-colour') || '';
            if (cellColour !== hlColour) {
                return false;
            }
        }
        return true;
    }

    /* Keep simple only consider start position -> means cursor gets collapsed. */
    function isCursorInCell($origEl) {
        var $node = $(AJS.Rte.getEditor().selection.getNode());
        if (!$node.length) {
            return false;
        }

        if ($node[0] === $origEl[0]) {
            return true;
        }

        return !!$node.closest($origEl).length;
    }

    function changeTagType($origEl, newTag) {
        if (!$origEl.length) {
            return;
        }

        var ed = AJS.Rte.getEditor();

        var cursorInCell = isCursorInCell($origEl);

        var origEl = $origEl[0];
        var doc = origEl.ownerDocument;
        var newEl = doc.createElement(newTag);

        var attrs = origEl.attributes;
        for (var i = 0, l = attrs.length; i < l; i++) {
            var attr = attrs[i];
            newEl.setAttribute(attr.nodeName, attr.nodeValue);
        }

        while (origEl.hasChildNodes()) {
            newEl.appendChild(origEl.firstChild);
        }

        var newCursorTarget;
        origEl.parentNode.replaceChild(newEl, origEl);

        if (cursorInCell) {
            // Put cursor at end of cell if cursor was previously in this cell
            ed.selection.select(newEl, true);
            ed.selection.collapse();
        }


        return $(newEl);
    }

    var rteTable = {
        convertToNormalCells: function (cells) {
            cells.filter('th').each(function () {
                var $el = $(this);
                $el = changeTagType($el, 'td');
                $el.removeClass('confluenceTh');
                $el.addClass('confluenceTd');
            });
        },
        convertToHeadingCells: function (cells) {
            cells.filter('td').each(function () {
                var $el = $(this);
                $el = changeTagType($el, 'th');
                $el.removeClass('confluenceTd');
                $el.addClass('confluenceTh');
            });
        },
        areCellsHeadings: function (cells) {
            var headings = cells.filter("th");
            var headingCount = headings.length;
            return (cells.length === headingCount);
        },
        isColumnHeading: function (table, index) {
            var rows = $(table).children("tbody").children("tr");
            if (rows.length === 1) {
                return false; // special case for single row table
            }
            var headingColumnCells = rows.children().nthCol(index).filter('th');
            return (headingColumnCells.length === rows.length);
        },
        areCellsHighlighted: function (cells) {
            var highlighted = cells.filter("td[data-highlight-colour],th[data-highlight-colour]");
            var highlightedCount = highlighted.length;
            return (cells.length === highlightedCount && isSelectedColour(highlighted));
        },
        /**
         * Returns true if the given column index of the table is highlighted in the same colour. Note that the index is 1-based.
         */
        isColumnHighlighted: function (table, index) {
            var columnCells = $(table).children("tbody").children("tr").children("th,td").nthCol(index);
            var highlighted = columnCells.filter("td[data-highlight-colour],th[data-highlight-colour]");
            var highlightedCount = highlighted.length;

            if (columnCells.length !== highlightedCount) {
                return false;
            }

            var highlightColour = columnCells.eq(0).attr('data-highlight-colour');
            for (var i = 1, l = columnCells.length; i < l; i++) {
                if (highlightColour !== columnCells.eq(i).attr('data-highlight-colour')) {
                    return false;
                }
            }
            return true;
        }
    };

    function tableCustomisations(e, data) {

        var dialog;
        var ed = data.editor;
        var getSelectedRow = function (editor) {
            var selectedCells = $(editor.getBody()).find('td.mceSelected,th.mceSelected');
            if (!selectedCells.length) {
                selectedCells = $(editor.selection.getNode());
            }
            var row = selectedCells.closest("tr");
            var parent = row.parent();
            var table = parent.is("tbody") ? row.parent().parent() : parent;

            while (row.length !== 0 && !table.is(".confluenceTable")) {
                row = table.closest("tr");
                parent = row.parent();
                table = parent.is("tbody") ? row.parent().parent() : parent;
            }

            return row;
        };
        var getSelectedCell = function (editor) {
            return $(editor.selection.getNode()).closest("th.confluenceTh,td.confluenceTd");
        };
        var getSelectedCells = function (editor) {
            var selectedCells = $(editor.getBody()).find('th.confluenceTh.mceSelected,td.confluenceTd.mceSelected');
            if (selectedCells.length) {
                return selectedCells;
            }

            // Return the cell based on the cursor position
            return getSelectedCell(editor);
        };
        var isTableAllHeadings = function (table) {
            return table.find("tbody > tr > td").length === 0;
        };

        /**
         * Override default command.
         * <p>
         * Simple insert table dialog.
         */
        ed.addCommand("mceInsertTable", function (ui, val) {
            AJS.Rte.BookmarkManager.storeBookmark();

            if (!dialog) {
                dialog = new AJS.Dialog({
                    width: 400,
                    height: 230,
                    id: "insert-table-dialog",
                    keypressListener: function (e) {
                        if (e.keyCode === 27) {
                            dialog.hide();
                        }
                    }
                });
                dialog.addHeader("Insert Table");
                dialog.addPanel("Panel 1", "panel1");
                dialog.getCurrentPanel().html(AJS.renderTemplate("tableForm", "4", "3"));

                $("#tinymce-table-form input[type='text']").click(function () {
                    $(this).select();
                });

                var insert = function (dialog) {
                    dialog.hide();
                    ed.plugins.table.insertTable();
                };

                $("#tinymce-table-form").keypress(function (e) {
                    if (e.keyCode === 13) {
                        insert(dialog);
                    }
                });

                dialog.addButton("Insert", insert, "ok");
                dialog.addCancel("Cancel", function (dialog) {
                    dialog.hide();
                    return false;
                }, "cancel");
            }

            dialog.show();
        });

        /**
         * Toggle row highlighting favours highlighting, so
         * if one or more cells are not highlighted, then highlight.
         * <p>
         * "highlight" is used for td's.
         * "nohighlight" is used for th's (to support existing content).
         */
        ed.addCommand("confTableRowToggleHeading", function (ui, options) {
            //button && button.toggleClass("selected");
            var row = getSelectedRow(this);
            var rowCells = row.children("td,th");
            var columnIdx = 0;

            if (rteTable.areCellsHeadings(rowCells)) {
                // all cells highlighted - remove highlighting unless heading column
                if (!isTableAllHeadings(row.closest('table'))) {
                    rowCells = rowCells.filter(function () {
                        var cell = $(this);
                        var table = cell.closest('table');
                        columnIdx += cell.attr('colspan') || 1;
                        // exclude cells that form a column heading
                        return !rteTable.isColumnHeading(table, columnIdx);
                    });
                }
                rteTable.convertToNormalCells(rowCells);
            } else {
                // not all cells are highlighted - ensure all are highlighted
                rteTable.convertToHeadingCells(rowCells);
            }
        });
        /**
         * Toggle column highlighting favours highlighting, so
         * if one or more cells are not highlighted, then highlight.
         * <p>
         * Highlighting is not removed from the heading cell (th) if
         * the heading row if highlighted.
         * <p>
         * "highlight" is used for td's.
         * "nohighlight" is used for th's (to support existing content).
         */
        ed.addCommand("confTableColumnToggleHeading", function (ui, options) {

            function getColumnCells(selectedCells) {
                var cells = $([]);
                selectedCells.each(function () {
                    var selectedCell = $(this);
                    var index = selectedCell.index() + 1; //nth-child is 1-indexed
                    var table = selectedCell.closest("table.confluenceTable");
                    var rows = table.children("tbody").children("tr");
                    cells = cells.add(rows.children().nthCol(index));
                });
                return cells;
            }

            var selectedCells = getSelectedCells(this);
            var columnCells = getColumnCells(selectedCells);

            // removes columnCells where an entire row is a heading
            if (rteTable.areCellsHeadings(columnCells)) {
                // all cells highlighted unless there's a row of th
                if (!isTableAllHeadings(columnCells.closest('table'))) {
                    columnCells = columnCells.filter(function () {
                        var cell = $(this);
                        var row = cell.parent('tr');
                        var siblingCells = row.children();
                        var siblingThCells = siblingCells.filter('th');
                        return siblingCells.length !== siblingThCells.length;
                    });
                }
                rteTable.convertToNormalCells(columnCells);
            } else {
                // not all cells are highlighted - ensure all are highlighted
                rteTable.convertToHeadingCells(columnCells);
            }
        });

        /**
         * Highlights the current table cell selection, or if none the current cell.
         */
        ed.addCommand("confTableSelectionToggleHighlight", function (ui, options) {
            var alwaysHighlight = options && options.alwaysHighlight;
            var selectedCells = getSelectedCells(this);
            var td = selectedCells.filter("td");
            var th = selectedCells.filter("th");
            if (rteTable.areCellsHighlighted(selectedCells) && !alwaysHighlight || isHighlightRemoval()) {
                clearBackgroundColour(selectedCells);
            } else {
                setBackgroundColour(selectedCells);
            }
        });

        if (tinymce.isIE8 || AJS.DarkFeatures.isEnabled("confluence-table-enhancements.auto-row")) {
            ed.onKeyDown.add(function (_, e) {
                function isEdgeElement(element, cell, direction) {
                    while (element != cell) {
                        if (element[direction]) {
                            return false;
                        }

                        element = element.parentNode;
                    }

                    return true;
                }

                function isCaretAtEdgeOfCell(cell, direction) {
                    var rng = ed.selection.getRng(true);
                    var sc = rng.startContainer;
                    if (rng.collapsed) {
                        var edgeElement = isEdgeElement(sc, cell, direction);
                        if (sc.nodeType === 3) {
                            return edgeElement && rng.startOffset == ((direction == "nextSibling") ? sc.length : 0);
                        } else if (sc == cell) {
                            // sc.childNodes.length - 1 because a <br> tag is included in empty table cells by default
                            return rng.startOffset == ((direction == "nextSibling") ? sc.childNodes.length - 1 : 0);
                        } else {
                            return edgeElement;
                        }
                    }

                    return false;
                }

                // If we're in the first cell of the table, we need to let the normal event proceed and move the cursor
                // out of the table
                function isCaretInFirstCell() {
                    var selectedNode = ed.selection.getNode();
                    var $table = $(selectedNode).parents("table").first();
                    var firstCell = $table.find('tr:first-child').children().first()[0];

                    return firstCell == selectedNode;
                }

                // Similarly if we're in the last cell of the table
                function isCaretInLastCell() {
                    var selectedNode = ed.selection.getNode();
                    var $table = $(selectedNode).parents("table").first();
                    var lastCell = $table.find('tr:last-child').children().last()[0];

                    return lastCell == selectedNode;
                }

                if ((e.keyCode === 37 || e.keyCode === 39) && !e.shiftKey) {
                    var $selectedCell = getSelectedCell(this);
                    if ($selectedCell.length) {
                        var selectedCell = $selectedCell[0];
                        if (e.keyCode === 37 && (isCaretAtEdgeOfCell(selectedCell, "previousSibling")) && !isCaretInFirstCell()) {
                            ed.execCommand("mceTableMoveCaretToPrevCell");
                            return tinymce.dom.Event.cancel(e);
                        } else if (e.keyCode === 39 && isCaretAtEdgeOfCell(selectedCell, "nextSibling") && !isCaretInLastCell()) {
                            ed.execCommand("mceTableMoveCaretToNextCell");
                            return tinymce.dom.Event.cancel(e);
                        }
                    }
                }
            });
        }

        if (tinymce.isWebKit) {
            // CONFDEV-5475 - Add Chrome specific style to work around truncation of spaces at the end of content when content is reformatted.
            // Not necessary if http://code.google.com/p/chromium/issues/detail?id=92287 is fixed (CONFDEV-5700).
            var whitespaceStyle = $('<style type="text/css"></style>').html('.confluenceTable th,td { white-space: pre-wrap; }');
            $(ed.getDoc().head).append(whitespaceStyle);
        }

        function isInTable() {
            var selectionNode = ed.selection.getNode();

            if ($(selectionNode).parents("table").is(".confluenceTable")) {
                // lists have precedence over tables
                var inList = ed.dom.getParent(selectionNode, 'UL,OL');
                return !inList;
            }
            return false;
        }

        // Handle tabbing in a table.
        ed.onKeyDown.add(function (_, e) {
            if (e.keyCode === 9) {
                if (isInTable()) {
                    var command = e.shiftKey ? "mceTableMoveCaretToPrevCell" : "mceTableMoveCaretToNextCell";
                    ed.execCommand(command);

                    e.preventDefault();
                    return false;
                }
            }
        });

        if (AJS.DarkFeatures.isEnabled("confluence-table-enhancements.auto-row")) {
            // If the numbering column is clicked, move the cursor to the next cell
            ed.onClick.add(function (_, e) {
                var $selectedCell = getSelectedCell(this);

                if ($selectedCell.hasClass('numberingColumn') && !$selectedCell.hasClass('confluenceTh')) {
                    ed.execCommand("mceTableMoveCaretToNextCell");
                }
            });

            // We need to handle moving down or up from the first cell of a heading row
            ed.onKeyDown.addToTop(function (_, e) {
                if ((e.keyCode === 38 || e.keyCode === 40) && isInTable()) {
                    if (getSelectedCell(this).hasClass('numberingColumn')) {
                        ed.execCommand("mceTableMoveCaretToNextCell");
                        e.preventDefault();
                        return false;
                    }
                }
            });
        }
    }

    AJS.bind("init.rte", tableCustomisations);

    function setNumberingColumnUneditable() {
        var $editorContent = $(AJS.Rte.getEditor().getDoc().body);
        var numberingColumnCells = $editorContent.find('.confluenceTd.numberingColumn');

        numberingColumnCells.attr('contenteditable', 'false');
    }

    // On editor init, we need to prevent the numbering column from being editable
    if (AJS.DarkFeatures.isEnabled("confluence-table-enhancements.auto-row")) {
        // init.rte is fired too early in the quickedit process, so bind to both events
        AJS.bind("quickedit.success", setNumberingColumnUneditable);
        AJS.bind("init.rte", setNumberingColumnUneditable);
    }

    return rteTable;
});

require('confluence/module-exporter')
        .exportModuleAsGlobal('confluence-editor/tinymce3/plugins/table/atlassian-table', 'AJS.Rte.Table');

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/table/atlassian-table-picker.js' */
/**
 * Table picker for inserting tables
 */
define('confluence-editor/tinymce3/plugins/table/atlassian-table-picker', [
    'ajs',
    'tinymce',
    'jquery',
    'document'
], function(
    AJS,
    tinymce,
    $,
    document
) {
    "use strict";

    var _internal = {};

    // Static data
    var doc;
    var body;
    var backdrop;
    var button;
    var buttonLink;
    var ddParent;
    var container;
    var pickerBox;
    var pickerCell;
    var pickerHeading;
    var pickerSelectedCell;
    var pickerSelectedHeading;
    var desc;
    var DEFAULT_WIDTH = 4;
    var DEFAULT_HEIGHT = 4;
    var MAX_WIDTH = 15;
    var MAX_HEIGHT = 20;
    var TABLE_PICKER_WIDTH = 25;
    var TABLE_PICKER_HEIGHT = 17;
    var DESC_HEIGHT = 20;
    // Dead zone where grow / shrink cannot occur
    var RESIZE_DEAD_ZONE = 0;

    // State
    var pickerWidth;
    var pickerHeight;
    var highlightWidth;
    var highlightHeight;
    var includeHeading;
    var disabled = false;

    function bindToControl(editor) {
        AJS.debugEnabled() && AJS.debug('Table Picker - bind to control');

        doc = $(document);
        body = doc.find('body');
        button = $('#insert-table-dropdown');
        buttonLink = $('#rte-button-insert-table');
        ddParent = button.find('.aui-dd-parent');
        container = $('#table-picker-container');
        pickerBox = container.find('.table-picker-box');
        pickerCell = container.find('.picker-cell');
        pickerHeading = container.find('.picker-heading');
        pickerSelectedCell = container.find('.picker-selected-cell');
        pickerSelectedHeading = container.find('.picker-selected-heading');
        desc = pickerBox.find('.desc');

        // Invisible backdrop behind the table picker for picking up clicks to close the picker
        backdrop = $('<div></div>')
                        .attr('id', 'table-picker-backdrop')
                        .addClass('hidden')
                        .appendTo(button);

        buttonLink.click(function(e) {
            e.preventDefault();
            if (!disabled) {
                AJS.Rte.BookmarkManager.storeBookmark();
                showPopup();
            }
        });

        backdrop.click(exitClickListener);
        pickerSelectedCell.click(insertTable);
        pickerSelectedHeading.click(insertTable);
    }

    function calculatePopupOffset() {
        // Calculate the offset for the table
        // selector menu.
        container.css({
            top: $('#insert-table-dropdown').outerHeight(true)
        });

        // NOOP this function for future calls.
        calculatePopupOffset = function() {};
    }

    function showPopup() {
        var i;
        var list;
        var desc;
        var buttonPos;

        calculatePopupOffset();
        includeHeading = true;
        setSize(1, 1);
        bindInteractions();
        backdrop.removeClass('hidden');
        container.removeClass('hidden');
        ddParent.addClass('active');
        // CONFDEV-5397 - Ensure that the main window has focus and not the editor iframe
        buttonLink.focus();
    }

    function removePopup() {
        if(!container.hasClass('hidden')) {
            unbindInteractions();
            container.addClass('hidden');
            backdrop.addClass('hidden');
            ddParent.removeClass('active');
        }
    }

    function bindInteractions() {
        var edDoc = $(AJS.Rte.getEditor().getDoc());
        doc.bind('mousemove.atlassian-table-picker', mouseMove);
        doc.bind('keydown.atlassian-table-picker', keylistener);
        doc.bind('keyup.atlassian-table-picker', keylistener);
        edDoc.bind('keydown.atlassian-table-picker', keylistener);
        edDoc.bind('keyup.atlassian-table-picker', keylistener);
    }

    function unbindInteractions() {
        var edDoc = $(AJS.Rte.getEditor().getDoc());
        doc.unbind('.atlassian-table-picker');
        edDoc.unbind('.atlassian-table-picker');
    }

    function disable() {
        disabled = true;
        button.addClass("disabled");
    }

    function enable() {
        disabled = false;
        button.removeClass("disabled");
    }

    function setSize(width, height) {
        AJS.debugEnabled() && AJS.debug('setSize(' + [width,height] + ')');

        if(width == highlightWidth && height == highlightHeight) {
            return;
        }

        // Restrict size to 1..MAX_WIDTH and 1..MAX_HEIGHT
        width = Math.max(1, Math.min(MAX_WIDTH, width));
        height = Math.max(1, Math.min(MAX_HEIGHT, height));

        pickerWidth = Math.max(DEFAULT_WIDTH, width);
        pickerHeight = Math.max(DEFAULT_HEIGHT, height);
        highlightWidth = width;
        highlightHeight = height;

        pickerBox.width(pickerWidth*TABLE_PICKER_WIDTH + 1);
        pickerBox.height(pickerHeight*TABLE_PICKER_HEIGHT + DESC_HEIGHT);

        setPickerSize(pickerCell, pickerWidth, pickerHeight);
        setPickerSize(pickerSelectedCell, highlightWidth, highlightHeight);
        setPickerSize(pickerHeading, pickerWidth, 1);
        setPickerSize(pickerSelectedHeading, highlightWidth, 1);
        refreshHeading();

        desc.text(highlightWidth + ' x ' + highlightHeight);
    }

    function refreshHeading() {
        pickerHeading.toggleClass('hidden', !includeHeading);
        pickerSelectedHeading.toggleClass('hidden', !includeHeading);
    }

    function setPickerSize(picker, width, height) {
        picker.width(TABLE_PICKER_WIDTH * width + 1);
        picker.height(TABLE_PICKER_HEIGHT * height + 1);
    }

    function mouseMove(e) {
        var spPos = pickerCell.offset();
        var spTop = spPos.top - doc.scrollTop();
        var spLeft = spPos.left - doc.scrollLeft();
        var spBottomGrow = spTop + pickerCell.outerHeight(true) + RESIZE_DEAD_ZONE;
        var spBottomShrink = spBottomGrow - TABLE_PICKER_HEIGHT - RESIZE_DEAD_ZONE; // Allow for paddin
        var spRightGrow = spLeft + pickerCell.outerWidth(true) + RESIZE_DEAD_ZONE;
        var spRightShrink = spRightGrow - TABLE_PICKER_WIDTH - RESIZE_DEAD_ZONE; // Allow for paddin
        var mouseY = e.clientY;
        var mouseX = e.clientX;
        var delta;
        var pickerDelta;
        var newWidth = pickerWidth;
        var newHeight = pickerHeight;

        AJS.debugEnabled() && AJS.debug('[mouseX,spLeft,spRightShrink,spRightGrow][mouseY,spTop,spBottomShrink,spBottomGrow] = ' + [mouseX,spLeft,spRightShrink,spRightGrow] + '/' + [mouseY,spTop,spBottomShrink,spBottomGrow]);

        // resize x
        if(mouseX > spRightGrow) {
            delta = mouseX - spRightGrow;
            pickerDelta = ~~((delta / TABLE_PICKER_WIDTH) + 1);
            newWidth += pickerDelta;
            AJS.debugEnabled() && AJS.debug('grow: xdelta = ' + pickerDelta);
        } else if (mouseX < spRightShrink) {
            delta = mouseX - spRightShrink;
            pickerDelta = ~~((delta / TABLE_PICKER_WIDTH) - 1);
            newWidth += pickerDelta;
            AJS.debugEnabled() && AJS.debug('shrink: xdelta = ' + pickerDelta);
        }
        // resize y
        if(mouseY > spBottomGrow) {
            delta = mouseY - spBottomGrow;
            pickerDelta = ~~((delta / TABLE_PICKER_HEIGHT) + 1);
            newHeight += pickerDelta;
            AJS.debugEnabled() && AJS.debug('grow: ydelta = ' + pickerDelta);
        } else if (mouseY < spBottomShrink) {
            delta = mouseY - spBottomShrink;
            pickerDelta = ~~((delta / TABLE_PICKER_HEIGHT) - 1);
            newHeight += pickerDelta;
            AJS.debugEnabled() && AJS.debug('shrink: ydelta = ' + pickerDelta);
        }

        setSize(newWidth, newHeight);
    }

    function enableHeading(enable) {
        AJS.debugEnabled() && AJS.debug('enableHeading(' + enable + ')');
        if(enable != includeHeading) {
            includeHeading = enable;
            refreshHeading();
        }
    }


    function calcWidthHeight(e) {
        var left = ~~(e.offsetX || e.originalEvent.layerX);
        var top = ~~(e.offsetY || e.originalEvent.layerY);
        var width = (~~(left / TABLE_PICKER_WIDTH)) + 1;
        var height = (~~(top / TABLE_PICKER_HEIGHT)) + 1;
        if(width < 1 || width > MAX_WIDTH || height <  1 || height > MAX_HEIGHT) {
            return null; // Outisde of range - ignore
        }
        return {
            width: width,
            height: height
        };
    }

    function insertTable(e) {
        var size = calcWidthHeight(e);
        e.preventDefault();
        AJS.debug('insertTable: size = ' + (size && [size.width,size.height]));
        if(size) {
            // If on cell insert table and remove popup otherwise ignore
            removePopup();
            shamefulInsertTable(size.width, size.height, includeHeading);
        }
    }

    // Table plugin exposed an insertTable function that takes a form - hence the shameful function name. (CONFDEV-7141)
    function shamefulInsertTable(width, height, includeHeading) {
        var existingForm;
        var form;
        var formContainer;
        AJS.debugEnabled() && AJS.debug('shamefulInsertTable(' + width + ',' + height + ',' + includeHeading + ')');
        // "API" is a form - WTF!
        existingForm = $('#tinymce-table-form');
        if(!existingForm.length) {
            // No existing form, create a temporary one
            form = AJS.renderTemplate("tableForm", height, width);
            formContainer = $('<div></div>').addClass('hidden');
            formContainer.append(form);
            body.append(formContainer);
        } else {
            existingForm.find('input[name="rows"]').val(height);
            existingForm.find('input[name="cols"]').val(width);
        }
        $('#table-heading-checkbox').prop('checked', includeHeading);
        AJS.Rte.BookmarkManager.restoreBookmark();
        tinymce.activeEditor.undoManager.beforeChange();
        tinymce.activeEditor.plugins.table.insertTable();
        formContainer && formContainer.remove();
    }


    function keylistener(e) {
        AJS.debugEnabled() && AJS.debug('key: ' + e.charCode + '/' + e.keyCode + '/' + e.shiftKey);
        AJS.debug('key: ' + e.charCode + '/' + e.keyCode + '/' + e.shiftKey);
        if($.browser.msie) {
            // This is still required for IE9
            if(e.keyCode === 16) {
                // modifier only
                enableHeading(!e.shiftKey);
            }
            if(e.keyCode === 27) {
                // escape
                removePopup();
            }
        } else {
            if(e.charCode === 0) {
                // modifier only
                enableHeading(!e.shiftKey);
            }
            if(e.keyCode === 27 && e.charCode === 0) {
                // escape
                removePopup();
            }
        }
    }

    function exitClickListener(e) {
        removePopup();
    }

    // Exposed for testing purposes.
    _internal.insertTable = insertTable;

    return {
        bindToControl: bindToControl,
        disable: disable,
        enable: enable,
        close: removePopup,
        _internal: _internal // Exposed for testing purposes
    };
});


require('confluence/module-exporter').exportModuleAsGlobal('confluence-editor/tinymce3/plugins/table/atlassian-table-picker', 'AJS.Rte.TablePicker');
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/table/atlassian-table-migration.js' */
define('confluence-editor/tinymce3/plugins/table/atlassian-table-migration', [
    'ajs',
    'jquery',
    'confluence-editor/tinymce3/plugins/table/atlassian-table'
], function(
    AJS,
    $,
    AtlassianTable
) {
    "use strict";

    /*
     * This migrates the table highlight markup from the old version in 4.0, 4.1, and 4.3 to the new simpler
     * version in 4.3.x.
     *
     * Specifically:
     * - Headings are always th
     * - There's no highlight / nohighlight to represent headings in td's and non-headings in th's
     * - Colour highlighting is managed independently from headings via highlight-[colour] classes and the data-highlight-colour attribute.
     */

    function migrateCells(cells) {
        cells.each(function() {
            var $el = $(this);
            var hlClass = $el.attr('data-highlight-class');
            var hlColour;
            if($el.hasClass('nohighlight')) {
                $el.removeClass('nohighlight');
                AtlassianTable.convertToNormalCells($el);
                // "nohighlight" has no colours applied - exit early.
                return;
            } else if($el.hasClass('highlight')) {
                $el.removeClass('highlight');
                if(!hlClass) {
                    // force to the previously implicit "grey"
                    $el.attr('data-highlight-colour', 'grey');
                    $el.addClass('highlight-grey');
                }
            }
            if(hlClass) {
                $el.removeClass(hlClass);
                $el.removeAttr('data-highlight-class');
                switch(hlClass) {
                    case 'warning':
                        hlColour = 'red';
                        break;
                    case 'success':
                        hlColour = 'green';
                        break;
                    case 'note':
                        hlColour = 'yellow';
                        break;
                    case 'info':
                        hlColour = 'blue';
                        break;
                }
                if(hlColour) {
                    $el.addClass('highlight-' + hlColour);
                    $el.attr('data-highlight-colour', hlColour);
                }
            }
        });
    }

    function migrateTables(from) {
        from = from || $(AJS.Rte.getEditor().getBody());
        var tick1 = new Date().getTime();
        var cells = from.find('td.highlight,th.nohighlight,td[data-highlight-class],th[data-highlight-class]');
        var tick2 = new Date().getTime();
        migrateCells(cells);
        var tick3 = new Date().getTime();
        AJS.debug("Migration duration: selector: " + (tick2 - tick1) + "ms; migration: " + (tick3 - tick2) + "ms");
    }

    return migrateTables;
});

require('confluence/module-exporter')
        .exportModuleAsGlobal('confluence-editor/tinymce3/plugins/table/atlassian-table-migration', 'AJS.Rte.Migration.Table.migrateTables', function(migrateTables) {
            var AJS = require('ajs');
            var $ = require('jquery');

            /*
             * Apply migration after a paste in case pasting content from an unmigrated page.
             */
            $(document).bind('postPaste', function(e, pl, o) {
                // Migrate in case pasting old data
                AJS.Rte.Migration.Table.migrateTables();
            });

            /*
             * Migrate on initial load in case working with an old table format.
             *
             * Notes from testing:
             * - Determination if migration is required is typically in the range of 0-1ms (even in IE8), so it is low cost once migrated.
             * - Migration is still quite fast, typically < 20ms even in IE8 with a large page.
             * - Migration time seems mostly proportional to the number of th and td conversions, and size of content inside migrated cells.
             */
            AJS.bind("init.rte", function() {
                // Migrate initial data
                AJS.Rte.Migration.Table.migrateTables();
            });
        });
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/tablecontentwrapper/editor_plugin_src.js' */
/**
 * This tinyMCE plugin wraps block elements,which are inside a table cell, into a DIV
 * So that when user resize a column to fix mode, these elements don't overlap a cell
 */
define("confluence-editor/tinymce3/plugins/tablecontentwrapper/editor_plugin_src", [
    "jquery",
    "ajs",
    "tinymce"
], function ($, AJS, tinymce) {
    "use strict";

    var blockElements = ["img:not(.editor-inline-macro, .emoticon)"];
    var blockMacros = [".wysiwyg-macro"];
    var inlineElements = ["time.non-editable", ".editor-inline-macro", "a.confluence-link[data-linked-resource-type='userinfo']"];
    var elementsToWrap = blockElements.concat(inlineElements).concat(blockMacros).join(",");
    var contentWrapper = "<div class='content-wrapper'>";

    return {
        init: function (ed, url) {
            /**
             * CONFDEV-38889
             */
            function wrapAll() {
                var cssMarker = "wrapped";
                $(ed.dom.select("table.confluenceTable:not(." + cssMarker + ")")).each(function (i, table) {
                    //add CSS class to mark this table as processed
                    $(table).addClass(cssMarker)
                            .find("> tbody > tr > th, > tbody > tr > td, > thead > tr > th").each(function (i, cell) {
                        var $cell = $(cell);
                        if (!$cell.find("> .content-wrapper").length && $cell.find(elementsToWrap).length) {
                            $cell.wrapInner(contentWrapper);
                        }
                    });
                });
            }

            AJS.bind("rte-ready", function () {
                wrapAll();
            });
            ed.onChange.add(function () {
                var mceSelection = ed.selection;

                function mergeManyWrappers($wrappers) {
                    for (var i = 0; i < $wrappers.length; i++) {
                        if (!$wrappers.eq(i).find("> p, > table, > ul, > ol").length) {
                            /**
                             * <p> is the fundamental element to seperate lines and wrap inline element (e.g <img>, <span>)
                             * missing it will lead to unexpected behavior of tinyMCE
                             */
                            $wrappers.eq(i).wrapInner("<p/>");
                        }
                        //combine content of all other wrappers to the first one
                        if (i > 0) {
                            $wrappers.eq(0).append($wrappers.eq(i).children());
                            $wrappers.eq(i).remove();
                        }
                    }
                }

                function fixCursorPosition($currentNode) {
                    var range = mceSelection.getRng();
                    /**
                     * CONFDEV-41716
                     * if current node is TR, mceSelection.getBookmark() will append bookmark <span> directly to TR
                     * which will place cursor to wrong position after restore bookmark
                     * So need to move selection to child element of the TR
                     */
                    if ($currentNode.is("tr") && $(range.startContainer).is("tr") && range.collapsed) {
                        var $directCell = $currentNode.find(">td, >th").first();
                        //if cell only has text inside, we need "firstChild" to get TextNode
                        var startNode = $directCell.find(":first-child:not(.content-wrapper)")[0] || $directCell[0].firstChild;
                        range.setStart(startNode, 0);
                        range.setEnd(startNode, 0);

                        mceSelection.setRng(range);
                        AJS.log("confluence-editor/tinymce3/plugins/tablecontentwrapper/editor_plugin_src: fixCursorPosition()");
                    }
                }

                function saveBookmark() {
                    AJS.log("confluence-editor/tinymce3/plugins/tablecontentwrapper/editor_plugin_src: saveBookmark()");
                    return mceSelection.getBookmark();
                }

                function restoreBookmark(bookmark) {
                    AJS.log("confluence-editor/tinymce3/plugins/tablecontentwrapper/editor_plugin_src: restoreBookmark()");
                    mceSelection.moveToBookmark(bookmark);
                    /**
                     * we dont want to touch code of 'confluence-editor/atlassian-editor-bookmark-manager'
                     * we storeBookmark again, so that other module can restoreBookmark correctly
                     */
                    AJS.Rte.BookmarkManager.storeBookmark();
                }

                var node = mceSelection.getNode();
                var $node = $(node);
                //dont wrap anything inside nested table
                if (node && $node.closest("table.confluenceTable").not("table.confluenceTable table.confluenceTable").length) {
                    fixCursorPosition($node);

                    var $currentCell = $node.closest("table.confluenceTable > tbody > tr > th, table.confluenceTable > tbody > tr > td, table.confluenceTable > thead > tr > th");
                    var bookmark;

                    if ($currentCell.find(elementsToWrap).length) {
                        var $directWrapper = $currentCell.find("> .content-wrapper");
                        if (!$directWrapper.length) {
                            if ($currentCell.find("> p").length) {
                                bookmark = saveBookmark($node);
                                $currentCell.wrapInner(contentWrapper);
                                restoreBookmark(bookmark);
                            } else {
                                bookmark = saveBookmark($node);
                                /**
                                 * <p> is the fundamental element to seperate lines and wrap inline element (e.g <img>, <span>)
                                 * missing it will lead to unexpected behavior of tinyMCE
                                 */
                                $currentCell.wrapInner("<p/>").wrapInner(contentWrapper);
                                restoreBookmark(bookmark);
                            }
                        } else {
                            bookmark = saveBookmark($node);
                            mergeManyWrappers($directWrapper);
                            restoreBookmark(bookmark);
                        }
                    }
                }

                // Remove empty wrapper
                $(ed.getWin().document).find(".content-wrapper:empty").remove();
            });
        },

        getInfo: function () {
            return {
                longname: "Table Content Wrapper Plugin",
                author: "Atlassian",
                authorurl: "http://www.atlassian.com",
                version: "1.0"
            };
        }
    };
});

require("confluence/module-exporter").safeRequire("confluence-editor/tinymce3/plugins/tablecontentwrapper/editor_plugin_src", function (TableContentWrapper) {
    var tinymce = require("tinymce");
    var AJS = require("ajs");

    if (AJS.DarkFeatures.isEnabled("confluence.table.resizable")) {
        tinymce.create("tinymce.plugins.TableContentWrapperPlugin", TableContentWrapper);
        tinymce.PluginManager.add("tableContentWrapper", tinymce.plugins.TableContentWrapperPlugin);
    }
});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/tableanalytics/editor_plugin_src.js' */
/**
 * Send analytics events relating to actions on table
 */
define("confluence-editor/tinymce3/plugins/tableanalytics/editor_plugin_src", [
    "jquery",
    "ajs",
    "tinymce"
], function ($, AJS, tinymce) {
    "use strict";

    var editor;

    return {
        init: function (ed, url) {
            var t = this;
            editor = ed;
            ed.onExecCommand.add(function (ed, cmd, ui, val) {
                switch (cmd) {
                    case "mceAutoWidth":
                    case "mceRelativeWidth":
                    case "mceFixedWidth":
                        t._onChangeTableMode();
                        break;
                    case "mceTableCopyRow":
                        t._onCopyRow();
                        break;
                    case "mceTablePasteRowBefore":
                    case "mceTablePasteRowAfter":
                        t._onPasteRow();
                        break;
                    case "mceTableCopyCol":
                        t._onCopyCol();
                        break;
                    case "mceTablePasteColBefore":
                    case "mceTablePasteColAfter":
                        t._onPasteCol();
                        break;
                    //copy-paste
                    case "mceInsertContent":
                        t._onInsertContent(val);
                        break;
                }
            });

            //insert image by drag-drop OR via dialog OR using "!"
            ed.onInit.add(function () {
                ed.selection.onSetContent.add(function (selection, args) {
                    if (t._isInsideTable() && args) {
                        t._onSetContent(args);
                    }
                });
            });

            //listen to analyticsEvent which is fired when resizing image
            AJS.bind("analyticsEvent", function (e, data) {
                if (t._isInsideTable()) {
                    t._onResizeImg(data);
                }
            });

            //listen to reliable save success
            AJS.bind("rte.safe-save.success", function () {
                t._onSavePage();
            });
        },

        _onChangeTableMode: function () {
            AJS.Confluence.Analytics.publish(
                    "confluence.table.mode.to." + this._getTableMode(),
                    {pageId: AJS.Meta.get("page-id")}
            );
        },

        _onCopyRow: function () {
            AJS.Confluence.Analytics.publish(
                    "confluence.table.row.copy",
                    {pageId: AJS.Meta.get("page-id")}
            );
        },

        _onPasteRow: function () {
            AJS.Confluence.Analytics.publish(
                    "confluence.table.row.paste",
                    {pageId: AJS.Meta.get("page-id")}
            );
        },

        _onCopyCol: function () {
            AJS.Confluence.Analytics.publish(
                    "confluence.table.col.copy",
                    {pageId: AJS.Meta.get("page-id")}
            );
        },

        _onPasteCol: function () {
            AJS.Confluence.Analytics.publish(
                    "confluence.table.col.paste",
                    {pageId: AJS.Meta.get("page-id")}
            );
        },

        /**
         * Send analytics if an image is pasted into a table
         * @param insertContent
         * @private
         */
        _onInsertContent: function (insertContent) {
            /**
             * CONFDEV-37491
             * insertContent might be special chars OR html
             * to avoid error "Syntax error, unrecognized expression", create a <div> and set content using .html()
             */
            var $container = $("<div/>").html(insertContent);

            //check if image is pasted into a table
            if ($container.find("img").length && this._isInsideTable()) {
                this._eventInsertImage();
            }

            //check if table is pasted
            if ($container.find("table.confluenceTable").length) {
                AJS.Confluence.Analytics.publish(
                        "confluence.table.paste",
                        {pageId: AJS.Meta.get("page-id")}
                );
            }
        },

        _onSetContent: function (args) {
            if ($(args.content).hasClass("confluence-embedded-image")) {
                this._eventInsertImage();
            }
        },

        _onResizeImg: function (data) {
            var isImgBiggerThanCell = function () {
                var $img = $(editor.selection.getNode());
                var $cell = $img.closest("th, td");
                return $img.width() > $cell.width();
            };
            if (data && data.name && data.name.indexOf("confluence.editor.image.resize") >= 0) {
                AJS.Confluence.Analytics.publish(
                        "confluence.table.img.resize",
                        {
                            pageId: AJS.Meta.get("page-id"),
                            tableMode: this._getTableMode(),
                            isImgBiggerCell: isImgBiggerThanCell()
                        }
                );
            }
        },

        _eventInsertImage: function () {
            AJS.Confluence.Analytics.publish(
                    "confluence.table.image.insert",
                    {
                        pageId: AJS.Meta.get("page-id"),
                        tableMode: this._getTableMode()
                    }
            );
        },

        _isInsideTable: function () {
            return !!$(editor.selection.getNode()).closest("table.confluenceTable").length;
        },

        _getTableMode: function () {
            var $table = $(editor.selection.getNode()).closest("table.confluenceTable");
            if ($table.hasClass("fixed-table")) {
                return "fixed";
            }
            if ($table.hasClass("relative-table")) {
                return "relative";
            }
            return "fluid";
        },

        _onSavePage: function () {
            //get all tables in the page
            var $tables = $(editor.getBody()).find("table.confluenceTable");
            AJS.Confluence.Analytics.publish(
                    "confluence.table.quality.in.page",
                    {
                        pageId: AJS.Meta.get("page-id"),
                        total: $tables.length,
                        fixed: $tables.filter(".fixed-table").length,
                        fluid: $tables.filter(":not(.fixed-table,.relative-table)").length,
                        relative: $tables.filter(".relative-table").length,
                        nested: $tables.find("table.confluenceTable").length
                    }
            );
        },

        getInfo: function () {
            return {
                longname: "Table Analytics Plugin",
                author: "Atlassian",
                authorurl: "http://www.atlassian.com",
                version: "1.0"
            };
        }
    };
});

require("confluence/module-exporter").safeRequire("confluence-editor/tinymce3/plugins/tableanalytics/editor_plugin_src", function (TableAnalytics) {
    var tinymce = require('tinymce');

    tinymce.create("tinymce.plugins.TableAnalytics", TableAnalytics);
    tinymce.PluginManager.add("tableAnalytics", tinymce.plugins.TableAnalytics);
});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/placeholder/editor_plugin_src.js' */
define('confluence-editor/tinymce3/plugins/placeholder/editor_plugin_src', [
    'jquery',
    'ajs',
    'tinymce'
], function(
    $,
    AJS,
    tinymce
) {
    "use strict";

    /* CONFDEV-15591 - If defining a display style of inline-block, regardless of whether there another rule overriding
     * it in IE, the element will end up with "resize" handles and not behave how we want, so we need to inject the
     * appropriate CSS depending on the browser.
     *
     * Not pretty and don't like doing special behaviour like this for anything other than IE.
     */
    var IE_STYLES = '<style type="text/css">.wiki-content .text-placeholder { display: inline; }</style>';
    var OTHER_STYLES = '<style type="text/css">.wiki-content .text-placeholder { display: inline-block; }</style>';

    var DEFAULT_ACTIVATION = {
        click: false,
        keypress: true
    };

    var VK = tinymce.VK;
    var Event = tinymce.dom.Event;
    // placeholders are editable (template mode)
    var editable = (AJS.Meta.get("content-type") === "template");

    // Custom styles per browser as needed where overrides in CSS don't work
    function applyStyles() {
        var head = $(AJS.Rte.getEditor().getDoc()).find('head');
        if($.browser.msie) {
            head.append(IE_STYLES);
        } else {
            head.append(OTHER_STYLES);
        }
    }

    // Template mode
    function initialiseTemplatePlaceholders(ed) {
        AJS.trigger('cursor-target-refresh');

        $('#rte-button-insert-placeholder').click(function(e) {
            e.preventDefault();
            AJS.Rte.Placeholder.insertTextPlaceHolder();
        });

        // Enter will escape a placeholder when editing
        ed.onKeyPress.addToTop(function(ed, e) {
            if (e.keyCode === 13 && !e.shiftKey) {
                var selectedNode = ed.selection.getNode();
                var placeholder = $(selectedNode).closest(".text-placeholder");

                if(placeholder.length && AJS.Rte.Cursor.isCursorAtEnd(ed, ed.selection.getRng(), selectedNode)) {
                    AJS.Rte.Cursor.insertParagraph(ed, placeholder, true);
                    return tinymce.dom.Event.cancel(e);
                }
            }
        });
    }

    // These should probably be in tinymce
    var NOT_SELECTABLE = {
        'UL' : true,
        'OL' : true,
        'LI' : true,
        'TABLE' : true,
        'TBODY': true
    };

    function isSelectable(node) {
        return !NOT_SELECTABLE[node.nodeName];
    }

    function selectPreviousValidNode(ed, node) {
        var prev = node.previousSibling;
        var selNode;
        // find prev sibling or walk up tree until we find a parents prev sibling
        while(node && !prev) {
            node = node.parentNode;
            prev = node.previousSibling;
        }
        if(prev) {
            selNode = prev;
            while(!isSelectable(selNode)) {
                if(!selNode.lastChild) {
                    break; // no more children select node anyway
                }

                selNode = selNode.lastChild;
            }
            // Try to select last child
            ed.selection.select(selNode.lastChild || selNode);
            ed.selection.collapse(false);
            ed.selection.normalize();
        }
    }

    function selectNextValidNode(ed, node) {
        var next = node.nextSibling;
        var selNode;
        // find next sibling or walk up tree until we find a parents next sibling
        while(node && !next) {
            node = node.parentNode;
            next = node.nextSibling;
        }
        if(next) {
            selNode = next;
            while(!isSelectable(selNode)) {
                if(!selNode.firstChild) {
                    break; // no more children select node anyway
                }

                selNode = selNode.firstChild;
            }
            // Try to select first child
            ed.selection.select(selNode.firstChild || selNode);
            ed.selection.collapse(true);
            ed.selection.normalize();
        }
    }


    // Normal page mode mode
    function initialiseNormalPlaceholders(ed) {
        function selectPlaceholder() {
            var body = $(AJS.Rte.getEditor().getBody());
            var ph = body.find('.text-placeholder.selected');
            if(ph.length) {
                AJS.Rte.getEditor().selection.select(ph[0]);
            }
        }

        function addActivationHandlers(ed) {
            ed.onKeyDown.addToTop(navigationHandler);
            ed.onKeyPress.addToTop(replaceHandler);
            ed.onClick.addToTop(replaceHandler);
        }

        function removeActivationHandlers(ed) {
            ed.onKeyDown.remove(navigationHandler);
            ed.onKeyPress.remove(replaceHandler);
            ed.onClick.remove(replaceHandler);
        }

        function navigationHandler(ed, e) {
            var body = $(ed.getBody());
            var ph = body.find('.text-placeholder.selected');

            // Handler still active, but no placeholder selected, unregister
            if(!ph.length) {
                removeActivationHandlers(ed);
                return;
            }

            // Special cases:
            // Up/left/right/down - move cursor
            // Delete/backspace - remove completely (or should to put replacement content in?)
            if(e.keyCode === VK.LEFT || e.keyCode === VK.UP) {
                // move cursor up
                selectPreviousValidNode(ed, ph[0]);
                return Event.cancel(e);
            } else if(e.keyCode === VK.RIGHT || e.keyCode === VK.DOWN) {
                // move cursor down
                selectNextValidNode(ed, ph[0]);
                return Event.cancel(e);
            } else if(e.keyCode === VK.BACKSPACE || e.keyCode === VK.DELETE) {
                AJS.Rte.Placeholder.removePlaceholder(ph);
                return Event.cancel(e);
            }
        }

        function replaceHandler(ed, e) {
            if (tinymce.isGecko && (!e.isChar && e.type === 'keypress')) {
                return; // non-printable
            }

            var body = $(ed.getBody());
            var ph = body.find('.text-placeholder.selected');

            // Handler still active, but no placeholder selected, unregister
            if(!ph.length) {
                removeActivationHandlers(ed);
                return;
            }

            if(ph.length) {
                var placeholderType = ph.attr('data-placeholder-type');
                if(shouldActivate(placeholderType, e.type)) {
                    AJS.Rte.Placeholder.removePlaceholder(ph);
                    // Notify listeners of activation
                    AJS.trigger('editor.text-placeholder.activated', {
                        placeholderType: placeholderType || '',
                        triggerEvent: e
                    });
                }
            }
        }

        function shouldActivate(type, eventType) {
            var typeSpec = AJS.Rte.Placeholder.getPlaceholderType(type);
            var activation = $.extend({}, DEFAULT_ACTIVATION, typeSpec && typeSpec.activation);
            return !!activation[eventType];
        }

        function handlePlaceholderNodeChange(ed, cm, el) {
            var ph = $(el).closest('.text-placeholder');

            $(ed.getBody()).find('.text-placeholder.selected').not(ph).removeClass('selected');
            if(ph.length) {
                if(!ph.hasClass('selected')) {
                    ph.addClass('selected');
                    addActivationHandlers(ed);
                }
                // Force selection as clicking in an already selected placeholder would otherwise place the caret inside the placeholder.
                // Need to defer as a click handler undoes this.
                setTimeout(selectPlaceholder, 0);
            } else {
                removeActivationHandlers(ed);
            }
        }

        ed.onNodeChange.addToTop(handlePlaceholderNodeChange);
    }

    return {
        init: function(ed) {
            ed.onInit.add(function() {
                if(editable) {
                    initialiseTemplatePlaceholders(ed);
                } else {
                    initialiseNormalPlaceholders(ed);
                }
                applyStyles();
            });
        },

        getInfo: function() {
            return {
                longname: 'Text Placeholder Plugin',
                author: 'Atlassian',
                authorurl: 'http://www.atlassian.com',
                infourl: 'http://www.atlassian.com',
                version: '1.0'
            };
        }
    };
});

require('confluence/module-exporter')
        .safeRequire('confluence-editor/tinymce3/plugins/placeholder/editor_plugin_src', function(TextPlaceholderPlugin) {
            var tinymce = require('tinymce');
            tinymce.create('tinymce.plugins.TextPlaceholderPlugin', TextPlaceholderPlugin);
            tinymce.PluginManager.add('textplaceholders', tinymce.plugins.TextPlaceholderPlugin);
        });
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/placeholder/placeholder.js' */
define('confluence-editor/tinymce3/plugins/placeholder/placeholder', [
    'jquery',
    'ajs',
    'tinymce'
], function(
    $,
    AJS,
    tinymce
) {
    "use strict";

    var placeHolderTypes = [];
    var placeHolderTypeMap = {};

    AJS.Rte = AJS.Rte || {};
    AJS.Rte.Placeholder = AJS.Rte.Placeholder || {};

    var EMPTY_CARET;
    var EMPTY_CARET_LI;

    if(tinymce.isIE) {
        EMPTY_CARET = "\uFEFF{$caret}";
        EMPTY_CARET_LI = "<p>{$caret}</p>";
    } else if(tinymce.isWebKit) {
        EMPTY_CARET = "\uFEFF{$caret}<br>";
        EMPTY_CARET_LI = EMPTY_CARET;
    } else {
        EMPTY_CARET = "\uFEFF{$caret}";
        EMPTY_CARET_LI = EMPTY_CARET;
    }

    return {
        /**
         * Inserts the placeholder into the current cursor position in the editor.
         *
         * Examples:
         *   AJS.Rte.Placeholder.insertPlaceHolder('<p>Display text</p>', '<p>Activation text. Typing goes in here: "<span class="caret"></span>".</p>')
         *   AJS.Rte.Placeholder.insertPlaceHolder('<p>Enter new tasks here:</p><ul class="inline-task-list"><li data-inline-task-id>First task</li></ul>', '<ul class="inline-task-list"><li data-inline-task-id><span class="caret"></span><br/></li></ul>')
         *
         * @param displayContent the content to display for the placeholder
         */
        insertTextPlaceHolder : function(displayContent) {
            var ph = $('<div></div>').append(AJS.Rte.Placeholder.Templates.textPlaceholder({ content: EMPTY_CARET }));
            displayContent && ph.find('.text-placeholder').html(displayContent);
            AJS.Rte.getEditor().execCommand('mceInsertContent', false, ph.html());
        },

        /**
         * Removes the specified placeholder from the editor and places the cursor in its place
         * @param ph jquery placeholder
         */
        removePlaceholder : function(ph) {
            var ed = AJS.Rte.getEditor();
            var body = $(ed.getBody());
            var content = EMPTY_CARET;
            // Selecting of placeholder will not work (as the selection can get changed by handlePlaceholderNodeChange), so replace it with something selectable
            if(ph.parent()[0].nodeName === "LI") {
                content = EMPTY_CARET_LI;
            }
            ph.replaceWith('<span id="placeholder-cursor">&nbsp;</span>');

            var phCursor = body.find('#placeholder-cursor')[0];
            ed.selection.select(phCursor.firstChild);
            ed.execCommand('mceInsertContent', false, content);
            ed.dom.remove(phCursor, true);
        },

        /**
         * @param typeSpec of the form: { type: "example", label: "Example", tooltip: "The does example", activation: { click: true, keypress: false } }
         */
        addPlaceholderType : function(typeSpec) {
            if (!typeSpec || !typeSpec.type) {
                AJS.log('PlaceHolderRegister : unable to register new place holder type !');
                return;
            }
            placeHolderTypes.push(typeSpec);
            placeHolderTypeMap[typeSpec.type] = typeSpec;
        },

        getPlaceholderTypes : function() {
            return [].concat(placeHolderTypes);
        },

        getPlaceholderType : function(type) {
            return placeHolderTypeMap[type];
        }
    };
});

require('confluence/module-exporter').safeRequire('confluence-editor/tinymce3/plugins/placeholder/placeholder', function(Placeholder) {
    var $ = require('jquery');
    $.extend(require('ajs').Rte.Placeholder, Placeholder);
});


}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/placeholder/property-panel-text-placeholders.js' */
define('confluence-editor/tinymce3/plugins/placeholder/property-panel-text-placeholders', [
    'jquery',
    'ajs',
    'confluence/property-panel'
],
function(
    $,
    AJS,
    PropertyPanel
) {
    "use strict";
    return {
        name: 'textplaceholder',

        canHandleElement: function ($element) {
            return $element.hasClass('text-placeholder');
        },

        handle: function (data) {
            if (data.e.type !== 'click' && data.e.type !== 'mouseup') { // only activate this panel on click
                return;
            }

            var placeholderTypes = AJS.Rte.Placeholder.getPlaceholderTypes();
            var placeholderNode = data.containerEl;
            var $placeholderNode = $(placeholderNode);
            var placeholderType = $placeholderNode.attr('data-placeholder-type');

            var buttons = [];

            function changeType(type) {
                if (type === 'default') {
                    $placeholderNode.removeAttr('data-placeholder-type');
                } else {
                    $placeholderNode.attr('data-placeholder-type', type);
                }
                var button = $('.text-placeholder-property-panel-type-' + type);
                button.parent().find('.text-placeholder-property-panel-type-item').removeClass('selected');
                button.addClass('selected');
            }

            function createTypeButton(type, text, tooltip) {
                return {
                    className: 'text-placeholder-property-panel-type-item text-placeholder-property-panel-type-' + type,
                    text: text,
                    tooltip: tooltip,
                    selected: placeholderType === type,
                    click: function () {
                        changeType(type);
                    }
                };
            }

            var defaultButton = createTypeButton('default', "\u0422\u0435\u043a\u0441\u0442", "\u0422\u0435\u043a\u0441\u0442 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u043f\u0443\u0441\u0442\u044b\u043c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u044b\u043c \u043f\u043e \u043c\u0435\u0440\u0435 \u0432\u0432\u043e\u0434\u0430.");
            defaultButton.selected = !placeholderType;
            buttons.push(defaultButton);

            var currentType;
            for (var i = 0, l = placeholderTypes.length; i < l; i++) {
                currentType = placeholderTypes[i];
                buttons.push(createTypeButton(currentType.type, currentType.label, currentType.tooltip));
            }

            buttons.push(null); // separator

            buttons.push({
                className: 'text-placeholder-property-panel-remove-button',
                text: "\u0423\u0434\u0430\u043b\u0438\u0442\u044c",
                click: function () {
                    PropertyPanel.destroy();
                    AJS.Rte.Placeholder.removePlaceholder($placeholderNode);
                }
            });


            PropertyPanel.createFromButtonModel('textplaceholder', placeholderNode, buttons, {anchorIframe: AJS.Rte.getEditorFrame()});
        }
    };
});

require('confluence/module-exporter').exportModuleAsGlobal('confluence-editor/tinymce3/plugins/placeholder/property-panel-text-placeholders', 'AJS.Confluence.PropertyPanel.TextPlaceholder', function(PropertyPanelTextPlaceholder){
    var AJS = require('ajs');

    AJS.bind('init.rte', function () {
        // defer trigger to ensure any listeners have had a chance to load.
        if (AJS.Meta.get('content-type') === 'template') {
            AJS.trigger('add-handler.property-panel', PropertyPanelTextPlaceholder);
        }
    });
});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/placeholder/placeholder.soy' */
// This file was automatically generated from placeholder.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace AJS.Rte.Placeholder.Templates.
 */

if (typeof AJS == 'undefined') { var AJS = {}; }
if (typeof AJS.Rte == 'undefined') { AJS.Rte = {}; }
if (typeof AJS.Rte.Placeholder == 'undefined') { AJS.Rte.Placeholder = {}; }
if (typeof AJS.Rte.Placeholder.Templates == 'undefined') { AJS.Rte.Placeholder.Templates = {}; }


AJS.Rte.Placeholder.Templates.textPlaceholder = function(opt_data, opt_ignored) {
  return '<span class="text-placeholder">' + opt_data.content + '</span>';
};
if (goog.DEBUG) {
  AJS.Rte.Placeholder.Templates.textPlaceholder.soyTemplateName = 'AJS.Rte.Placeholder.Templates.textPlaceholder';
}

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/plugins/imageproperties/js/image-properties-dialog.js' */
define('confluence-editor/tinymce3/plugins/imageproperties/js/image-properties-dialog', [
    'jquery',
    'ajs'
], function(
    $,
    AJS
) {
    "use strict";

    var dialog;
    var webItems;
    var panels = {};
    var dialogCreatedEvent = 'dialog-created.image-properties';
    var dialogBeforeShowEvent = 'dialog-before-show.image-properties';
    var propertyPanelButton;

    return {
        init: init,
        registerPanel: registerPanel
    };

    function init() {
        if (!propertyPanelButton) {
            webItems = null;
            if (getWebItems().length > 0) {
                propertyPanelButton = true;
                AJS.Confluence.PropertyPanel.Image.pluginButtons.push(null, {create: function() {
                    return {
                        className: 'image-properties',
                        text: "\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430",
                        tooltip: "\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f",
                        click: function(button, img) {
                            AJS.trigger('analyticsEvent', {name: 'confluence.editor.image-properties-trigger'});
                            AJS.Confluence.PropertyPanel.destroy();
                            openImagePropertiesDialog(img);
                        }
                    };
                }});
            }
        }
    }

    function openImagePropertiesDialog(img) {
        $('#image-properties-dialog').remove(); // Element isn't properly removed when closed via escape key
        dialog = new AJS.ConfluenceDialog({
            id: 'image-properties-dialog',
            onSubmit: submit
        });

        // Panels aren't registered until this point - new panels need to bind to this event and call registerPanel()
        AJS.trigger(dialogCreatedEvent, {img: img});

        dialog.popup.element.attr("data-tab-default", "0");
        dialog.addHeader("\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f");
        dialog.addSubmit("\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c", submit);
        dialog.addCancel("\u041e\u0442\u043c\u0435\u043d\u0430", cancel);
        createPanels(dialog);

        // Indicates that any panel contents specified by calling registerPanel have been added to the DOM
        AJS.trigger(dialogBeforeShowEvent);

        dialog.show();
    }

    function createPanels(dialog) {
        var items = getWebItems();
        for (var i = 0; i < items.length; i++) {
            var item = items[i];
            var panel = panels[item.key]; // pre-populated by a 'dialog-created.image-properties' event binding.
            if (panel) {
                dialog.addPanel(item.label, panel.content, panel.panelClass, item.key);
            }
        }
        if (items.length === 1) {
            dialog.popup.element.find('.dialog-page-menu').show(); // AUI hides this menu if there's only one panel
        }
    }

    function registerPanel(linkId, panelContent, panelClass, saveFn) {
        panels[linkId] = {
            content: panelContent,
            panelClass: panelClass,
            saveFn: saveFn
        };
    }

    // Web-items with section "system.editor.image.properties.tabs" - {@see image-properties-web-items.vm}
    function getWebItems() {
        if (!webItems) {
            webItems = $('#image-properties-tab-items > div').map(function() {
                var item = $(this);
                return {
                    key: item.text(),
                    weight: item.attr("data-weight"),
                    label: this.title
                };
            }).sort(function (a, b) {
                return a.weight - b.weight;
            });
        }
        return webItems;
    }

    function submit() {
        showSpinner();

        // Call all save functions so that changes made in any panel (not just the active one) persist
        var promises = [];
        for (var key in panels) {
            var panel = panels[key];
            var promise = panel.saveFn && panel.saveFn();
            if (promise && promise.done) {
                promises.push(promise);
            }
        }
        var masterPromise = $.when.apply($, promises);
        masterPromise.done(function() {
            hideSpinner();
            dialog.hide().remove();
        });
    }

    function cancel() {
        dialog.hide().remove();
    }

    function showSpinner() {
        var $dialog = dialog.popup.element;
        var radius = 50;
        var lineThickness = radius * 13 / 60;
        var innerRadius = radius * 30 / 60;
        var lineLength = radius - innerRadius;
        var $blanket = $('<div class="image-properties-loading-blanket"><div class="loading-data"></div></div>').appendTo($dialog.find('.dialog-page-body'));
        var $spinner = $blanket.find('.loading-data');

        $blanket.css({width: $blanket.parent().width(), height: $dialog.height()});
        $spinner.css({marginTop: -radius * 1.2, marginLeft: -radius * 1.2});


        var opts = {
            color: "#666",
            width: lineThickness,
            radius: innerRadius,
            length: lineLength,
            top: 0,
            left: 0,
            zIndex: 0,
            speed: 1.042
        };

        $spinner.spin(opts);
    }

    function hideSpinner() {
        var $spinner = dialog.popup.element.find('.image-properties-loading-blanket .loading-data');

        $spinner.css({marginTop: '', marginLeft: ''});
        $spinner.spinStop();
        $spinner.closest('.image-properties-loading-blanket').remove();
    }
});

require('confluence/module-exporter').exportModuleAsGlobal('confluence-editor/tinymce3/plugins/imageproperties/js/image-properties-dialog', 'Confluence.Editor.ImageProps', function(ImageProps) {
    var AJS = require('ajs');
    AJS.toInit(ImageProps.init);
    // Can't rely on init which ran in view mode when editor sources were loaded, because the image-properties-tab-items div didn't exist on the page
    AJS.bind('quickedit.success', ImageProps.init);
});

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'unpublished-changes/unpublished-changes.soy' */
// This file was automatically generated from unpublished-changes.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace Confluence.Templates.UnpublishedChanges.
 */

if (typeof Confluence == 'undefined') { var Confluence = {}; }
if (typeof Confluence.Templates == 'undefined') { Confluence.Templates = {}; }
if (typeof Confluence.Templates.UnpublishedChanges == 'undefined') { Confluence.Templates.UnpublishedChanges = {}; }


Confluence.Templates.UnpublishedChanges.lozenge = function(opt_data, opt_ignored) {
  return '<a id="unpublished-changes-lozenge" href="#" class="view-diff-link" title="' + soy.$$escapeHtml(opt_data.tooltip) + '"><span class="aui-lozenge aui-lozenge-complete aui-lozenge-subtle unpublished-changes-lozenge">' + soy.$$escapeHtml(opt_data.label) + '</span></a>';
};
if (goog.DEBUG) {
  Confluence.Templates.UnpublishedChanges.lozenge.soyTemplateName = 'Confluence.Templates.UnpublishedChanges.lozenge';
}

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'unpublished-changes/unpublished-changes.js' */
define('confluence-editor/unpublished-changes/unpublished-changes', [
    'jquery',
    'confluence/legacy',
    'ajs',
    'underscore',
    'tinymce'
], function(
    $,
    Confluence,
    AJS,
    _,
    tinymce
) {
    "use strict";

    return {
        init : function(ed) {
            var $lozengeTemplate = $(Confluence.Templates.UnpublishedChanges.lozenge({
                tooltip: "\u041d\u0430 \u044d\u0442\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u0435\u0441\u0442\u044c \u043d\u0435\u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f",
                label: "\u041d\u0435\u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043e"
            }));

            var enablePublishButton = function(enabledState) {
                var state = _.isBoolean(enabledState) ? enabledState : true;

                Confluence.Editor.UI.setButtonState(state, $('#rte-button-publish'));
            };

            var enableLozenge = function(enabledState, callback) {
                var cb = callback || function(){};
                var state = _.isBoolean(enabledState) ? enabledState : true;
                var _visibleClass = "visible";

                if(!state) {
                    $lozengeTemplate.fadeOut('fast', function(){
                        $(this).hide().removeClass(_visibleClass);
                        cb();
                    });
                } else {
                    $lozengeTemplate.addClass(_visibleClass).fadeIn('fast', cb);
                }
            };

            var UnpublishedChangesManager = {
                show: function() {
                    if(!$lozengeTemplate.hasClass('visible')) {
                        enableLozenge(true, enablePublishButton);
                    }
                },
                hide: function() {
                    // we hide the lozenge container
                    enableLozenge(false);

                    // when there are no changes the publish button should be disabled
                    enablePublishButton(false);
                }
            };

            var bindEvents = function() {
                var $titleInputField = $('#content-title');

                $titleInputField.on('keydown change', UnpublishedChangesManager.show);

                // change event is triggered when an undo level is created on tinymce
                ed.onChange.add(UnpublishedChangesManager.show);
                ed.onKeyDown.add(UnpublishedChangesManager.show);

                ed.onLoad.add(function (){
                    /*
                     We don't want to show the lozenge if someone hits edit on a page with no historical draft, though we want it to if someone creates a new page w/ content. (i.e. template)
                     If you create a new page the existing 'existing-draft-id' will be "0", so instead we have to use 'draft-id' here.

                     If the page content is not 'empty', the current editor instance does not represent a draft, the content is considered unpublished.
                     */
                    if ($(ed.startContent).text().trim() && (AJS.Meta.get('draft-id') > 0)) {
                        UnpublishedChangesManager.show();
                    }
                });

                // track user hover over tipsy
                $lozengeTemplate.on('mouseenter.tipsy', function() {
                    AJS.trigger('analytics', { name: 'confluence.editor.unpublished-changes.lozenge.hover' });
                });
            };

            var setup = function() {
                var $titleContainer = $('#content-title-div');

                // The lozenge should be hidden before insertion (to avoid flickering).
                UnpublishedChangesManager.hide();

                // insert before the title, on the future this will be changed since there will be a new container for actions
                $lozengeTemplate.insertBefore($titleContainer);

                // enable the tipsy tooltips
                $lozengeTemplate.tooltip();

                // bind unpublished changes related events
                bindEvents();

                // allowing unpublished changes to be triggered from tinymce exec command
                ed.addCommand('mceConf.UnpublishedChangesLozenge.show', UnpublishedChangesManager.show);
                ed.addCommand('mceConf.UnpublishedChangesLozenge.hide', UnpublishedChangesManager.hide);
            };

            // only setup the lozenge after all plugins and all the editor has been initialized
            AJS.bind('rte-ready', setup);
        },

        getInfo : function() {
            return {
                longname : 'Unpublished Changes',
                author : 'Atlassian',
                authorurl : 'http://www.atlassian.com',
                version : tinymce.majorVersion + '.' + tinymce.minorVersion
            };
        }
    };
});

require('confluence/module-exporter').safeRequire('confluence-editor/unpublished-changes/unpublished-changes', function(UnpublishedChanges) {
    var tinymce = require('tinymce');

    tinymce.create('tinymce.plugins.UnpublishedChanges', UnpublishedChanges);
    tinymce.PluginManager.add('unpublishedchanges', tinymce.plugins.UnpublishedChanges);
});


}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'tinymce3/settings/tinymce-default-settings.js' */
define('confluence-editor/tinymce3/settings/tinymce-default-settings', [
], function(
) {
   'use strict';
});

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'loader/tinymce-adapter.js' */
// Please read CONFDEV-26277 for the whole context.
// By using AMD, we unveiled CQ-1043 in CQ so we need to delay the AMD
// bit until CQ-1043 gets resolved

// In the main time, we will undo the AMD related changes but leave the code
// commented out, to better show our intentions and work progress.

define('confluence-editor/loader/tinymce-adapter', [
    'ajs',
    'confluence/legacy',
    'jquery'
], function(
    AJS,
    Confluence,
    $
) {
    'use strict';

    // This function is a duplication of
    // confluence-editor/src/main/resources/tinymce3/settings/tinymce-default-settings.js
    //
    // When CQ-1043 gets fixed and we put AMD back, this method should be removed, and
    // we should be back to use the "settings" require dependency.
    //
    function getDefaultSettings (){
        var contextPath = AJS.contextPath();

        var plugins = [

            // please be aware that reordering this list may
            // not be such a good idea

            "auiwindowmanager",
            "table",
            "emotions",
            "confluence",
            "macroplaceholder",
            "customtoolbar",
            "insertwikimarkup",
            "propertypanel",
            "keyboardshortcuts",
            "confmonospace",
            "confcharmap",
            "lists",
            "aePaste",
            "cursorTarget",
            "confluencecleanupplugin",
            "conftable",
            "confluencepastetableplugin",
            "confluencepastemacroplugin",
            "pagelayoutplugin",
            "highlightnode",
            "iosediting",
            "autoconvert",
            "confluencelist",
            "deletecommand",
            "draggable",
            "confluencesortabletablesplugin",
            "textplaceholders",
            "linkbrowser",
            "insertfiles",
            "tableAnalytics"
        ];

        if (AJS.DarkFeatures.isEnabled('confluence.table.resizable')) {
            plugins.push('tableContentWrapper');
        }

        return  {
            //atlassian specific settings
            autoresize_min_height: "100%", //default if not specified in AJS.Meta

            // general
            width: "100%",
            height: "100%",
            document_base_url: Confluence.getBaseUrl() + "/",
            plugins: plugins.join(','),

            // advanced theme params
            theme: "atlassian",
            // event though we don't use the advanced theme to generate the toolbar, we need the controls registered in TinyMCE
            theme_advanced_buttons1: "formatselect,bold,italic,underline,strikethrough,forecolor,separator," +
            "table,row_before,row_after,delete_row,col_before,col_after,delete_col,delete_table,separator," +
            "bullist,numlist,tasklist,outdent,indent,blockquote,justifyleft,justifycenter,justifyright,justifyfull,separator,sup,sub,separator," +
            "undo,redo,separator,confimage,conf_macro_browser,separator,code,customtoolbar,help,monospace,separator,searchreplace,linkbrowserButton",
            theme_advanced_toolbar_location: "top",
            theme_advanced_toolbar_align: "left",
            theme_advanced_resizing: false,
            theme_advanced_resize_horizontal: false,
            theme_advanced_statusbar_location: "none",
            theme_advanced_path: false,
            theme_advanced_blockformats: "p,h1,h2,h3,h4,h5,h6,pre,blockquote",

            // selectors for tinymce editors
            mode: "specific_textareas",
            editor_selector: "tinymce-editor",

            // layout settings
            body_class: "wiki-content",
            popup_css: false,
            content_css: false,
            editor_css: false,

            // undo settings
            custom_undo_redo: true,
            custom_undo_redo_levels: 20,

            // confluence-specific settings
            context_path: contextPath,
            plugin_action_base_path: contextPath + "/plugins/tinymce",
            editor_plugin_action_base_path: contextPath + "/plugins/editor/tinymce",
            page_id: AJS.Meta.get('page-id'),
            draft_type: null,
            form_name: AJS.Meta.get('form-name'),
            space_key: encodeURI(AJS.Meta.get('space-key')),
            confluence_popup_width: 620,
            confluence_popup_height: 550,
            editor_id: "wysiwygTextarea"
        };
    }

    function getProfileByContentType(contentType, isNewPage) {
        if (contentType === "template") {
            return AJS.Confluence.Editor._Profiles.createProfileForTemplateEditor();
        } else if (contentType === "comment") {
            return AJS.Confluence.Editor._Profiles.createProfileForCommentEditor();
        } else { //page, blogpost
            var options = {
                versionComment: !isNewPage,
                notifyWatchers: !isNewPage
            };
            return AJS.Confluence.Editor._Profiles.createProfileForPageEditor(options);
        }
    }

    /**
     * Initialises the TinyMCE editor. This can be run without waiting for DOM ready if the language pack variable.
     * TinyMCELang is available before calling this function.
     */
    return function() {

        var settings = getDefaultSettings();

        // alter settings for drafts
        if (settings.page_id == 0) { // please double check this var type if you remove the loose equality check
            settings.page_id = null;
            settings.draft_type = AJS.Meta.get('draft-type');
        }

        // Settings that are derived from the DOM cannot be assumed to exist yet so defer retrieval of their values
        AJS.Rte.BootstrapManager.addBeforeInitCallback(function(s) {
            s.contentCssTags = $("script[title='editor-css']").html();
            s.language = AJS.Meta.get('action-locale');

            var minHeight = AJS.Meta.get('min-editor-height');
            if (minHeight) {
                s.autoresize_min_height = minHeight;
            }
        });

        // this plugins will be added by default to any instance of the editor that gets created.
        // eventually we should remove them and make that every editor context opt-in for them
        var autocompleteEnabled = !(AJS.Meta.get('remote-user') && AJS.Meta.get('confluence.prefs.editor.disable.autocomplete'));
        if (autocompleteEnabled){
            settings.plugins +=',autocomplete,autocompletelink,autocompletemedia';
        }

        var autoStart = !!AJS.Meta.get('auto-start'); // slow comment, edit page/blogpost and template
        if (autoStart) {

            if (autocompleteEnabled) {
                settings.plugins += ',autocompletemacro';
            }

            var newPage = ('' + AJS.Meta.get('page-id')) === '0';
            var profile = getProfileByContentType(AJS.Meta.get("content-type"), newPage);

            var contextPlugins = profile.plugins.join(',');
            if (contextPlugins){
                settings.plugins +="," + contextPlugins;
            }

            AJS.Rte.BootstrapManager.preInitialise(settings);
            AJS.Rte.BootstrapManager.initialise();

        } else {

            // leave the editor ready to be quickly initialised
            // this is the case of quick edit, quick comments, or quick custom editor
            // We just use the default plugins. The caller must provide
            // any additional plugins to initialise the editor with on
            // the AJS.Rte.BootstrapManager.initialise() call

            // CQ will fall in this case as well, as it calls tinymce.init manually
            AJS.Rte.BootstrapManager.preInitialise(settings);
        }
    };
});

require('confluence/module-exporter').safeRequire('confluence-editor/loader/tinymce-adapter', function(initTinyMce) {
    require('ajs').toInit(initTinyMce);
});

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'com/atlassian/confluence/tinymceplugin/tinymce-adapter-deprecated.js' */
define('confluence-editor/tinymceplugin/tinymce-adapter-deprecated', [
    'tinymce',
    'ajs',
    'confluence/legacy',
    'jquery'
], function(
    tinymce,
    AJS,
    Confluence,
    $
) {
    "use strict";

    return {
        /**
         * Used for selenium tests apparently.
         * @deprecated since 4.0 this doesn't work properly across all the browsers
         */
        putCursorAtPostionInElement : function (selector, position, node) {
            var ed = tinymce.activeEditor;
            var doc = ed.getDoc();

            // need the #text node inside the selected element, so filter the child nodes of the selector
            var el = $(selector, node || doc);
            el = el.contents().filter(function(){ return this.nodeType === 3; })[0];
            var range = ed.selection.getRng(true);
            range.setStart(el, position);
            range.setEnd(el, position);
            ed.selection.setRng(range);
        },

        /**
         * Stores the currently selected range and scroll position of the editor so we can get back to to it later.
         * @deprecated since 4.0 use AJS.Rte.BookmarkManager.storeBookmark();
         */
        storeCurrentSelectionState : AJS.Rte.BookmarkManager.storeBookmark,

        /**
         * Moves the scroll position and selected range in the editor back to where it used to be.
         * @deprecated since 4.0 use AJS.Rte.BookmarkManager.restoreBookmark();
         */
        restoreSelectionState : AJS.Rte.BookmarkManager.restoreBookmark,


        /**
         * @deprecated Since 4.0. Call Confluence.Editor.LinkUtils.insertLink directly.
         */
        insertLink: function (linkObj, existingLinkNode) {
            // Note: we call the method instead of assigning it directly because
            // Confluence.Editor.LinkUtils might not exist when Confluence.Editor.Adapter
            // is created.
            if (existingLinkNode) {
                AJS.Rte.getEditor().selection.select(existingLinkNode);
            }
            Confluence.Editor.LinkAdapter.setLink(linkObj);
        },

        /**
         * gets the base url from the current location.
         * @deprecated use AJS.Rte.getCurrentBaseUrl()
         */
        getCurrentBaseUrl : AJS.Rte.getCurrentBaseUrl,

        /**
         * Adds a callback that will be executed after this editor instance has been initialised.
         * @param callback
         * @deprecated since 4.1 use AJS.Rte.BootstrapManager.addOnInitCallback
         */
        addOnInitCallback: function(callback) {
            AJS.debug("Adding callback to AJS.Rte.BootstrapManager. AJS.Rte.BootstrapManager = " + AJS.Rte.BootstrapManager);
            AJS.Rte.BootstrapManager.addOnInitCallback(callback);
        },

        /**
         * Binds a namespaced callback to the editor scroll event.
         * @param namespace used for unbinding e.g. property-panel
         * @param callback the function to run when the event occurs
         * @deprecated since 4.1 use AJS.Rte.bindScroll
         */
        bindScroll: function(namespace, callback) {
            AJS.Rte.bindScroll(namespace, callback);
        },

        /**
         * Unbinds a namespace bound to the RTE window scroll event
         * @param namespace
         * @deprecated since 4.1 use AJS.Rte.unbindScroll
         */
        unbindScroll: function(namespace) {
            AJS.Rte.unbindScroll(namespace);
        },

        /**
         * @deprecated since 4.1, use AJS.Rte.BootstrapManager.isInitComplete();
         */
        getTinyMceHasInit: function () {
            return AJS.Rte.BootstrapManager.isInitComplete();
        },

        /**
         * Returns the current active editor
         * @deprecated use AJS.Rte.getEditor()
         */
        getEditor : AJS.Rte.getEditor,

        /**
         * @deprecated since 4.1 use AJS.Rte.BootstrapManager.addTinyMcePluginInit
         */
        addTinyMcePluginInit: function(func) {
            AJS.Rte.BootstrapManager.addTinyMcePluginInit(func);
        },

        /**
         * @deprecated since 4.1 use Confluence.Link.isExternalLink
         */
        isExternalLink: function(destination) { //Same check as ConfluenceLinkResolver
            return Confluence.Link.isExternalLink(destination);
        },

        /**
         * @deprecated since 4.1 use tinymce.confluence.MacroUtils.isInMacro
         */
        isInMacroPlaceholder: function (node) {
            return tinymce.confluence.MacroUtils.isInMacro(node);
        },

        /**
         * @deprecated since 4.1 Not sure what this used for try: AJS.Rte.BootstrapManager.preInitialise(settings)
         * followed by AJS.Rte.BootstrapManager.initialise()
         */
        initialiseTinyMce : function() {
            var t = AJS.Editor.Adapter;
            tinymce.EditorManager.preInit.apply(tinymce.EditorManager);
            tinymce.EditorManager.init(t.settings);
        },

        /**
         * Returns the offset of the element in relation to the parent frame.
         * @param element
         * @deprecated since 4.1 Use AJS.Rte.Content.offset
         */
        offset: function (element) {
            AJS.Rte.Content.offset(element);
        },

        /**
         * Returns the text currently selected in the RTE
         * @deprecated since 4.1 Use AJS.Rte.Content.getSelectedText
         */
        getSelectedText : function(){
            return AJS.Rte.Content.getSelectedText();
        },

        /**
         * put the text in newValue into the editor. This is called when the editor needs new
         * content -- it is *not* called to set the initial content. That should be done either by providing the
         * editor with the content as part of the initial HTML, or by calling javascript from editorOnLoad()
         * @param newValue the html to set the content to.
         * @deprecated since 4.1 user AJS.Rte.Content.setHtml
         */
        setEditorValue : function (newValue) {
            AJS.Rte.Content.setHtml(newValue);
        },


        /**
         * @return the current HTML contents of the editor. This *must* return a JavaScript string,
         * not a JavaObject wrapping a java.lang.String
         * @deprecated since 4.1 use AJS.Rte.Content.getHtml
         */
        getEditorHTML : function () {
            return "" + AJS.Rte.getEditor.getContent();
        },

        /**
         * @returns true if the contents of the editor has been modified by the user since
         * the last time editorResetContentChanged()
         * @deprecated since 4.1 use AJS.Rte.Content.editorHasContentChanged
         */
        editorHasContentChanged : function () {
            return AJS.Rte.getEditor().isDirty();
        },

        /**
         * Resets the contents change indicator
         * @deprecated since 4.1 use AJS.Rte.Content.editorResetContentChanged
         */
        editorResetContentChanged : function () {
            AJS.Rte.getEditor().setDirty(false);
        },

        /**
         * Finds the index of the supplied childNode in the parentNode
         * @returns the index of the child node in the parent node. If the child
         * cannot be found in the parent -1 is returned.
         * @deprecated since 4.1 use AJS.Rte.Content.getChildIndex
         */
        getChildIndex: function(parentNode, childNode) {
            var children = parentNode.childNodes;
            for (var i = 0, len = children.length; i < len; i++) {
                if (children[i] == childNode) {
                    return i;
                }
            }
            return -1;
        },

        /**
         * @returns a reference to the main editor instance.
         * @deprecated since 4.1 use AJS.Rte.getMainEditor
         */
        getMainEditor: function () {
            return AJS.Rte.getMainEditor();
        },

        /**
         * @returns the element atlassian draws the editor into
         * @deprecated since 4.1 use AJS.Rte.getEditorContainer
         */
        getEditorContainer : function () {
            return AJS.Rte.getEditorContainer();
        },

        /**
         * @returns the iframe containing the current active editor
         * @deprecated since 4.1 use AJS.Rte.getEditorFrame
         */
        getEditorFrame: function() {
            return AJS.Rte.getEditorFrame();
        },
        /**
         * @returns a jquery object containing a table that houses the current active editor iframe
         * @deprecated since 4.1 use AJS.Rte.getEditorTable
         */
        getEditorTable: function() {
            return AJS.Rte.getEditorTable();
        },

        /**
         * @deprecated since 4.1 use AJS.Rte.webResourcePath
         */
        webResourcePath : AJS.Rte.webResourcePath,

        /**
         * @returns the static resource url prefix, which will include the caching headers
         * @deprecated since 4.1 use AJS.Rte.getResourceUrlPrefix
         */
        getResourceUrlPrefix : function() {
            return AJS.Rte.getResourceUrlPrefix();
        },

        /**
         * @returns the absolute url path to the tinymce web resources, which will include the caching headers
         * @deprecated since 4.1 use AJS.Rte.getTinyMceBaseUrl
         */
        getTinyMceBaseUrl : function() {
            return AJS.Rte.getTinyMceBaseUrl();
        },

        /**
         * @deprecated since 4.1 use AJS.Rte.getMinEditorHeight
         */
        getMinEditorHeight: function() {
            return AJS.Rte.getMinEditorHeight();
        },

        /**
         * Returns the total height of the editor including the toolbar and anything in the header.
         * @param extraHeight
         * @deprecated since 4.1 use AJS.Rte.getTinyMceEditorMinHeight
         */
        getTinyMceEditorMinHeight: function(extraHeight) {
            return AJS.Rte.getTinyMceEditorMinHeight(extraHeight);
        }
    };
});

require('confluence/module-exporter').exportModuleAsGlobal('confluence-editor/tinymceplugin/tinymce-adapter-deprecated', 'AJS.Editor.Adapter');

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-javascript-resources', location = 'analytics/editor-analytics.js' */
define('confluence-editor/analytics/editor-analytics', [
    'ajs',
    'jquery',
    'window'
], function(
    AJS,
    $,
    window
) {
    "use strict";

    var PUBLISH_INTERVAL = 60 * 1000;

    var analyticsTimer;
    var events = {};
    var selectionLen = 0;

    var EditorAnalytics = {};

    EditorAnalytics.bindAnalyticsToEditorCommands = function () {
        var tinymce = require('tinymce');

        clearTimeout(analyticsTimer);
        analyticsTimer = setTimeout(publishAnalytics, PUBLISH_INTERVAL);

        tinymce.activeEditor.onExecCommand.add(function (ed, cmd, ui, val) {
            addToEventLog(mapToAnalyticsActionName[cmd]);
        });

        tinymce.activeEditor.onKeyPress.add(function(ed, e) {
            addToEventLog('keys');
        });

        tinymce.activeEditor.onKeyUp.add(function(ed, e) {
            if (e.keyCode === 46) {
                addToEventLog('delete', selectionLen);
            } else if (e.keyCode === 8) {
                addToEventLog('backspace', selectionLen);
            }
            selectionLen = ed.selection.getContent().length;
        });

        tinymce.activeEditor.onMouseUp.add(function(ed, e) {
            selectionLen = ed.selection.getContent().length;
        });

        tinymce.activeEditor.onPaste.add(function(ed, e) {
            addToEventLog('paste', e.clipboardData.getData('text/plain').length);
        });

        //happens when in-line comment is closed (removed from DOM)
        tinymce.activeEditor.onRemove.add(function (ed) {
            publishAnalytics();
            clearTimeout(analyticsTimer);
        });
    };

    // The editor doesn't fire commands for every action, we'll handle the missing cases here
    EditorAnalytics.bindAnalyticsToIconClicks = function () {
        $('#rte-button-insert-table').on('click', function () {
            addToEventLog('insert.table');
        });
    };

    EditorAnalytics.bindAnalyticsPublishingToWindowUnload = function () {
        // Gets swallowed based on dirty changes and in different situations
        window.addEventListener("beforeunload", function (e) {
            publishAnalytics();
        });
    };

    function addToEventLog (actionName, length) {
        if (actionName) {
            if (events[actionName]) {
                events[actionName]++;
            } else {
                events[actionName] = 1;
            }

            if (length) {
                var sizeKey = actionName + 'Size';
                if (events[sizeKey]) {
                    events[sizeKey] += length;
                } else {
                    events[sizeKey] = length;
                }
            }
        }
    }

    function publishAnalytics () {
        events['pageID'] = AJS.Meta.get('page-id');
        AJS.Confluence.Analytics.publish('confluence.editor.action', events);
        events = {};
        clearTimeout(analyticsTimer);
        analyticsTimer = setTimeout(publishAnalytics, PUBLISH_INTERVAL);
    }

    var mapToAnalyticsActionName = {
        Bold: 'bold',
        confCharmap: 'insert.symbol',
        confMonospace: 'monospace',
        confTableRowToggleHeading: 'table.row.toggle.heading',
        confTableColumnToggleHeading: 'table.column.toggle.heading',
        confTableSelectionToggleHighlight: 'table.selection.toggle.highlight',
        ForeColor: 'foreground.color',
        FormatBlock: 'format.block',
        Indent: 'indent',
        InsertHorizontalRule: 'insert.horizontal.rule',
        InsertOrderedList: 'insert.ordered.list',
        InsertUnorderedList: 'insert.unordered.list',
        InsertWikiMarkup: 'insert.wiki.markup',
        Italic: 'italic',
        JustifyCenter: 'justify.center',
        JustifyLeft: 'justify.left',
        JustifyRight: 'justify.right',
        mceConfimage: 'insert.files.images',
        mceConflink: 'insert.link',
        mceConfMacroBrowser: 'open.other.macros.browser',
        mceEmotion: 'insert.emoticon',
        mceTableCopyRow: 'table.copy.row',
        mceTableCutRow: 'table.cut.row',
        mceTableDelete: 'table.delete',
        mceTableDeleteCol: 'table.delete.column',
        mceTableDeleteRow: 'table.delete.row',
        mceTableInsertColAfter: 'table.insert.column.after',
        mceTableInsertColBefore: 'table.insert.column.before',
        mceTableInsertRowAfter : 'table.insert.row.after',
        mceTableInsertRowBefore: 'table.insert.row.before',
        mceTableMergeCells: 'table.merge.cells',
        mceTablePasteRowBefore: 'table.paste.row.before',
        mceTableSplitCells: 'table.split.cells',
        mcePageLayoutsToolbar: 'page.layouts.toolbar.toggle',
        mcePageLayoutAddSection: 'page.layouts.toolbar.add.section',
        mcePageLayoutRemoveSection: 'page.layouts.toolbar.remove.section',
        mcePageLayoutMoveSectionDown: 'page.layouts.toolbar.movedown.section',
        mcePageLayoutMoveSectionUp: 'page.layouts.toolbar.moveup.section',
        mcePageLayoutChangeSection: 'page.layouts.toolbar.change.section',
        mceConfShortcutDialog: 'open.help.dialog',
        mceSearchReplaceToolbar: 'search.replace.toolbar.toggle',
        mceConfSearchClose: 'search.replace.toolbar.close',
        mceConfSearch: 'search',
        mceConfReplace: 'replace',
        mceConfReplaceAll: 'replace.all',
        Outdent: 'outdent',
        Redo: 'redo',
        Strikethrough: 'strikethrough',
        subscript: 'subscript',
        superscript: 'superscript',
        Underline: 'underline',
        Undo: 'undo',
        InsertInlineTaskList: 'insert.inline.tasklist',
        InsertInlineTaskListNoToggle: 'insert.inline.tasklist.no.toggle'
    };

    return EditorAnalytics;
});

require('confluence/module-exporter').safeRequire('confluence-editor/analytics/editor-analytics', function(EditorAnalytics) {
    require('ajs').bind('rte-ready', function() {
        EditorAnalytics.bindAnalyticsToEditorCommands();
        EditorAnalytics.bindAnalyticsToIconClicks();
        EditorAnalytics.bindAnalyticsPublishingToWindowUnload();
    });
});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'confluence.web.resources:trigger', location = '/includes/js/trigger.js' */
define("confluence/trigger",["jquery","window"],function(b,c){return function(a,d){a=new b.Event(a);b(d||c.top.document).trigger(a);return!a.isDefaultPrevented()}});require("confluence/module-exporter").exportModuleAsGlobal("confluence/trigger","AJS.jiraTrigger");
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'confluence.web.resources:keyboard', location = '/includes/js/api/keyboard.js' */
define("confluence/api/keyboard",["jquery"],function(f){function b(a,b,c){h[b]=a;i[a]=b;c&&(j[b]=!0);return a}function g(a){a=a.originalEvent||a;return null==a.which?a.keyCode:0!==a.which&&0!==a.charCode?a.which:null}function k(a){var a=a.originalEvent||a,b=e.specialKeyEntered(a);if(b)return b;if(f.browser.mozilla){if("keypress"===a.type&&(a=g(a),null!==a))return String.fromCharCode(a).toLowerCase()}else if("keypress"!==a.type)return String.fromCharCode(a.keyCode).toLowerCase()}var e={},h={},i={},
j={},c=e.SpecialKey={BACKSPACE:b("backspace",8,!0),TAB:b("tab",9,!0),RETURN:b("return",13,!0),SHIFT:b("shift",16),CTRL:b("ctrl",17),ALT:b("alt",18),PAUSE:b("pause",19),CAPS_LOCK:b("capslock",20),ESC:b("esc",27,!0),SPACE:b("space",32,!0),PAGE_UP:b("pageup",33),PAGE_DOWN:b("pagedown",34),END:b("end",35),HOME:b("home",36),LEFT:b("left",37),UP:b("up",38),RIGHT:b("right",39),DOWN:b("down",40),INSERT:b("insert",45),DELETE:b("del",46),F1:b("f1",112),F2:b("f2",113),F3:b("f3",114),F4:b("f4",115),F5:b("f5",
116),F6:b("f6",117),F7:b("f7",118),F8:b("f8",119),F9:b("f9",120),F10:b("f10",121),F11:b("f11",122),F12:b("f12",123),NUMLOCK:b("numlock",144),SCROLL:b("scroll",145),META:b("meta",224)};c.eventType=function(){return f.browser.mozilla?"keypress":"keydown"};c.fromKeyCode=function(a){return h[a]};c.toKeyCode=function(a){return i[a]};c.isAscii=function(a){return!!j[a]};c.isSpecialKey=function(a){return!!c.toKeyCode(a)};e.characterEntered=function(a){a=a.originalEvent||a;if("keypress"===a.type&&(a=g(a),
null!==a&&(!c.isAscii(a)||c.fromKeyCode(a)===c.SPACE)))return String.fromCharCode(a)};e.specialKeyEntered=function(a){a=a.originalEvent||a;if(f.browser.mozilla){if("keypress"===a.type){var b=g(a);if(null===b)return c.fromKeyCode(a.keyCode);if(c.isAscii(b))return c.fromKeyCode(b)}}else if("keypress"!==a.type)return c.fromKeyCode(a.keyCode)};e.shortcutEntered=function(a){a=a.originalEvent||a;if(a.type===e.SpecialKey.eventType()){var b=e.specialKeyEntered(a),d="";a.altKey&&b!==c.ALT&&(d+=c.ALT+"+");
a.ctrlKey&&b!==c.CTRL&&(d+=c.CTRL+"+");a.metaKey&&(!a.ctrlKey&&b!==c.META)&&(d+=c.META+"+");a.shiftKey&&b!==c.SHIFT&&(d+=c.SHIFT+"+");if(b)return d+b;if(0<d.length&&"shift+"!==d&&(a=k(a)))return d+a}};return e});require("confluence/module-exporter").exportModuleAsGlobal("confluence/api/keyboard","AJS.Keyboard");
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'confluence.web.resources:jira-controls', location = '/includes/js/class.js' */
define("confluence/class",["jquery"],function(f){var j=function(d){var a=function(){};a.prototype=d;return new a},i=!1,l=/xyz/.test(function(){xyz})?/\b_super\b/:/.*/,k=function(){};k.extend=function(){function d(){!i&&this.init&&this.init.apply(this,arguments)}var a,g=this.prototype;if(1<arguments.length){var c=f.makeArray(arguments);a=c.pop();var h;f.each(c,function(b,a){h=h?h.extend(a):a});return h.extend(this.prototype).extend(a)}a=arguments[0];i=!0;c=new this;i=!1;for(var b in a)if(c[b]="function"===
typeof a[b]&&"function"===typeof g[b]&&l.test(a[b]))c[b]=function(a,b){return function(){var c=this._super;this._super=g[a];var d=b.apply(this,arguments);this._super=c;return d}}(b,a[b]);else if("object"===typeof g[b]){var e=j(a[b]);f.each(g[b],function(a,b){if(e[a]){if("object"===typeof e[a]){var c=j(e[a]);f.each(b,function(a,b){c[a]||(c[a]=b)});e[a]=c}}else e[a]=b});c[b]=e}else c[b]=a[b];d.prototype=c;d.constructor=d;d.extend=arguments.callee;return d};return k});
require("confluence/module-exporter").exportModuleAsGlobal("confluence/class","Class");
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'confluence.web.resources:jira-controls', location = '/includes/js/control.js' */
define("confluence/control","confluence/class confluence/trigger confluence/api/logger confluence/api/keyboard jquery document".split(" "),function(k,l,i,g,d,e){return k.extend({INVALID:"INVALID",_throwReadOnlyError:function(a){Error(this.CLASS_SIGNATURE+": Sorry ["+a+"] is a read-only property")},_assignEvents:function(a,b){this._unassignEvents(a,b);if(typeof b==="string")for(var c in this._events[a])d(e).delegate(b,c,this._getDispatcher(a,c));else{b=d(b);for(c in this._events[a]){b.bind(c,this._getDispatcher(a,
c));i.debug("Control bound eventType '"+c+"' for group '"+a+"' on target '"+(b[0].type||b[0])+"'")}}},_unassignEvents:function(a,b){if(typeof b==="string")for(var c in this._events[a])d(e).undelegate(b,c,this._getDispatcher(a,c));else{b=d(b);try{for(c in this._events[a])b.unbind(c,this._getDispatcher(a,c))}catch(g){var f=b.data("events");if(f)for(c in f)if(c in this._events[a]){for(var m=this._getDispatcher(a,c),j=f[c],h=0;h<j.length;h++)if(j[h]===m){j.splice(h,1);break}i.debug("Control unbound eventType '"+
c+"' for group '"+a+"' on target '"+(b[0].type||b[0])+"'")}}}},_getDispatcher:function(a,b){var c=a+"/"+b;if(!this._dispatchers)this._dispatchers={};if(!this._dispatchers[c]){var e=this._events[a][b],f=this;this._dispatchers[c]=function(c){i.debug("Control dispatching eventType '"+b+"' for group '"+a+"' on instance '"+f.type+"'");return e.call(f,c,d(this))}}return this._dispatchers[c]},_isValidInput:function(){return true},_handleKeyEvent:function(a){if(this._isValidInput(a)){var b=g.SpecialKey,c=
g.shortcutEntered(a);if(c){if(this.keys[c]){this.keys[c].call(this,a);return}if((c===b.BACKSPACE||c===b.DELETE)&&this.keys.onEdit){this.keys.onEdit.call(this,a);return}}(b=g.characterEntered(a))&&this.keys.onEdit&&this.keys.onEdit.call(this,a,b)}},getCustomEventName:function(a){return(this.CLASS_SIGNATURE||"")+"_"+a},_getCustomEventArgs:function(){return[this]},trigger:function(a){return l(a,this)},_supportsBoxShadow:function(){var a=e.body.style;return a.WebkitBoxShadow!==void 0||a.MozBoxShadow!==
void 0||a.boxShadow!==void 0},_setOptions:function(a){var b,c,a=a||{};if(a instanceof d||typeof a==="string"||typeof a==="object"&&a.nodeName)a={element:a};b=d(a.element);c=b.getOptionsFromAttributes();this.options=d.extend(true,this._getDefaultOptions(a),c,a);if(b.length===0)return this.INVALID},getCaret:function(a){var b=a.selectionStart;if(b>=0)return a.selectionEnd>b?-1:b;if(e.selection){b=e.selection.createRange();if(b.text.length===0){var c=b.duplicate();c.moveToElementText(a);c.setEndPoint("EndToStart",
b);return c.text.length}}return-1},_render:function(){var a,b=arguments[0],c=[];for(a=1;a<arguments.length;a++)c.push(arguments[a]);return this._renders[b].apply(this,c)}})});require("confluence/module-exporter").exportModuleAsGlobal("confluence/control","AJS.Control");
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'confluence.web.resources:jira-controls', location = '/includes/js/api/mouse.js' */
define("confluence/api/mouse",["jquery","window"],function(d,e){var b={MotionDetector:function(){this.reset()}};b.MotionDetector.prototype.reset=function(){this._y=this._x=this._handler=null;this.moved=!1};b.MotionDetector.prototype.wait=function(b){var a=this;a._handler||(this.reset(),d(e.top.document).bind("mousemove",a._handler=function(c){!a._x&&!a._y?(a._x=c.pageX,a._y=c.pageY):c.pageX===a._x&&c.pageY===a._y||(a.unbind(),a.moved=!0,b&&b.call(this,c))}))};b.MotionDetector.prototype.unbind=function(){this._handler&&
(d(e.top.document).unbind("mousemove",this._handler),this.reset())};return b});require("confluence/module-exporter").exportModuleAsGlobal("confluence/api/mouse","AJS.Mouse");
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'confluence.web.resources:jira-controls', location = '/includes/js/group.js' */
define("confluence/group",["confluence/control","confluence/api/logger","jquery"],function(d,e,c){return d.extend({init:function(){this.type=this.type||"Group";this.items=[];this.index=-1;this._assignEvents("instance",this)},addItem:function(a){this.items.push(a);this._assignEvents("item",a)},removeItem:function(a){var b=c.inArray(a,this.items);if(0>b)throw Error("Group: item ["+a+"] is not a member of this group");a.trigger("blur");b<this.index&&this.index--;this.items.splice(b,1);this._unassignEvents("item",
a)},removeAllItems:function(){for(var a=0;a<this.items.length;a++)this._unassignEvents("item",this.items[a]),this.items[a].trigger("blur");this.index=-1;this.items.length=0;this._unassignEvents("keys",document)},shiftFocus:function(a){e.debug("Group.shiftFocus called with offset: "+a);-1===this.index&&1===a&&(a=0);0<this.items.length&&(a=(Math.max(0,this.index)+this.items.length+a)%this.items.length,this.items[a].trigger("focus"))},prepareForInput:function(){this._assignEvents("keys",document)},_events:{instance:{focus:function(){0!==
this.items.length&&(0>this.index?this.items[0].trigger("focus"):this._assignEvents("keys",document))},blur:function(){0<=this.index?this.items[this.index].trigger("blur"):this._unassignEvents("keys",document)}},keys:{"keydown keypress":function(a){this._handleKeyEvent(a)}},item:{focus:function(a){var b=this.index;this.index=c.inArray(a.target,this.items);0>b?this.trigger("focus"):b!==this.index&&this.items[b].trigger("blur")},blur:function(a){this.index===c.inArray(a.target,this.items)&&(this.index=
-1,this.trigger("blur"))},remove:function(a){this.removeItem(a.target)}}},keys:{}})});require("confluence/module-exporter").exportModuleAsGlobal("confluence/group","AJS.Group");
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'confluence.web.resources:jira-controls', location = '/includes/js/select-grid.js' */
define("confluence/select-grid",["ajs","jquery","confluence/templates","confluence/group","confluence/control"],function(c,f,k,g,i){var g=g.extend({init:function(a){this.type=this.type||"SelectGrid";this._super();var b=f(k.SelectGrid.gridOutline()),d=b.find("thead tr");f(a.columns).each(function(a,b){var e=c("th").addClass(b.getClassName()).text(b.heading);d.append(e)});this.gridContainer=f(a.gridContainer).append(b);this.getRowId=a.getRowId;this.table=b;this.columns=a.columns;this.selectionCallback=
a.selectionCallback;this.body=b.find("tbody");this.body.delegate("a","click",function(a){a.preventDefault()});this.dontShiftFocus=a.dontShiftFocus||function(){}},keys:{up:function(a){this.table.is(":visible")&&!this.dontShiftFocus()&&(this.shiftFocus(-1),a.preventDefault())},down:function(a){this.table.is(":visible")&&!this.dontShiftFocus()&&(this.shiftFocus(1),a.preventDefault())}},_addRow:function(a,b,d,c){f.isFunction(d)&&(c=d,d=!1);d?this.body.prepend(a):this.body.append(a);a=new n({row:a,data:b,
callback:c,getRowId:this.getRowId,selectionCallback:c});this.addItem(a);return a},clear:function(){this.removeAllItems();this.body.children().remove()},_addRows:function(a,b){var d=this,g=[];f(a).each(function(a,e){var i=d.columns,h,j,l,m;h=c("tr");f(i).each(function(a,b){j={outerClass:b.getClassName(e)||"",href:b.getHref&&b.getHref(e)||"",innerClass:b.getInnerClass&&b.getInnerClass(e)||"",title:b.getTitle&&b.getTitle(e)||"",text:b.getText(e)||""};l=j.href?"cellWithLink":"cellWithoutLink";m=k.SelectGrid[l](j);
h.append(m)});h.attr("data-id",d.getRowId(e));g.push(d._addRow(h,e,b,d.selectionCallback))});return g},update:function(a){this.clear();!a||!a.length?c.debug("SelectGrid.update called with no data, returning."):(this._addRows(a),this.prepareForInput())},prependAndSelect:function(a,b){!a||!a.length?c.debug("SelectGrid.prependAndSelect called with no data, returning."):this._addRows(a,!0)[b||0].selectRow()},findItem:function(a){for(var b=0;b<this.items.length;b++)if(this.items[b].getRowId()==a)return this.items[b];
c.debug("SelectGrid.findItem didn't find item, returning null.");return null},select:function(a){(a=this.findItem(a))&&a.selectRow()},selectIndex:function(a){a=a||0;this.items[a]?this.items[a].selectRow():c.debug("SelectGrid.selectIndex couldn't select row with index "+a+", not found")},show:function(){this.gridContainer.removeClass("hidden")},hide:function(){this.gridContainer.addClass("hidden")},isVisible:function(){return!this.gridContainer.hasClass("hidden")}}),n=i.extend({init:function(a){this.type=
"SelectableRow";this.$row=f(a.row);this.$row.data("properties",a.data);this.getRowId=function(){return a.getRowId(a.data)};this.selectionCallback=a.selectionCallback;this._assignEvents("element",this.$row);this._assignEvents("instance",this);c.debug("SelectableRow initialized")},_events:{instance:{focus:function(){var a=this.$row;a.addClass("selected");this.selectionCallback(a,a.data("properties"))},blur:function(){this.$row.removeClass("selected")}},element:{click:function(){this.trigger("focus")}}},
selectRow:function(){this.trigger("focus")}});g.Column=function(a){var b=function(b){return b[a.key]};return{key:a.key,heading:a.heading,getClassName:a.getClassName||function(){return a.className||a.key+"-field"},getHref:a.getHref,getInnerClass:a.getInnerClass,getTitle:a.getTitle,getText:a.getText||b}};return g});require("confluence/module-exporter").exportModuleAsGlobal("confluence/select-grid","AJS.SelectGrid");
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'confluence.web.resources:jira-controls', location = '/includes/js/select-grid.soy' */
// This file was automatically generated from select-grid.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace Confluence.Templates.SelectGrid.
 */

if (typeof Confluence == 'undefined') { var Confluence = {}; }
if (typeof Confluence.Templates == 'undefined') { Confluence.Templates = {}; }
if (typeof Confluence.Templates.SelectGrid == 'undefined') { Confluence.Templates.SelectGrid = {}; }


Confluence.Templates.SelectGrid.gridOutline = function(opt_data, opt_ignored) {
  return '<table class="select-grid aui"><thead><tr class="data-table-header"></tr></thead><tbody></tbody></table>';
};
if (goog.DEBUG) {
  Confluence.Templates.SelectGrid.gridOutline.soyTemplateName = 'Confluence.Templates.SelectGrid.gridOutline';
}


Confluence.Templates.SelectGrid.cellWithLink = function(opt_data, opt_ignored) {
  return '<td class="' + soy.$$escapeHtml(opt_data.outerClass) + '"><a class="' + soy.$$escapeHtml(opt_data.innerClass) + '" href="' + soy.$$escapeHtml(opt_data.href) + '" title="' + soy.$$escapeHtml(opt_data.title) + '"><span>' + soy.$$escapeHtml(opt_data.text) + '</span></a></td>';
};
if (goog.DEBUG) {
  Confluence.Templates.SelectGrid.cellWithLink.soyTemplateName = 'Confluence.Templates.SelectGrid.cellWithLink';
}


Confluence.Templates.SelectGrid.cellWithoutLink = function(opt_data, opt_ignored) {
  return '<td class="' + soy.$$escapeHtml(opt_data.outerClass) + '"><span class="' + soy.$$escapeHtml(opt_data.innerClass) + '" title="' + soy.$$escapeHtml(opt_data.title) + '">' + soy.$$escapeHtml(opt_data.text) + '</span></td>';
};
if (goog.DEBUG) {
  Confluence.Templates.SelectGrid.cellWithoutLink.soyTemplateName = 'Confluence.Templates.SelectGrid.cellWithoutLink';
}

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'confluence.web.resources:jira-controls', location = '/includes/js/result-grid.js' */
define("confluence/result-grid",["ajs","jquery","confluence/control"],function(f,e,l){return l.extend({init:function(a){this.type=this.type||"ResultGrid";var c,g,k,h,j,d,i;g=a.gridContainer||e(a.baseElement).find(".data-table");g.length||f.debug("gridContainer for AJS.ResultGrid not found!");k=function(b){return b.id};c=new f.SelectGrid({gridContainer:g,columns:a.columns,selectionCallback:a.selectionCallback,getRowId:a.getRowId||k,dontShiftFocus:a.dontShiftFocus});d=a.messageHandler||f.MessageHandler({baseElement:e(a.baseElement).find(".message-panel")});
i=a.noResultMessage||"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u043d\u0435 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u044b.";e.extend(this,{update:function(b,a){d.clearMessages();h&&(h(),j.remove(),h=null);c.clear();if(!b||!b.length){c.hide();var m=e.isFunction(i)?i(a):i;d.displayMessages(m);return!1}c.update(b);c.show();return!0},updateAndSelect:function(b,c,a){this.update(b,c)&&this.selectIndex(a)},prependAndSelect:function(b,a){!b||!b.length?f.debug("ResultGrid.prependAndSelect called with no data, returning."):(d.clearMessages(),c.prependAndSelect(b,
a),c.show())},select:function(b){c.select(b)},selectIndex:function(b){c.selectIndex(b)},clear:function(){d.clearMessages();c.hide()},loading:function(){c.show();var b=g.width(),a=g.height();this.clear();if(!h){var d,e;d=b/2-73;e=a/2-73;j=f("div").addClass("spinner-container").width(b-d).height(a-e).css({"padding-left":d,"padding-top":e}).insertAfter(g);h=Raphael.spinner(j[0],60,"#666")}},isVisible:function(){return c.isVisible()}})}})});
require("confluence/module-exporter").exportModuleAsGlobal("confluence/result-grid","AJS.ResultGrid");
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'confluence.web.resources:breadcrumbs-jquery', location = '/includes/js/breadcrumbs-jquery.js' */
define("confluence/breadcrumbs-jquery",["jquery","confluence/templates"],function(e,h){return function(a){var i=this,f=[],b=0,c=a.length-1,d=a[b],j=i.closest(".breadcrumbs-container").width(),g=function(){return i.width()<j};for(f.push(h.Dialog.breadcrumbItem({text:d.title,title:d.title,className:b===c?"last":""}));b++<c;)d=a[b],f.push(h.Dialog.breadcrumbItem({text:d.title,title:d.title,className:b===c?"last":""}));this.html(f.join(""));a=e("li a span",this);a.each(function(a){0!==a&&a!==c&&e(this).shortenUntil(g)});
e(a.get(0)).shortenUntil(g);e(a.get(c)).shortenUntil(g);return this}});require("confluence/module-exporter").exportModuleAsGlobal("confluence/breadcrumbs-jquery","jQuery.fn.renderBreadcrumbs");
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'confluence.web.resources:dialog-breadcrumbs', location = '/includes/js/dialog-breadcrumbs.js' */
define("confluence/dialog-breadcrumbs",["ajs","jquery","confluence/meta","confluence/templates","confluence/breadcrumbs-jquery"],function(b,d,e,k){var h={},l=function(a,e,f){var g=a.userName?a.userName:a.pageId?a.pageId+":"+a.fileName:a.spaceKey+":"+a.title+":"+a.postingDay+":"+a.fileName;g in h?e(h[g],"success"):d.ajax({type:"GET",dataType:"json",data:a,url:b.contextPath()+"/pages/breadcrumb.action",error:f||function(){},success:function(a,b){if(!a||!a.breadcrumbs)f(a,b);else{for(var c=d.makeArray(a.breadcrumbs);c[0]&&
"userinfo"!==a.type&&/peopledirectory\.action$/.test(c[0].url);)c.shift();"page"===a.type&&(c[1]&&/pages\.action/.test(c[1].url))&&c.splice(1,1);c.type=a.type;h[g]=c;e(c,b)}}})};return{getBreadcrumbsDefault:l,Breadcrumbs:function(a,h){var f=0;return{update:function(g,j){a.html(k.Dialog.breadcrumbLoading());var m=f+=1,c=function(){return m!==f?(b.debug("Breadcrumb response for ",g," is stale, ignoring."),!0):!1};(h||l)(g,function(f,h){if(!c())if("success"!==h||!f)a.html(k.Dialog.breadcrumbError());
else{var i=g.spaceKey;a.renderBreadcrumbs(f);if(!(i=i!==e.get("space-key")))a:{for(i=1;i<f.length;i++)if(f[i].title===e.get("page-title")){i=!1;break a}i=!0}i?(j.clearErrors(),d(j.moveButton).prop("disabled",!1)):(j.error("\u0412\u044b \u043d\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0435\u0440\u0435\u043d\u0435\u0441\u0442\u0438 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u0447\u0442\u043e\u0431\u044b \u043e\u043d\u0430 \u0441\u0442\u0430\u043b\u0430 \u0441\u0430\u043c\u0430 \u043f\u043e\u0434 \u0441\u043e\u0431\u043e\u0439 \u0438\u043b\u0438 \u043f\u043e\u0434 \u0441\u0432\u043e\u0438\u043c\u0438 \u043f\u043e\u0442\u043e\u043c\u043a\u0430\u043c\u0438."),d("li:last-child",a).addClass("warning"))}},function(d){c()||(a.html(k.Dialog.breadcrumbError()),404===d.status&&j.error("\u0423\u043a\u0430\u0437\u0430\u043d\u043d\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u0430."))})}}},getBreadcrumbsLegacy:function(a,e,f){if(!a.id)throw Error("id is a required parameter in 'options'");
if(!a.type)throw Error("type is a required parameter in 'options'");var g=a.id+":"+a.type;g in h?e(h[g],"success"):d.ajax({type:"GET",dataType:"json",data:a,url:b.contextPath()+b.REST.getBaseUrl()+"breadcrumb",error:f||function(){},success:function(a,b){if(!a||!a.breadcrumbs)f(a,b);else{for(var c=d.makeArray(a.breadcrumbs);c[0]&&"userinfo"!==a.type&&/peopledirectory.action$/.test(c[0].url);)c.shift();c.type=a.type;h[g]=c;e(c,b)}}})}}});
require("confluence/module-exporter").safeRequire("confluence/dialog-breadcrumbs",function(b){var d=require("ajs"),e=require("confluence/legacy");d.toInit(function(){d.MoveDialog||(d.MoveDialog={});d.MoveDialog.Breadcrumbs=b.Breadcrumbs;d.MoveDialog.getBreadcrumbs=b.getBreadcrumbsDefault;d.Breadcrumbs={};d.Breadcrumbs.getBreadcrumbs=b.getBreadcrumbsLegacy;e.Dialogs||(e.Dialogs={});e.Dialogs.Breadcrumbs=d.Breadcrumbs;e.Dialogs.Breadcrumbs.getBreadcrumbs=b.getBreadcrumbsLegacy;e.Dialogs.Breadcrumbs.Controller=
b.Breadcrumbs;e.Dialogs.Breadcrumbs.defaultGetBreadcrumbs=b.getBreadcrumbsDefault})});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'confluence.web.resources:dialog-breadcrumbs', location = '/includes/soy/dialog-breadcrumbs.soy' */
// This file was automatically generated from dialog-breadcrumbs.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace Confluence.Templates.Dialog.
 */

if (typeof Confluence == 'undefined') { var Confluence = {}; }
if (typeof Confluence.Templates == 'undefined') { Confluence.Templates = {}; }
if (typeof Confluence.Templates.Dialog == 'undefined') { Confluence.Templates.Dialog = {}; }


Confluence.Templates.Dialog.breadcrumbItem = function(opt_data, opt_ignored) {
  return '<li><a class="' + soy.$$escapeHtml(opt_data.className) + '" title="' + soy.$$escapeHtml(opt_data.title) + '" tabindex="-1"><span>' + soy.$$escapeHtml(opt_data.text) + '</span></a></li>';
};
if (goog.DEBUG) {
  Confluence.Templates.Dialog.breadcrumbItem.soyTemplateName = 'Confluence.Templates.Dialog.breadcrumbItem';
}


Confluence.Templates.Dialog.breadcrumbLoading = function(opt_data, opt_ignored) {
  return '<li class="loading"><span>' + soy.$$filterNoAutoescape("\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u0446\u0435\u043f\u043e\u0447\u043a\u0438\u2026") + '</span></li>';
};
if (goog.DEBUG) {
  Confluence.Templates.Dialog.breadcrumbLoading.soyTemplateName = 'Confluence.Templates.Dialog.breadcrumbLoading';
}


Confluence.Templates.Dialog.breadcrumbError = function(opt_data, opt_ignored) {
  return '<li class="warning last"><span>' + soy.$$escapeHtml("\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0438 \xab\u0445\u043b\u0435\u0431\u043d\u044b\u0445 \u043a\u0440\u043e\u0448\u0435\u043a\xbb.") + '</span></li>';
};
if (goog.DEBUG) {
  Confluence.Templates.Dialog.breadcrumbError.soyTemplateName = 'Confluence.Templates.Dialog.breadcrumbError';
}

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'confluence.web.resources:page-location', location = '/includes/js/page-location.js' */
define("confluence/page-location",["ajs","confluence/meta"],function(c,a){var b=null;return{get:function(){return b?b:{spaceName:a.get("space-name"),spaceKey:a.get("space-key"),parentPageTitle:a.get("parent-page-title")}},set:function(a){b=a}}});require("confluence/module-exporter").exportModuleAsGlobal("confluence/page-location","Confluence.PageLocation");
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-link-browser:link-browser-resources', location = 'js/link-object.js' */
define("confluence-link-browser/link-object",["jquery","ajs","confluence/legacy"],function(c,g,m){function j(a){return c.nodeName(a,"img")?a:a.hasChildNodes()&&1===a.childNodes.length&&c.nodeName(a,"a")&&c.nodeName(a.firstChild,"img")?a.firstChild:null}function k(a){return!a?"":c(a).attr("data-linked-resource-default-alias")||c(a).attr("src")}function l(a){var b={};"A"===a.nodeName&&c(a.attributes).each(function(){b[this.name]=this.value});return b}function i(a,b){for(var c=a;c&&c!=b;){if(3!=c.nodeType)return!1;
c=c.nextSibling}return 3===b.nodeType}var e={isLink:function(a){return a&&!!a.fillNode}},f=function(a){if(e.isLink(a))return a;var b={insert:function(){return m.Editor.LinkAdapter.setLink(b)},fillNode:function(a){var b=this.attrs;b.href=b.href||"#";a.attr(b);this.classes&&this.classes.length&&a.addClass(this.classes.join(" "));a.html(this.body.html);return a},getData:function(){var a={},b;for(b in this)this.hasOwnProperty(b)&&!c.isFunction(this[b])&&(a[b]=this[b]);return a},getLinkedImage:function(){return this.body&&
this.body.jquery?1===this.body.length&&this.body.is("img")&&this.body:null},getResourceId:function(){return this.attrs["data-linked-resource-id"]||""},getResourceVersion:function(){return this.attrs["data-linked-resource-version"]||""},isToConfluenceEntity:function(){return this.attrs["data-linked-resource-id"]},isToAttachmentOnSamePage:function(a){return"attachment"==this.attrs["data-linked-resource-type"]&&this.attrs["data-linked-resource-container-id"]==a},isCustomAtlassianContentLink:function(){return this.classes&&
this.classes.length?-1!=c.inArray("confluence-link",this.classes):!1},hasAnchor:function(){return this.attrs["data-anchor"]},getResourceType:function(){return this.attrs["data-linked-resource-type"]},getDefaultAlias:function(){return this.attrs["data-linked-resource-default-alias"]},getHref:function(){return this.attrs.href},getAnchor:function(){return this.attrs["data-anchor"]},getHtml:function(){return this.body.html},getShortcut:function(){return this.attrs["data-linked-resource-shortcut"]},isHrefValid:function(){return this.attrs.href&&
"http://"!=this.attrs.href},isImage:function(){return this.body.isImage},isNewLink:function(){return c.isEmptyObject(this.attrs)},isShortcutLink:function(){return"shortcut"===this.getResourceType()},showsBreadcrumbs:function(){return!0}};if(a&&a.attrs){var f={},h=null;c.each(a.attrs,function(a,b){"class"==a?h=b:f[a]=b});a.attrs=f;if(h){var d=h.split(" ");a.classes=a.classes&&a.classes.length?a.classes.concat(d):d}}c.extend(b,a);return b};e.fromData=function(a){return f(a)};e.fromNode=function(a,b){f({attrs:{},
body:{html:b,text:b}});return f({attrs:l(a),body:{html:b,text:b}})};e.fromSelectedAnchor=function(a,b){var e=c(a),h=j(a),d=!h&&i(a.firstChild,a.lastChild);return f({attrs:l(a),body:{isEditable:d,isImage:!!h,html:e.html(),imgName:k(h),text:b}})};e.fromSelection=function(a,b,c,e){var b=j(b),d;if(d=!b)if(a.collapsed)d=!0;else if(d=a.startContainer,d==a.endContainer)d=3===d.nodeType?!0:i(d.childNodes[a.startOffset],d.childNodes[a.endOffset-1]);else{var g=require("tinymce").activeEditor.dom;d=g.isBlock(a.startContainer)?
a.startContainer.childNodes[a.startOffset]:a.startContainer;a=g.isBlock(a.endContainer)?a.endContainer.childNodes[a.endOffset-1]:a.endContainer;a=d&&a&&d.parentNode==a.parentNode?{start:d,end:a}:null;d=!!a&&i(a.start,a.end)}return f({attrs:{},body:{isEditable:d,isImage:!!b,html:c,imgName:k(b),text:e}})};e.fromREST=function(a){var b=f({attrs:{"data-base-url":g.Confluence.getBaseUrl(),"data-linked-resource-id":a.id,"data-linked-resource-type":a.type,"data-linked-resource-content-type":a.contentType,
href:g.REST.findLink(a.link),"data-linked-resource-default-alias":a.title},body:{html:g.escapeHtml(a.title),text:g.escapeHtml(a.title)},classes:["confluence-link"]});"user"===a.type&&(b.attrs["data-linked-resource-type"]="userinfo");return b};e.createLinkToNewPage=function(a,b){return f({attrs:{"data-space-key":b,"data-content-title":a,href:g.contextPath()+"/pages/createpage.action?spaceKey="+b+"&title="+a},body:{html:g.escapeEntities(a),text:a},classes:["createlink","confluence-link"]})};e.makeExternalLink=
function(a){return f({attrs:{href:a},body:{html:a,text:a}})};e.isExternalLink=function(a){return a&&(a.match(/^(\/\/|mailto:|file:|http:|https:)/)||0===a.indexOf("\\"))};return e});require("confluence/module-exporter").exportModuleAsGlobal("confluence-link-browser/link-object","Confluence.Link");
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-link-browser:link-browser-resources', location = 'js/link-adapter.js' */
define("confluence-link-browser/link-adapter",["ajs","jquery","confluence/legacy","tinymce"],function(d,e,f,h){return{setLink:function(a){var b=d.Rte.getEditor(),b=e(b.dom.create("a"),b.getDoc());a.fillNode(b);a=h.confluence.NodeUtils.replaceSelection(b);e("#comments-section").length&&d.Rte.fixEditorFocus();return a},getLink:function(){var a,b,c;a=d.Rte.getEditor().selection;var g=a.getNode();if(c=e(g).parents().andSelf().filter("a[href]")[0])return a.select(c),b=a.getContent({format:"text"}),f.Link.fromSelectedAnchor(c,
b);c=a.getRng(!0);b=a.getContent({format:"text"});a=a.getContent();return f.Link.fromSelection(c,g,a,b)}}});require("confluence/module-exporter").exportModuleAsGlobal("confluence-link-browser/link-adapter","Confluence.Editor.LinkAdapter");
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-link-browser:link-browser-resources', location = 'js/link-browser.js' */
define("confluence-link-browser/link-browser",["ajs","confluence/legacy","jquery"],function(b,o,h){function r(){if(!e.prop("disabled")){e.prop("disabled",!0);b.debug("link-browser.js: submit");i.preSubmit&&i.preSubmit();var a=f.getLink();n();a.insert();b.trigger("closed.link-browser")}}function n(){k.hide().remove();b.Rte.BookmarkManager.restoreBookmark()}function p(){n();b.trigger("closed.link-browser")}function s(a,e,l){var c=e.key,e=e.label,d=c+"-panel",g=o.Templates.LinkBrowser[c+"Panel"]({atlToken:b.Meta.get("atl-token")});
k.addPanel(e,g,d,d+"-id");var a=k.get("panel:"+a),j=l.tabs[c];j.panelObj=a;j.key=c;j.createPanel({baseElement:h(a[0].body)});a[0].onblur=j.onDeselect;a[0].onselect=function(){var a=!!j.hasBreadcrumbs;b.debug("Link Browser: on tab select, breadcrumbs enabled: "+a);j.onSelect();f.refresh(a);i=j};return j}var k,f,e,i;return{SEARCH_PANEL:"search",ATTACHMENTS_PANEL:"attachments",WEBLINK_PANEL:"weblink",ADVANCED_PANEL:"advanced",open:function(a){h(function(){h('.ffi input[type="file"]#file_0').fancyFileInput()});
if(h(".aui-dialog:visible").length)return null;a=a||{};b.Rte.BookmarkManager.storeBookmark();a.linkInfo=a.linkInfo||o.Editor.LinkAdapter.getLink();if(a.opener)return a.opener(a.linkInfo.alias,a.linkInfo);var q=a,a={tabs:{},setLink:function(t,a){f.setLink(t,a)},getLink:function(){return f.getLink()},getSelectedDataTableItem:function(){return h(".data-table:visible tr.selected")},linkValid:function(a){e.prop("disabled",!a)},focusLinkText:function(){f.focusLinkText()||(b.debug("LinkBrowser: focusing submit button"),
e.focus())},getLinkText:function(){return f.getLinkText()},isLinkTextVisible:function(){return f.isLinkTextVisible()},hasBreadcrumbs:function(a){return f.hasBreadcrumbs(a)},getLocationPresenter:function(){return f},doSearch:function(a){this.tabs.search.doSearch(a)},getSearchTextField:function(){return this.tabs.search.getSearchTextField()},moveLocationPanel:function(a){f.moveLocationPanel(a)},restoreLocationPanel:function(){f.restoreLocationPanel()},gotoPanel:function(a){this.popup.gotoPanel(a)},
getCurrentPanel:function(){return this.popup.getCurrentPanel()},setWebLinkURL:function(a){var c=this.tabs.weblink;i!=c?b.debug("Cannot set URL "+a+" on hidden Web Link panel"):c.setURL(a)},getWebLinkUrl:function(){var a=this.tabs.weblink;return i!=a?(b.debug("Cannot get URL on hidden Web Link panel"),null):a.getURL()},getTitle:function(){return this.popup.getTitle()},getSubmitButtonText:function(){return e.text()},isSubmitButtonEnabled:function(){return e.is(":enabled")},isVisible:function(){return this.popup.isVisible()},
getAdvancedTextField:function(){var a=this.tabs.advanced;return i!=a?(b.debug("Cannot get link text on hidden advanced panel"),null):a.getLink()},setAdvancedTextField:function(a){var c=this.tabs.advanced;i!=c?b.debug("Cannot set link text on hidden advanced panel"):c.setLink(a)},submit:r,cancel:p},l=q.linkInfo,c=l.isNewLink(),d,g;d=new b.ConfluenceDialog({width:840,height:590,id:"insert-link-dialog",onCancel:p,onSubmit:r});g=c?"\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0441\u0441\u044b\u043b\u043a\u0443":"\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u0441\u044b\u043b\u043a\u0443";
c=c?"\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c":"\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c";d.addHeader(g);d.addButton(c,r);d.addCancel("\u041e\u0442\u043c\u0435\u043d\u0438\u0442\u044c",p);d.addHelpText("\u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430: \u043d\u0430\u0436\u043c\u0438\u0442\u0435 \u0022[\u0022 \u0432 \u0440\u0435\u0434\u0430\u043a\u0442\u043e\u0440\u0435 \u0434\u043b\u044f \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0445 \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0441\u0441\u044b\u043b\u043a\u0438.");g=h("#insert-link-dialog .dialog-tip");g.attr("title",g.text());h("#insert-link-dialog .dialog-components .dialog-title").prepend(o.Templates.LinkBrowser.helpLink());e=d.get("button:0")[0].item;e.attr("id","link-browser-insert");e.prop("disabled",!0);k=d;a.popup=k;b.trigger("dialog-created.link-browser",
[a]);f=o.Editor.LinkBrowser.LinkInfoPresenter(a);f.setLinkBody(l.body);q=q.panelKey;d=h("#link-browser-tab-items").find("div").map(function(){var a=h(this);return{key:a.text(),weight:a.attr("data-weight"),label:this.title}}).sort(function(a,b){return a.weight-b.weight});var j="template"!==b.Meta.get("content-type");d=h.grep(d,function(a){return j||"attachments"!==a.key});var n;g=null;for(var c=0,u=d.length;c<u;c++){var m=s(c,d[c],a);0===c&&(n=m);!l.isNewLink()&&h.isFunction(m.handlesLink)&&m.handlesLink(l)?
(g=m,m.openedLink=l):q==m.key&&(g=m)}g?a.popup.overrideLastTab():g=n;i=g;k.popup.element.find(".dialog-page-body:first").append(f.getContainer());i.panelObj.select();i.openedLink=null;k.show();b.trigger("dialog-shown.link-browser",k);return a},cancel:p}});require("confluence/module-exporter").exportModuleAsGlobal("confluence-link-browser/link-browser","Confluence.Editor.LinkBrowser");
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-link-browser:link-browser-resources', location = 'js/link-browser-location.js' */
define("confluence-link-browser/link-browser-location",["jquery","confluence/legacy","ajs","confluence/dialog-breadcrumbs"],function(v,w,i,o){return function(x){function j(){return i.escapeHtml(p())}function p(){return d.val()}function q(a){f.closest(".row").toggleClass("hidden",!a);b.toggleClass("has-breadcrumbs",!!a)}function r(){return d.is(":visible")}var b,f,k,e,d,l,s,t,m,g,n,c,h;b=v(w.Templates.LinkBrowser.locationPanel());f=b.find("#breadcrumbs-container");k=o.Breadcrumbs(f,o.getBreadcrumbsLegacy);
s=b.find(".link-image");t=b.find(".link-mixed");g=b.find("#link-image-filename");m=b.find("#link-mixed-content");l=b.find(".link-text");d=l.find("input");d.change(function(a){a.keyCode=a.keyCode||a.which;a.keyCode&&13!==a.keyCode&&d.removeClass("default-alias")});return{setLink:function(a,b){i.debug("Link Browser: setting link : "+a);var c=a.attrs["data-linked-resource-default-alias"]||a.getHtml();if(""===j()||d.hasClass("default-alias"))d.addClass("default-alias"),d.val(c);if(b&&a.getResourceId()&&
a.getResourceType()){var u={clearErrors:function(){},error:function(){},select:function(a){k.update(a,u)}},c={id:a.getResourceId(),type:a.getResourceType()};k.update(c,u)}q(b);e=a;x.linkValid(e&&e.isHrefValid())},getLink:function(){if(!e)return null;var a=n;a||((a=j())||(a=e.getDefaultAlias()||e.getHref()),a={html:a});e.body=a;return e},refresh:function(a){e&&q(a)},setLinkBody:function(a){n||(a.isEditable?d.val(a.text):a.isImage?g.text(a.imgName):m.text(a.text),n=a.isEditable?null:a,l.toggleClass("hidden",
!a.isEditable),s.toggleClass("hidden",!a.isImage),t.toggleClass("hidden",a.isEditable||a.isImage))},getContainer:function(){return b},isLinkTextVisible:r,isLinkImageVisible:function(){return g.is(":visible")},isLinkMixedContentVisible:function(){return m.is(":visible")},focusLinkText:function(){return r()?(i.debug("LinkInfoPresenter.focusLinkText focusing alias"),d.select(),!0):!1},getLinkText:j,getRawLinkText:p,getLinkImageName:function(){return g.text()},moveLocationPanel:function(a){c||(c=b.find(".row:not(.hidden) .field-group"),
h=c.parent());a.append(c);b.hide()},restoreLocationPanel:function(){h&&(h.append(c),b.show(),h=c=null)},hasBreadcrumbs:function(a){if(!f.is(":visible"))return!1;var b=a.length,d=f.find("li");if(d.length!==b)return!1;for(var c=0;c<b;c++)if(d.eq(c).text()!==a[c])return!1;return!0}}}});require("confluence/module-exporter").exportModuleAsGlobal("confluence-link-browser/link-browser-location","Confluence.Editor.LinkBrowser.LinkInfoPresenter");
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-link-browser:link-browser-resources', location = 'js/link-browser-tab-search.js' */
define("confluence-link-browser/link-browser-tab-search",["jquery","ajs","document","confluence/legacy","confluence/page-location"],function(d,b,n,i,o){return{dialogCreatedLinkBrowserSearch:function(n,j){var c,e,f,m,p=b.REST.getBaseUrl()+"search.json",k=function(a,b){i.Link.isLink(a)||(a=i.Link.fromREST(a));b&&c.val(a.attrs["data-linked-resource-default-alias"]);j.setLink(a,!0);j.focusLinkText()},l=function(a){b.debug("link-browser-tab-search.js: doing search");c.trigger("hide.autocomplete");var g=
d.trim(c.val());g?(f.loading(),b.getJSONWrap({url:p,data:{search:"site",query:g,spaceKey:e.val()},successCallback:function(b){d.isFunction(a)?(f.update(b.result),a()):f.updateAndSelect(b.result);c.trigger("hide.autocomplete")},messageHandler:m})):d.isFunction(a)&&a()};j.tabs.search={hasBreadcrumbs:!0,createPanel:function(a){var g=a.baseElement;c=g.find("#link-search-text");e=g.find("#search-panel-space");var h=o.get();e.find("option:eq(1)").text(h.spaceName).val(h.spaceKey);e.change(function(){c.attr("data-spacekey",
e.val());c.trigger("clearCache.autocomplete")});i.Binder.autocompleteSearch(c.parent());c.bind("selected.autocomplete-content",function(a,b){b.searchFor?l():(f.clear(),k(b.content,!1))});h=[b.SelectGrid.Column({key:"title",heading:"\u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a",getHref:function(a){return b.REST.findLink(a.link)},getInnerClass:function(a){return a.iconClass||"content-type-"+a.type}}),b.SelectGrid.Column({key:"space",heading:"\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u043e",getText:function(a){return a.space&&
a.space.title||""}}),b.SelectGrid.Column({key:"last-modified",heading:"\u041f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435",getText:function(a){return a.lastModifiedDate&&a.lastModifiedDate.friendly||""},getTitle:function(a){return a.lastModifiedDate&&a.lastModifiedDate.date||""}})];m=b.MessageHandler({baseElement:a.baseElement.find(".message-panel")});f=new b.ResultGrid({baseElement:a.baseElement,columns:h,selectionCallback:function(a,b){k(b)},noResultMessage:"\u041d\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 \u043f\u043e\u0438\u0441\u043a\u0430.",
dontShiftFocus:function(){return d(c).add(e).is(":focus")}});g.find(".search-form").submit(function(){l();return!1}).keydown(function(a){13===a.keyCode&&!d(".aui-dropdown:visible .active",this).length&&(d("#search-panel-button").focus(),a.stopPropagation())})},onSelect:function(){b.debug("Link Browser Search panel selected");var a=this.openedLink;a?(b.debug("Link Browser Search panel setting link info"),k(a,!0)):c.focus()},handlesLink:function(a){return a.isCustomAtlassianContentLink()&&!a.hasAnchor()&&
!a.isShortcutLink()&&!a.isToAttachmentOnSamePage(b.Meta.get("content-id"))},doSearch:function(a,b){c.val(a);l(b)},isResultGridVisible:function(){return f.isVisible()},getSearchTextField:function(){return c}}}}});require("confluence/module-exporter").safeRequire("confluence-link-browser/link-browser-tab-search",function(d){require("ajs").bind("dialog-created.link-browser",d.dialogCreatedLinkBrowserSearch)});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-link-browser:link-browser-resources', location = 'js/link-browser-tab-history.js' */
define("confluence-link-browser/link-browser-tab-history",["ajs","confluence/legacy"],function(a,h){return{dialogCreatedLinkBrowserHistory:function(i,d){var e=a.REST.makeUrl("session/history.json?max-results=20"),f,g;d.tabs.recentlyviewed={createPanel:function(c){var e=[a.SelectGrid.Column({key:"title",heading:"\u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a",getHref:function(b){return a.REST.findLink(b.link)},getInnerClass:function(b){return b.iconClass||"content-type-"+b.type}}),a.SelectGrid.Column({key:"space",
heading:"\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u043e",getText:function(b){return b.space&&b.space.title||""}}),a.SelectGrid.Column({key:"last-modified",heading:"\u041f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435",getText:function(b){return b.lastModifiedDate&&b.lastModifiedDate.friendly||""},getTitle:function(b){return b.lastModifiedDate&&b.lastModifiedDate.date||""}})];g=a.MessageHandler({baseElement:c.baseElement.find(".message-panel")});f=new a.ResultGrid({baseElement:c.baseElement,
columns:e,getRowId:function(b){return b.attachmentId},selectionCallback:function(b,a){var c=h.Link.fromREST(a);d.setLink(c);d.focusLinkText()},messageHandler:g,noResultMessage:"\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043d\u0435\u0434\u0430\u0432\u043d\u043e \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u043d\u043d\u044b\u0439 \u043a\u043e\u043d\u0442\u0435\u043d\u0442."})},onSelect:function(){f.loading();a.getJSONWrap({url:e,messageHandler:g,successCallback:function(c){f.update(c.content);a.trigger("updated.link-browser-recently-viewed")}})}}}}});
require("confluence/module-exporter").safeRequire("confluence-link-browser/link-browser-tab-history",function(a){require("ajs").bind("dialog-created.link-browser",a.dialogCreatedLinkBrowserHistory)});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-link-browser:link-browser-resources', location = 'js/link-browser-tab-attachment.js' */
define("confluence-link-browser/link-browser-tab-attachment",["jquery","ajs","confluence/legacy"],function(h,a,j){return{dialogCreatedLinkBrowserAttachment:function(m,i){var f=a.REST.makeUrl("content/"+a.Meta.get("attachment-source-content-id")+"/attachments.json"),g,k,l,d;i.tabs.attachments={hasBreadcrumbs:!1,createPanel:function(b,c){var e=b.baseElement.find(".attach-file-form");g=h.extend({getUploaderController:function(){return j.AttachmentUploader({baseElement:e},function(){return{onUploadSuccess:function(a){for(var b=
0,c=a.length;b<c;b++)a[b].type="attachment";d.prependAndSelect(a)}}})}},c&&c(b));k=g.getUploaderController(b);l=k.getMessageHandler();var f=[a.SelectGrid.Column({key:"title",heading:"\u0418\u043c\u044f",getHref:function(b){return b.link?a.REST.findLink(b.link):b.url},getInnerClass:function(a){return a.iconClass}}),a.SelectGrid.Column({key:"size",heading:"\u0420\u0430\u0437\u043c\u0435\u0440",getText:function(a){return a.niceFileSize}}),a.SelectGrid.Column({key:"comment",
heading:"\u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439"})];d=new a.ResultGrid({baseElement:b.baseElement,columns:f,selectionCallback:function(b,c){var d=j.Link.fromREST(c);d.attrs["data-linked-resource-container-id"]=a.Meta.get("content-id");if(h.isArray(c.link))for(var e=0,f=c.link.length;e<f;e++){var g=c.link[e];"download"===g.rel&&(d.attrs.href=g.href)}i.setLink(d);i.focusLinkText()},noResultMessage:"\u041d\u0430 \u044d\u0442\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u043d\u0435\u0442 \u0444\u0430\u0439\u043b\u043e\u0432."})},onSelect:function(){var b=this.openedLink,c=i.getLink();
d.loading();a.getJSONWrap({url:f,messageHandler:l,successCallback:function(e){d.update(e.attachment);c?"attachment"==c.getResourceType()&&d.select(c.getResourceId()):b?d.select(b.getResourceId()):e.attachment.length&&d.select(e.attachment[0].id);a.debug("Loaded attachments")}})},handlesLink:function(b){return b.isToAttachmentOnSamePage(a.Meta.get("content-id"))}}}}});
require("confluence/module-exporter").safeRequire("confluence-link-browser/link-browser-tab-attachment",function(h){var a=require("ajs");"template"!==a.Meta.get("content-type")&&a.bind("dialog-created.link-browser",h.dialogCreatedLinkBrowserAttachment)});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-link-browser:link-browser-resources', location = 'js/link-browser-tab-weblink.js' */
define("confluence-link-browser/link-browser-tab-weblink",["ajs","jquery","confluence/legacy"],function(c,j,h){return{dialogCreatedLinkBrowserWeblink:function(l,d){function e(){return j.trim(b.val())}function f(){var a=e();if(!(c.Validate.url(a)||0===a.indexOf("mailto:"))){if(c.Validate.email(a))a="mailto:"+a;else{if(k.test(a))return;a="http://"+a}c.debug("Updating Link Browser Web Link URL to: "+a);b.val(a);a=h.Link.makeExternalLink(a);d.setLink(a)}}var b,g,i,k=/[:/]/;i=d.tabs.weblink={createPanel:function(a){g=
a.baseElement;b=g.find("input[name='destination']");b.keyup(function(){var a=e();(a=a?h.Link.makeExternalLink(a):null)&&d.setLink(a)});b.change(f);b.bind("paste",function(){c.debug("Link Browser web link url pasted");setTimeout(f,0)})},onSelect:function(){d.moveLocationPanel(g.find("form"));this.openedLink&&(i.setURL(this.openedLink.attrs.href),d.setLink(this.openedLink));setTimeout(function(){b.focus()})},onDeselect:d.restoreLocationPanel,preSubmit:f,handlesLink:function(a){return!a.isCustomAtlassianContentLink()},
setURL:function(a){b.val(a);b.keyup();b.change()},getURL:e}}}});require("confluence/module-exporter").safeRequire("confluence-link-browser/link-browser-tab-weblink",function(c){require("ajs").bind("dialog-created.link-browser",c.dialogCreatedLinkBrowserWeblink)});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-link-browser:link-browser-resources', location = 'js/link-browser-tab-advanced.js' */
define("confluence-link-browser/link-browser-tab-advanced",["jquery","ajs","confluence/legacy","confluence/api/constants"],function(g,d,k,l){return{dialogCreatedLinkBrowserAdvanced:function(o,e){var b,f,h,j,m=function(a){a=g(a);if(a.length){var c=a.find("a:first");c.length?c.hasClass("unresolved")?(a=c.attr("shortcut-key"),c=c.attr("data-space-key"),a?f.text(d.format("{0} \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430\u044f \u0441\u0441\u044b\u043b\u043a\u0430",a)):c&&f.text(d.format("{0} \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u043e\u0435 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u043e",c))):
(a=k.Link.fromNode(c[0],b.val()),e.setLink(a)):f.text("\u0423\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442 \u0441\u0441\u044b\u043b\u043a\u0438 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u0443\u044e \u0440\u0430\u0437\u043c\u0435\u0442\u043a\u0443")}},n=function(a,c,b){d.debug("Error during conversion: textStatus = "+c+", errorThrown = "+b);f.text("\u0412\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u044f\u044f \u043e\u0448\u0438\u0431\u043a\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430")},i=e.tabs.advanced={createPanel:function(a){h=a.baseElement;b=h.find("input[name='advanced-link']");f=h.find("div[name='advanced-error']");h.find("form").keydown(function(a){13===a.keyCode&&!e.isSubmitButtonEnabled()&&a.preventDefault()});
b.keyup(function(){clearTimeout(j);f.text("");b.val()&&(j=setTimeout(function(){var a={wiki:"["+b.val()+"]",entityId:d.Meta.get("content-id"),spaceKey:d.Meta.get("space-key")};g.ajax({type:"POST",contentType:"application/json; charset=utf-8",url:l.CONTEXT_PATH+"/rest/tinymce/1/wikixhtmlconverter",data:g.toJSON(a),dataType:"text",success:m,error:n,timeout:1E4})},200))})},setLink:function(a){b.val(a);b.keyup();b.change()},getLink:function(){return b.val()},onSelect:function(){e.moveLocationPanel(h.find("form"));
this.openedLink&&(this.openedLink.isShortcutLink()?i.setLink(this.openedLink.getShortcut()):this.openedLink.getResourceId()?i.setLink(this.openedLink.getDefaultAlias()):i.setLink("#"+this.openedLink.getAnchor()),e.setLink(this.openedLink));setTimeout(function(){b.focus()})},onDeselect:function(){e.restoreLocationPanel()},handlesLink:function(a){return a.isShortcutLink()||a.hasAnchor()}}}}});
require("confluence/module-exporter").safeRequire("confluence-link-browser/link-browser-tab-advanced",function(g){require("ajs").bind("dialog-created.link-browser",g.dialogCreatedLinkBrowserAdvanced)});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-link-browser:link-browser-resources', location = 'templates/link-browser.soy' */
// This file was automatically generated from link-browser.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace Confluence.Templates.LinkBrowser.
 */

if (typeof Confluence == 'undefined') { var Confluence = {}; }
if (typeof Confluence.Templates == 'undefined') { Confluence.Templates = {}; }
if (typeof Confluence.Templates.LinkBrowser == 'undefined') { Confluence.Templates.LinkBrowser = {}; }


Confluence.Templates.LinkBrowser.searchPanel = function(opt_data, opt_ignored) {
  return '<form class="aui search-form" onsubmit="return false;"><fieldset class="inline"><div class="search-input"><label for="link-search-text" id="linkSearch-label" class="assistive">' + soy.$$escapeHtml("\u041f\u043e\u0438\u0441\u043a") + '</label><input id="link-search-text" type="text" tabindex="0" class="text autocomplete-search" name="linkSearch" autocomplete="off" data-search-link-message="' + soy.$$escapeHtml("\u041f\u043e\u0438\u0441\u043a  \x26lsquo;{0}\x26rsquo;") + '"></div><select tabindex="0" class="search-space select" id="search-panel-space"><option value="">' + soy.$$escapeHtml("\u0412\u0441\u0451 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435") + '</option><option value=""> </option></select><button type="submit" tabindex="0" class="aui-button" id="search-panel-button">' + soy.$$escapeHtml("\u041f\u043e\u0438\u0441\u043a") + '</button></fieldset></form><div class="message-panel hidden"></div><div id="search-results-table" class="data-table hidden"></div>';
};
if (goog.DEBUG) {
  Confluence.Templates.LinkBrowser.searchPanel.soyTemplateName = 'Confluence.Templates.LinkBrowser.searchPanel';
}


Confluence.Templates.LinkBrowser.recentlyviewedPanel = function(opt_data, opt_ignored) {
  return '<div class="recently-viewed-panel"><div class="message-panel hidden"></div><div class="data-table"></div></div>';
};
if (goog.DEBUG) {
  Confluence.Templates.LinkBrowser.recentlyviewedPanel.soyTemplateName = 'Confluence.Templates.LinkBrowser.recentlyviewedPanel';
}


Confluence.Templates.LinkBrowser.attachmentsPanel = function(opt_data, opt_ignored) {
  return '<div class="attach-file-form"><form method="post" enctype="multipart/form-data" id="attachments-attachfile-form" action="' + soy.$$escapeHtml("/wiki") + '/pages/attachfile.action" class="aui"><p>' + soy.$$escapeHtml("\u0421\u0441\u044b\u043b\u0430\u0442\u044c\u0441\u044f \u043d\u0430 \u0444\u0430\u0439\u043b, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0438\u043a\u0440\u0435\u043f\u043b\u0435\u043d \u043a \u044d\u0442\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u0438\u043b\u0438 \u043f\u0440\u0438\u043a\u0440\u0435\u043f\u0438\u0442\u044c \u043d\u043e\u0432\u044b\u0439") + '</p><div class="upload-field field-group"><label for="file_0">' + soy.$$escapeHtml("\u0417\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u0444\u0430\u0439\u043b") + '</label><label id="fancy-file-upload" class="ffi" data-ffi-button-text="Browse"><input type="file" name="file_0" id="file_0"></label><input type="hidden" name="minorEdit_0" value="true"></div><input type="hidden" name="atl_token" value="' + soy.$$escapeHtml(opt_data.atlToken) + '" /></form><div class="upload-in-progress upload-field hidden">' + soy.$$escapeHtml("\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0432 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0435...") + '</div><div class="warning"><ul class="hidden message-panel"></ul></div></div><div class="message-panel hidden"></div><div id="attachments-table" class="attachment-list data-table"></div>';
};
if (goog.DEBUG) {
  Confluence.Templates.LinkBrowser.attachmentsPanel.soyTemplateName = 'Confluence.Templates.LinkBrowser.attachmentsPanel';
}


Confluence.Templates.LinkBrowser.weblinkPanel = function(opt_data, opt_ignored) {
  return '<form class="aui" onsubmit="return false;"><div class="field-group"><label id="destination-label" for="weblink-destination">' + soy.$$escapeHtml("\u0410\u0434\u0440\u0435\u0441") + '</label><input type="text" tabindex="0" class="text" id="weblink-destination" name="destination"><div class="web-link-desc description">' + soy.$$escapeHtml("\u0412\u0435\u0431, email \u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442-\u0430\u0434\u0440\u0435\u0441") + '</div></div></form>';
};
if (goog.DEBUG) {
  Confluence.Templates.LinkBrowser.weblinkPanel.soyTemplateName = 'Confluence.Templates.LinkBrowser.weblinkPanel';
}


Confluence.Templates.LinkBrowser.advancedPanel = function(opt_data, opt_ignored) {
  return '<form class="aui" onsubmit="return false;"><div class="advanced-desc title">' + soy.$$filterNoAutoescape(AJS.format("\u0417\u0434\u0435\u0441\u044c \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0441\u0441\u044b\u043b\u043a\u0443 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \x3ca href\x3d\x22{0}\x22 target\x3d\x22_blank\x22\x3ewiki \u0440\u0430\u0437\u043c\u0435\u0442\u043a\u0438\x3c/a\x3e.","https://docs.atlassian.com/confluence/docs-510/Links")) + '</div><div class="field-group"><label id="advanced-label" for="advanced-link">' + soy.$$escapeHtml("\u0421\u0441\u044b\u043b\u043a\u0430") + '</label><input type="text" tabindex="0" class="text" id="advanced-link" name="advanced-link"><div class="advanced-desc description">' + soy.$$escapeHtml("\u0414\u043b\u044f \u0432\u0441\u0442\u0430\u0432\u043a\u0438 \u0441\u0441\u044b\u043b\u043a\u0438 \u043d\u0430 \u043d\u043e\u0432\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0436\u0435\u043b\u0430\u0435\u043c\u044b\u0439 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b.") + '<br/>' + soy.$$escapeHtml("\u0414\u043b\u044f \u0432\u0441\u0442\u0430\u0432\u043a\u0438 \u0441\u0441\u044b\u043b\u043a\u0438-\u044f\u043a\u043e\u0440\u044f, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 #anchorname.") + '</div><div name="advanced-error" class="advanced-error error"></div></div></form>';
};
if (goog.DEBUG) {
  Confluence.Templates.LinkBrowser.advancedPanel.soyTemplateName = 'Confluence.Templates.LinkBrowser.advancedPanel';
}


Confluence.Templates.LinkBrowser.locationPanel = function(opt_data, opt_ignored) {
  return '<div id="link-browser-location" class="location-info"><form class="aui"><div class="row hidden field-group"><label class="link-location-label" for="breadcrumbs-link">' + soy.$$escapeHtml("\u0420\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0441\u0441\u044b\u043b\u043a\u0438") + '</label><div class="breadcrumbs-container" id="breadcrumbs-link"><div class="breadcrumbs-line"><ol id="breadcrumbs-container" class="breadcrumbs"></ol></div></div></div></form><div class="row link-text"><form class="aui" onsubmit="return false;"><div class="field-group"><label for="alias" id="alias-label">' + soy.$$escapeHtml("\u0422\u0435\u043a\u0441\u0442 \u0441\u0441\u044b\u043b\u043a\u0438") + '</label><input type="text" tabindex="0" class="text" name="alias" id="alias"></div></form></div><div class="row link-image hidden"><div class="readonly"><label for="link-image-filename">' + soy.$$escapeHtml("\u0418\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0441\u0441\u044b\u043b\u043a\u0438") + '</label><span id="link-image-filename" class="content-type-attachment-image"></span></div></div><div class="row link-mixed hidden"><div class="readonly"><label for="link-mixed-content">' + soy.$$escapeHtml("\u0422\u0435\u043a\u0441\u0442 \u0441\u0441\u044b\u043b\u043a\u0438") + '</label><span id="link-mixed-content"></span></div></div></div>';
};
if (goog.DEBUG) {
  Confluence.Templates.LinkBrowser.locationPanel.soyTemplateName = 'Confluence.Templates.LinkBrowser.locationPanel';
}


Confluence.Templates.LinkBrowser.helpLink = function(opt_data, opt_ignored) {
  return '<div class="dialog-help-link"><a href="' + soy.$$escapeHtml("https://docs.atlassian.com/confluence/docs-510/Links") + '" target="_blank">' + soy.$$escapeHtml("\u041f\u043e\u043c\u043e\u0449\u044c") + '</a></div>';
};
if (goog.DEBUG) {
  Confluence.Templates.LinkBrowser.helpLink.soyTemplateName = 'Confluence.Templates.LinkBrowser.helpLink';
}

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-link-browser:link-browser-editor-resources', location = 'tinymce/editor_plugin_src.js' */
define("confluence-link-browser/tinymce/editor_plugin_src",["tinymce","confluence/legacy"],function(a,b){return{init:function(a){var c=b.Editor.LinkBrowser;a.addButton("linkbrowserButton",{title:"confluence.conflink_desc",cmd:"mceConflink","class":"mce_conflink"});a.addCommand("mceConflink",c.open);a.addCommand("mceConfAttachments",function(){return c.open({panelKey:c.ATTACHMENTS_PANEL})})},getInfo:function(){return{longname:"Confluence Link Browser",author:"Atlassian",authorurl:"http://www.atlassian.com",
version:a.majorVersion+"."+a.minorVersion}}}});require("confluence/module-exporter").safeRequire("confluence-link-browser/tinymce/editor_plugin_src",function(a){var b=require("tinymce");b.create("tinymce.plugins.LinkBrowser",a);b.PluginManager.add("linkbrowser",b.plugins.LinkBrowser)});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-create-content-plugin:editor-resources', location = 'com/atlassian/confluence/plugins/createcontent/js/move-hidden-fields-hack.js' */
AJS.toInit(function(a){a("fieldset.create-content-template-fields > input").appendTo("form.editor")});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-create-content-plugin:create-from-template-macro-browser-resources', location = 'com/atlassian/confluence/plugins/createcontent/js/create-from-template-macro-fields.js' */
AJS.toInit(function(f){function b(h,i){h=h||AJS.Meta.get("space-key");Confluence.Blueprint.Dialog.requestWebItems(h,false).done(function(j){var k=Confluence.Blueprint.Dialog.loadedWebitems[h];if(_.isEmpty(k)){AJS.log("create-from-template-macro-fields: No Create dialog web items found for spaceKey >"+h+"<");return}i(j,k)}).fail(function(){AJS.log("create-from-template-macro-fields: requestWebItems call for spaceKey >"+h+"< failed")})}function c(h,i){b(i,function(k,l){var j=h.val();h.empty();_.each(l,function(m){var o=m.itemModuleCompleteKey;if((o=="com.atlassian.confluence.plugins.confluence-create-content-plugin:create-blank-page"||o=="com.atlassian.confluence.plugins.confluence-create-content-plugin:create-blog-post")){return}if(!(m.templateId||m.contentBlueprintId)){return}var n=f("<option></option>").text(m.name);n.attr("data-template-id",m.templateId);n.attr("data-blueprint-module-complete-key",m.blueprintModuleCompleteKey);n.attr("data-content-blueprint-id",m.contentBlueprintId);n.attr("data-create-result",m.createResult);n.val(m.templateId||m.contentBlueprintId);h.append(n)});h.val(j)})}var g={fields:{spacekey:{spaceKey:function e(k){var j=AJS.MacroBrowser.ParameterFields.spacekey(k),h=j.input.val();var i=function(){var l=j.input.val();if(l!=h){c(AJS.MacroBrowser.fields.templateName.input,l)}h=l};j.input.bind("selected.autocomplete-content",i);j.input.blur(i);return j}}},beforeParamsSet:function a(i,h){i.buttonLabel=i.buttonLabel||i.createButtonLabel||"\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0438\u0437 \u0448\u0430\u0431\u043b\u043e\u043d\u0430";c(f("#macro-param-templateName"),i.spaceKey);return i},beforeParamsRetrieved:function d(j,k,h){var i=AJS.MacroBrowser.fields.templateName.input.find("option:selected");j.blueprintModuleCompleteKey=i.data("blueprint-module-complete-key");j.contentBlueprintId=i.data("content-blueprint-id");j.templateId=i.data("template-id");j.createResult=i.data("create-result");return j}};AJS.MacroBrowser.setMacroJsOverride("create-from-template",g)});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:table-resizable-plugin', location = 'tinymce3/plugins/table/table-resizable.js' */
define('confluence-editor/tinymce3/plugins/table/table-resizable', [
    'jquery',
    'ajs',
    'tinymce'
], function ($, AJS, tinymce) {
    'use strict';

    var sensitiveVerticalColumnMatchingThresholdInPixel = 0;
    var sensitiveHorizontalColumnMatchingThresholdInPixel = 1;

    function uuid() {
        function random4() {
            return Math.floor((1 + Math.random()) * 0x10000)
                    .toString(16)
                    .substring(1);
        }

        return random4() + random4() + '-' + random4() + '-' + random4() + '-' +
                random4() + '-' + random4() + random4() + random4();
    }

    function addColgroup($table) {
        var cols = 0;
        $table.find('>tbody >tr').each(function () {
            var rowCol = 0;
            $(this).find('>th,>td').each(function () {
                var $cell = $(this);
                if ($cell.attr('colspan')) {
                    rowCol += parseInt($cell.attr('colspan'));
                } else {
                    rowCol++;
                }
            });
            // CONFDEV-39492
            if (rowCol > cols) {
                cols = rowCol;
            }
        });

        var $colGroup = $table.find('>colgroup');
        var $existingCols = $colGroup.find('col');
        var noOfExistingCol = $existingCols.length;

        if (noOfExistingCol === cols) {
            return;
        }

        var isColGroupExisted = $colGroup.length > 0;
        if (!isColGroupExisted) {
            $colGroup = $('<colgroup>');
        }

        if (cols > noOfExistingCol) { // add missing col
            for (var i = 0; i < (cols - noOfExistingCol); i++) {
                var $col = $('<col>');
                $colGroup.append($col);
            }
        } else { // need to remove cols CONFDEV-39492
            for (var j = 0; j < noOfExistingCol - cols; j++) {
                $existingCols.last().remove();
            }
        }

        if (!isColGroupExisted) {
            $table.prepend($colGroup);
        }
        return $colGroup;
    }

    function calculateColumnsWidth($table, byPercentage, $activeColumn) {
        var $cols = $table.find('>colgroup>col');

        if ($cols.length === 0) {
            addColgroup($table);
            $cols = $table.find('>colgroup>col');
        }

        var noOfColumn = $cols.length;

        var $originalRow;
        var $cells;
        var $footer;
        // Looking for a row which is not merged
        var $rows = $table.find('>thead>tr,>tbody>tr,>tr');
        for (var i = 0; i < $rows.length; i++) {
            if (noOfColumn === $rows.eq(i).find('>th, >td').length) {
                $originalRow = $rows.eq(i);
                break;
            }
        }
        if ($originalRow) {
            $cells = $originalRow.find('>th, >td');
        } else { // Worst case, all rows were merge, poor me :(
            var $footerRow = $('<tr>');
            $footer = $('<tfoot>');
            $footer.append($footerRow);

            for (i = 0; i < noOfColumn; i++) {
                $footerRow.append($('<td>'));
            }

            $table.append($footer);

            $cells = $footerRow.find('>td');
        }

        var tableWidth = $table.outerWidth() - 1; // exclude 1 border

        var cellWidths = [];
        var boundingClientRects = [];

        // Need to do for loop twice to avoid col width being adjusted 'on the fly'
        // which cause subsequence affect to width calculation because the browser re-rendering will be involved
        for (i = 0; i < noOfColumn; i++) {
            // Calculate column width for each <col>
            var $cell = $cells.eq(i);
            var boundingClientRect = $cell[0].getBoundingClientRect();

            var cellWidth = !!byPercentage
                    ? (boundingClientRect.width / tableWidth * 100) + "%"
                    : $cell.outerWidth();

            cellWidths[i] = cellWidth;
            boundingClientRects[i] = boundingClientRect;
        }

        var bodyOffsetLeft = 0;

        if (tinymce.activeEditor) {
            bodyOffsetLeft = tinymce.activeEditor.getWin().pageXOffset;
        }

        for (i = 0; i < noOfColumn; i++) {
            $cols.eq(i)
                    .attr('data-resize-pixel', boundingClientRects[i].width)
                    .attr('data-resize-percent', boundingClientRects[i].width / tableWidth * 100)
                    .attr('data-offset-left', boundingClientRects[i].left + bodyOffsetLeft)
                    .attr('data-offset-right', boundingClientRects[i].right + bodyOffsetLeft)
                    .removeAttr('data-mce-style');//CONFDEV-40187

            // Shouldn't touch other columns' width if we just want to recalculate one specific column
            if ($activeColumn && (i !== $activeColumn.index() || i !== $activeColumn.next().index())) {
                continue;
            }
            $cols.eq(i)
                    .css({width: cellWidths[i]});
        }

        if ($footer) {
            $footer.remove();
        }

        //CONFDEV-40187: MUST remove to avoid value of this attr being set back to style when saving page
        $table.removeAttr('data-mce-style');
    }

    function findSuroundingTables($table) {
        var $nextTable = $table.nextAll('.confluenceTable').first();
        var $prevTable = $table.prevAll('.confluenceTable').first();
        return $.merge($prevTable, $nextTable);
    }

    function alignWithOtherTables($activeColumn, $doc, $tables) {
        var matchingMap = {};
        var match = false;

        var displayAlignment = function ($table, offset) {
            $('<div contenteditable="false" class="resize-alignment-bar">')
                    .css({
                        top: parseInt($table.offset().top),
                        left: offset,
                        height: $table.height()
                    }).appendTo($doc.find('body'));
        };

        $tables.each(function () {
            var $table = $(this);
            if (!isFixed($table)) {
                return;
            }

            $table.find('th, td').each(function () {

                // try to save a bit of performance
                if (matchingMap[$table]) {
                    return;
                }

                var $cell = $(this);
                var cellRight = $cell.offset().left + $cell.innerWidth();
                var delta = Math.abs(cellRight - parseInt($activeColumn.attr('data-offset-right')));
                if (delta <= sensitiveVerticalColumnMatchingThresholdInPixel) {
                    matchingMap[$table] = true;
                    match = true;
                    displayAlignment($table, cellRight);
                }
            });
        });

        return match;
    }


    function alignWithOtherColumns($currentColumn, $table, $body) {
        var match;

        if (Math.abs(parseInt($currentColumn.next().attr('data-resize-pixel')) - parseInt($currentColumn.attr('data-resize-pixel'))) <= sensitiveHorizontalColumnMatchingThresholdInPixel) {
            match = true;

            $body.find('.resizable-align-right').remove();
            $('<div contenteditable="false" class="resize-alignment-bar resizable-align-right">')
                    .css({
                        height: $table.height(),
                        top: parseInt($table.offset().top),
                        left: parseInt($currentColumn.next().attr('data-offset-right')) - 1
                    }).appendTo($body)
                    .clone()
                    .css({
                        left: parseInt($currentColumn.attr('data-offset-left')) - 1
                    }).appendTo($body);
        }

        if (Math.abs(parseInt($currentColumn.prev().attr('data-resize-pixel')) - parseInt($currentColumn.attr('data-resize-pixel'))) <= sensitiveHorizontalColumnMatchingThresholdInPixel) {
            match = true;
            $('<div contenteditable="false" class="resize-alignment-bar">')
                    .css({
                        height: $table.height(),
                        top: parseInt($table.offset().top),
                        left: parseInt($currentColumn.prev().attr('data-offset-right')) - 1
                    }).appendTo($body)
                    .clone()
                    .css({
                        left: parseInt($currentColumn.prev().attr('data-offset-left')) - 1
                    }).appendTo($body);
        }

        return match;
    }

    function removeAllAlignments($doc) {
        $doc.find('.resize-alignment-bar').remove();
    }

    var tableResizable = function (options) {
        var defaultOption = {$doc: $(document)};
        var $table = this;
        var tableUUID = $table.data('uuid');
        var isInitialized = $table.data('initialized');
        if (isInitialized) {
            return;
        }
        if (!tableUUID) {
            tableUUID = uuid();
            $table.data('uuid', tableUUID);
        }

        options = $.extend(defaultOption, options || {});

        var MIN_SIZE = 29; // px

        var $doc = options.$doc;
        var editor = options.editor;
        var $body = $doc.find('body');
        var pressed = false;
        var $activeColumn; // The element we should change the width
        var startX;
        var startWidth;
        var bounceBackPosition;
        var joinColumnWidth;
        var startWidthNextCol;
        var startColumnIndex = -1;
        var resizeIndicatorStartLeft;
        var isFirstColumn = false;
        var previousResizeIndicatorLeft;
        var columnMatchingSensitiveInPixel = 7;
        var holdMouse;
        var lastMovingDistance;
        var $surroundingTables;
        var $resizeIndicator = $('<div contenteditable="false" class="synchrony-exclude" id="resize-indicator">');
        var $resizeWidthHolder = $('<div contenteditable="false" class="synchrony-exclude resize-width-holder" unselectable="on">');
        var preResizeTableMode;//table mode before resizing

        var isShowingResizableIndicator = false;
        var minSizeToShowResizeIndicator = 4; // px

        function doResize(movingDistance, isMoveIndicator, e) {

            if (!startWidth) {
                startWidth = $activeColumn.width();
            }
            if ($activeColumn.attr('data-mce-style')) {
                $activeColumn.removeAttr('data-mce-style');
            }

            var reachFullWidth = false;
            if (lastMovingDistance) {

                var movingDelta = movingDistance - lastMovingDistance;

                var containerWidth = $table.parent().width();

                var tableWidthPercentage = $table.width() / containerWidth * 100;
                // hit the right size limit
                if (isRelative($table)
                        && (tableWidthPercentage > 99.9)
                        && (movingDelta > 1)) {
                    reachFullWidth = true;
                    !joinColumnWidth && (joinColumnWidth = $activeColumn.width() + $activeColumn.next().width());
                }

                // Make column matching a bit more sensitive by holding back a few pixel
                var absoluteMovingDelta = Math.abs((Math.abs(movingDistance) - Math.abs(lastMovingDistance)));
                if (absoluteMovingDelta >= columnMatchingSensitiveInPixel) {
                    holdMouse = false;
                }
                if (holdMouse && absoluteMovingDelta < columnMatchingSensitiveInPixel) {
                    return;
                }
            }

            var newWidth = startWidth + movingDistance;
            (newWidth < MIN_SIZE) && (newWidth = MIN_SIZE);

            $activeColumn.width(newWidth);

            if (reachFullWidth || bounceBackPosition) {
                $activeColumn.next().width(joinColumnWidth - newWidth);
                (!bounceBackPosition) && (bounceBackPosition = e.pageX);
            }

            (bounceBackPosition && bounceBackPosition > e.pageX) && (bounceBackPosition = null);

            calculateColumnsWidth($table, false, $activeColumn);

            if (!isFirstColumn && isMoveIndicator) {
                $resizeIndicator.css({
                    display: 'block',
                    top: parseInt($table.offset().top),
                    left: parseInt($activeColumn.attr('data-offset-right')) - 1,
                    height: $table.height()
                });

                if (isFixed($table)) {
                    var match = alignWithOtherTables($activeColumn, $doc, $surroundingTables) || alignWithOtherColumns($activeColumn, $table, $body);
                    match && (holdMouse = true);
                    !match && removeAllAlignments($body);
                }
            }

            lastMovingDistance = Math.abs(movingDistance);
        }

        var removeIndicator = function () {
            $resizeIndicator.remove();
            $table.removeClass('active-resizable');
            isShowingResizableIndicator = false;
            holdMouse = undefined;
            bounceBackPosition = null;
            joinColumnWidth = null;
            $body.attr('data-table-resizing', false);
        };

        var showIndicator = function (resizeIndicatorLeft) {
            if ($doc.find('#resize-indicator').length > 0) {
                $resizeIndicator = $doc.find('#resize-indicator');
            } else {
                $resizeIndicator.appendTo($body);
            }
            $table.addClass('active-resizable');
            $resizeIndicator.css({
                top: parseInt($table.offset().top),
                left: resizeIndicatorLeft,
                height: $table.height()
            });
            isShowingResizableIndicator = true;
        };

        var mouseMoveHandler = function (event) {
            if (!pressed) {
                return;
            }

            AJS.trigger('synchrony.stop', { id: 'confluence.table-resize-plugin' });
            doResize(event.pageX - startX, true, event);

            event.preventDefault();
        };

        // Add this holder to keep the current page size when resizing
        var addWidthHolder = function (force) {

            // stop processing if there's no scroll bar
            if ($body.outerWidth(true) === $body[0].scrollWidth) {
                return;
            }

            if (force) {
                removeWidthHolder($table);
            }

            if (!$body.find('#' + tableUUID + '-holder').length) {
                $resizeWidthHolder.css('width', $table.width() + parseInt($(editor.getBody()).css('margin-right')));
                $resizeWidthHolder.attr('id', tableUUID + '-holder');
                $table.after($resizeWidthHolder);
            }
        };

        var mouseUpHandler = function () {

            if (!pressed) {
                return;
            }

            // Fix for IE to capture mousemove outside browser window
            $table[0].releaseCapture && $table[0].releaseCapture();

            pressed = false;

            removeIndicator();
            removeAllAlignments($doc);
            removeWidthHolder($table);

            if (isRelative($table)) {
                makeTableRelative($table);
            }

            if (isFixed($table)) {
                addWidthHolder(true);
            }

            // CONFDEV-37226
            if ($activeColumn && $activeColumn.width() !== startWidth) {
                AJS.Confluence.Analytics.publish(
                        'confluence.table.resize.from.' + preResizeTableMode,
                        {pageId: AJS.Meta.get('page-id')}
                );
            }

            // Support undo/redo for table resize
            if (editor) {
                editor.undoManager.add();
                AJS.trigger('synchrony.start', { id: 'confluence.table-resize-plugin' });
            }
        };

        $table.on('mousemove.table-resizable' + tableUUID, 'th, td', function(event) {

            if (pressed) {
                return;
            }

            if ($(this).parents('table.confluenceTable').length > 1) { // nested table
                return;
            }

            if (isFluid($table) && AJS.DarkFeatures.isEnabled("confluence.table.resizable.hide-indicator-on-fluid")) {
                return;
            }
            addColgroup($table);

            var $currentCell = $(this);
            var cellOffsetLeft = $currentCell.offset().left;
            var resizeIndicatorLeft;
            var resizeIndicatorHalfWidth = Math.round($resizeIndicator.outerWidth() / 2);
            var cellIndex = $currentCell.index();
            var $siblings = $currentCell.parent().children();

            startColumnIndex = -1;

            var currentRowIndex = $currentCell.closest("tr").index();
            $currentCell.closest('table.confluenceTable tr').prevAll('tr').each(function(){
                var $row = $(this);
                //get row index for search cells
                var rowIndex = $row.index();
                $row.children('td, th').each(function (){
                    //check if this cell comes before our current cell
                    if ($currentCell.offset().left > $(this).offset().left) {
                        // check if it has both rowspan and colspan
                        var colSpn = parseInt($(this).attr("colspan"));
                        var rowSpn = parseInt($(this).attr("rowspan"));
                        if (colSpn && rowSpn) {
                            if(rowIndex + rowSpn > currentRowIndex) {
                                cellIndex += colSpn;
                            }
                        } else if (rowSpn && (rowIndex + rowSpn > currentRowIndex)) {
                            cellIndex +=1;
                        }
                    }
                });
            });

            isFirstColumn = false;
            if ((event.pageX - $currentCell.offset().left) < $currentCell.outerWidth() / 2) { // Left side of cell

                cellIndex = cellIndex - 1;

                // don't support resizing on auto numbering column
                if (cellIndex === 0 && $currentCell.prev().hasClass('numberingColumn')) {
                    return;
                }

                if (cellIndex < 0) { // first column
                    isFirstColumn = true;
                    var $sibling = $siblings.eq(0);
                    if ($sibling.attr('colspan')) {
                        startColumnIndex += parseInt($sibling.attr('colspan'));
                    } else {
                        startColumnIndex++;
                    }
                } else {
                    for (var i = 0; i <= cellIndex; i++) {
                        $sibling = $siblings.eq(i);
                        if ($sibling.attr('colspan')) {
                            startColumnIndex += parseInt($sibling.attr('colspan'));
                        } else {
                            startColumnIndex++;
                        }
                    }
                }

                if (isFirstColumn) {
                    resizeIndicatorLeft = cellOffsetLeft + $currentCell.outerWidth() - resizeIndicatorHalfWidth;
                } else {
                    resizeIndicatorLeft = cellOffsetLeft - resizeIndicatorHalfWidth;
                }
            } else { // Right side of cell

                // don't support resizing on auto numbering column
                if (cellIndex === 0 && $currentCell.hasClass('numberingColumn')) {
                    return;
                }

                for (i = 0; i <= cellIndex; i++) {
                    $sibling = $siblings.eq(i);
                    if ($sibling.attr('colspan')) {
                        startColumnIndex += parseInt($sibling.attr('colspan'));
                    } else {
                        startColumnIndex++;
                    }
                }

                resizeIndicatorLeft = cellOffsetLeft + $currentCell.outerWidth() - resizeIndicatorHalfWidth;
            }

            $activeColumn = $currentCell.closest('table').find('col').eq(startColumnIndex);

            // Reduce Cyclomatic Complexity
            function updateIndicator() {
                if (Math.abs(previousResizeIndicatorLeft - resizeIndicatorLeft) <= 1) {
                    if (isShowingResizableIndicator) {
                        if (Math.abs(event.pageX - resizeIndicatorLeft - resizeIndicatorHalfWidth) <= minSizeToShowResizeIndicator) {
                            // Do nothing because mouse is near the indicator which is being showed
                            return;
                        } else {
                            removeIndicator();
                        }
                    } else {
                        if (Math.abs(event.pageX - resizeIndicatorLeft - resizeIndicatorHalfWidth) <= minSizeToShowResizeIndicator) {
                            showIndicator(resizeIndicatorLeft);
                        } else {
                            // Do nothing because mouse isn't near the indicator which isn't being showed
                            return;
                        }
                    }
                } else {
                    if (Math.abs(event.pageX - resizeIndicatorLeft - resizeIndicatorHalfWidth) <= minSizeToShowResizeIndicator) {
                        showIndicator(resizeIndicatorLeft);
                    } else {
                        removeIndicator();
                    }
                }
            }

            updateIndicator();

            previousResizeIndicatorLeft = resizeIndicatorLeft;

            if (isFixed($table)) {
                addWidthHolder();
            }
        });

        function mouseDownHandler(event) {

            /**
             * indicator has CSS "pointer-events: none;" which prevent any event happens on it
             * this means table can listen to mousedown event
             */
            if (!$activeColumn || !isShowingResizableIndicator) {
                return;
            }

            // mouse was released within 100ms, probably just a click to focus and not drag, return to prevent accidentally switch mode here
            //if (isFluid($table) && !pressed) {
            //    return;
            //}

            // CONFDEV-37226 save table mode before resizing
            if (isFixed($table)) {
                preResizeTableMode = 'fixed';
            } else if (isRelative($table)) {
                preResizeTableMode = 'relative';
            } else {
                preResizeTableMode = 'fluid';
            }

            pressed = true;

            calculateColumnsWidth($table);
            if (!isRelative($table) && !isFixed($table)) {
                $table.addClass('relative-table');
            }
            $table.updateTableModeInToolbar();

            if (AJS.DarkFeatures.isEnabled('confluence.table.resizable.relative.keep.width')) {
                if (!$activeColumn.next().length) {
                    $table.css({width: ''});
                }
            } else {
                $table.css({width: ''});
            }

            startX = event.pageX;

            // Fix for IE to capture mousemove outside browser window
            $table[0].setCapture && $table[0].setCapture();

            /* CONFDEV-38819 - Instead of using a class we use a data-attribute to avoid it being synchronized */
            $doc.find('body').attr('data-table-resizing', true);

            // Avoid call jQuery#width here because it will cause page scroll in page layout
            startWidth = parseInt($activeColumn.width(), 10);
            startWidthNextCol = parseInt($activeColumn.next().width(), 10);
            resizeIndicatorStartLeft = parseInt($resizeIndicator.css('left'));

            $surroundingTables = findSuroundingTables($table);

            // prevent cursor from jumping around.
            event.preventDefault();
        }

        $table.on('mousedown.table-resizable' + tableUUID, function (e) {
            mouseDownHandler(e);
            // CONFDEV-40191 this affects cell selection, need to find another solution to work around IE select issue
            // e.stopImmediatePropagation();
        });

        // need this because mouse move on $directCell couldn't detect and remove indicator
        // when we hover on the edge of the last column. Plus we don't support nested table anymore so this makes no harm
        $table.on('mouseout.table-resizable' + tableUUID, function () {
            if (!pressed) {
                removeIndicator();
            }
        });

        $doc.on('keypress.table-resizable' + tableUUID, function (event) {
            //prevent showing indicator in wrong position while typing and column width is increasing
            if (isShowingResizableIndicator) {
                removeIndicator();
            }
        });

        $doc.on('mousemove.table-resizable' + tableUUID, mouseMoveHandler);

        $doc.on('mouseup.table-resizable' + tableUUID, mouseUpHandler);

        $table.data('initialized', true);

        return this;
    };

    var convertToPixel = function ($table) {
        calculateColumnsWidth($table);
        return $table;
    };

    var convertToPercentage = function ($table) {
        calculateColumnsWidth($table, true);
        return $table;
    };

    var makeTableRelative = function ($table) {
        var containerWidth = $table.parent().width();
        var widthInPercentage = $table.width() / containerWidth * 100;
        // In case of switching from a > 100% fixed width to relative.
        // A relative table should never be bigger than 100%
        if (widthInPercentage > 100) {
            widthInPercentage = 100;
        }
        //CONFDEV-40037: backup widthInPercentage to an attr for copy/paste
        $table.css({width: widthInPercentage + '%'}).attr('data-resize-percent', widthInPercentage);
        convertToPercentage($table);
        return $table;
    };

    var removeWidthHolder = function ($table) {
        $table.parent('body').find('#' + $table.data('uuid') + '-holder').remove();
        return $table;
    };

    var isRelative = function ($table) {
        return $table.hasClass('relative-table');
    };

    var isFixed = function ($table) {
        return $table.hasClass('fixed-table');
    };

    var isFluid = function ($table) {
        return !isRelative($table) && !isFixed($table);
    };

    /*** Exported functions ***/

    var removeTableResizable = function (options) {
        var defaultOption = {$doc: $(document)};
        options = $.extend(defaultOption, options || {});
        var $doc = options.$doc;
        var $table = this;
        var tableUUID = $table.data('uuid');

        $doc.find('#resize-indicator').remove();
        $table.off('mousemove.table-resizable' + tableUUID);
        $table.off('mouseout.table-resizable' + tableUUID);
        $table.off('mousedown.table-resizable' + tableUUID);
        $doc.off('keypress.table-resizable' + tableUUID);
        $doc.off('mousemove.table-resizable' + tableUUID);
        $doc.off('mouseup.table-resizable' + tableUUID);

        $table.data('initialized', false);

        return this;
    };

    var toggleFluidColumnWidth = function () {
        removeWidthHolder($(this)).removeClass('relative-table fixed-table').removeAttr('style').find('>colgroup').remove();
        return this;
    };

    var toggleFixedColumnWidth = function () {
        var $table = $(this);
        removeWidthHolder($table);
        convertToPixel($table).css('width', '').removeClass('relative-table').addClass('fixed-table');
        return this;
    };

    var updateTableModeInToolbar = function () {
        var TinyMCELang = require('confluence-editor/i18n/translations.i18n');

        // don't enable the switch control for nested table
        if (this.parent().closest('table.confluenceTable').length) {
            $('#table-mode-picker .dropdown-text').text(TinyMCELang.table.responsive);
            $('#table-mode-picker .aui-dd-parent').addClass('disabled');
            return;
        } else {
            $('#table-mode-picker .aui-dd-parent').removeClass('disabled');
        }

        if (isFixed(this)) {
            $('#table-mode-picker .dropdown-text').text(TinyMCELang.table.fixed_width);
        } else {
            $('#table-mode-picker .dropdown-text').text(TinyMCELang.table.responsive);
        }
    };

    //CONFDEV-40037: Copy and paste table doesn't keep the resize values
    var handlePasteOnWebkit = function (e, pl, o) {
        if (!o.content) {
            return;
        }
        var $container = $("<div/>").append(o.content);
        var restoreStyleFromDataAttr = function ($el) {
            if ($el.data("resize-percent")) {
                //after resizing, data-mce-style contains old value, data-resize-percent has updated value
                $el.css({width: $el.data("resize-percent") + '%'});
            } else {
                //after saving/pasting, only data-mce-style remain on element <table>,<col>
                $el.attr("style", $el.data("mce-style"));
            }
            return $el;
        };

        $container.find("table.confluenceTable.relative-table, table.confluenceTable.relative-table > colgroup > col").each(function () {
            restoreStyleFromDataAttr($(this));
        });
        o.content = $container.html();
    };

    var initTableResize = function (e, data) {
        var $doc = $(data.editor.getWin().document);
        var ed = data.editor;

        var removeAllTableResizable = function () {
            $doc.find('table.confluenceTable').each(function () {
                $(this).removeTableResizable({$doc: $doc});
            });
        };

        ed.onChange.add(function () {
            var node = ed.selection.getNode();
            var $node = $(node);
            // if a nested table is inserted then .closest will return the nested table itself but we don't want to
            // enable resizing for it, so go up 1 level here.
            var $table = $node.parent().closest('table.confluenceTable').not('table.confluenceTable table.confluenceTable');
            if ($table.is('.confluenceTable')) {
                $table.removeTableResizable({$doc: $doc}).tableResizable({$doc: $doc, editor: ed, force: true});
            }
        });

        AJS.bind('confluence.editor.on.save', function () {
            removeAllTableResizable();

            $doc.find('#resize-indicator').remove();
            $doc.find('.resize-width-holder').remove();

            //CONFDEV-39481
            $(ed.getBody()).removeAttr('data-table-resizing');
        });

        $doc.on('mousemove', 'table.confluenceTable', function() {
            var $table = $(this);
            if ($table.parents('table.confluenceTable').length) { //nested table
                return;
            }
            if (!$table.data('initialized')) {
                $table.tableResizable({$doc: $doc, editor: ed});
            }
        });

        /**
         * CONFDEV-40037: Copy and paste table doesn't keep the resize values because:
         * on webkit, <table> width is auto converted to px, <col> width is auto set to 0px
         * only happens for relative-table
         */
        if (tinymce.isWebKit) {
            $(document).bind('prePaste', handlePasteOnWebkit);
        }

        if (tinymce.isIE) {
            $('<style type="text/css"></style>')
                    .html('.confluenceTable td, .confluenceTable th {overflow: hidden !important;}'
                            + '.confluenceTable .content-wrapper {overflow-x : visible !important}')
                    .appendTo($doc.find('head'));
        }

        return this;
    };

    /*** End exported functions ***/

    return {
        createJQueryPlugin: function () {
            $.fn.tableResizable = tableResizable;
            $.fn.removeTableResizable = removeTableResizable;
            $.fn.toggleFluidColumnWidth = toggleFluidColumnWidth;
            $.fn.toggleFixedColumnWidth = toggleFixedColumnWidth;
            $.fn.updateTableModeInToolbar = updateTableModeInToolbar;
        },
        initTableResize: initTableResize
    };
});

require('confluence/module-exporter').safeRequire('confluence-editor/tinymce3/plugins/table/table-resizable', function (TableResizable) {
    var AJS = require('ajs');
    if (AJS.DarkFeatures.isEnabled('confluence.table.resizable')) {
        TableResizable.createJQueryPlugin();
        AJS.bind("init.rte", TableResizable.initTableResize);
    }
});

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:search-ms-edge', location = 'tinymce3/plugins/searchreplace/search-ms-edge.js' */
define('confluence-editor/tinymce3/plugins/searchreplace/search-ms-edge', [], function() {
    "use strict";

    // Get all text nodes from the editor area
    function getTextNodes(node) {
        var textNodes = [];
        if (node.nodeType === Node.TEXT_NODE) {
            textNodes.push(node);
        } else {
            var children = node.childNodes;
            for (var i = 0, len = children.length; i < len; ++i) {
                textNodes.push.apply(textNodes, getTextNodes(children[i]));
            }
        }
        return textNodes;
    }
    // Get all text node values from the editor area
    function getTextNodeValue(textNode) {
        return textNode.nodeValue.toLowerCase();
    }
    // Get current position of cursor or marker
    function getCurrentPositionOffset(selection, currentLocation, joinedText) {
        var selectedRange = selection.getRng();

        if (selectedRange.endContainer.nodeValue) {
            var currentCursor = joinedText.indexOf(selectedRange.endContainer.nodeValue.toLowerCase()) + selectedRange.endOffset;
            currentLocation = (currentLocation !== currentCursor && currentLocation !== -1) ? currentCursor : currentLocation;
        }
        return currentLocation;
    }
    // Search for the next or previous match
    function searchForMatches(fullText, searchText, currentLocation, searchPrevious) {
        var matchLocation = searchPrevious ? fullText.lastIndexOf(searchText, currentLocation - 1) : fullText.indexOf(searchText, currentLocation + 1);
        // If not found means being at the beginning or end of the text
        if (matchLocation < 0 && !searchPrevious) {
            matchLocation = fullText.indexOf(searchText);
        } else if (matchLocation === 0 && currentLocation === 0 && searchPrevious) {
            matchLocation = fullText.lastIndexOf(searchText);
        }
        return matchLocation;
    }
    // Get the position to create the selected range
    function getNextPositionOffset(matchStart, textNodes, textToSearch) {
        var startNode;
        var endNode;
        var startIndex;
        var endIndex;
        var atIndex = 0;

        for (var i = 0; i < textNodes.length; i++) {
            if (textNodes[i].nodeType === Node.TEXT_NODE) {
                var matchEnd = matchStart + textToSearch.length;
                if (!endNode && (textNodes[i].length + atIndex) >= matchEnd) {
                    endNode = textNodes[i];
                    endIndex = matchEnd - atIndex;
                }

                if (!startNode && (textNodes[i].length + atIndex) > matchStart) {
                    startNode = textNodes[i];
                    startIndex = matchStart - atIndex;
                }

                atIndex = atIndex + textNodes[i].length;
            }

            if (startNode && endNode) {
                return {
                    startNode: startNode,
                    startIndex: startIndex,
                    endNode: endNode,
                    endIndex: endIndex
                };
            }
        }
    }
    return {
        /**
         * An alternative for window.find which has not been supported on MS Edge.
         * @param {Selection} selection - represents the range of text selected or the current position of the caret.
         * @param {string} textToSearch - a search keyword.
         * @param {number} searchFrom - the save of last found position or the caret.
         * @param {HTMLObject} elementToSearch - the HTML object to search on.
         * @param {boolean} backwards - indicate the search direction, search next or previous.
         *
         * @return {Array} [found, position] - Returns an array containing a boolean indicating whether the keyword is found or not
         * and the position where the current selection begins
         */
        search: function(selection, textToSearch, searchFrom, elementToSearch, backwards) {
            var sel = selection.getSel();

            var textNodes = getTextNodes(elementToSearch);
            textToSearch = textToSearch.replace(/\s/g, '').toLowerCase();

            var joinedText = textNodes.map(getTextNodeValue).join('');
            searchFrom = getCurrentPositionOffset(selection, searchFrom, joinedText);

            var currentMatch = searchForMatches(joinedText, textToSearch, searchFrom, backwards);

            if (currentMatch < 0) {
                return [false, currentMatch];
            }

            var matchOffset = getNextPositionOffset(currentMatch, textNodes, textToSearch);

            var range = document.createRange();
            range.setStart(matchOffset.startNode, matchOffset.startIndex);
            range.setEnd(matchOffset.endNode, matchOffset.endIndex);
            sel.removeAllRanges();
            sel.addRange(range);
            range.startContainer.parentNode.scrollIntoView();
            return [true, currentMatch];
        }
    };
});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-autocomplete-resources-only', location = 'tinymce3/plugins/autocomplete/autocomplete-settings.js' */
define('confluence-editor/tinymce3/plugins/autocomplete/autocomplete-settings', [
    'ajs'
], function(
    AJS
) {
    "use strict";

    return {
        Settings : {},

        /**
         * Custom logging function allows for more structured output. log4javascript on the horizon.
         * @param owner the "class" this logger is for
         *
         * Params accepted by the returned log function:
         *  - caller : name of the calling method
         *  - desc : the actual log body
         *  - obj : an object or string to be rendered
         */
        log : function (owner) {
            return function (caller, desc, obj) {
                // Log string objects on the same line, else on the next line
                var objIsStr = (obj != null && typeof obj !== "object");
                var objStr = obj != null ? (objIsStr ? (" = " + obj) : " >") : "";
                AJS.debug(owner + " - " + caller + " : " + (desc || null) + objStr);
                obj && !objIsStr && AJS.debug(obj);
            };
        }
    };
});

require('confluence/module-exporter').exportModuleAsGlobal('confluence-editor/tinymce3/plugins/autocomplete/autocomplete-settings', 'Confluence.Editor.Autocompleter');
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-autocomplete-resources-only', location = 'tinymce3/plugins/autocomplete/autocomplete-util.js' */
define('confluence-editor/tinymce3/plugins/autocomplete/autocomplete-util', [
    'ajs',
    'jquery'
], function(
    AJS,
    $
) {
    "use strict";

    var loadData = function (json, query, callback, field, getRestSpecificAdditionLinks) {
        var hasErrors = json.statusMessage;
        var matrix;
        if (hasErrors) {
            matrix = [[{html: json.statusMessage, className: "error"}]];
        } else {
            var restMatrix = query ? AJS.REST.makeRestMatrixFromSearchData(json) : AJS.REST.makeRestMatrixFromData(json, field);
            matrix = AJS.REST.convertFromRest(restMatrix);
        }
        // do conversion
        function restSpecificAdditionLinksCallback(value, additionalLinks) {
            if (getRestSpecificAdditionLinks && typeof getRestSpecificAdditionLinks === "function") {
                getRestSpecificAdditionLinks(matrix, value, additionalLinks);
            }
        }
        callback(matrix, query, restSpecificAdditionLinksCallback);
    };

    return {
        /**
         * Returns the HTML of a AJS.dropdown link with an icon span. The icon span is required in the dropdown if we
         * want to use a sprite background for the link icon.
         * @param text escaped text of the dropdown item
         * @param className class name to be added to the link
         * @param iconClass class name to be added on the icon span
         * @return HTML string for the dropdown link
         */
        // we should remove this once AUI dropdown supports sprite icons
        dropdownLink : function(text, className, iconClass) {
            return "<a href='#' class='" + (className || "" ) + "'><span class='icon " + (iconClass || "") + "'></span><span>" + text + "</span></a>";
        },

        getRestData : function (autoCompleteControl, getUrl, getParams, val, callback, suggestionField, getRestSpecificAdditionLinks) {
            var url = getUrl(val);
            var cacheManager = autoCompleteControl.settings.cacheManager;
            var cachedData = cacheManager.get(val);
            var xhr;

            if (url) {
                xhr = $.ajax({
                    type: "GET",
                    url: url,
                    data: getParams(autoCompleteControl, val),
                    dataType: "json",
                    global: false,
                    timeout: 5000
                });

                //Always update the cache (eventual consistency)
                xhr.done(function(json){
                    cacheManager.put(val, json);
                });

                if (cachedData){
                    //Cached response
                    loadData(cachedData, val, callback, suggestionField, getRestSpecificAdditionLinks);
                } else {
                    //Async response
                    xhr.done(function(json){
                        loadData(json, val, callback, suggestionField, getRestSpecificAdditionLinks);
                    });
                    xhr.fail(function (xml, status) { // ajax error handler
                        if (status == "timeout") {
                            loadData({statusMessage: "Timeout", query: val}, val, callback, suggestionField);
                        }
                    });
                }
            } else {
                // If no url, default items may be displayed - run the callback with no data.
                callback([], val);
            }
        }
    };
});

require('confluence/module-exporter').exportModuleAsGlobal('confluence-editor/tinymce3/plugins/autocomplete/autocomplete-util', 'Confluence.Editor.Autocompleter.Util');

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-autocomplete-resources-only', location = 'tinymce3/plugins/autocomplete/autocomplete-control.js' */
define('confluence-editor/tinymce3/plugins/autocomplete/autocomplete-control', [
    'ajs',
    'jquery',
    'confluence/legacy',
    'confluence-editor/tinymce3/plugins/autocomplete/autocomplete-settings',
    'document'
], function(
    AJS,
    $,
    Confluence,
    AutocompleteSettings,
    document
) {
    "use strict";

    /**
     * This element wraps the search text and the trigger (if present).
     */
    var AUTOCOMPLETE_ID = "autocomplete";

    /**
     * This element wraps the trigger character (e.g. @, [, !)
     */
    var AUTOCOMPLETE_TRIGGER_ID = "autocomplete-trigger";

    /**
     * This element contains the text the user is searching for - it should always hold the cursor.
     */
    var AUTOCOMPLETE_SEARCH_TEXT_ID = "autocomplete-search-text";

    /**
     * Selects the word at the cursor and returns the word and the left/top location of the
     * bottom-left corner of the first word.
     *
     * @param options An options map including:
     *     - leadingChar: trigger character used to launch autocomplete
     *     - dontSuggest: Don't search based on text typed in the autocomplete span
     *     - backWords: the number of words to search backwards for
     */
    var AutocompleteControl = function (ed, options) {

        var log = AutocompleteSettings.log("Autocompleter.Control");
        var tinymce = require('tinymce');

        /**
         * The Control to be returned.
         */
        var control = {};
        var selection = ed.selection;
        var rng = selection.getRng(true);
        var cursorPos = rng.startOffset;
        var node = rng.startContainer;
        var nodeText = node.nodeValue;
        var leadingChar = options.leadingChar;
        var doc = ed.getDoc();
        var backWords = options.backWords || 0;
        var settings = AutocompleteSettings.Settings[leadingChar || "["]; // default to link
        var preventStartNodes = (!settings || typeof settings.preventStartNodes === "undefined") ? "div.code, a[href], img, pre" : settings.preventStartNodes;

        if ($("#" + AUTOCOMPLETE_ID, doc).length) {
            AJS.debug("init", "Autocomplete already exists, returning null.");
            return null;
        }
        control.backWords = backWords;
        control.maxResults = options.maxResults || 10;

        // Cursor may be in a <p> just outside of a TextNode, check for child node at startOffset
        if (nodeText == null && rng.collapsed && cursorPos && node.childNodes[cursorPos - 1]) {
            node = node.childNodes[cursorPos - 1];  // to the LEFT of the cursor
            nodeText = node.nodeValue;
            cursorPos = (nodeText && nodeText.length) || 0;
        }
        var text = "";
        // Cursor may still not be in a Text node, in which leave the text empty.
        if (nodeText != null) {
            text = (nodeText + "").substring(0, cursorPos);
            var pnode = node.previousSibling;
            while (pnode && pnode.nodeType === 3) {
                // add the text from any previous TextNodes
                text = pnode.nodeValue + text;
                pnode = pnode.previousSibling;
            }
        }

        function matchAnyExceptions(input, regExExceptions) {
            for (var i = 0, l = regExExceptions.length; i < l; i++) {
                if (regExExceptions[i].test(input)) {
                    return true;
                }
            }
            return false;
        }

        var regExExceptions = [
            // Disable trigger chars at the end of the certain strings e.g. “Hi there!”.
            // The regex allows "'<( left" and left' before the [ trigger and space, zero-width space, &nbsp; and em-dash
            // before all triggers.
            /([("'<\(\u201c\u2018]\[|[\ufeff\u200b\u2014\s\xa0].)$/,

            // allow parenthesis before trigger characters, except for !, as (!) is an emoticon autoformat shortcut
            /(\([^!])$/,

            //CONDEF-21873: allow supporting "//"
            /(\/\/)$/
        ];

        if (!backWords && text && !matchAnyExceptions(text + leadingChar, regExExceptions)) {
            log("init", "Cursor is in wrong word location to start autocomplete, returning null.");
            return null;
        }
        var $node = $(node);
        if ($node.closest(preventStartNodes).length) {
            log("init", "Cursor is in wrong node to start autocomplete, returning null.");
            return null;
        }

        if (Confluence.PropertyPanel && Confluence.PropertyPanel.current) {
            Confluence.PropertyPanel.shouldCreate = false;
            Confluence.PropertyPanel.destroy();
        }

        if (!leadingChar && nodeText == null) {
            AJS.debug("init", "No text available for suggestion, range is", rng);

            // TODO - handle this (and weird TextNodes)
            nodeText = "";
        }

        /**
         * Returns a jQuery-wrapped reference to the autocomplete container.
         */
        control.getContainer = function () {
            return $("#" + AUTOCOMPLETE_ID, doc);
        };

        /**
         * Starting at the given endpoint, search backward through text nodes until the requested number of words are
         * found.
         * @param node
         * @param offset
         * @param backWords
         */
        function findRangeStart(node, offset, backWords) {
            var nodeText;
            var pNode;

            // TODO - not this. See http://stackoverflow.com/questions/273789/is-there-a-version-of-javascripts-string-indexof-that-allows-for-regular-expre
            function regexLastIndexOf(str, regex, startpos) {
                !regex.global && (regex = new RegExp(regex.source, "g" + "i".slice(0, regex.ignoreCase) + "m".slice(0, regex.multiLine)));
                if (startpos == null) {
                    startpos = str.length;
                } else if (startpos < 0) {
                    startpos = 0;
                }
                var stringToWorkWith = str.substring(0, startpos + 1);
                var lastIndexOf = -1;
                var nextStop = 0;
                var result;
                while ((result = regex.exec(stringToWorkWith)) != null) {
                    lastIndexOf = result.index;
                    regex.lastIndex = ++nextStop;
                }
                return lastIndexOf;
            }

            for (var i = 0; i < backWords; i++) {
                nodeText = node.nodeValue.substring(0, offset);
                offset = regexLastIndexOf(nodeText, (/\s+/), offset);
                while (offset == -1) {
                    pNode = node.previousSibling;
                    if (pNode && pNode.nodeType === 3) {
                        node = pNode;
                        nodeText = pNode.nodeValue;
                        if (nodeText) {
                            offset = regexLastIndexOf(nodeText, (/\s+/), nodeText.length);
                        }
                    } else {
                        i = backWords;  // no point looking further
                        break;
                    }
                }
            }

            return {
                node: node,
                offset: offset + 1
            };
        }

        var suggestionHtml = "";
        if (rng.collapsed && backWords && nodeText) {
            var rangeStart = findRangeStart(node, cursorPos, backWords);

            // Select from the cursor back to the start of the first word
            if (tinymce.isIE && backWords == 1) {
                var range = selection.getRng();
                range.moveStart("character", rangeStart.offset - cursorPos);
                range.select();
            } else {
                range = selection.getRng(true);
                range.setStart(rangeStart.node, rangeStart.offset);
                range.setEnd(node, cursorPos);
                selection.setRng(range);
            }
        }
        // Use the existing selection as the search term
        // TODO - html format is failing due to our preProcess on serializer. Fix that.
        suggestionHtml = selection.getContent({format: 'text'}).replace('\n', '');
        log("init", "suggestionHtml", suggestionHtml);

        var el = AJS("span").attr("id", AUTOCOMPLETE_ID);
        if (leadingChar) {
            el.append(AJS("span").attr("id", AUTOCOMPLETE_TRIGGER_ID).text(leadingChar));
        }

        var $searchTextSpan = AJS("span").attr("id", AUTOCOMPLETE_SEARCH_TEXT_ID);
        $searchTextSpan.text(AJS.Rte.HIDDEN_CHAR);
        el.append($searchTextSpan);
        selection.setNode(el[0]);

        var autocompleteSpan = control.getContainer();
        control.previousSearchText = "";
        control.settings = settings;

        //Add cache to settings for this completer if it doesn't already exist
        if (settings.cache !== false && !settings.cacheManager) {
            settings.cacheManager = new AJS.Confluence.localStorageCacheManager(settings.ch);
        } else if (settings.cache === false && !settings.cacheManager) {
            //fake cache
            settings.cacheManager = {get: $.noop, put: $.noop};
        }

        // Put the cursor inside the new span, at the end.
        var searchNode = $("#" + AUTOCOMPLETE_SEARCH_TEXT_ID, control.getContainer());
        var selNode = $(doc.createElement("span")).text(suggestionHtml || AJS.Rte.HIDDEN_CHAR);
        searchNode.empty().append(selNode);
        selection.select(selNode[0], true);
        selection.collapse();

        // Events
        var before = function (ed, e) {
            if (control.onBeforeKey && !control.onBeforeKey(e, control.text())) {
                tinymce.dom.Event.cancel(e);
                log("before", "blocked by onBeforeKey: " + e.keyCode);
                return false;
            }
        };
        var after = function (ed, e) {
            var rng = selection.getRng(true);
            var span = control.getContainer();
            var node = rng.startContainer;
            var parent = node.parentNode;
            node.nodeType === 3 && (parent = parent.parentNode);
            var grandpa = parent ? parent.parentNode : null;
            //CONDEF-21873: fix the issue in IE8
            var parentOfGranpd = grandpa ? grandpa.parentNode : null;
            var outsideSearchSpan = (parent !== span[0]) &&
                    (grandpa !== span[0]) &&
                    (parentOfGranpd !== span[0]);
            if (e.keyCode === 27 || outsideSearchSpan) {
                log("after", "dying because of: " + (outsideSearchSpan ? "outside search span" : "escape pressed"));
                control.die();
            } else if (control.onAfterKey && !control.onAfterKey(e, control.text())) {
                tinymce.dom.Event.cancel(e);
                log("after", "blocked by onAfterKey: " + e.keyCode);
                return false;
            }
        };
        var press = function (ed, e) {
            if (control.onKeyPress && !control.onKeyPress(e, control.text())) {
                tinymce.dom.Event.cancel(e);
                log("press", "blocked by onKeyPress: " + e.keyCode);
                return false;
            }
        };
        var click = function (ed, e) {
            if (control.getContainer()[0] != e.target.parentNode) {
                log("click", "Clicked outside of autocomplete, closing.");
                control.die();
            }
        };
        ed.onKeyDown.addToTop(before);
        ed.onKeyUp.addToTop(after);
        ed.onKeyPress.addToTop(press);
        ed.onClick.addToTop(click);


        // For Recent History and certain other searches, ignore the selected text for searching.
        control.word = "";
        if (!options.keepAlias) {
            control.word = suggestionHtml;
        } else {
            log("init", "No suggestion based on previous or selected text");
        }

        AJS.Rte.showElement(autocompleteSpan[0]);

        function positionControl() {
            var position = tinymce.DOM.getPos(autocompleteSpan[0]);
            var height = autocompleteSpan.height();
            control.left = position.x;
            control.top = position.y + height;
        }

        positionControl();
        control.text = function (text) {
            var span = $("#" + AUTOCOMPLETE_SEARCH_TEXT_ID, control.getContainer());
            if (text != null) {
                span.html(text);
                return this;
            } else {
                text = AJS.escapeEntities(span.text());
                return text.replace(AJS.Rte.HIDDEN_CHAR, "");
            }
        };

        control.plainText = function (text) {
            var span = $("#" + AUTOCOMPLETE_SEARCH_TEXT_ID, control.getContainer());
            if (text != null) {
                span.text(text);
                return this;
            } else {
                text = span.text();
                return text.replace(AJS.Rte.HIDDEN_CHAR, "");
            }
        };

        /**
         * Replaces the autocomplete component with the given text, which may be empty.
         * If the given text IS empty, it will always be collapsed.
         * If the collapse parameter is true, the range will be collapsed at the end of the text.
         * @param text  string to replace autocomplete with
         * @param collapse if true, collapse range to end of text, else select text
         */
        var replaceWithTextAndGetRange = function (text, collapseToEnd) {
            var element = control.getContainer();
            return AutocompleteControl.replaceWithTextAndGetRange(element, text, collapseToEnd);
        };

        control.replaceWithSelectedSearchText = function () {
            // Get the autocomplete search text and select the entire autocomplete
            var replaceText = control.text();
            log("replaceWithSelectedSearchText", replaceText);
            replaceWithTextAndGetRange(replaceText, false);
            return replaceText;
        };

        control.die = function (notrigger) {
            if (control.dying) {
                AJS.debug("die", "Already dying, returning.");
                return;
            }
            control.dying = true;
            if (Confluence.PropertyPanel) {
                Confluence.PropertyPanel.shouldCreate = true;
            }
            var container = control.getContainer();
            if (container.length) {
                log("die", "Tearing down autocomplete, cleaning up autocompleter");
                // Replace autocomplete span with its current text
                var replaceText = ((notrigger || options.backWords) ? "" : control.settings.ch) + control.text();
                rng = replaceWithTextAndGetRange(replaceText, true);
            }

            // Removing handlers while actually processing handlers (as is often the case for 'done' calls)
            // can mean certain handlers are skipped (e.g. currently processing handler[0] - once it is removed
            // the older handler[1] becomes handler[0] and will be skipped. (This causes CONFDEV-7485.)
            // Hence, remove the handlers later
            setTimeout(function () {
                log("die", "Removing autocomplete-control keyboard listeners.");
                ed.onKeyDown.remove(before);
                ed.onKeyUp.remove(after);
                ed.onClick.remove(click);
                ed.onKeyPress.remove(press);
            }, 1);

            AJS.Rte.unbindScroll("autocomplete");
            $(document).unbind("click.autocomplete-outside");
            this.onDeath && this.onDeath();
        };

        AJS.Rte.bindScroll("autocomplete", function (e) {
            AJS.debug("scrolling:", e);
            if (!AJS.Rte.isAnyPartShown(autocompleteSpan)) {
                control.die();
            } else {
                control.onScroll();
            }
        });
        $(document).bind("click.autocomplete-outside", function (e) {
            // ui-datepicker-header is included because jQuery UI is detaching the datepicker
            // header before the event propagates up (preventing the check to see if it's a child of the AUI datepicker)
            if (!$(e.target).closest("#autocomplete-dropdown, .aui-datepicker-dialog, .ui-datepicker-header").length) {
                control.die();
            }
        });
        AJS.Rte.getEditor().onBeforeExecCommand.add(function (ed, cmd) {
            if (cmd == "mceConfSavePage") {
                control.die();
            }
        });
        control.update = function (data) {
            AJS.Rte.BookmarkManager.storeBookmark();
            replaceWithTextAndGetRange("", true);
            this.settings.update(this, data);
        };

        control.removeSpan = function () {
            control.getContainer().remove();
        };
        return control;
    };

    /**
     * Finds and removes an orphan autocomplete control. Contents of control are
     * replaced with the text content of the control and the text is then selected in the editor.
     *
     * @return {
     *   leadingChar: trigger character used to launch autocomplete
     *   content: search text contained in control
     * }
     */
    AutocompleteControl.removeOrphanedControl = function () {
        var doc = $(AJS.Rte.getEditor().getDoc());
        var placeholder = doc.find('#' + AUTOCOMPLETE_ID);
        var leadingChar;
        var content;
        if (!placeholder.length) {
            return null;
        }
        leadingChar = doc.find('#' + AUTOCOMPLETE_TRIGGER_ID).text();
        content = doc.find('#' + AUTOCOMPLETE_SEARCH_TEXT_ID).text();

        AutocompleteControl.replaceWithTextAndGetRange(placeholder, content, false);

        return {
            leadingChar: leadingChar,
            content: content
        };
    };

    /**
     * Replaces the autocomplete component with the given text, which may be empty.
     * If the given text IS empty, it will always be collapsed.
     * If the collapse parameter is true, the range will be collapsed at the end of the text.
     * @param text  string to replace autocomplete with
     * @param collapse if true, collapse range to end of text, else select text
     */
    AutocompleteControl.replaceWithTextAndGetRange = function (element, text, collapseToEnd) {
        if (!element.length) {
            AJS.log("replaceWithTextAndGetRange Error: attempting to replace a non-existent element");
            return;
        }
        text = text || "";
        collapseToEnd = collapseToEnd || !text;

        var ed = AJS.Rte.getEditor();
        var rng;
        var parent = element[0].parentNode;
        var cursorPosition = AJS.Rte.Content.getChildIndex(parent, element[0]);
        var offset = collapseToEnd ? 1 : 0;

        rng = ed.selection.getRng(true);
        rng.setStart(parent, cursorPosition + offset);

        rng.setEnd(parent, cursorPosition + 1);
        element.before(text || AJS.Rte.HIDDEN_CHAR).remove();
        ed.selection.setRng(rng);

        return rng;
    };

    return AutocompleteControl;
});

require('confluence/module-exporter').exportModuleAsGlobal('confluence-editor/tinymce3/plugins/autocomplete/autocomplete-control', 'Confluence.Editor.Autocompleter.Control');

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-autocomplete-resources-only', location = 'tinymce3/plugins/autocomplete/autocomplete-manager.js' */
// The namespace has been changed from tinymce.confluence.
// This is to avoid the fact that the plugin must be available for TinyMCE initialisation yet the
// tinymce.confluence is set during loading of TinyMCE. It is tricky to arrange scripts such
// that the autocomplete resources load after tinymce.confluence is set but before TinyMCE
// initialises.
define('confluence-editor/tinymce3/plugins/autocomplete/autocomplete-manager', [
    'ajs',
    'jquery',
    'window',
    'confluence-editor/tinymce3/plugins/autocomplete/autocomplete-settings',
    'confluence-editor/tinymce3/plugins/autocomplete/autocomplete-control'
], function(
    AJS,
    $,
    window,
    AutocompleteSettings,
    AutocompleteControl
) {
    "use strict";

    var log = AutocompleteSettings.log("Autocompleter.Manager");

    /**
     * There will only be one autoCompleteControl active at a time so a reference to it can be shared across methods.
     */
    var autoCompleteControl;

    /**
     *  The input driven dropdown component that does most of the work.
     */
    var idd;

    /**
     * Called when the user hits a key combination at the end of some text to autocomplete.
     * If there is no text at the cursor, the user's Recent History is displayed instead.
     *
     * options include:
     *  - leadingChar       determines the type of autocomplete, e.g. [ , !
     *  - backWords         the number of words to search backwards for
     *  - selectFirstItem   true/false, whether or not the first item in the drop down should be selected
     *  - dropDownDelay     the delay in milliseconds before the dropdown will be opened. Used to delay AJAX
     *                      requests. Defaults to 200ms.
     */
    var startAutoComplete = function (options) {
        var synchronyId = 'confluence.autocomplete-plugin';

        autoCompleteControl = AutocompleteControl(AJS.Rte.getEditor(), options);
        if (!autoCompleteControl) {
            return false;
        }

        AJS.trigger('synchrony.stop', { id: synchronyId });

        var selectionHandler = function (e, selection) {
            e.preventDefault();
            var result = $.data(selection[0], "properties");
            if (result && typeof result.callback === "function") {
                result.callback(autoCompleteControl);
            } else if (result.className !== "menu-header") {
                autoCompleteControl.update(result);
            }

            autoCompleteControl.die();
        };
        var moveHandler = function (selection, dir) {
            var current = AJS.dropDown.current;
            if (selection && selection.find("a").is(".menu-header")) {
                dir == "up" ? current.moveUp(): current.moveDown();
            }
        };

        var winWidth = $(window).width();
        var preferredPosition;

        var POSITION_ABOVE = 1;
        var POSITION_BELOW = 2;

        var getPreferredPosition = function(spaceAvailable, heightRequired) {
            if(spaceAvailable.below >= heightRequired) {
                return POSITION_BELOW;
            } else if(spaceAvailable.above >= heightRequired) {
                return POSITION_ABOVE;
            }
            // Not enough space - so use biggest space
            return spaceAvailable.below > spaceAvailable.above ? POSITION_BELOW : POSITION_ABOVE;
        };

        var dropDownStillFits = function(spaceAvailable, heightRequired) {
            if(preferredPosition == POSITION_ABOVE) {
                return spaceAvailable.above >= heightRequired;
            }
            return spaceAvailable.below >= heightRequired;
        };

        var placedropdown = function ($dropdown) {
            var $parent = $("#autocomplete-dropdown");
            var anchor = autoCompleteControl.getContainer();
            var spaceAvailable;
            var top;
            var left;
            var offset;
            var overlap;
            var $arrow;
            var gapForArrowY = 10;
            var gapForArrowX = 0;
            var ddHeight;
            var heightRequired;

            if (!$parent.length) {
                $parent = AJS("div").addClass("aui-dd-parent quick-nav-drop-down").attr("id", "autocomplete-dropdown").appendTo("body");
            }

            spaceAvailable = AJS.Position.spaceAboveBelow(AJS.Rte.getEditorFrame(), anchor);

            // Ensure correct styling so height calcs are correct
            $dropdown.find("ol:has(a.menu-header)").addClass("top-menu-item");
            $dropdown.find("ol:empty").hide();
            // Height of dd changes after adding to parent (due to css), so do this first
            $parent.append($dropdown);

            offset = AJS.Rte.Content.offset(anchor);

            overlap = Math.max($parent.width() + offset.left - winWidth + 10, 0);
            left = offset.left - overlap - gapForArrowX;
            ddHeight = $dropdown.outerHeight(true);
            heightRequired = ddHeight + gapForArrowY;

            if(preferredPosition) {
                // Favour current position unless it doesn't fit
                // we don't want the drop down to keep changing relative position.
                if(!dropDownStillFits(spaceAvailable, heightRequired)) {
                    preferredPosition = null;
                }
            }

            if(!preferredPosition) {
                preferredPosition = getPreferredPosition(spaceAvailable, heightRequired);
            }

            $arrow = $parent.find(".autocomplete-dropdown-arrow");
            if (!$arrow.length) {
                $arrow = $('<div class="autocomplete-dropdown-arrow"></div>');
            }

            if(preferredPosition === POSITION_ABOVE) {
                $arrow.addClass('autocomplete-dropdown-bottom-arrow').css({ top: ddHeight - 1 });
                top = offset.top - ddHeight - gapForArrowY;
            } else {
                $arrow.removeClass('autocomplete-dropdown-bottom-arrow').css('top', '');
                top = offset.top + anchor.height() + gapForArrowY;
            }

            // Append and position the dropdown notch
            $arrow.css({ left: overlap }).appendTo($parent);

            $parent.css({
                position: "absolute",
                top: top,
                left: left
            });
        };

        idd = AJS.inputDrivenDropdown({
            onShow : function (dd) {
                AJS.trigger("rte-autocomplete-on-show", { triggerChar: autoCompleteControl.settings.ch });

                var iframe = AJS.Rte.getEditorFrame();
                iframe && iframe.shim && iframe.shim.hide();

                dd.find("a.menu-header").unbind().click(function (e) {
                    e.preventDefault();
                    autoCompleteControl.die();
                });
                this.reset();

                if (autoCompleteControl.settings.selectFirstItem && dd.find("a:not('.menu-header')").length) {
                    AJS.dropDown.current.moveDown();
                }
            },
            dropdownPlacement : placedropdown,
            onDeath : function () {
                $("#autocomplete-dropdown").remove();
            },
            ajsDropDownOptions: {
                selectionHandler: selectionHandler,
                moveHandler: moveHandler,
                className : "autocomplete " + autoCompleteControl.settings.dropDownClassName
            },
            getDataAndRunCallback: function(val) {
                autoCompleteControl && autoCompleteControl.settings.getDataAndRunCallback &&
                autoCompleteControl.settings.getDataAndRunCallback(autoCompleteControl, val,
                        function(matrix, query, restSpecificAdditionLinksCallback) {
                            matrix.unshift([
                                {
                                    className: "menu-header dropdown-prevent-highlight",
                                    href: "#",
                                    name: autoCompleteControl.settings.getHeaderText(autoCompleteControl, val)
                                }
                            ]);
                            matrix.push(autoCompleteControl.settings.getAdditionalLinks(autoCompleteControl, val, restSpecificAdditionLinksCallback));

                            // If the idd control is still active update it with the new data.
                            idd && idd.show(matrix, query, [query]);
                        }
                );
            },
            dropDownDelay: autoCompleteControl.settings.dropDownDelay
        });

        autoCompleteControl.onBeforeKey = function (e, text) {
            var tinymce = require('tinymce');

            if (e.keyCode === 40 || e.keyCode === 38 || e.keyCode === 13) {
                tinymce.dom.Event.cancel(e);
                return false;
            }
            if (e.keyCode === 27 || e.keyCode === 9 || (e.keyCode === 8 && !text)) {
                // User has key-downed backspace but text is *already* blank - close autocomplete.
                this.die(e.keyCode === 8);
                return false;
            }

            return true;
        };
        // Blocker for browser default actions for up and down keys
        autoCompleteControl.onKeyPress = function (e, text) {
            var tinymce = require('tinymce');

            var ch = $.browser.msie ? e.keyCode : e.which;
            var character = String.fromCharCode(ch);   // charCode back to '@'
            if (e.keyCode === 13) {
                tinymce.dom.Event.cancel(e);
                return false;
            }
            var endCharIndex = AJS.indexOf(this.settings.endChars,character);
            if (endCharIndex !== -1) {
                autoCompleteControl.die();
            }
            return true;
        };
        var twoLetters = /\S{2,}/;
        autoCompleteControl.onAfterKey = function (e, text) {
            if (e.keyCode === 40 || e.keyCode === 38 || e.keyCode === 13) {
                var current = AJS.dropDown.current;
                if (!current) {
                    return false;
                }
                if (current.getFocusIndex() == -1 && e.keyCode === 13) {  // user hit enter when nothing selected
                    reset();
                    return true;
                }
                // AJS-609 - the AUI dropdown code expects a jQuery event
                if (!e.which) {
                    e.which = e.keyCode;
                }

                return current.moveFocus(e);
            }

            // User deleted back to zero characters - should display default suggestions again.
            var forceUpdate = (e.keyCode === 8 && !text);
            if (forceUpdate || twoLetters.test(text)) {
                idd.change(text, forceUpdate);
            }
            return true;
        };
        autoCompleteControl.onDeath = function () {
            if (idd) {
                idd.remove();
                idd.closing = true;
            }
            AJS.trigger('synchrony.start', { id: synchronyId });
        };
        autoCompleteControl.onScroll = function() {
            if (!idd.dd) {
                return; // sometimes, due to race conditions, the onScroll gets removed after the dd.$
            }
            placedropdown(idd.dd.$);
        };

        // Start the dropdown with no text entered, to display the default suggestions.
        idd.change(autoCompleteControl.text(), "force");
        return true;
    };

    var reset = function () {
        autoCompleteControl.die();
        autoCompleteControl = null;
    };

    var reattach = function() {
        var orphan = AutocompleteControl.removeOrphanedControl();
        orphan && AutocompleteManager.shortcutFired(orphan.leadingChar);
    };

    var AutocompleteManager = {

        getInputDrivenDropdown: function() {
            return idd;
        },

        // keyPress used so we can capture composite keystrokes like Sh-2 == @
        triggerListener: function(ed, e) {
            var tinymce = require('tinymce');

            //We do not want to override any browser shortcuts but we can't
            //catch alt and ctrl keys due to other keyboard layouts like german
            if (e.metaKey) {
                return true;
            }

            var ch = $.browser.msie ? e.keyCode : e.which;

            idd && idd.closing && (idd = null);

            var character = String.fromCharCode(ch);   // charCode back to '@'
            if (!idd && character in AutocompleteSettings.Settings) {

                // Add the suggestion span and kill the event - we'll add the letter manually
                startAutoComplete({
                    leadingChar: character
                }) && tinymce.dom.Event.cancel(e);
            }

            return true;
        },

        /**
         * Called when a Ctrl-Sh-K or Ctrl-Sh-M shortcut is fired, selects the previous word.
         *
         * Multiple shortcuts will select more previous words to narrow the search.
         */
        shortcutFired: function(leadingChar, noBackwordSelection) {
            var backWords = noBackwordSelection ? 0 : 1;
            idd && idd.closing && (idd = null);
            if (idd) {
                backWords = noBackwordSelection ? 0 : autoCompleteControl.backWords + 1;
                // the shortcut itself will be closing the previous autocomplete
                reset();
            }
            return startAutoComplete({
                leadingChar: leadingChar,
                backWords: backWords
            });
        },

        /**
         * Attempt to reattach to an autocomplete span if there is no active control
         * (e.g. on an undo/redo opperation).
         */
        reattach: reattach
    };

    return AutocompleteManager;
});

require('confluence/module-exporter').exportModuleAsGlobal('confluence-editor/tinymce3/plugins/autocomplete/autocomplete-manager', 'Confluence.Editor.Autocompleter.Manager');

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-autocomplete-resources-only', location = 'tinymce3/plugins/autocomplete/editor_plugin_src.js' */
/**
 * This "common" autocomplete plugin needs to be always included in order to use any other autocomplete-xxx plugin.
 * Eventually we would like to be able to remove it.
 * In order to do so, we need to fix first the confluence-mentions plugin and any other plugin
 * that depends on {@code Confluence.Editor.Autocompleter.Manager.triggerListener) being called in its behalf
 */
define('confluence-editor/tinymce3/plugins/autocomplete/editor_plugin_src', [
    'tinymce',
    'confluence/legacy',
    'ajs'
], function(
    tinymce,
    Confluence,
    AJS
) {
    "use strict";

    return {
        init : function(ed) {
            Confluence.Editor.Autocompleter.Settings = {};

            ed.onPostRender.add(function() {
                AJS.debug("Autocomplete enabled, adding keyPress listener");

                // Certain keys prompt the autocomplete, e.g. typing [ goes into "link auto-complete" mode
                ed.onKeyPress.addToTop(Confluence.Editor.Autocompleter.Manager.triggerListener);
                AJS.trigger('ready-editor-autocomplete');
            });

            // CONFDEV-3649 - Handle undo/redo correctly - reattach autocomplete, if needed
            ed.onUndo.add(Confluence.Editor.Autocompleter.Manager.reattach);
            ed.onRedo.add(Confluence.Editor.Autocompleter.Manager.reattach);
        },

        getInfo : function() {
            return {
                longname : 'Auto Complete',
                author : 'Atlassian',
                authorurl : 'http://www.atlassian.com',
                version : tinymce.majorVersion + "." + tinymce.minorVersion
            };
        }
    };
});

require('confluence/module-exporter').safeRequire('confluence-editor/tinymce3/plugins/autocomplete/editor_plugin_src', function(AutoCompletePlugin) {
    var tinymce = require('tinymce');
    tinymce.create('tinymce.plugins.AutoComplete', AutoCompletePlugin);
    tinymce.PluginManager.add('autocomplete', tinymce.plugins.AutoComplete);
});

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-autocomplete-resources-only', location = 'tinymce3/plugins/autocomplete-link/autocomplete-settings-links.js' */
/**
 * @tainted tinymce
 * @tainted Confluence
 */
define('confluence-editor/tinymce3/plugins/autocomplete-link/autocomplete-settings-links', [
    'jquery',
    'ajs',
    'confluence/legacy'
],
function(
    $,
    AJS,
    Confluence
) {

    "use strict";

    function AutocompleteSettingsLink() {
        var autoComplete = Confluence.Editor.Autocompleter;

        var getUrl = function(val) {
            if (val) {
                return AJS.contextPath() + "/rest/prototype/1/search.json";
            } else if (AJS.Meta.get('remote-user')) {
                return AJS.contextPath() + "/rest/prototype/1/session/history.json";
            }

            return null;
        };

        var getParams = function(autoCompleteControl, val) {
            var params = {
                "max-results": autoCompleteControl.maxResults
            };
            if (val) {
                params.query = Confluence.unescapeEntities(val);
                params.search = "name";
                params.preferredSpaceKey = AJS.Meta.get('space-key');
            }
            return params;
        };

        // Link settings.
        Confluence.Editor.Autocompleter.Settings["["] = {

            ch: "[",
            cache: false,
            endChars: ["]"],

            dropDownClassName: "autocomplete-links",
            selectFirstItem: true,

            getHeaderText: function (autoCompleteControl, value) {
                return "\u041f\u0440\u0435\u0434\u043b\u0430\u0433\u0430\u0435\u043c\u044b\u0435 \u0441\u0441\u044b\u043b\u043a\u0438";
            },

            getAdditionalLinks: function (autoCompleteControl, value, restSpecificAdditionLinksCallback) {
                var searchPrompt;
                if (value) {
                    var message = "\u041f\u043e\u0438\u0441\u043a  &lsquo;{0}&rsquo;";
                    searchPrompt = AJS.format(message, value);
                } else {
                    searchPrompt = "\u041f\u043e\u0438\u0441\u043a";
                }
                var LinkBrowser = Confluence.Editor.LinkBrowser;
                var additionalLinks = [
                    {
                        className: "search-for",
                        name: searchPrompt,
                        href: "#",
                        callback: function (autoCompleteControl) {
                            autoCompleteControl.replaceWithSelectedSearchText();
                            var lb = LinkBrowser.open({
                                panelKey: LinkBrowser.SEARCH_PANEL
                            });
                            lb.doSearch(lb.getLocationPresenter().getRawLinkText());
                        }
                    },
                    {
                        className: "dropdown-insert-link",
                        html: autoComplete.Util.dropdownLink("\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c Web \u0441\u0441\u044b\u043b\u043a\u0443", "dropdown-prevent-highlight", "editor-icon"),
                        callback: function (autoCompleteControl) {
                            autoCompleteControl.replaceWithSelectedSearchText();
                            LinkBrowser.open({
                                panelKey: LinkBrowser.WEBLINK_PANEL
                            });
                        }
                    }
                ];

                restSpecificAdditionLinksCallback && restSpecificAdditionLinksCallback(value, additionalLinks);

                return additionalLinks;
            },

            getDataAndRunCallback: function (autoCompleteControl, val, callback) {
                function getRestSpecificAdditionLinks(matrix, value, additionalLinks) {
                    function doesPageAlreadyExist() {
                        var pages = matrix[1];
                        var firstEntry = pages[0].restObj;

                        if (firstEntry.type === "page") {
                            return firstEntry.space.key == AJS.Meta.get('space-key') && firstEntry.title.toLowerCase() === value.toLowerCase();
                        }

                        return false;
                    }

                    if (value) {
                        if (matrix.length < 2 || !doesPageAlreadyExist()) {
                            additionalLinks.push({
                                className: "insert-create-page-link",
                                html: autoComplete.Util.dropdownLink("\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0441\u0441\u044b\u043b\u043a\u0443 \u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0435\u043c\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443", "dropdown-prevent-highlight", "editor-icon"),
                                callback: function (autoCompleteControl) {
                                    var title = Confluence.unescapeEntities(value);
                                    var link = Confluence.Link.createLinkToNewPage(title, AJS.Meta.get('space-key'));
                                    autoCompleteControl.update(link);
                                }
                            });
                        }
                    }
                }

                Confluence.Editor.Autocompleter.Util.getRestData(autoCompleteControl, getUrl, getParams, val, callback, "content", getRestSpecificAdditionLinks);
            },

            update: function (autoCompleteControl, link) {
                if (link.restObj) {
                    link = Confluence.Link.fromREST(link.restObj);
                }
                link.insert();
            }
        };

    }

    return AutocompleteSettingsLink;
});

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-autocomplete-resources-only', location = 'tinymce3/plugins/autocomplete-link/editor_plugin_src.js' */
/**
 * 'Autocomplete confluence links' dropdown appears when you press a '[' character in the editor.
 */
define('confluence-editor/tinymce3/plugins/autocomplete-link/editor_plugin_src', [
    'tinymce',
    'confluence/legacy',
    'confluence-editor/tinymce3/plugins/autocomplete-link/autocomplete-settings-links'
], function(
    tinymce,
    Confluence,
    AutocompleteLink
) {
    "use strict";

    return {
        init: function (ed) {
            var triggerKey = '[';
            ed.addCommand('mceConfAutocompleteLink', function () {
                Confluence.Editor.Autocompleter.Manager.shortcutFired(triggerKey);
            });

            ed.addShortcut("ctrl+shift+k", ed.getLang("AutoComplete"), "mceConfAutocompleteLink");
            AutocompleteLink();
        },

        getInfo: function () {
            return {
                longname: 'Auto Complete Link',
                author: 'Atlassian',
                authorurl: 'http://www.atlassian.com',
                version: tinymce.majorVersion + "." + tinymce.minorVersion
            };
        }
    };
});

require('confluence/module-exporter').safeRequire('confluence-editor/tinymce3/plugins/autocomplete-link/editor_plugin_src', function(AutoCompleteLinkPlugin) {
    var tinymce = require('tinymce');
    tinymce.create('tinymce.plugins.AutoCompleteLink', AutoCompleteLinkPlugin);
    tinymce.PluginManager.add('autocompletelink', tinymce.plugins.AutoCompleteLink);
});

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-autocomplete-resources-only', location = 'tinymce3/plugins/autocomplete-media/autocomplete-settings-media.js' */
/**
 * @tainted tinymce
 * @tainted Confluence
 */
define('confluence-editor/tinymce3/plugins/autocomplete-media/autocomplete-settings-media', [
    'jquery',
    'ajs',
    'confluence-editor/utils/attachments-insert-utils',
    'confluence/legacy',
    'tinymce',
    'confluence/macro-js-overrides'
], function(
    $,
    AJS,
    AttachmentsInsertUtils,
    Confluence,
    tinymce,
    MacroJsOverrides
) {
    "use strict";

    function AutocompleteSettingsMedia() {
        var getUrl = function (val) {
            var parentId = AJS.params.attachmentSourceContentId || AJS.Meta.get('content-id');
            if (val) {
                return AJS.contextPath() + "/rest/prototype/1/search.json";
            } else if (+parentId) {
                return AJS.contextPath() + "/rest/prototype/1/content/" + parentId + "/attachments.json";
            }

            return null;
        };

        var getParams = function (autoCompleteControl, val) {
            // these types match those in the Java Attachment.Type enum
            var embeddableAttachmentTypes = AJS.MacroBrowser.getMacroMetadata('view-file') ? [] : ["image", "word", "excel", "pdf", "powerpoint", "multimedia"];
            return val ?
            {
                type: "attachment",
                attachmentType: embeddableAttachmentTypes,
                search: "name",
                "max-results": autoCompleteControl.maxResults,
                query: val
            } : {
                attachmentType: embeddableAttachmentTypes,
                "max-results": autoCompleteControl.maxResults
            };
        };

        // Media settings
        Confluence.Editor.Autocompleter.Settings["!"] = {
            ch: "!",
            cache: false,
            endChars: ["!"],

            dropDownClassName: "autocomplete-media",
            selectFirstItem: true,

            getHeaderText: function (autoCompleteControl, value) {
                return AJS.MacroBrowser.getMacroMetadata('view-file')
                        ? "\u041f\u0440\u0435\u0434\u043b\u0430\u0433\u0430\u0435\u043c\u044b\u0435 \u0444\u0430\u0439\u043b\u044b"
                        : "\u041f\u0440\u0435\u0434\u043b\u0430\u0433\u0430\u0435\u043c\u044b\u0435 \u043c\u0435\u0434\u0438\u0430";
            },

            getAdditionalLinks: function (autoCompleteControl, value) {
                var text = "\u041e\u0442\u043a\u0440\u044b\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0444\u0430\u0439\u043b\u043e\u0432";

                return [
                    {
                        className: "dropdown-insert-image",
                        html: Confluence.Editor.Autocompleter.Util.dropdownLink(
                            text, "dropdown-prevent-highlight", "editor-icon"),
                        callback: function (autoCompleteControl) {
                            autoCompleteControl.replaceWithSelectedSearchText();
                            Confluence.Editor.defaultInsertImageDialog();
                        }
                    },
                    {
                        className: "dropdown-insert-macro",
                        html: Confluence.Editor.Autocompleter.Util.dropdownLink(
                            "\u0412\u0441\u0442\u0430\u0432\u044c\u0442\u0435 \u0434\u0440\u0443\u0433\u043e\u0439 \u0442\u0438\u043f \u043c\u0443\u043b\u044c\u0442\u0438\u043c\u0435\u0434\u0438\u0430", "dropdown-prevent-highlight", "editor-icon"),
                        callback: function (autoCompleteControl) {
                            autoCompleteControl.replaceWithSelectedSearchText();
                            tinymce.confluence.macrobrowser.macroBrowserToolbarButtonClicked({
                                selectedCategory: "media"
                            });
                        }
                    }
                ];
            },

            getDataAndRunCallback: function (autoCompleteControl, val, callback) {
                Confluence.Editor.Autocompleter.Util.getRestData(autoCompleteControl, getUrl, getParams, val, callback, "attachment");
            },

            update: function (autoCompleteControl, data) {
                AJS.trigger('rte-autocomplete-on-insert', { triggerChar: '!', selectedFile: data });

                var restObj = data.restObj;
                var linkDetails = AJS.REST.wikiLink(restObj);
                var name = restObj && restObj.title || data.name;

                if (restObj.niceType == "Image") {
                    // leading ^ is not needed for images attached to the current page
                    var destination = linkDetails.destination && linkDetails.destination.replace(/^\^/, "");
                    var propertyMap = $.extend({
                        filename: name,
                        contentId: data.ownerId || restObj.ownerId
                    }, linkDetails.params);
                    tinymce.confluence.ImageUtils.insertFromProperties(propertyMap);

                } else {
                    var haveVFM = !!AJS.MacroBrowser.getMacroMetadata('view-file');
                    var contentType = restObj.contentType;
                    var inCloud = AJS.Meta.get("confluence-flavour") !== "VANILLA";
                    var isMP3or4 = contentType && (contentType === "audio/mp3" || contentType === "video/mp4");
                    var isSWF = contentType && contentType === "application/x-shockwave-flash";
                    if (haveVFM && ((inCloud && !isSWF) || (isMP3or4 || restObj.niceType !== "Multimedia"))) {
                        var params = {
                            name: name,
                            page: restObj.parentTitle,
                            space: restObj.space ? restObj.space.key : "",
                            date: restObj.datePath,
                            ownerId: restObj.ownerId
                        };

                        AttachmentsInsertUtils.insertFilePlaceholder(params);
                    } else {
                        this._insertFile(name, data, linkDetails);
                    }
                }
            },

            _insertFile: function(fileName, data, linkDetails) {
                // Other embeddable content, such as a viewfile macro variant
                var macroName;
                switch (data.restObj.niceType) {
                    case 'PDF Document':
                        macroName = "viewpdf";
                        break;
                    case 'Word Document':
                        macroName = "viewdoc";
                        break;
                    case 'Excel Spreadsheet':
                        macroName = "viewxls";
                        break;
                    case 'PowerPoint Presentation':
                        macroName = "viewppt";
                        break;
                    case 'Multimedia':
                        macroName = "multimedia";
                        break;
                }
                var spacePage = linkDetails.destination.substring(0, linkDetails.destination.indexOf("^"));
                var macroParams = {
                    page: spacePage,
                    name: fileName
                };
                MacroJsOverrides.get("viewdoc").beforeParamsRetrieved(macroParams);  // tweak for macro expected format
                // The Office Connector JS should really strip the page param if it is empty, but
                // it doesn't and making a new OC release just for that one line change is too painful to contemplate.
                if (!macroParams.page) {
                    delete macroParams.page;
                }
                var macroRenderRequest = {
                    contentId: AJS.Meta.get('content-id') || "0",
                    macro: {
                        name: macroName,
                        params: macroParams,
                        body: ""
                    }
                };
                tinymce.confluence.MacroUtils.insertMacro(macroRenderRequest);
            }
        };
    }

    return  AutocompleteSettingsMedia;
});

require('confluence/module-exporter').safeRequire('confluence-editor/tinymce3/plugins/autocomplete-media/autocomplete-settings-media');
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-autocomplete-resources-only', location = 'tinymce3/plugins/autocomplete-media/editor_plugin_src.js' */
/**
 * 'Autocomplete confluence media' dropdown appears when you press a '!' character in the editor.
 */
define('confluence-editor/tinymce3/plugins/autocomplete-media/editor_plugin_src', [
    'tinymce',
    'confluence/legacy',
    'confluence-editor/tinymce3/plugins/autocomplete-media/autocomplete-settings-media'
], function(
    tinymce,
    Confluence,
    AutocompleteMedia
) {
    "use strict";

    return {
        init: function (ed) {
            var triggerKey = '!';
            ed.addCommand('mceConfAutocompleteImage', function () {
                Confluence.Editor.Autocompleter.Manager.shortcutFired(triggerKey);
            });
            ed.addShortcut("ctrl+shift+m", ed.getLang("AutoComplete"), "mceConfAutocompleteImage");
            AutocompleteMedia();
        },

        getInfo: function () {
            return {
                longname: 'Auto Complete Media',
                author: 'Atlassian',
                authorurl: 'http://www.atlassian.com',
                version: tinymce.majorVersion + "." + tinymce.minorVersion
            };
        }
    };
});

require('confluence/module-exporter').safeRequire('confluence-editor/tinymce3/plugins/autocomplete-media/editor_plugin_src', function(AutoCompleteMediaPlugin) {
    var tinymce = require('tinymce');
    tinymce.create('tinymce.plugins.AutoCompleteMedia', AutoCompleteMediaPlugin);
    tinymce.PluginManager.add('autocompletemedia', tinymce.plugins.AutoCompleteMedia);
});

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-autocomplete-resources-only', location = 'tinymce3/plugins/autocomplete-media/autocomplete-analytics-media.js' */
/**
 * Analytic events for media-autocomplete
 */
require(["ajs"], function (AJS) {
    "use strict";

    AJS.bind("init.rte", function () {
        AJS.bind("rte-autocomplete-on-show", function (sender, data) {
            if (data.triggerChar === "!") {
                AJS.trigger("analytics", {name: "confluence.editor.autocomplete.trigger", data: {type: "media"}});
            }
        });

        AJS.bind("rte-autocomplete-on-insert", function (sender, data) {
            if (data.triggerChar === "!") {
                _addInsertMediaAnalyticEvent(data.selectedFile);
            }
        });

    });

    AJS.bind("rte-destroyed", function () {
        AJS.unbind("rte-autocomplete-on-insert");
        AJS.unbind("rte-autocomplete-on-show");
    });

    var _addInsertMediaAnalyticEvent = function (selectedFile) {
        if (selectedFile && selectedFile.name) {
            var data = { extension: selectedFile.name.split(".").pop(), type: "media"};
            AJS.trigger("analytics", {name: "confluence.editor.autocomplete.insert", data: data});
        }
    };
});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-autocomplete-resources-only', location = 'tinymce3/plugins/autocomplete-macro/autocomplete-settings-macros.js' */
define('confluence-editor/tinymce3/plugins/autocomplete-macro/autocomplete-settings-macros', [
    'jquery',
    'underscore',
    'ajs',
    'tinymce',
    'confluence/legacy'
], function(
    $,
    _,
    AJS,
    tinymce,
    Confluence
) {

    "use strict";

    function AutoCompleteSettingsMacro() {

        function toggleSpinner(visible) {
            $("#autocomplete-dropdown .top-menu-item").spin(visible);
        }

        function retryLoadMacros() {
            AJS.MacroBrowser.reset();
            AJS.MacroBrowser.preLoadMacro();
        }

        var dropdownSelectionMade = function (autoCompleteControl, options) {
            var macroMetadata = options.presetMacroMetadata;

            autoCompleteControl.replaceWithSelectedSearchText();

            if (!macroMetadata) {
                tinymce.confluence.macrobrowser.macroBrowserToolbarButtonClicked(options);
            } else {
                // only open the macro browser if there are required parameters
                if (AJS.MacroBrowser.hasRequiredParameters(macroMetadata) || !!macroMetadata.alwaysShowConfig) {
                    tinymce.confluence.macrobrowser.macroBrowserToolbarButtonClicked(options);
                } else {
                    AJS.Rte.BookmarkManager.storeBookmark();

                    tinymce.confluence.MacroUtils.insertMacro({
                        contentId: AJS.Meta.get('content-id') || "0",
                        macro: {
                            name: macroMetadata.macroName,
                            body: ""
                        }
                    });
                }
            }
        };

        var makeMacroDropdownItem = function (summary) {
            if (summary.hidden && !AJS.MacroBrowser.isHiddenMacroShown(summary)) {
                return null;    // macros like {viewfile} hidden from the browser should be hidden from the dropdown
            }

            var item = {
                className: "autocomplete-macro-" + summary.macroName,
                callback: function (autoCompleteControl) {
                    dropdownSelectionMade(autoCompleteControl, {
                        ignoreEditorSelection: true,       // the selected text will be the search term, ignore it
                        presetMacroMetadata: summary
                    });
                }
            };

            if (summary.icon) {
                item.name = summary.title;
                item.href = "#";
                item.icon = (summary.icon.relative ? AJS.params.staticResourceUrlPrefix : "") + summary.icon.location;
            } else {
                item.html = Confluence.Editor.Autocompleter.Util.dropdownLink(summary.title);
            }

            return item;
        };

        // Macro settings.
        Confluence.Editor.Autocompleter.Settings["{"] = {

            ch: "{",
            cache: false,
            endChars: ["}", ":", "{"],
            dropDownClassName: "autocomplete-macros",
            dropDownDelay: 0, // No delay needed because there is no AJAX request involved
            selectFirstItem: true,

            getHeaderText: function (autoCompleteControl, value) {
                return "\u041f\u0440\u0435\u0434\u043b\u0430\u0433\u0430\u0435\u043c\u044b\u0435 \u041c\u0430\u043a\u0440\u043e\u0441\u044b";
            },

            getAdditionalLinks: function (autoCompleteControl, value) {
                return [
                    {
                        className: "dropdown-insert-macro",
                        html: Confluence.Editor.Autocompleter.Util.dropdownLink(
                            "\u041e\u0442\u043a\u0440\u044b\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043c\u0430\u043a\u0440\u043e\u0441\u043e\u0432", "dropdown-prevent-highlight", "editor-icon"),
                        callback: function (autoCompleteControl) {
                            var searchText = autoCompleteControl.text();
                            dropdownSelectionMade(autoCompleteControl, { searchText: searchText });
                        }
                    }
                ];
            },

            getDataAndRunCallback: function (autoCompleteControl, val, callback) {

                var promiseMetaData = AJS.MacroBrowser.getMetadataPromise();
                var self = this;
                var args = arguments;

                function populateEmpty(metadataList) {
                    var dropdownItems = [];
                    $("#macro-insert-list li").each(function () {
                        var $li = $(this);
                        var macroMetaData = _.find(metadataList, function (macroMetaData) {
                            return macroMetaData.macroName === $li.attr("data-macro-name");
                        });

                        if (macroMetaData) {
                            var dropdownItem = makeMacroDropdownItem(macroMetaData);
                            dropdownItem && dropdownItems.push(dropdownItem);
                        }
                    });
                    return dropdownItems;
                }

                function populateWithValue(value) {
                    var dropdownItems = [];
                    var summaries = AJS.MacroBrowser.searchSummaries(value, { keywordsField: "keywordsNoDesc" });

                    for (var i = 0, ii = summaries.length; i < ii; i++) {
                        var dropdownItem = makeMacroDropdownItem(summaries[i]);
                        if (dropdownItem && dropdownItems.push(dropdownItem) == autoCompleteControl.maxResults) {
                            break;
                        }
                    }
                    return dropdownItems;
                }

                /**
                 * Will be called when macroBrowser has metadata
                 */
                function populate() {
                    var dropdownItems;
                    if (!val) {
                        dropdownItems = populateEmpty(AJS.MacroBrowser.metadataList);
                    } else {
                        dropdownItems = populateWithValue(val);
                    }

                    toggleSpinner(false);

                    callback([dropdownItems], val);
                }

                function retryLoading(e) {
                    e.preventDefault();
                    e.stopPropagation();

                    AJS.trigger("analytics", {name: "autocomplete-macrobrowser.load-retry"});

                    // retry to fetch the data
                    retryLoadMacros();

                    // call getDataAndRunCallback again with same arguments
                    self.getDataAndRunCallback.apply(self, args);
                }

                // making sure it is only called once
                if (!self.alreadyBinded) {
                    self.alreadyBinded = true;

                    promiseMetaData.always(function () {
                        populate();
                        self.alreadyBinded = false; // if its called again we need to re-attach handlers again to the new promise
                    });

                    promiseMetaData.fail(function () {
                        AJS.trigger("analytics", {name: "autocomplete-macrobrowser.fail-to-load"});

                        AJS.messages.warning("#autocomplete-dropdown ol:nth(1)", {
                            title: "\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0438 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u043c\u0430\u043a\u0440\u043e\u0441\u0430",
                            body: '<p><a id="macro-retry-link" href="#">' + "\u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0435\u0449\u0435 \u0440\u0430\u0437" + '</a></p>'
                        });

                        $("#macro-retry-link").click(retryLoading);

                        // this is where the error message gets populated to
                        $("#autocomplete-dropdown ol:nth(1)").show();
                    });
                }

                if (promiseMetaData.state() === "pending") {
                    callback([], val); //
                    toggleSpinner(true);
                }
            },

            update: function (autoCompleteControl, data) {
                throw new Error("All items in the Macro Autocomplete dropdown must have a callback function");
            }
        };
    }

    return AutoCompleteSettingsMacro;
});

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-autocomplete-resources-only', location = 'tinymce3/plugins/autocomplete-macro/editor_plugin_src.js' */
/**
 * 'Autocomplete confluence macro' dropdown appears when you press a '{' character in the editor.
 */
define('confluence-editor/tinymce3/plugins/autocomplete-macro/editor_plugin_src', [
    'tinymce',
    'confluence-editor/tinymce3/plugins/autocomplete-macro/autocomplete-settings-macros'
], function(
    tinymce,
    AutoCompleteMacro
) {
    "use strict";

    return {
        init : function() {
            AutoCompleteMacro();
        },

        getInfo : function() {
            return {
                longname : 'Auto Complete Macro',
                author : 'Atlassian',
                authorurl : 'http://www.atlassian.com',
                version : tinymce.majorVersion + "." + tinymce.minorVersion
            };
        }
    };
});

require('confluence/module-exporter').safeRequire('confluence-editor/tinymce3/plugins/autocomplete-macro/editor_plugin_src', function(AutoCompleteMacroPlugin) {
    var tinymce = require('tinymce');
    tinymce.create('tinymce.plugins.AutoCompleteMacro', AutoCompleteMacroPlugin);
    tinymce.PluginManager.add('autocompletemacro', tinymce.plugins.AutoCompleteMacro);
});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-autocomplete-resources-only', location = 'tinymce3/plugins/searchreplace/editor_plugin_src.js' */
define('confluence-editor/tinymce3/plugins/searchreplace/editor_plugin_src', [
    'jquery',
    'ajs',
    'confluence/legacy',
    'document',
    'tinymce'
], function(
    $,
    AJS,
    Confluence,
    document,
    tinymce
) {
    "use strict";

    var toolbarId = "searchreplace";

    /** A buffer of key codes pressed while waiting for the search bar to slide out */
    var keycodeBuffer = null;

    /** A flag to protect against successive opening or closing - e.g. fast clicks of button, or double press of ctrl + f. */
    var toolbarStateChanging = false;

    var cancelKeyboardFunction = function(ed, e) {
        e.preventDefault();
        e.stopPropagation();
    };

    /**
     * Buffer any character codes the user is typing but also prevent
     * the event that is instigating them.
     */
    var bufferTextFunction = function(ed, e) {
        cancelKeyboardFunction(ed, e);

        var keyCode = e.which;
        // IE8 doesn't have charCode for keypress event
        if (!keyCode) {
            keyCode = e.charCode ? e.charCode : e.keyCode;
        }

        // Firefox and Opera wrongly raise keypress for control characters
        if (keyCode < 48) {
            return;
        }

        keycodeBuffer.push(keyCode);
    };

    // Handle UTF-16 surrogate pair character codes
    var surrogatePairFixedFromCharCode = function(code) {
        if (code > 0xFFFF) {
            code -= 0x10000;
            return String.fromCharCode(0xD800 + (code >> 10), 0xDC00 +  (code & 0x3FF));
        }
        else {
            return String.fromCharCode(code);
        }
    };

    /**
     * Block keypresses in the editor and buffers them.
     */
    var block = function () {
        var ed = AJS.Rte.getEditor();

        keycodeBuffer = [];

        ed.onKeyDown.add(bufferTextFunction);
        ed.onKeyPress.add(cancelKeyboardFunction);
        ed.onKeyUp.add(cancelKeyboardFunction);
    };

    /**
     * Activate or deactivate the toolbar button for find and replace.
     * There is no visual indication of the button being active or not,
     * it's click handler is simply blocked.
     *
     * This is used to prevent multiple clicks during the delayed search bar
     * open or hide animation.
     *
     * @param active if true then the button should be active
     */
    var changeButtonActiveState = function(active) {
        var buttonLink = $("#rte-button-searchreplace a");

        if (buttonLink.length) {
            if (active) {
                buttonLink.unbind("click", false);
            } else {
                buttonLink.bind("click", false);
            }
        }
    };

    /**
     * Unblock the keyboard events and return any buffered text.
     */
    var unblock = function () {
        var ed = AJS.Rte.getEditor();
        ed.onKeyDown.remove(bufferTextFunction);
        ed.onKeyPress.remove(cancelKeyboardFunction);
        ed.onKeyUp.remove(cancelKeyboardFunction);

        var bufferedText = "";
        for (var i = 0; i < keycodeBuffer.length; i++) {
            bufferedText += surrogatePairFixedFromCharCode(keycodeBuffer[i]);
        }

        return bufferedText.toLowerCase();
    };

    var toggleToolbar = function() {

        if (toolbarStateChanging) {
            return;
        }

        toolbarStateChanging = true;

        var button = $("#rte-button-searchreplace");
        var enable = !button.hasClass("active");
        var body = $("body");
        var animate = ! body.hasClass("no-tools") || body.hasClass("no-tools-toolbars-visible");

        if (enable) {
            button.addClass("active");

            if (!Confluence.Editor.searchManager) {
                Confluence.Editor.searchManager = new Confluence.Editor.SearchManager(toolbarId);
            }

            $(document).trigger("createContextToolbarRow.Toolbar", {
                id: toolbarId,
                buttons: Confluence.Editor.searchToolbar.Buttons,
                topToolbar: true,
                editorAdjacent: true,
                animate: animate,
                onVisible: function() {
                    var buffered = unblock();
                    // set any buffered text
                    Confluence.Editor.searchManager.onVisible(buffered);
                    changeButtonActiveState(true);
                    toolbarStateChanging = false;

                    // To aid testing, you can check for this in tests after activating the toolbar.
                    // This needs to live here since event blocking means that if it isn't the very
                    // last thing done then events can be lost (and async tests can fail).
                    Confluence.Editor.searchManager.initialised = true;
                }})
            .trigger("enableContextToolbarRow.Toolbar");
            block();
            Confluence.Editor.searchManager.init();

            changeButtonActiveState(false);
        } else {
            button.removeClass("active");

            Confluence.Editor.searchManager.onHide();

            $(document).trigger("removeContextToolbarRow.Toolbar", {
                id: toolbarId,
                animate: animate,
                onHide: function() {
                    $(document).trigger("contextToolbarRowRemoved.Toolbar");
                    changeButtonActiveState(true);
                    toolbarStateChanging = false;
                    Confluence.Editor.searchManager.initialised = false;
                }
            });
            changeButtonActiveState(false);

            // IE and Webkit need you to focus on the iframe first and then the editor. (Firefox won't work if you do this.)
            if (!tinymce.isGecko) {
                frames["wysiwygTextarea_ifr"].focus();
            }
            tinymce.activeEditor.focus();
        }
    };

    return {
        init : function(ed, url) {

            ed.addCommand('mceSearchReplaceToolbar', function() {
                toggleToolbar();
            });

            ed.addCommand('mceConfSearch', function(ui, parameters) {
                if (!Confluence.Editor.searchManager) {
                    return;
                }

                parameters = parameters || {};

                if (parameters.backwards
                        && !tinymce.activeEditor.plugins.customtoolbar
                                .isToolbarButtonEnabled("search-toolbar-find-previous-button")) {
                    Confluence.Editor.searchManager.focus();
                    return;
                }

                if (!parameters.backwards
                        && !tinymce.activeEditor.plugins.customtoolbar
                                .isToolbarButtonEnabled("search-toolbar-find-next-button")) {
                    Confluence.Editor.searchManager.focus();
                    return;
                }

                Confluence.Editor.searchManager.find(parameters.backwards, parameters.onFound, parameters.onNotFound);
            });

            ed.addCommand('mceConfReplace', function(ui, parameters) {
                if (!Confluence.Editor.searchManager) {
                    return;
                }

                parameters = parameters || {};

                if (!tinymce.activeEditor.plugins.customtoolbar
                                .isToolbarButtonEnabled("search-toolbar-replace-button")) {
                    parameters.onInactive && parameters.onInactive();
                } else {
                    Confluence.Editor.searchManager.replace(parameters.onFound, parameters.onNotFound);
                }

            });

            ed.addCommand('mceConfReplaceAll', function(ui, parameters) {
                if (!Confluence.Editor.searchManager) {
                    return;
                }

                parameters = parameters || {};

                if (!tinymce.activeEditor.plugins.customtoolbar
                                .isToolbarButtonEnabled("search-toolbar-replaceall-button")) {
                    return;
                }

                Confluence.Editor.searchManager.replaceAll(parameters.onReplaced, parameters.onNotReplaced);
            });

            ed.addCommand('mceConfSearchClose', function(ui, parameters) {
                if (!Confluence.Editor.searchManager) {
                    return;
                }

                //toogle toolbar to close it.
                ed.execCommand("mceSearchReplaceToolbar", false, null);
            });

            // Register buttons
            ed.addButton('searchreplace', {
                title : 'searchreplace.search_desc',
                cmd : 'mceSearchReplaceToolbar'
            });

            /**
             * The first press of ctrl + f should display the toolbar. Subsequent presses should focus the find box.
             */
            if (!tinymce.isIE8) {
                ed.addShortcut('ctrl+f', 'searchreplace.search_desc', function() {
                    if (Confluence.Editor.searchManager && Confluence.Editor.searchManager.isVisible()) {
                        Confluence.Editor.searchManager.focus();
                    } else {
                        ed.execCommand("mceSearchReplaceToolbar", false, false, {skip_undo : true});
                    }
                });
            }
        },

        getInfo : function() {
            return {
                longname : 'Search/Replace',
                author : 'Atlassian',
                authorurl : 'http://www.atlassian.com',
                infourl : 'http://www.atlassian.com',
                version : tinymce.majorVersion + "." + tinymce.minorVersion
            };
        }
    };
});

require('confluence/module-exporter')
        .safeRequire('confluence-editor/tinymce3/plugins/searchreplace/editor_plugin_src', function(AtlassianSearchReplacePlugin) {
            var tinymce = require('tinymce');

            tinymce.create('tinymce.plugins.AtlassianSearchReplacePlugin', AtlassianSearchReplacePlugin);

            // Register plugin
            tinymce.PluginManager.add('searchreplace', tinymce.plugins.AtlassianSearchReplacePlugin);
        });
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-autocomplete-resources-only', location = 'tinymce3/plugins/searchreplace/searchreplace.js' */
define('confluence-editor/tinymce3/plugins/searchreplace/searchreplace', [
    'confluence/legacy',
    'jquery',
    'tinymce',
    'confluence/api/browser',
    'confluence-editor/tinymce3/plugins/searchreplace/search-ms-edge'
], function(
    Confluence,
    $,
    tinymce,
    Browser,
    EdgeSearch
) {
    "use strict";

    var browser = Browser(window.navigator.userAgent);

    // Constants
    var MARK_START = "<mark data-searching class=\"find-current\">";
    var MARK_END = "</mark>";

    /**
     * Responsible for driving the logic of searching.
     *
     * @param t
     *            the toolbar id
     */
    var SearchManager = function(t) {

        var toolbarId = t;
        var ui = null;
        var markManager = null;
        var searchImpl = null;
        var savedFindText = null;
        var savedReplaceText = null;

        var clearSavedValues = function() {
            savedFindText = null;
            savedReplaceText = null;
        };

        /**
         * CONFDEV-6638
         * Modify the supplied XML formatted String so that any marks from a find are removed.
         * This has an implication in that the bookmark could become invalidated if it was
         * marking within the removed mark. Not much that can be done about that.
         */
        var removeMarksFromUndoLevel = function(undoManager, level) {
            level.content = level.content.replace(new RegExp(MARK_START, 'g'), "");
            level.content = level.content.replace(new RegExp(MARK_END, 'g'), "");
        };

        /* ------------------------- public methods ------------------------- */
        var self = {};

        self.initialised = false;

        /**
         * Perform a find.
         *
         * @param backwards if true then search backwards
         * @param onFound the function to run after a match
         * @param onNotFound the function to run if no match
         */
        self.find = function(backwards, onFound, onNotFound) {
            var text = ui.getFindInput().val();
            var findResult = searchImpl.findText(text, true, backwards);

            if (findResult && onFound) {
                onFound();
            } else if (!findResult && onNotFound) {
                onNotFound();
            }
        };

        /**
         * Apply a click of the replace button, getting the replace text from
         * the toolbar.
         *
         * @param onFound the function to run when the replace completes and successfully finds a new match
         * @param onNotFound the function to run when the replace fails to find a new match
         */
        self.replace = function(onFound, onNotFound) {
            var findInput = ui.getFindInput();
            var replaceInput = ui.getReplaceInput();
            var replacementText = "";
            if (replaceInput) {
                replacementText = replaceInput.val();
            }

            var foundNext = searchImpl.replaceText(findInput.val(), replacementText, true);
            if (foundNext && onFound) {
                onFound();
            } else if (!foundNext && onNotFound) {
                onNotFound();
            }
        };

        /**
         * Apply a click of the replace all button, getting the replace text
         * from the toolbar
         *
         * @param focusAfter the function to set focus after the find
         */
        self.replaceAll = function(onReplaced, onNotReplaced) {
            var findInput = ui.getFindInput();
            var replaceInput = ui.getReplaceInput();
            var replacementText = "";
            if (replaceInput) {
                replacementText = replaceInput.val();
            }

            var replaced = searchImpl.replaceAll(findInput.val(), replacementText);
            if (replaced && onReplaced) {
                onReplaced();
            } else if (!replaced && onNotReplaced) {
                onNotReplaced();
            }
        };

        /**
         * Typically called when a find operation was required (perhaps via
         * keyboard shortcut) but the search manager is not in a state to
         * perform it. Respond by moving focus to the default field in the
         * searchbar.
         */
        self.focus = function() {
            ui.focusFindTextBox();
        };

        self.isVisible = function() {
            return ui != null;
        };

        /**
         * Called when the toolbar is to be displayed
         *
         */
        self.init = function() {
            ui = SearchManager.UI(toolbarId, savedFindText, savedReplaceText);
            markManager = new SearchManager.MarkManager();
            markManager.addListener(ui);

            searchImpl = null;
            if (tinymce.isIE) {
                searchImpl = new SearchManager.implIE(ui);
            } else {
                searchImpl = new SearchManager.impl(ui,markManager);
            }

            tinymce.activeEditor.undoManager.onAdd.add(removeMarksFromUndoLevel);
        };

        /**
         * When the search toolbar is initialising the keyboard is blocked and any keystrokes buffered.
         * This method is provided so that any buffered characters can be appended after initialisation.
         *
         * @param text any text to be appended to the current value of the findText. May be null.
         */
        self.onVisible = function(text) {
            if (text != null && text.length > 0) {
                var input = ui.getFindInput();
                var currentVal = input.val();
                input.val(currentVal + text);
            }

            ui.onVisible();
        };

        /**
         * Called when the searchbar is hidden.
         */
        self.onHide = function() {
            // save values
            savedFindText = ui.getFindInput().val();
            savedReplaceText = ui.getReplaceInput().val();

            searchImpl.destroy();
            searchImpl = null;

            ui.destroy();
            ui = null;
            markManager.destroy();
            markManager = null;

            tinymce.activeEditor.undoManager.onAdd.remove(removeMarksFromUndoLevel);
        };

        /**
         * Expose functions for testing
         */
        self._clearSavedValues = clearSavedValues;

        return self;
    };

    SearchManager.utils = {

        /**
         * A utility function for IE and Firefox specifically that will move the cursor to the
         * end of the supplied textbox control.
         *
         * Webkit has a more sensible behaviour on focus so doesn't need this.
         */
        moveCursorToEnd: function(textbox) {
            if (tinymce.isIE) {
                var range = textbox.createTextRange();
                range.execCommand("SelectAll");
                range.move("textedit");
                range.select();
            } else if (tinymce.isGecko) {
                var length = $(textbox).val().length;
                textbox.setSelectionRange(length, length);
            }
        },

        /**
         * A utility to abstract IE createText range, more specifically since IE11 dropped support for document.selection
         *
         * @param {HTMLobject} doc - reference to document
         * @param {Object} ed - reference to the editor
         *
         * @return {Range|TextRange} - Returns a text range object
         */
        createTextRange: function(doc, ed) {

            // CONF-31610 - IE11 has deprecated support for 'selection'
            // http://msdn.microsoft.com/en-us/library/ie/ms535869(v=vs.85).aspx
            return doc.selection ?
                    doc.selection.createRange() :
                    ed.getBody().createTextRange();
        }
    };

    /* --- The standard (Webkit/Gecko) find and replace implementation. ---- */
    SearchManager.impl = function(uiManager, mManager) {

        var encodingWriter = new tinymce.html.Writer();
        var markManager = mManager;
        var ui = uiManager;
        // Indicate the position where the current selection begins.
        // Initially, no selection or found keyword so the value is -1
        var searchFrom = -1;

        /**
         * Find and highlight the supplied text within the editor.
         *
         * If the cursor is not positioned in the editor then find will start at
         * the beginning of the document. Otherwise the find will be from the
         * current point in the document.
         *
         * @param text
         *            the String to find
         * @param wrap
         *            true indicates the find should wrap
         * @param backwards
         *            true indicates the search should be backwards.
         * @return true if there was a match or false if there was none.
         */
        var findText = function(text, wrap, backwards) {
            if (!text) {
                return false;
            }

            var ed = tinymce.activeEditor;
            var se = ed.selection;
            var w = ed.getWin();

            if (markManager.isCursorAtCurrentMark()) {
                // select the current mark and then collapse so that we can
                // place the cursor before or
                // after depending on search direction.
                se = markManager.selectCurrentMark();
            }

            // if searching backwards then collapse to the start to avoid
            // finding the same match again
            // if forwards then collapse to the end for the same reason
            if (!se.isCollapsed()) {
                se.collapse(backwards);
            }

            function onSuccessfulFind() {
                markManager.markCurrentlySelectedRange();
                return true;
            }

            function onUnsuccessfulFind() {
                markManager.removeCurrentMark(true);

                // collapse selection from a previous find to avoid the user
                // confusing the visual indication of selection with a find result
                if (!tinymce.activeEditor.selection.isCollapsed()) {
                    tinymce.activeEditor.selection.collapse();
                }

                return false;
            }

            if (tinymce.isGecko) {
                // Gecko doesn't respect the wrap parameter. Need to manually
                // implement wrapping.
                if (w.find(text, false, backwards)) {
                    return onSuccessfulFind();
                } else if (wrap) {
                    se.select(ed.getBody(), false);
                    se.collapse(!backwards);
                    return findText(text, false, backwards);
                } else {
                    return onUnsuccessfulFind();
                }
            } else if (browser.isMSEdge()) {
                // In MS Edge createTextRange() is used on document body
                // And window.find() has not been supported yet
                var result = EdgeSearch.search(se, text, searchFrom, ed.getBody(), backwards);
                searchFrom = result[1];
                if (result[0]) {
                    return onSuccessfulFind();
                }
            } else if (w.find(text, false, backwards, true, false, false, false)) {
                return onSuccessfulFind();
            } else {
                return onUnsuccessfulFind();
            }
        };

        /**
         * Encapsulates the logic involved in a replace operation.
         *
         * If the 'find' text is not currently selected then a find will be
         * performed and no replacement will take place. (Hopefully the UI
         * actually prevents this case but handle it for back up.) If the 'find'
         * text is currently selected then a replace will be performed followed
         * by another 'find'.
         *
         * @param wrap
         *            a flag indicating whether the implicit find operation
         *            should wrap around.
         * @return true if the implicit find operation performed finds a match
         */
        var replaceText = function(fText, replacementText, wrap) {
            if (!markManager.hasCurrentMark()) {
                return findText(fText, wrap);
            }

            var replacementNode = markManager.replaceCurrentMark(replacementText);

            if (replacementNode) {
                tinymce.activeEditor.selection.select(replacementNode);
            }
            return findText(fText, wrap);
        };

        /**
         * Simply replace any currently selected text with the new value.
         */
        var replaceSelectedText = function(replaceText) {
            var ed = tinymce.activeEditor;
            encodingWriter.text(replaceText);

            ed.selection.setContent(encodingWriter.getContent(), {format : 'raw'});
            encodingWriter.reset();

            // move the cursor to just beyond the current selection (so as not
            // to apply again to the replacement text).
            ed.selection.collapse(true); // collapse selection to end
        };

        /**
         * @return the number of replacements made
         */
        var replaceAll = function(fText, replacementText) {
            var ed = tinymce.activeEditor;
            var se = ed.selection;
            var w = ed.getWin();
            var undo = ed.undoManager;

            markManager.removeCurrentMark(false);

            //set selection to start of document
            ed.execCommand('selectAll');
            ed.selection.collapse(true);

            var replacedCount = 0;

            if (browser.isMSEdge()) {
                var startFrom = -1;
                while (true) {
                    var result = EdgeSearch.search(se, fText, startFrom, ed.getBody(), false);
                    var found = result[0];
                    if (found) {
                        startFrom = result[1];
                        replaceSelectedText(replacementText);
                        replacedCount++;
                    } else {
                        break;
                    }
                }
            } else {
                while (w.find(fText, false, false, false, false, false, false)) {
                    replaceSelectedText(replacementText);
                    replacedCount++;
                }
            }
            ed.undoManager.add();

            if (replacedCount === 0) {
                Confluence.EditorNotification.notify("info", ed.getLang("searchreplace_dlg.notfound"));
            } else if (replacedCount === 1) {
                Confluence.EditorNotification.notify("success", ed.getLang("searchreplace_dlg.allreplacedsingular"));
            } else if (replacedCount > 1) {
                var msg = ed.getLang("searchreplace_dlg.allreplacedplural");
                Confluence.EditorNotification.notify("success", msg.replace("{0}", replacedCount));
            }

            return replacedCount;
        };

        var destroy = function() {
            ui = null;
            markManager = null;
            encodingWriter = null;
        };

        var impl = {};

        impl.findText = findText;
        impl.replaceText = replaceText;
        impl.replaceAll = replaceAll;
        impl.destroy = destroy;

        return impl;
    };

    /* --------- The IE specific find and replace implementation. ---------- */
    SearchManager.implIE = function(uiManager) {
        var self = {};

        var ui = uiManager;
        var lastMatchTextRange = null;
        var encodingWriter = new tinymce.html.Writer();
        var createTextRange = SearchManager.utils.createTextRange;

        /**
         * Find and highlight the supplied text within the editor.
         *
         * If no previous find has been performed then find will start at the
         * beginning of the document. Otherwise the find will be from the
         * previously highlighted match. IE has no support for searching from
         * you current cursor position in the document. This is due to the bug
         * http://www.tinymce.com/develop/bugtracker_view.php?id=4215
         *
         * @param text
         *            the String to find
         * @param wrap
         *            true indicates the find should wrap
         * @param backwards
         *            true indicates the search should be backwards.
         * @return true if there was a match or false if there was none.
         */
        var findText = function(text, wrap, backwards) {
            if (!text) {
                return false;
            }

            var ed = tinymce.activeEditor;
            var doc = ed.getDoc();

            var textRange = self.storedRange = self.storedRange || doc.body.createTextRange();

            ed.focus();
            if (lastMatchTextRange) {
                // select so that the next find will be from the previous match
                // location (instead of the top of the document)
                lastMatchTextRange.select();
            }

            ed.selection.collapse(!backwards);

            clearMarks();

            // backwards searching is flakey on IE. Needs some special lovin'
            if (backwards && lastMatchTextRange) {
                // need to manually expand the TextRange to the start of the document
                var startOfDocTextRange = doc.body.createTextRange();
                startOfDocTextRange.moveToElementText($("p:first", ed.getBody())[0]);

                textRange.setEndPoint("StartToStart", startOfDocTextRange);

                // if the previous match was for the a lead part of a word or sentence then
                // lastMatchTextRange will contain the trailing part. In this scenario trimming
                // a word is not a guarantee of removing enough.
                var lastMatchText = lastMatchTextRange.text;
                if (lastMatchText.length) {
                    lastMatchText = lastMatchText.replace(/s+$/, "");

                    if (lastMatchText.length) {
                        textRange.moveEnd("character", -lastMatchText.length);
                    }
                }

                var rangeLength = textRange.text.length;
                textRange.moveEnd("word", -1);

                // if the last match had multiple markup around it e.g. it was bold AND italic then the
                // text range gets pretty corrupt and ends with heavily repeating tags.
                // You can detect this scenario by checking whether the previous move had any effect. If it didn't then
                // a second attempt at removing a character will have effect.
                if (textRange.text.length >= rangeLength) {
                    textRange.moveEnd("character", -1);
                }

                textRange.select();
                textRange.collapse(false);
            }

            lastMatchTextRange = null;

            if (textRange.findText(text, backwards ? -1 : 1, 0)) {
                textRange.scrollIntoView();
                textRange = mark(textRange);
                textRange.select();
                lastMatchTextRange = textRange;
                return true;
            } else if (wrap) {
                ed.selection.select(tinymce.activeEditor.getBody(), true);
                ed.selection.collapse(!backwards);
                return findText(text, false, backwards);
            } else {
                self.storedRange = null;
            }
        };

        /**
         * When a mark has been made in the editor listen for any changes to the
         * editor content and remove the mark.
         *
         * @param ed
         * @param cm
         *            the command that caused the event
         * @param e
         */
        var contentChangeListener = function(ed, cm, e) {
            clearMarks();
        };

        /**
         * Register Listeners to handle the clean up of marks a necessary
         */
        var registerMarkCleanUp = function() {
            var ed = tinymce.activeEditor;
            ed.onChange.add(contentChangeListener);
            ed.onBeforeSetContent.add(contentChangeListener);
        };

        /**
         * Undo any registration performed by registerMarkCleanUp. Typically
         * because there are no longer any marks in the content.
         */
        var unregisterMarkCleanUp = function() {
            var ed = tinymce.activeEditor;
            ed.onChange.remove(contentChangeListener);
            ed.onBeforeSetContent.remove(contentChangeListener);
        };

        /**
         * Add a mark around the entire textRange supplied
         *
         * @return the marked TextRange.
         */
        var mark = function(textRange) {
            var foundHtml = textRange.htmlText;
            textRange.pasteHTML(MARK_START + foundHtml + MARK_END);
            ui.marked();
            registerMarkCleanUp();
            return textRange;
        };

        var clearMarks = function() {
            unregisterMarkCleanUp();
            var ed = tinymce.activeEditor;

            var $marks = $("mark", ed.getDoc());

            if ($marks.length) {
                // is current selection inside a mark
                var cursorInMark = false;
                var container = ed.selection.getRng(true).commonAncestorContainer;

                var $container = $(container).closest("mark");
                if ($container.length) {
                    cursorInMark = true;
                }

                $marks.each(function(index, markElement) {
                    var $markElement = $(markElement);
                    $markElement.contents().each(function(index, content) {
                        $markElement.before(content);
                    });
                }).remove();

                // if IE and the cursor (selection) was in the mark, and return was pressed
                // then a yellow span will be surrounding the text being entered.
                // This fix is a little destructive in that you might be continuing a bold
                // word and you will lose that format.
                if (cursorInMark) {
                    ed.execCommand("RemoveFormat");
                }
            }

            // raise this regardless of whether a mark was removed by us
            // it could be that a block of content (e.g. a table) which contained the
            // mark was already removed and is the cause of this call.
            ui.markRemoved();
        };

        /**
         * Encapsulates the logic involved in a replace operation.
         *
         * If the 'find' text is not currently selected then a find will be
         * performed and no replacement will take place. (Hopefully the UI
         * actually prevents this case but handle it for back up.) If the 'find'
         * text is currently selected then a replace will be performed followed
         * by another 'find'.
         *
         * @param wrap
         *            a flag indicating whether the implicit find operation
         *            should wrap around.
         * @return true if the implicit find operation performed finds a match
         */
        var replaceText = function(fText, replacementText, wrap) {
            var ed = tinymce.activeEditor;

            if (lastMatchTextRange) {
                var textNode = ed.getDoc().createTextNode(replacementText);
                var $mark = $("mark", ed.getDoc());

                // remove the mark before we record the new undo level
                $mark.parent()[0].replaceChild(textNode, $mark[0]);
                ed.undoManager.add();

                // re-instate a mark around the replaced text put the mark back since the next find needs it to know where to
                // apply from
                var mark = ed.getDoc().createElement("mark");
                mark.setAttribute("class", "current");
                mark.dataset.searching = true;
                textNode.parentNode.insertBefore(mark, textNode);
                mark.appendChild(ed.getDoc().createTextNode(replacementText));
                mark.parentNode.removeChild(textNode);
            }

            return findText(fText, wrap);
        };


        /**
         * @return the number of replacements made
         */
        var replaceAll = function(fText, replacementText) {
            var ed = tinymce.activeEditor;
            var se = ed.selection;
            var w = ed.getWin();
            var undo = ed.undoManager;
            var doc = ed.getDoc();

            clearMarks();
            // set selection to start of document
            se.select(ed.getBody(), false);
            se.collapse(true);

            ed.focus();

            var r = createTextRange(doc, ed);

            var replacedCount = 0;

            while (r.findText(fText, 1, 0)) {
                r.scrollIntoView();
                r.select();

                encodingWriter.text(replacementText);
                ed.selection.setContent(encodingWriter.getContent(), {format : 'raw'});
                encodingWriter.reset();
                replacedCount++;

                // set replacementText as the basis for the next find to avoid
                // finding the same thing again when the replace text contains
                // the find term.
                r.moveStart("character", replacementText.length);
            }

            undo.add();

            if (replacedCount == 0) {
                Confluence.EditorNotification.notify("info", ed.getLang("searchreplace_dlg.notfound"));
            } else if (replacedCount == 1) {
                Confluence.EditorNotification.notify("success", ed.getLang("searchreplace_dlg.allreplacedsingular"));
            } else if (replacedCount > 1) {
                var msg = ed.getLang("searchreplace_dlg.allreplacedplural");
                Confluence.EditorNotification.notify("success", msg.replace("{0}", replacedCount));
            }

            return replacedCount;
        };

        var removeMarkOnSaveListener = function(ed, o) {
            clearMarks();
        };

        var init = function() {
            tinymce.activeEditor.onBeforeGetContent.add(removeMarkOnSaveListener);
        };

        var destroy = function() {
            tinymce.activeEditor.onBeforeGetContent.remove(removeMarkOnSaveListener);
            clearMarks();
            ui = null;
            lastMatchTextRange = null;
            encodingWriter = null;
        };

        self.findText = findText;
        self.replaceText = replaceText;
        self.replaceAll = replaceAll;
        self.destroy = destroy;

        init();

        return self;
    };

    /* --------------------------- The UI Object --------------------------- */

    /**
     * Responsible for the UI components and functionality of the SearchManager
     *
     * @param toolbarId
     *            the dom id for the toolbar
     * @param initialFindText
     *            any initial text to be populated in the find text box
     */
    SearchManager.UI = function(toolbarId, initialFindText, initialReplaceText) {

        var toolbarDom = null;
        var moveCursorToEnd = SearchManager.utils.moveCursorToEnd;

        // In unit testing the customtoolbar plugin doesn't necessarily exist
        if (tinymce.activeEditor && tinymce.activeEditor.plugins && tinymce.activeEditor.plugins.customtoolbar) {
            toolbarDom = tinymce.activeEditor.plugins.customtoolbar.getToolbarRow(toolbarId);
        }

        /**
         * @return the input field as a jQuery wrapped object.
         */
        var getFindInput = function() {
            var input = $(".toolbar-find-input", toolbarDom);
            if (!input.length) {
                return null;
            }

            return input;
        };

        var focusFindTextBox = function() {
            top.focus(); // required or else it will only work for button
            // presses (and not when activated with ctrl + F or
            // enter)
            getFindInput().focus();
        };

        /**
         * @return the input field as a jQuery wrapped object.
         */
        var getReplaceInput = function() {
            var input = $(".toolbar-replace-input", toolbarDom);
            if (!input.length) {
                return null;
            }

            return input;
        };

        /**
         * The function called when events that could affect the state of the
         * find button occur
         */
        var findButtonListener = function(event) {
            if (event.type === "input" || event.type === "propertychange") {
                var input = getFindInput();
                var enabled = (input != null) && (input.val().length > 0);
                toggleFindOperation(enabled);
                toggleDefaultButtonHighlight(enabled);
            }
        };

        /**
         * The function called when events that could affect the state of the
         * 'replace all' button occur
         */
        var replaceAllButtonListener = function(event) {
            var findInput = getFindInput();
            toggleReplaceAllOperation(findInput && findInput.val());
        };

        var bindListeners = function() {
            function bindInputChange(control, listener) {
                if (!control) {
                    return;
                }

                // IE9 requires attachEvent for binding the propertychange event
                if (tinymce.isIE9) {
                    control[0].attachEvent("onpropertychange", listener);
                } else {
                    var eventName = tinymce.isIE8 ? "propertychange" : "input";
                    control.bind(eventName, listener);
                }
            }

            // set focus in the find text box
            var findInput = getFindInput();
            bindInputChange(findInput, findButtonListener);
            bindInputChange(findInput, replaceAllButtonListener);

            $(toolbarDom).focusin(function(e) {
                toggleDefaultButtonHighlight(true);
            }).focusout(function(e) {
                toggleDefaultButtonHighlight(false);
            });

            // hiding then reshowing the searchbar does not cause a focusin on
            // the toolbar
            // but we automatically focus on the find input so use this event as
            // back up.
            findInput.focus(function(e) {
                toggleDefaultButtonHighlight(true);
            });
        };

        /**
         * @param enabled
         *            if true then enable the find button
         */
        var toggleFindOperation = function(enabled) {
            if (enabled) {
                tinymce.activeEditor.plugins.customtoolbar.enableToolbarButton("search-toolbar-find-next-button");
                tinymce.activeEditor.plugins.customtoolbar.enableToolbarButton("search-toolbar-find-previous-button");
            } else {
                tinymce.activeEditor.plugins.customtoolbar.disableToolbarButton("search-toolbar-find-next-button");
                tinymce.activeEditor.plugins.customtoolbar.disableToolbarButton("search-toolbar-find-previous-button");
            }
        };

        /**
         * Toggle whether the default search button should be highlighted or
         * not.
         */
        var toggleDefaultButtonHighlight = function(enable) {
            var findInput = getFindInput();
            getFindNextButton().toggleClass("default-action", enable && findInput.val().length > 0);
        };

        /**
         * @return the replace button as a jQuery wrapped object.
         */
        var getFindNextButton = function() {
            var buttonEl = $(".search-toolbar-find-next-button", toolbarDom).closest(".aui-button");
            if (!buttonEl.length) {
                return null;
            }

            return buttonEl;
        };

        /**
         * Called by the MarkManager when a mark is removed from the editor.
         * This method responds by disabling the replace button if it is active.
         */
        var markRemoved = function() {
            toggleReplaceOperation(false);
        };

        /**
         * Called by the MarkManager when a mark is made in the editor. This
         * method responds by activating the replace button.
         */
        var marked = function() {
            toggleReplaceOperation(true);
        };

        /**
         * @param enabled
         *            if true then enable the replace button and shortcut;
         *            otherwise disable
         */
        var toggleReplaceOperation = function(enabled) {
            var toolbar = tinymce.activeEditor.plugins.customtoolbar;
            var buttonClass = "search-toolbar-replace-button";

            if (enabled) {
                toolbar.enableToolbarButton(buttonClass);
            } else {
                toolbar.disableToolbarButton(buttonClass);
            }
        };

        /**
         * @param enabled
         *            if true then enable the replace all button and shortcut;
         *            otherwise disable
         */
        var toggleReplaceAllOperation = function(enabled) {
            var toolbar = tinymce.activeEditor.plugins.customtoolbar;
            var buttonClass = "search-toolbar-replaceall-button";

            if (enabled) {
                toolbar.enableToolbarButton(buttonClass);
            } else {
                toolbar.disableToolbarButton(buttonClass);
            }
        };

        /**
         * Initialise the UI parts.
         */
        var init = function(findText, replaceText) {
            var findInput = getFindInput();
            var enableButtons = false;
            if (findText && findText.length) {
                findInput.val(findText);
                enableButtons = true;
            }

            if (replaceText && replaceText.length) {
                var replaceInput = getReplaceInput();
                replaceInput.val(replaceText);
            }

            bindListeners();

            toggleFindOperation(enableButtons);
            toggleReplaceAllOperation(enableButtons);
            // replace always disabled on init since there will be no marks in
            // the document (closing the searchbar removes any marks).
            toggleReplaceOperation(false);
        };

        var onVisible = function() {
            var findInput = getFindInput();
            findInput.focus();

            if (findInput.val().length > 0) {
                moveCursorToEnd(findInput[0]);
                toggleFindOperation(true);
                toggleReplaceAllOperation(true);
            }
        };

        /**
         * Called when the UI (search bar) has been closed and should unbind any
         * listeners that are still attached.
         */
        var destroy = function() {
            // nothing doing
        };

        /*
         * ---- Public methods (for the SearchManager instance) ----
         */
        var SearchManagerUI = {};

        SearchManagerUI.getFindInput = getFindInput;
        SearchManagerUI.getReplaceInput = getReplaceInput;
        SearchManagerUI.focusFindTextBox = focusFindTextBox;
        SearchManagerUI.onVisible = onVisible;
        SearchManagerUI.destroy = destroy;

        /*
         * ----------------------- MarkManager Listener methods ----------------------
         */
        SearchManagerUI.marked = marked;
        SearchManagerUI.markRemoved = markRemoved;

        /*
         * ------------------------ initialise the UI object -------------------------
         */

        init(initialFindText, initialReplaceText);
        return SearchManagerUI;
    };

    /**
     * Manage the marking (and removal of marks) within the editor contents.
     *
     * Only one mark is possible at a time and this manager will ensure that
     * this contract is maintained.
     *
     * A mark will be removed as soon as any change (onChange) occurs within the
     * editor.
     *
     */
    SearchManager.MarkManager = function() {

        /** jQuery wrapped current mark element. There may be multiple mark elements within this jQuery object */
        var currentMark = null;
        var encodingWriter = new tinymce.html.Writer();

        /**
         * If unable to mark the last match then currentMark will be null but this field will record the text
         * matched so that we can check Editor selection is still a match.
         */
        var unMarkableSearchTerm = null;

        var listeners = [];

        /**
         * When a mark has been made in the editor listen for any changes to the
         * editor content and remove the mark.
         *
         * @param ed
         * @param cm
         *            the command that caused the event
         * @param e
         */
        var contentChangeListener = function(ed, cm, e) {
            // A return keypress in a mark will split the mark into
            // two even before this listener gets called. So remove all
            // marks to cover the case where multiple marks have been
            // created.
            removeAllMarks();
        };

        /**
         * Add a listener to be called when a mark is removed.
         *
         * @param listener
         *            the listener which should implement the functions
         *            markRemoved() and marked().
         */
        var addListener = function(listener) {
            listeners.push(listener);
        };

        /**
         * Select the current mark in the Editor if there is one. Otherwise
         * nothing will be done.
         *
         * @return the editor selection if there was a mark, otherwise null.
         */
        var selectCurrentMark = function() {
            if (!currentMark) {
                return null;
            }

            var ed = tinymce.activeEditor;

            ed.selection.select(currentMark[0]);
            return ed.selection;
        };

        /**
         * Mark the currently selected range in the Editor.
         */
        var markCurrentlySelectedRange = function() {
            var ed = tinymce.activeEditor;

            if (currentMark) {
                // store and re set the find result selection since
                // removing the mark can lose the selection in some
                // browsers in some cases
                var bookmark = ed.selection.getBookmark();
                removeCurrentMark(false);
                ed.selection.moveToBookmark(bookmark);
            }

            unMarkableSearchTerm = null;

            var range = ed.selection.getRng(true);

            currentMark = $(MARK_START + MARK_END, ed.getDoc());

            // A find result can encompass only part of a non text node. e.g. in the term ban<b>ana</b>
            // if the find matched the text 'banan' then you are unable to wrap this in a single
            // <mark> element. See http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-Surrounding.
            try {
                range.surroundContents(currentMark[0]);
                registerMarkCleanUp(false);
            } catch (err) {
                if (err.code == 1) {
                    // the match will be selected, so we will put the MarkManager into a
                    // mode where it knows the currentMark is actually just a selection
                    // matching a particular search term. i.e. no explicit <mark>
                    // can be used in this scenario.
                    unMarkableSearchTerm = range.toString();
                    currentMark = null;
                    registerMarkCleanUp(true);
                }
            }

            $.each(listeners, function(index, listener) {
                listener.marked();
            });

            if (!unMarkableSearchTerm) {
                // Now select inside the mark (but collapse so that it doesn't appear selected).
                // This is so that for subsequent finds we can decide whether to
                // continue from the last mark or instead from the cursor position i.e. the user
                // may have clicked their cursor elsewhere in the document to skip some text.
                selectCurrentMark().collapse();
            }

            // if unmakableMatch then leave the match selected which is the best we can do by way
            // of a highlight
        };

        var isCursorAtCurrentMark = function() {
            if (!currentMark) {
                return false;
            }

            var ed = tinymce.activeEditor;
            var selection = ed.selection;

            if (!selection.isCollapsed()) {
                selection.collapse();
            }

            var range = selection.getRng(true);
            if (range.startContainer.nodeType === 3) {
                // a substring find match will usually result in an element in
                // bad need of normalization (loads of empty text nodes)
                range.startContainer.parentNode.normalize();
                return range.startContainer.nextSibling === currentMark[0] || range.startContainer.previousSibling === currentMark[0];
            } else if (range.startContainer.nodeType === 1) {
                var childNodes = range.startContainer.childNodes;
                var selectionOffset = range.startOffset;
                if (selectionOffset > 0 && childNodes[selectionOffset - 1] === currentMark[0]) {
                    return true;
                }

                if ((selectionOffset + 1) < childNodes.length && childNodes[selectionOffset + 1 === currentMark[0]]) {
                    return true;
                }

                return false;
            }
        };

        /**
         * Remove the current mark if set.
         *
         * @param select
         *            if true then the browser selection will be set immediately
         *            after the mark. if false then the original browser
         *            selection will be maintained.
         */
        var removeCurrentMark = function(select) {
            unregisterMarkCleanUp();

            if (removeMark(currentMark, select) || (unMarkableSearchTerm && tinymce.activeEditor.selection.getRng(true).toString() == unMarkableSearchTerm)) {
                currentMark = null;
                unMarkableSearchTerm = null;

                $.each(listeners, function(index, listener) {
                    listener.markRemoved();
                });
            }
        };

        var removeAllMarks = function() {
            unregisterMarkCleanUp();
            $("mark", tinymce.activeEditor.getDoc()).each(function(index, markElement) {
                var removed = removeMark($(markElement), false);
            });

            currentMark = null;
            unMarkableSearchTerm = null;

            $.each(listeners, function(index, listener) {
                listener.markRemoved();
            });
        };

        /**
         * Remove the supplied mark.
         *
         * @param mark
         *            a jQuery wrapped mark element
         * @param select
         *            if true then the browser selection will be set to the
         *            content of the mark
         * @return true if mark removed or false otherwise
         */
        var removeMark = function(mark, select) {
            var currentSelectionRange = tinymce.activeEditor.selection.getRng(true);

            if (!mark) {
                return false;
            }

            function isCurrentSelectionInMark(selRange, mark) {
                // Firefox doesn't support intersectsNode
                if (selRange.intersectsNode) {
                    return selRange.intersectsNode(mark);
                } else {
                    var markRange = tinymce.activeEditor.getDoc().createRange();
                    markRange.selectNodeContents(mark);

                    if (selRange.compareBoundaryPoints(Range.START_TO_END, markRange) <= 0 ||
                            selRange.compareBoundaryPoints(Range.END_TO_START, markRange) >= 0) {
                        return false;
                    } else {
                        return true;
                    }
                }
            }

            var selectionInMark = isCurrentSelectionInMark(currentSelectionRange,mark[0]);

            var firstContent = null;
            var lastContent = null;
            mark.contents().each(function(index, content) {
                mark.before(content);

                if (!firstContent) {
                    firstContent = content;
                }

                lastContent = content;
            });

            if (selectionInMark || select) {
                // the selection will have been lost so re-instate
                var range = tinymce.activeEditor.selection.getRng(true);
                range.setStartBefore(firstContent);
                range.setEndAfter(lastContent);

                if (!select) {
                    range.collapse(false);
                }

                tinymce.activeEditor.selection.setRng(range);
            }

            mark.remove();
            return true;
        };

        var hasCurrentMark = function() {
            if (currentMark) {
                return true;
            }

            if (unMarkableSearchTerm) {
                return tinymce.activeEditor.selection.getRng(true).toString() == unMarkableSearchTerm;
            }
        };

        /**
         * Replace the current mark if we have a valid unMarkableSearchTerm matching a selection.
         *
         * @return the true if replacement occurred or false otherwise.
         */
        var replaceCurrentMarkWhenUnmarkable = function(text) {
            if (currentMark || !hasCurrentMark()) {
                return false;
            }

            var ed = tinymce.activeEditor;

            encodingWriter.text(text);
            ed.selection.setContent(encodingWriter.getContent(), {format : 'raw'});
            encodingWriter.reset();
            ed.undoManager.add();

            removeCurrentMark(false);
            return true;
        };

        /**
         * Replace the current mark with the supplied text. If
         * there is no current mark then no action will be taken.
         *
         * The current mark is removed by this function.
         *
         * @param text the text to set as the content of the current mark
         * @return the DOM Node representing the new text added or null if no current mark
         */
        var replaceCurrentMark = function(text) {
            if (replaceCurrentMarkWhenUnmarkable(text)) {
                return null;
            }

            if (!currentMark) {
                return null;
            }

            // get the content of the current mark
            var markedContent = [];
            currentMark.contents().each(function(index, element) {
                markedContent.push(element);
            });

            // remove the mark
            removeCurrentMark(false);

            var ed = tinymce.activeEditor;

            // add the new text node as a previous sibling of the first mark content
            var replacement = $(markedContent[0]).before(ed.getDoc().createTextNode(text))[0].previousSibling;

            // remove each of the current mark content
            for (var i = markedContent.length - 1; i >= 0; i--) {
                $(markedContent[i]).remove();
            }

            ed.undoManager.add();

            return replacement;
        };

        var removeMarkOnSaveListener = function(ed, o) {
            removeAllMarks();
        };


        var mouseListener = function(ed, e) {
            unregisterMarkCleanUp();
            $.each(listeners, function(index, listener) {
                listener.markRemoved();
            });
        };

        /**
         * Register Listeners to handle the clean up of marks a necessary
         *
         * @param unmarkable if true then no mark element was created.
         */
        var registerMarkCleanUp = function(unmarkable) {
            var ed = tinymce.activeEditor;
            ed.onChange.add(contentChangeListener);
            ed.onBeforeSetContent.add(contentChangeListener);

            if (unmarkable) {
                // then we are relying on editor selection for a mark
                // if the user clicks away in the Editor then the selection
                // changes
                ed.onClick.add(mouseListener);
                ed.onDblClick.add(mouseListener);
            }
        };

        /**
         * Undo any registration performed by registerMarkCleanUp. Typically
         * because there are no longer any marks in the content.
         */
        var unregisterMarkCleanUp = function() {
            var ed = tinymce.activeEditor;
            ed.onChange.remove(contentChangeListener);
            ed.onBeforeSetContent.remove(contentChangeListener);

            ed.onClick.remove(mouseListener);
            ed.onDblClick.remove(mouseListener);
        };

        var init = function() {
            tinymce.activeEditor.onBeforeGetContent.add(removeMarkOnSaveListener);
        };

        var destroy = function() {
            removeCurrentMark(true);
            tinymce.activeEditor.onBeforeGetContent.remove(removeMarkOnSaveListener);
        };

        /* ------------------------- public methods ------------------------- */
        var MarkManager = {};

        MarkManager.markCurrentlySelectedRange = markCurrentlySelectedRange;
        MarkManager.removeCurrentMark = removeCurrentMark;
        MarkManager.removeAllMarks = removeAllMarks;
        MarkManager.selectCurrentMark = selectCurrentMark;
        MarkManager.isCursorAtCurrentMark = isCursorAtCurrentMark;
        MarkManager.hasCurrentMark = hasCurrentMark;
        MarkManager.replaceCurrentMark = replaceCurrentMark;
        MarkManager.addListener = addListener;
        MarkManager.destroy = destroy;

        init();
        return MarkManager;
    };

    return SearchManager;
});

require('confluence/module-exporter')
        .exportModuleAsGlobal('confluence-editor/tinymce3/plugins/searchreplace/searchreplace', 'Confluence.Editor.SearchManager');

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-autocomplete-resources-only', location = 'tinymce3/plugins/searchreplace/search-toolbar.js' */
define('confluence-editor/tinymce3/plugins/searchreplace/search-toolbar', [
    'jquery',
    'tinymce',
    'confluence/legacy'
], function (
    $,
    tinymce,
    Confluence
) {
    "use strict";
    return {
        initContextToolbars: function (e, editor) {

            /**
             * A utility function for IE and Firefox specifically that will move the cursor to the
             * end of the supplied textbox control.
             *
             * Webkit has a more sensible behaviour on focus so doesn't need this.
             */
            var moveCursorToEnd = function (textbox) {
                if (tinymce.isIE) {
                    var range = textbox.createTextRange();
                    range.execCommand("SelectAll");
                    range.move("textedit");
                    range.select();
                } else if (tinymce.isGecko) {
                    var length = $(textbox).val().length;
                    textbox.setSelectionRange(length, length);
                }
            };

            var focusOnButton = function (cssClass) {
                top.focus();
                tinymce.activeEditor.plugins.customtoolbar.focusToolbarButton(cssClass);
            };

            var focusOnFindTextBox = function () {
                top.focus();
                var textBox = $("#search-toolbar-find-text");
                textBox.focus();
                moveCursorToEnd(textBox[0]);
            };

            var focusOnReplaceTextBox = function () {
                top.focus();
                var textBox = $("#search-toolbar-replace-text");
                textBox.focus();
                moveCursorToEnd(textBox[0]);
            };

            var focusOnEditor = function () {
                if (tinymce.isIE) {
                    frames["wysiwygTextarea_ifr"].focus();
                }

                if (tinymce.isIE || tinymce.isGecko) {
                    var ed = tinymce.activeEditor;
                    ed.focus();
                    ed.selection.select(ed.getBody());
                    ed.selection.collapse(false);
                    ed.focus();
                }
            };

            // keyboard handling for the find text box
            var findKeyboardHandler = function (e) {
                if (!tinymce.isIE8 && (e.ctrlKey || (tinymce.isMac && e.metaKey)) && e.which === 70) {
                    // prevent browser search from kicking in
                    e.preventDefault();
                } else if (e.which === 13) {
                    e.preventDefault();
                    var parameters = {
                        backwards: false,
                        onFound: focusOnFindTextBox,
                        onNotFound: focusOnFindTextBox
                    };
                    tinymce.activeEditor.execCommand("mceConfSearch", false, parameters, {skip_undo: true});
                } else if (e.which === 27) {
                    e.preventDefault();
                    tinymce.activeEditor.execCommand("mceSearchReplaceToolbar", false, false, {skip_undo: true});
                }
            };

            // keyboard handling for the replace text box
            var replaceKeyboardHandler = function (e) {
                if (!tinymce.isIE8 && (e.ctrlKey || (tinymce.isMac && e.metaKey)) && e.which === 70) {
                    // prevent browser search from kicking in
                    e.preventDefault();
                } else if (e.which === 13) {
                    e.preventDefault();
                    var parameters = {
                        onFound: focusOnReplaceTextBox,
                        onNotFound: focusOnFindTextBox,
                        onInactive: function () {
                            tinymce.activeEditor.execCommand("mceConfSearch", false, {
                                backwards: false,
                                onFound: focusOnReplaceTextBox,
                                onNotFound: focusOnFindTextBox
                            }, {skip_undo: true});
                        }
                    };
                    tinymce.activeEditor.execCommand("mceConfReplace", false, parameters, {skip_undo: true});
                } else if (e.which === 27) {
                    e.preventDefault();
                    tinymce.activeEditor.execCommand("mceSearchReplaceToolbar", false, false, {skip_undo: true});
                }
            };

            // The toolbar is dependent on the browser so first create all the components before
            // button together the full button array
            var findTextBox = new Confluence.Editor.Toolbar.Components.TextBox({
                id: "search-toolbar-find-text",
                text: editor.getLang("searchreplace_dlg.findlabel"),
                name: "find",
                keydown: findKeyboardHandler,
                cssClass: "toolbar-find-input"
            });

            var replaceTextBox = new Confluence.Editor.Toolbar.Components.TextBox({
                id: "search-toolbar-replace-text",
                text: editor.getLang("searchreplace_dlg.replacelabel"),
                name: "replace",
                keydown: replaceKeyboardHandler,
                cssClass: "toolbar-replace-input"
            });

            var previousButton = new Confluence.Editor.Toolbar.Components.TextButton({
                text: editor.getLang("searchreplace_dlg.findprevious"),
                click: function () {
                    var parameters = {
                        backwards: true,
                        onFound: function () {
                            top.focus();
                            focusOnButton("search-toolbar-find-previous-button");
                        },
                        onNotFound: focusOnFindTextBox
                    };

                    editor.execCommand("mceConfSearch", false, parameters, {skip_undo: true});
                },
                textClass: "search-toolbar-find-previous-button"
            });

            var nextButton = new Confluence.Editor.Toolbar.Components.TextButton({
                text: tinymce.isIE ? editor.getLang("searchreplace_dlg.findlabel") : editor.getLang("searchreplace_dlg.findnext"),
                click: function () {
                    var parameters = {
                        backwards: false,
                        onFound: function () {
                            top.focus();
                            focusOnButton("search-toolbar-find-next-button");
                        },
                        onNotFound: focusOnFindTextBox
                    };

                    editor.execCommand("mceConfSearch", false, parameters, {skip_undo: true});
                },
                textClass: "search-toolbar-find-next-button"
            });

            var replaceButton = new Confluence.Editor.Toolbar.Components.TextButton({
                text: editor.getLang("searchreplace_dlg.replace"),
                click: function () {
                    // skip_undo because the implementation manually takes care of undo levels
                    editor.execCommand("mceConfReplace", false, {
                        onFound: function () {
                            top.focus();
                            focusOnButton("search-toolbar-replace-button");
                        },
                        onNotFound: focusOnFindTextBox
                    }, {skip_undo: true});
                },
                textClass: "search-toolbar-replace-button"
            });

            var replaceAllButton = new Confluence.Editor.Toolbar.Components.TextButton({
                text: editor.getLang("searchreplace_dlg.replaceall"),
                click: function () {
                    var parameters = {
                        onReplaced: focusOnEditor,
                        onNotReplaced: focusOnFindTextBox
                    };
                    editor.execCommand("mceConfReplaceAll", false, parameters);
                },
                textClass: "search-toolbar-replaceall-button"
            });

            var closeButton = new Confluence.Editor.Toolbar.Components.Button({
                text: editor.getLang("searchreplace_dlg.close"),
                iconClass: 'icon-close',
                click: function () {
                    editor.execCommand("mceConfSearchClose", false, null);
                }
            });

            var buttons = [
                new Confluence.Editor.Toolbar.Components.Group([closeButton], {groupClass: 'close'}),
                new Confluence.Editor.Toolbar.Components.Group([findTextBox, replaceTextBox], {groupClass: 'no-separator'}),
                new Confluence.Editor.Toolbar.Components.Group((tinymce.isIE ? [nextButton] : [previousButton, nextButton])),
                new Confluence.Editor.Toolbar.Components.Group([replaceButton, replaceAllButton])
            ];


            return {
                Buttons: buttons
            };
        }
    };
});

require('confluence/module-exporter').safeRequire('confluence-editor/tinymce3/plugins/searchreplace/search-toolbar', function (TinyMceSearchToolbar) {
    var $ = require('jquery');
    var document = require('document');
    var Confluence = require('confluence/legacy');

    $(document).bind("initContextToolbars.Toolbar", function(e, editor) {
        Confluence.Editor.searchToolbar = TinyMceSearchToolbar.initContextToolbars(e, editor);
    });
});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.editor:editor-insert-files', location = 'tinymce3/plugins/insert-files/insert-files-plugin.js' */
/**
 * The 3rd and 4th arguments ensure that this module is executed synchronously, to register
 * the InsertFiles plugin before AJS.Rte.BootstrapManager.initialise is executed.
 *
 * This is necessary at the moment because we're still in the process of switching over to using
 * AMD throughout the codebase, and don't yet have a holistic approach to ensuring that all
 * TinyMCE plugins are registered before AJS.Rte.BootstrapManager.initialise is called.
 * @tainted tinymce
 */
define('confluence-editor/tinymce3/plugins/insert-files/insert-files-plugin', [
    "ajs",
    "jquery",
    "confluence-editor/utils/environment"
], function (
    AJS,
    $,
    environment
) {
    "use strict";

    return {
        init : function(ed) {

            //add a button in toolbar
            ed.addButton('confluence-insert-files', {
                //default value of "toolbar" is "toolbar-primary"
                title: "\u0424\u0430\u0439\u043b\u044b",
                tooltip: "\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0444\u0430\u0439\u043b\u044b \u0438 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f" + " (" +
                environment.transformCmdKeyTextBasingOnOS("Ctrl+M") + ")",
                cmd: "mceConfimage",
                className: "insert-files",
                icon: "aui-icon aui-icon-small aui-iconfont-editor-files",
                locationGroup: "rte-toolbar-group-files",
                weight: 0 //order of the new button in group, 0 => insert at beginning
            });
        },

        getInfo : function() {
            return {
                longname : 'Insert Files',
                author : 'Atlassian',
                authorurl : 'http://www.atlassian.com',
                infourl : 'http://www.atlassian.com/',
                version : "1.0"
            };
        }
    };
});

require('confluence/module-exporter')
        .safeRequire('confluence-editor/tinymce3/plugins/insert-files/insert-files-plugin', function(InsertFilesPlugin) {
            var tinymce = require('tinymce');

            tinymce.create('tinymce.plugins.InsertFiles', InsertFilesPlugin);

            // Register plugin
            tinymce.PluginManager.add('insertfiles', tinymce.plugins.InsertFiles);
        });

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-templates:template-editor-variables-resources', location = 'js/variable-manager.js' */
define("confluence-templates/variable-manager",["confluence/api/event","jquery"],function(f,g){function i(c,a){var b=c.toLocaleLowerCase(),d=a.toLocaleLowerCase(),b=b.localeCompare(d);0==b&&(b=c.localCompare(a));return b}function h(c){return g.extend(!0,{},e.defaults[c]||e.defaults.string)}var e=function(){var c={};return{find:function(a){var a=a.toLocaleLowerCase(),b={},d;for(d in c)if(c.hasOwnProperty(d)&&(!a.length||0===d.toLocaleLowerCase().indexOf(a)))b[d]=c[d];return b},contains:function(a){return!!c[a]},
get:function(a){return c[a]},getAll:function(){return g.extend(!0,{},c)},getSortedNames:function(){var a=[],b;for(b in c)a.push(b);return a.sort(i)},add:function(a,b){c[a]=b||h();f.trigger("add.confluence-variable",{name:a,details:g.extend(!0,{},b)})},del:function(a){var b=c[a];delete c[a];f.trigger("delete.confluence-variable",{name:a,details:g.extend(!0,{},b)})},rename:function(a,b){var d=c[a];delete c[a];d&&(c[b]=d,f.trigger("rename.confluence-variable",{oldName:a,newName:b,details:g.extend(!0,
{},details)}))},createDefault:h}};e.defaultVariableManager=e();e.defaults={textarea:{type:"textarea",rows:5,columns:100},list:{type:"list",options:[]},string:{type:"string"}};return e});"template"===AJS.Meta.get("content-type")&&require("confluence/module-exporter").safeRequire("confluence-templates/variable-manager",function(f){require("confluence/legacy").VariableManager=f});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-templates:template-editor-variables-resources', location = 'js/variable-placeholder.js' */
define("confluence-templates/variable-placeholder",["ajs","jquery"],function(a,d){return{component:{insertPlaceholder:function(c,e){var b;b="$"+c;var f=a.Rte.getEditor();a.Rte.BookmarkManager.storeBookmark();b={title:b,src:a.Meta.get("context-path")+"/plugins/servlet/confluence/placeholder/template-variable?name="+encodeURIComponent(c),"data-variable-name":c,"class":"template-variable",alt:"$"+c};e&&d.extend(b,e);b=d("<img/>").attr(b);f.selection.setNode(b[0])}},init:function(){d(a.Rte.getEditor().getBody()).delegate("img.template-variable",
"dragstart",function(a){a.preventDefault()})}}});"template"===AJS.Meta.get("content-type")&&require("confluence/module-exporter").safeRequire("confluence-templates/variable-placeholder",function(a){require("confluence/legacy").VariablePlaceHolder=a.component;require("ajs").bind("init.rte",a.init)});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-templates:template-editor-variables-resources', location = 'js/variable-toolbar.js' */
define("confluence-templates/variable-toolbar",["ajs","document","confluence/api/event","jquery","confluence/legacy"],function(e,k,h,f,c){return{init:function(){h.bind("init.rte",function(){var g=c.VariableManager.defaultVariableManager,a=f("#template-menu"),i=a.find(".variables-list");h.bind("add.confluence-variable,delete.confluence-variable,rename.confluence-variable",function(){var b=g.getSortedNames(),j=b.length,d="";i.toggleClass("hidden",!j);for(var a=0;a<j;a++)d+=c.Templates.Variables.renderVariableItem({variableName:"$"+
b[a],tooltip:e.format("\u0412\u0441\u0442\u0430\u0432\u044c\u0442\u0435 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043f\u043e\u043b\u0435 \u00ab{0}\u00bb, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0434\u043e\u043b\u0436\u0435\u043d \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0448\u0430\u0431\u043b\u043e\u043d\u0430.",b[a])});i.html(d)});a.delegate(".variables-list a","click",function(){var b=f(this).attr("data-variable-name");!g.contains(b)&&g.add(b);c.VariablePlaceHolder.insertPlaceholder(b)});a.delegate(".variables-add","click",function(b){var a=c.Editor.Autocompleter.Manager.getInputDrivenDropdown();e.Rte.getEditor().focus();(!a||a.inactive)&&c.Editor.Autocompleter.Manager.shortcutFired("$",!0);b.stopPropagation()});f(k).bind("showLayer",
function(b,c,d){"dropdown"===c&&d.$.closest(a).length&&d.reset()})})}}});"template"===AJS.Meta.get("content-type")&&require("confluence/module-exporter").safeRequire("confluence-templates/variable-toolbar",function(e){e.init()});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-templates:template-editor-variables-resources', location = 'js/autocomplete-settings-variables.js' */
define("confluence-templates/autocomplete-settings-variables",["confluence/legacy","ajs"],function(d,c){return function(){function e(a,b){return{callback:function(c){c.replaceWithSelectedSearchText();!f.contains(a)&&f.add(a);d.VariablePlaceHolder.insertPlaceholder(a,b)},name:c.escapeHtml(a),href:"#"}}function i(a,b){return!a&&!b?0:!a?-1:!b?1:a.toLocaleLowerCase().localeCompare(b.toLocaleLowerCase())}var f=d.VariableManager.defaultVariableManager;return{ch:"$",cache:!1,endChars:[],dropDownDelay:0,
preventStartNodes:"",dropDownClassName:"autocomplete-variables",selectFirstItem:!0,getHeaderText:function(a,b){return b?"\u0412\u0430\u0440\u0438\u0430\u043d\u0442\u044b \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445":"\u0412\u0430\u0440\u0438\u0430\u043d\u0442\u044b \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445"},getAdditionalLinks:function(a,b){var e=d.unescapeEntities(b);return f.get(e)||0===b.length?[]:[{className:"dropdown-create-variable",href:"#",callback:function(a){var b=a.plainText();a.replaceWithSelectedSearchText();!f.contains(b)&&f.add(b);d.VariablePlaceHolder.insertPlaceholder(b,
void 0)},name:c.format("\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0027\u0027{0}\u0027\u0027",b)}]},getDataAndRunCallback:function(a,b,c){var g,k,a=d.unescapeEntities(b),j=f.find(a),h=[],l=[];for(g in j)j.hasOwnProperty(g)&&h.push(g);h.sort(i);a=0;for(k=h.length;a<k;a++)g=h[a],l.push(e(g,j[g]));c([l],b)},update:function(){}}}});
require("confluence/module-exporter").safeRequire("confluence-templates/autocomplete-settings-variables",function(d){var c=require("ajs"),e=require("confluence/legacy"),i=require("confluence/meta");c.bind("init.rte",function(){var c=require("tinymce");"template"===i.get("content-type")&&(e.Editor.Autocompleter||(e.Editor.Autocompleter=c.confluence.Autocompleter),e.Editor.Autocompleter.Settings.$=d())})});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-templates:template-editor-variables-resources', location = 'js/property-panel-variables.js' */
define("confluence-templates/property-panel-variables",["ajs","jquery","confluence/legacy"],function(b,a,h){return{name:"variable",canHandleElement:function(a){return a.hasClass("template-variable")},handle:function(f){function l(d){b.debug("clicked type: "+d);var c=a("#property-panel");c.find(".panel-buttons").toggleClass("no-inputs","string"===d);c.find(".textarea-section,.list-section,.string-section").addClass("hidden");c.find("."+d+"-section").removeClass("hidden");"textarea"===d?(a("#variable-property-panel-textarea-rows").val(e.rows),
a("#variable-property-panel-textarea-columns").val(e.columns)):"list"===d&&a("#variable-property-panel-list-values").val(e.options.join(","))}function i(d,b,c){return{className:"variable-property-panel-type-item variable-property-panel-type-"+d,text:b,tooltip:c,selected:m===d,click:function(){e.type=d;e=j.createDefault(d);j.add(k,e);a(".variable-property-panel-type-item").removeClass("selected");a(".variable-property-panel-type-"+d).addClass("selected");l(d)}}}function g(a){return m===a?"":" hidden"}
if(!("click"!==f.e.type&&"mouseup"!==f.e.type)){var f=f.containerEl,n=a(f),k,c=[],o={originalHeight:n.height(),anchorIframe:b.Rte.getEditorFrame()};k=n.attr("data-variable-name");var j=h.VariableManager.defaultVariableManager,e=j.get(k),m=e&&e.type||"string";c.push(i("string","\u0422\u0435\u043a\u0441\u0442","\u041e\u0434\u043d\u043e\u0441\u0442\u0440\u043e\u0447\u043d\u043e\u0435 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u0435 \u043f\u043e\u043b\u0435 \u0432\u0432\u043e\u0434\u0430."));c.push(i("textarea","\u041c\u043d\u043e\u0433\u043e\u0441\u0442\u0440\u043e\u0447\u043d\u043e\u0435 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u0435 \u043f\u043e\u043b\u0435","\u041c\u043d\u043e\u0433\u043e\u0441\u0442\u0440\u043e\u0447\u043d\u043e\u0435 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u0435 \u043f\u043e\u043b\u0435 \u0432\u0432\u043e\u0434\u0430."));
c.push(i("list","\u0421\u043f\u0438\u0441\u043e\u043a","\u0412\u044b\u043f\u0430\u0434\u0430\u044e\u0449\u0438\u0439 \u0441\u043f\u0438\u0441\u043e\u043a."));c.push(null);c.push({className:"editable textarea-section"+g("textarea"),tooltip:"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0442\u0440\u043e\u043a, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u043c\u044b\u0445 \u0434\u043b\u044f \u043f\u043e\u043b\u044f.",html:'<input id="variable-property-panel-textarea-rows"/>'});c.push({className:"variable-property-panel-textarea-split textarea-section"+g("textarea"),tooltip:"",html:"<span>x</span>"});c.push({className:"editable textarea-section"+
g("textarea"),tooltip:"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u043c\u044b\u0445 \u0434\u043b\u044f \u043f\u043e\u043b\u044f.",html:'<input id="variable-property-panel-textarea-columns"/>'});c.push(null);c.push({className:"editable list-section"+g("list"),tooltip:"\u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u0432\u0441\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0441\u043f\u0438\u0441\u043a\u0430, \u0440\u0430\u0437\u0434\u0435\u043b\u044f\u044f \u0438\u0445 \u0437\u0430\u043f\u044f\u0442\u044b\u043c\u0438.",html:"<input id=\"variable-property-panel-list-values\" size='50'/>"});b.Confluence.PropertyPanel.createFromButtonModel("variable",f,c,o);l(e.type);a("#variable-property-panel-textarea-rows").change(function(){e.rows=
+a(this).val()||h.VariableManager.defaults.textarea.rows});a("#variable-property-panel-textarea-columns").change(function(){e.columns=+a(this).val()||h.VariableManager.defaults.textarea.columns});a("#variable-property-panel-list-values").change(function(){var d,b,c,f=a(this).val().split(",");e.options=[];d=0;for(b=f.length;d<b;d++)(c=a.trim(f[d]))&&e.options.push(c)});a("#variable-property-panel-textarea-rows,#variable-property-panel-textarea-columns,#variable-property-panel-list-values").keypress(function(b){13===
b.which&&a(this).blur()})}}}});require("confluence/module-exporter").exportModuleAsGlobal("confluence-templates/property-panel-variables","AJS.Confluence.PropertyPanel.Variable",function(b){var a=require("ajs");a.bind("init.rte",function(){a.trigger("add-handler.property-panel",b)})});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-templates:template-editor-variables-resources', location = 'js/variable-marshaller.js' */
define("confluence-templates/variable-marshaller",["ajs","jquery","confluence/legacy"],function(d,b,q){function r(c){var a=c.attr("data-variable-type");return"textarea"===a?{type:a,rows:+c.attr("data-variable-rows")||i,columns:+c.attr("data-variable-columns")||s}:"list"===a?{type:a,options:c.find("li").map(function(){return b(this).attr("data-variable-option")}).toArray()}:{type:"string"}}function m(){var c=b(d.Rte.getEditor().getBody()).find("img[data-variable-name]"),a={};b.map(c,function(c){var f=
{};b(c).attr("data-variable-raw-xhtml")&&(f={"data-variable-raw-xhtml":!0});a[b(c).attr("data-variable-name")]=f});return a}var i=5,s=100;return function(){function c(a){for(var b in a)a.hasOwnProperty(b)&&!f.contains(b)&&(d.debug("adding: ",b),f.add(b,a[b]))}var a=d.Rte.getEditor(),i=b(a.getBody()),f=q.VariableManager.defaultVariableManager;a.onGetContent.add(function(a,d){var i=b("<div></div>"),n=b("<ul></ul>").attr("data-variable-declarations","true"),e;i.append(n);var o=m();c(o);var p=f.getAll(),
l;for(l in p)if(o.hasOwnProperty(l)){var j=l;e=p[l];var g=void 0,k=void 0,g=e.type,h=b("<li></li>");h.attr("data-variable-name",j);h.attr("data-variable-type",g);h.text(j);if("textarea"===g)h.attr("data-variable-rows",e.rows),h.attr("data-variable-columns",e.columns);else if("list"===g){g=b("<ul></ul>");j=void 0;for(j in e.options)k=e.options[j],k=b("<li></li>").text(k).attr("data-variable-option",k),g.append(k);h.append(g)}e=h;n.append(e)}d.content=i.html()+d.content});a=i.find("ul[data-variable-declarations]");
a.remove();a.find("li[data-variable-name]").each(function(){var a=b(this);f.add(a.attr("data-variable-name"),r(a))});c(m())}});"template"===AJS.Meta.get("content-type")&&require("confluence/module-exporter").safeRequire("confluence-templates/variable-marshaller",function(d){require("ajs").bind("init.rte",d)});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-templates:template-editor-variables-template-resources', location = 'js/variable-templates.soy' */
// This file was automatically generated from variable-templates.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace Confluence.Templates.Variables.
 */

if (typeof Confluence == 'undefined') { var Confluence = {}; }
if (typeof Confluence.Templates == 'undefined') { Confluence.Templates = {}; }
if (typeof Confluence.Templates.Variables == 'undefined') { Confluence.Templates.Variables = {}; }


Confluence.Templates.Variables.renderVariableItem = function(opt_data, opt_ignored) {
  return '<li class="dropdown-item" data-tooltip="' + soy.$$escapeHtml(opt_data.tooltip) + '"><a href="#" class="item-link variable-item" title="' + soy.$$escapeHtml(opt_data.variableName) + '" data-variable-name="' + soy.$$escapeHtml(opt_data.variableName) + '">' + soy.$$escapeHtml(opt_data.variableName) + '</a></li>';
};
if (goog.DEBUG) {
  Confluence.Templates.Variables.renderVariableItem.soyTemplateName = 'Confluence.Templates.Variables.renderVariableItem';
}

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.status-macro:editor_status', location = 'js/status-editor.js' */
(function(d){var v="macro-placeholder-property-panel-edit-button";var n="status-macro-title first last editable";var r=13;var f=27;var o="status";var q=["Grey","Red","Yellow","Green","Blue"];var k=q[0];var t;var u,m,a;function s(){e();var z=Confluence.MacroParameterSerializer.deserialize(d(u).attr("data-macro-parameters")),A=false,y=false;if(z&&m){A=z.title!==m.title;y=z.colour!==m.colour}return A||y}function e(){if(a){var y=(b(m)==a.val());var z=(a.val()==="");if(y||z){delete m.title}else{m.title=a.val()}}}function p(){if(t&&t.state&&t.state()==="pending"){AJS.log("Macro update already in progress.");return}e();var z={contentId:Confluence.Editor.getContentId(),macro:{name:o,params:m,defaultParameterValue:"",body:""}};t=tinymce.confluence.MacroUtils.insertMacro(z,u);function y(A){AJS.Rte.getEditor().selection.select(A);AJS.Rte.BookmarkManager.storeBookmark();AJS.Rte.getEditor().selection.collapse()}t.done(function(A,B){u=A;y(u)}).fail(function(A){AJS.logError("Failed to load status macro - "+A)})}function b(y){return((y.colour||y.color)||k)}function j(){a=null;return true}function c(y){var z=d("<input/>");z.attr("class",n);z.keyup(function(A){if(A.keyCode===r){AJS.Confluence.PropertyPanel.destroy();return false}return true});z.keydown(function(A){if(A.keyCode===f){return j()}return true});return z}function x(y){a=c(m);a.val(y.find("span.panel-button-text").text());y.replaceWith(a);a.select().focus()}function h(){d.each(q,function(y,A){var z=function(C,B){m.colour=A;AJS.Confluence.PropertyPanel.destroy()};AJS.Confluence.PropertyPanel.Macro.registerButtonHandler(A,z,o)})}function i(y){return y.title||b(y)}function g(y){return{className:n,text:AJS.escapeHtml(y),click:x}}function l(z){for(var y=0;y<z.length;y++){if(z[y].className.indexOf(v)>-1){return z[y]}}return null}function w(y){var z=l(y);var A=function(B){tinymce.confluence.macrobrowser.editMacro(d(B))};z.click=function(){AJS.Confluence.PropertyPanel.destroy();if(!s()){A(u)}else{t.always(A)}}}AJS.Confluence.PropertyPanel.Macro.registerInitHandler(function(A,z,y){u=A;w(z);m=Confluence.MacroParameterSerializer.deserialize(d(u).attr("data-macro-parameters"));a=null;z.splice(1,0,g(i(m)))},"status");h();AJS.bind("destroyed.property-panel",function(y){if(s()){p()}})})(AJS.$);
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.keyboardshortcuts:confluence-tinymce-keyboard-shortcuts', location = 'js/tinymce-plugin.js' */
define("confluence-keyboard-shortcuts/tinymce-plugin",["ajs","confluence-keyboard-shortcuts/confluence-keyboard-shortcuts"],function(e,b){return{init:function(a){e.debug("Init Editor Keyboard shortcuts plugin");for(var c=function(b){return function(){a.execCommand("FormatBlock",!1,b)}},d=1;7>d;d++)a.addCommand("FormatBlock-h"+d,c("h"+d));a.addCommand("FormatBlock-p",c("p"));a.addCommand("FormatBlock-pre",c("pre"));a.addCommand("FormatBlock-blockquote",c("blockquote"));a.addCommand("mceConfShortcutDialog",
b.keyboardShortcuts.openDialog);a.addButton("help",{title:"confluence.conf_shortcuts_help_desc",cmd:"mceConfShortcutDialog"})},getInfo:function(){var a=require("tinymce");return{longname:"Atlassian Editor Keyboard Shortcuts Plugin",author:"Atlassian",authorurl:"http://www.atlassian.com",version:a.majorVersion+"."+a.minorVersion}}}});
require("confluence/module-exporter").safeRequire("confluence-keyboard-shortcuts/tinymce-plugin",function(e){var b=require("tinymce");b.create("tinymce.plugins.KeyboardShortcutsPlugin",e);b.PluginManager.add("keyboardshortcuts",b.plugins.KeyboardShortcutsPlugin)});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'confluence.web.components:editor-notifications', location = '/includes/js/editor-notifications.js' */
define("confluence/editor-notifications",[],function(){var a;return{notify:function(b,d,c){var e=require("aui/flag");void 0!==a&&"true"!==a.getAttribute("aria-hidden")&&a.close();void 0===c&&(c="error"===b?"manual":"auto");a=e({type:b,body:d,close:c})}}});require("confluence/module-exporter").safeRequire("confluence/editor-notifications",function(a){var b=require("ajs");b.bind("init.rte",function(){b.Confluence.EditorNotification=a})});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.reliablesave:reliable-save', location = 'templates/reliable-save.soy' */
// This file was automatically generated from reliable-save.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace Confluence.Templates.Editor.Reliable.
 */

if (typeof Confluence == 'undefined') { var Confluence = {}; }
if (typeof Confluence.Templates == 'undefined') { Confluence.Templates = {}; }
if (typeof Confluence.Templates.Editor == 'undefined') { Confluence.Templates.Editor = {}; }
if (typeof Confluence.Templates.Editor.Reliable == 'undefined') { Confluence.Templates.Editor.Reliable = {}; }


Confluence.Templates.Editor.Reliable.draftMessage = function(opt_data, opt_ignored) {
  var output = '<div id="draft-messages">';
  if (opt_data.isNewPage) {
    if (opt_data.existingDraft.title) {
      var escapedTitle__soy8 = '' + soy.$$escapeHtml(opt_data.existingDraft.title);
      output += soy.$$filterNoAutoescape(AJS.format("\u041d\u043e\u0432\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c \x26#8216;{1}\x26#8217;, \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u0430\u044f \u0412\u0430\u043c\u0438 {0} \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0430 \u043a\u0430\u043a \u0447\u0435\u0440\u043d\u043e\u0432\u0438\u043a.",opt_data.existingDraft.date,escapedTitle__soy8));
    } else {
      output += soy.$$filterNoAutoescape(AJS.format("\u041d\u043e\u0432\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u0430\u044f \u0412\u0430\u043c\u0438 {0} \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0430 \u043a\u0430\u043a \u0447\u0435\u0440\u043d\u043e\u0432\u0438\u043a.",opt_data.existingDraft.date));
    }
    output += ' ' + soy.$$filterNoAutoescape(AJS.format("\u0412\u044b \u0445\u043e\u0442\u0438\u0442\u0435 {0}\u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u044c \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435{1} \u0438\u043b\u0438 {2}\u043e\u0442\u043c\u0435\u043d\u0438\u0442\u044c {3} \u0435\u0433\u043e?",'<a href="#" class="use-draft"> ','</a>','<a href="#" class="discard-draft"> ','</a>'));
  } else {
    output += soy.$$filterNoAutoescape(AJS.format("\u0412\u0435\u0440\u0441\u0438\u044f \u044d\u0442\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b, \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u043d\u0430\u044f \u0412\u0430\u043c\u0438 {0}, \u0431\u044b\u043b\u0430 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0430 \u043a\u0430\u043a \u0447\u0435\u0440\u043d\u043e\u0432\u0438\u043a.",opt_data.existingDraft.date)) + ((opt_data.mergeRequired) ? ' ' + soy.$$escapeHtml("\u042d\u0442\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0431\u044b\u043b\u0430 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0430. \u0412\u0430\u0448\u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0431\u0443\u0434\u0443\u0442 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u044b \u0441 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u0432\u0435\u0440\u0441\u0438\u0435\u0439.") : '') + ((opt_data.conflictFound) ? ' ' + soy.$$filterNoAutoescape(AJS.format("\u042d\u0442\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0431\u044b\u043b\u0430 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0430. \u0421\u0434\u0435\u043b\u0430\u043d\u043d\u044b\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442\u0443\u044e\u0442 \u0441 \u0432\u0430\u0448\u0438\u043c\u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f\u043c\u0438 \u0438 \u043d\u0435 \u043d\u0435 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u044b. \u0412\u044b \u0445\u043e\u0442\u0438\u0442\u0435 {0}\u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442\u044b{1} \u0438\u043b\u0438 {2}\u043e\u0442\u043c\u0435\u043d\u0438\u0442\u044c {3} \u0432\u0430\u0448\u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f?",'<a href="?pageId=' + opt_data.pageId + '&viewConflict=true&spaceKey=' + opt_data.spaceKey + '" >','</a>','<a href="#" class="discard-draft">','</a>','<a href="' + "/wiki" + '/users/viewmydrafts.action">','</a>')) : (opt_data.mergeRequired) ? ' ' + soy.$$filterNoAutoescape(AJS.format("\u0412\u044b \u0445\u043e\u0442\u0438\u0442\u0435  {0}\u043f\u0440\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c{1}, {2}\u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0438 \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u044c \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435{3} \u0438\u043b\u0438 {4}\u043e\u0442\u043c\u0435\u043d\u0438\u0442\u044c{5} \u0435\u0433\u043e?",'<a id="view-diff-link-notification" href="#" class="view-diff-link">','</a>','<a href="#" class="use-draft"> ','</a>','<a href="#" class="discard-draft">','</a>')) : ' ' + soy.$$filterNoAutoescape(AJS.format("\u0412\u044b \u0445\u043e\u0442\u0438\u0442\u0435 {0}\u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f{1}, {2}\u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u044c \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435{3} \u0438\u043b\u0438 {4}\u043e\u0442\u043c\u0435\u043d\u0438\u0442\u044c{5} \u0438\u0445?",'<a id="view-diff-link-notification" href="#" class="view-diff-link">','</a>','<a href="#" class="use-draft"> ','</a>','<a href="#" class="discard-draft">','</a>')));
  }
  output += '</div>';
  return output;
};
if (goog.DEBUG) {
  Confluence.Templates.Editor.Reliable.draftMessage.soyTemplateName = 'Confluence.Templates.Editor.Reliable.draftMessage';
}

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.reliablesave:reliable-save', location = 'js/reliable-save.js' */
define("confluence-editor-reliable-save/reliable-save","ajs confluence/legacy underscore jquery window document confluence/api/constants confluence-editor/editor/page-editor-message".split(" "),function(a,e,k,d,q,C,m,b){function r(){return a.Meta.get("shared-drafts")}function p(){return a.Meta.getBoolean("new-page")}function s(){e.Editor.UI.toggleSavebarBusy(false)}function t(d){var l="\u041f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430.";b.closeMessages(["generic-error"]);b.handleMessage("generic-error",
{type:"error",message:l},g);a.logError("Generic error: "+JSON.stringify(d))}function g(){var b=d("#draft-messages");if(b.length>0){b.is(":visible")&&a.Confluence.Analytics.publish("rte.notification.draft");b.find("a.use-draft").click(function(b){b.stopPropagation();b.preventDefault();e.Editor.Drafts.useDraft();a.Confluence.Analytics.publish("rte.notification.draft.resume")});b.find("a.discard-draft").click(function(b){b.stopPropagation();b.preventDefault();j.Draft.discardDraft(a.Meta.get("page-id"),
a.Meta.get("existing-draft-id")).done(j.Draft.onSuccessDiscardDraft).fail(j.Draft.onErrorDiscardDraft)})}}function A(){d("#editor-restore-title-link").click(function(n){n.stopPropagation();n.preventDefault();d("#content-title").val(a.Meta.get("latest-published-page-title"));b.closeMessages(["rename-during-fallback"])})}function u(d){var e="Looks like your session expired. Log in again to keep working.\n \u003cdiv\u003e\u003ca href=\u0022dashboard.action\u0022 target=\u0022_blank\u0022\u003eLogin\u003c/a\u003e\u003c/div\u003e";b.closeMessages(["noauthorized"]);b.handleMessage("noauthorized",{title:"\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443",
type:"error",message:e},g);d&&a.trigger("rte.safe-save.invalid-xsrf-token")}function x(){var d="\u041d\u0435 \u043c\u043e\u0433\u0443 \u0441\u0432\u044f\u0437\u0430\u0442\u044c\u0441\u044f \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c. \u0421\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0432 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e.";b.closeMessages(["server-offline"]);b.handleMessage("server-offline",{type:"error",message:d},g)}var y=[],v="confluence.editor.publish",j={Draft:{discardDraft:function(b,e){var g={draftId:e,pageId:b,type:a.Meta.get("draft-type"),spaceKey:a.Meta.get("space-key")};return d.ajax({type:"DELETE",url:m.CONTEXT_PATH+"/rest/tinymce/1/drafts/discard",data:d.toJSON(g),contentType:"application/json",
dataType:"json"})},onSuccessDiscardDraft:function(){p()||a.Meta.set("draft-id","0");b.closeMessages(["draft-message"]);b.handleMessage("discarding-successfull",{type:"info",message:"\u0427\u0435\u0440\u043d\u043e\u0432\u0438\u043a \u0431\u044b\u043b \u0443\u0434\u0430\u043b\u0435\u043d.",close:"auto"},g);a.Confluence.Analytics.publish("rte.notification.draft.discard")},onErrorDiscardDraft:function(d){switch(d.status){case 403:u(true);break;case 404:b.handleMessage("draft-deleted",{type:"info",message:"\u042d\u0442\u043e\u0442 \u0447\u0435\u0440\u043d\u043e\u0432\u0438\u043a \u0431\u044b\u043b \u0443\u0434\u0430\u043b\u0435\u043d."},
g);break;case 422:b.handleMessage("discarding-invalid",{type:"error",message:"\u0427\u0435\u0440\u043d\u043e\u0432\u0438\u043a \u043d\u0435\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u0435\u043d. \u0414\u0440\u0443\u0433\u043e\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043c\u043e\u0433 \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0435\u0433\u043e, \u043b\u0438\u0431\u043e \u0432\u0440\u0435\u043c\u044f \u0441\u0435\u0430\u043d\u0441\u0430 \u0438\u0441\u0442\u0435\u043a\u043b\u043e."},g);break;default:b.handleMessage("discarding-error",{type:"error",message:"\u041f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430\u044f \u043e\u0448\u0438\u0431\u043a\u0430. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u0412\u0430\u0448 \u0436\u0443\u0440\u043d\u0430\u043b."},g)}}}};j._internal=e.SafeSafe&&e.SafeSave._internal?e.SafeSave._internal:{};j._internal.onSuccessfulResponse=function(b){d("#rte-button-overwrite").unbind("click.overwrite");var e={dataType:"json",contentId:a.Meta.get("content-id"),draftType:a.Meta.get("draft-type")};
a.safe.post(m.CONTEXT_PATH+"/json/stopheartbeatactivity.action",e,function(){a.log("Stop heartbeat activity on",e.draftType,"id",e.contentId)},"json").fail(function(b,d,e){a.logError("Server error on stop heartbeat activity request:");a.log(e)}).always(function(){var a=b._links.webui;a?q.location=a.indexOf("/")!==0?a:m.CONTEXT_PATH+a:s()})};j.initialize=function(){function n(c){a.trigger("synchrony.stop",{id:v});c&&c.preventDefault();var i=d("#content-title");if(i.hasClass("placeholded")||i.val().trim()===
""){a.trigger("rte.safe-save.error");a.trigger("synchrony.start",{id:v});b.closeMessages(["title-too-long","duplicate-title"]);b.handleMessage("empty-title",{title:"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435",type:"error",message:"\u041f\u0435\u0440\u0435\u0434 \u043d\u0430\u0436\u0430\u0442\u0438\u0435\u043c \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \u00ab\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c\u00bb \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0432\u0432\u0435\u0441\u0442\u0438 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b."},g);s()}else{e.Editor.Drafts.unBindUnloadMessage();var f={},h=a.Meta.get("draft-id"),o=a.Meta.get("content-id"),c=m.CONTEXT_PATH+"/rest/api/content";f.status="current";f.title=i.val();f.space={key:a.Meta.get("space-key")};var k=a.Rte.getEditor().getContent();
y.forEach(function(a){k=a(k)});f.body={editor:{value:k,representation:"editor"}};i=(i=e.Editor.UI.postingDatePicker)&&i.getDate();if(z.type==="blogpost"&&i&&i.toISOString)f.history={createdDate:i.toISOString()};if(p()&&!a.Meta.get("shared-drafts")){i="POST";a.Meta.get("is-blueprint-page")&&(c=c+"/blueprint/instance/"+h);c=c+"?status=draft";f.id=h;f.type=a.Meta.get("content-type");f.body.editor.content={id:h}}else{i="PUT";p()&&a.Meta.get("is-blueprint-page")&&(c=c+"/blueprint/instance");c=c+"/"+o;
if(p()&&r()){f.id=h;f.body.editor.content={id:h}}else{f.id=a.Meta.get("page-id");f.body.editor.content={id:a.Meta.get("page-id")}}c=h==="0"?c+"?status=current":c+"?status=draft";h=a.Meta.getNumber("page-version")||0;f.type=a.Meta.get("content-type");f.version={number:h+1,message:d("#versionComment").val(),minorEdit:d("#notifyWatchers").is(":checked")?false:true,syncRev:d("#syncRev").val()}}h={};h.id=a.Meta.get("parent-page-id")||"0";h.type=a.Meta.get("content-type");o=a.Meta.get("parent-page-id");
if(!o||f.space.key!==a.Meta.get("space-key"))h.id="0";if(o&&h.id!==o)h.id=d("#parentPageString").val()===a.Meta.get("from-page-title")?h.id:o;if(h.id!=="0")f.ancestors=[h];d.ajax({type:i,url:c,contentType:"application/json; charset=utf-8",dataType:"json",data:JSON.stringify(f),success:function(b){a.trigger("rte.safe-save.success",b);j._internal.onSuccessfulResponse(b)},error:function(c){s();switch(c.status){case 400:b.closeMessages(["empty-title","duplicate-title","title-too-long","legacy-draft-deprecated"]);
if(c.responseText.indexOf(l.duplicatedTitle)>=0)b.handleMessage("duplicate-title",{type:"error",message:a.format("\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c \u00ab{0}\u00bb \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0432 \u044d\u0442\u043e\u043c \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435. \u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u0440\u0443\u0433\u043e\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b.",a.escapeHtml(d("#content-title").val()))});else if(c.responseText.indexOf(l.titleTooLong)>=0)b.handleMessage("title-too-long",{type:"error",message:"\u0414\u043b\u0438\u043d\u0430 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0435\u0432\u044b\u0448\u0430\u0442\u044c 255 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432."},g);else if(c.responseText.indexOf(l.publishNewDraftDeprecated)>=0||c.responseText.indexOf(l.existingDraftNotFound)>=0)if(a.Meta.get("new-page")){a.trigger("rte.legacy-draft-can-be-migrated");
b.handleMessage("legacy-draft-deprecated",{type:"error",message:a.format("\u0421\u043e\u0432\u043c\u0435\u0441\u0442\u043d\u043e\u0435 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0437\u0434\u0435\u0441\u044c! \u0427\u0442\u043e\u0431\u044b \u0432\u044b \u043c\u043e\u0433\u043b\u0438 \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u0443 \u043d\u0430 \u044d\u0442\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435, \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u0441\u0442\u0438\u0442\u044c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0434\u043b\u044f \u0432\u0430\u0441 \u0432 \u043d\u043e\u0432\u044b\u0439 \u0447\u0435\u0440\u043d\u043e\u0432\u0438\u043a.\u003cbr\u003e \u003ca href={0}\u003e\u041f\u0435\u0440\u0435\u043c\u0435\u0441\u0442\u0438\u0442\u044c \u0441\u0435\u0439\u0447\u0430\u0441\u003c/a\u003e",m.CONTEXT_PATH+"/wiki/pages/resumedraft.action?draftId="+a.Meta.get("draft-id"))},g)}else{a.trigger("rte.legacy-draft-cannot-be-migrated");b.handleMessage("legacy-draft-deprecated",{type:"error",message:"\u0421\u043e\u0432\u043c\u0435\u0441\u0442\u043d\u043e\u0435 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0437\u0434\u0435\u0441\u044c! \u042d\u0442\u043e \u0437\u043d\u0430\u0447\u0438\u0442, \u0447\u0442\u043e \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e, \u0447\u0442\u043e\u0431\u044b \u0432\u044b \u043d\u0430\u043c \u043d\u0435\u043c\u043d\u043e\u0433\u043e \u043f\u043e\u043c\u043e\u0433\u043b\u0438, \u0447\u0442\u043e\u0431\u044b \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0432\u0430\u0448\u0443 \u0441\u0435\u0441\u0441\u0438\u044e \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. \u0412\u0441\u0435 \u0447\u0442\u043e \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c, \u044d\u0442\u043e \u0441\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435, \u0441\u043d\u043e\u0432\u0430 \u043e\u0442\u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u0437\u0430\u0442\u0435\u043c \u0432\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0435\u0433\u043e \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c."},g)}else t(c);break;case 403:u(true);break;case 404:b.closeMessages(["page-not-accessible","noauthorized"]);b.handleMessage("page-not-accessible",
{title:"\u0414\u0430\u043d\u043d\u043e\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e.",type:"error",message:a.format("\u0412\u0440\u0435\u043c\u044f \u0441\u0435\u0430\u043d\u0441\u0430 \u043c\u043e\u0433\u043b\u043e \u0438\u0441\u0442\u0435\u0447\u044c, \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u003ca href=\u0022dashboard.action\u0022 target=\u0022_blank\u0022\u003e\u0432\u043e\u0439\u0442\u0438 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0443\u003c/a\u003e.",f.space.key)},g);break;case 409:if(r())if(w<q){w++;setTimeout(function(){n()},B)}else{a.trigger("analyticsEvent",{name:"editor.save.error.conflict"});w=0;b.handleMessage("page-conflict",{title:"\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c.",type:"error",message:a.format("\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043f\u044b\u0442\u0430\u0442\u044c\u0441\u044f \u0432\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435.",f.space.key)},g)}else{e.Editor.restoreDefaultSave();e.Editor.UI.saveButton.click()}return;
case 410:b.closeMessages(["page-deleted"]);b.handleMessage("page-deleted",{title:"\u042d\u0442\u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0431\u044b\u043b\u043e \u0443\u0434\u0430\u043b\u0435\u043d\u043e",type:"error",message:a.format("Copy your content, then add it to a new page or \u003cdiv\u003e\u003ca href=\u0022viewtrash.action?key={0}\u0022 target=\u0022_blank\u0022\u003erestore this page from the trash\u003c/a\u003e and try again.\u003c/div\u003e",f.space.key)},g);break;case 413:b.closeMessages(["page-too-big"]);b.handleMessage("page-too-big",{type:"error",message:"\u042d\u0442\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u0431\u043e\u043b\u044c\u0448\u0430\u044f \u0434\u043b\u044f \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f. \u0415\u0435 \u043c\u043e\u0436\u043d\u043e \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u043d\u0430 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u0442\u0440\u0430\u043d\u0438\u0446, \u0430 \u0437\u0430\u0442\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u003ca href=\u0022https://confluence.atlassian.com/conf51/include-page-macro-336169384.html\u0022 target=\u0022_blank\u0022\u003e\u043c\u0430\u043a\u0440\u043e\u0441 \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b\u003c/a\u003e \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0433\u043e."},g);break;case 0:case 500:case 503:x();break;case 501:c.responseText.indexOf(l.renameDuringFallback)>=0?b.handleMessage("rename-during-fallback",
{type:"error",message:"Changing page titles isn\u0027t possible right now, as collaborative editing is offline. \u003cdiv\u003e\u003ca id=\u0022editor-restore-title-link\u0022 href=\u0022#\u0022\u003eRestore the page title\u003c/a\u003e if you\u0027d like to publish the page.\u003c/div\u003e"},A):t(c);break;default:t(c)}a.trigger("rte.safe-save.error",{status:c.status});a.trigger("synchrony.start",{id:v})}})}}if(!(d("#editpageform").length===0&&d("#createpageform").length===0)){var l={duplicatedTitle:"A page with this title already exists",titleTooLong:"Title cannot be longer than 255 characters.",publishNewDraftDeprecated:"Unsupported call to publishNewDraft",existingDraftNotFound:"Could not find existing draft, perhaps you're trying to publish a personal draft?",
renameDuringFallback:"Unable to perform a page rename when fallback mode is enabled"},z={existingDraftId:a.Meta.get("existing-draft-id")?a.Meta.get("existing-draft-id"):0,pageId:a.Meta.get("page-id"),type:a.Meta.get("draft-type"),spaceKey:a.Meta.get("space-key")};if(a.Meta.get("show-draft-message")===true){if(d("#conflict-diffs").length>0)return;d.ajax({type:"GET",url:m.CONTEXT_PATH+"/rest/tinymce/1/drafts/message",data:z,contentType:"application/json",dataType:"text json",success:function(c){if(c&&
c.draftData){c=e.Templates.Editor.Reliable.draftMessage({existingDraft:c.draftData,conflictFound:c.conflictFound,mergeRequired:c.mergeRequired,isNewPage:c.newPage,pageId:a.Meta.get("page-id"),spaceKey:a.Meta.get("space-key")});b.handleMessage("draft-message",{type:"info",message:c},g)}}})}d("#editor-notifications-container #all-messages .aui-message-error").length>0&&!r()?e.Editor.restoreDefaultSave():e.Editor.overrideSave(n);d("#rte-button-overwrite").bind("click.overwrite",n);var w=0,q=3,B=1E3;
a.bind("rte.heartbeat-error",function(c,d){switch(d.status){case 401:case 403:b.isDisplayed(["page-not-accessible"])||u(false);break;case 0:case 404:case 500:case 503:e.Editor.concurrentEditingIsSupported()||x();break;default:a.logError("Heartbeat action error: "+JSON.stringify(d))}});a.bind("rte.heartbeat",function(){var c=false;k.each(b.displayedErrors(),function(a){if(k.contains(["noauthorized","server-offline","page-not-accessible"],a)){c=true;b.closeMessages([a])}});c&&b.handleMessage("reconnect",
{type:"info",title:"\u041f\u043e\u0432\u0442\u043e\u0440\u043d\u043e\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u043e",message:"\u041c\u044b \u0441\u043d\u043e\u0432\u0430 \u0432 \u0434\u0435\u043b\u0435. \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0435\u0449\u0435 \u0440\u0430\u0437.",close:"auto"},g)})}};j.registerCleanupFunction=function(a){y.push(a)};return j});
require("confluence/module-exporter").safeRequire("confluence-editor-reliable-save/reliable-save",function(a){var e=require("ajs"),k=0<window.document.referrer.indexOf("createDialog=true&flashId");if(e.DarkFeatures.isEnabled("editor.ajax.save")&&!(""===e.Meta.get("remote-user")||k)){var d=require("confluence/legacy");e.bind("rte.init.ui",function(){a.initialize();d.Editor=d.Editor||{};d.Editor.SafeSave=d.Editor.SafeSave||{};d.Editor.SafeSave.Draft=a.Draft;d.Editor.SafeSave._internal=a._internal||
{}})}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.reliablesave:reliable-save', location = 'js/ajax-login.js' */
define("confluence-editor-reliable-save/ajax-login",["confluence/dark-features","confluence/meta","ajs","jquery","document"],function(d,c,f,g,u){return function(){function v(c,j){var a=q.call(g,c,j),d=c&&c.url;if(r&&(!j||j&&!j.preventAjaxLogin)&&d&&(l&&0===d.indexOf(l)||k&&0===d.indexOf(k))){var t=function(a,d,w,l){function k(){b.readyState=a.readyState;b.status=a.status;b.statusText=a.statusText;a.responseXML?b.responseXML=a.responseXML:b.responseText=a.responseText;d.apply(w,l)}var n=a.getResponseHeader("X-AUSERNAME");
r===n?k():(m.push({deferred:e,url:c,settings:j,defaultCallback:k}),o||(p=!1,h||(h=new f.Dialog(840,700),h.addPanel("ajax-login","ajax-login-content","ajax-login-panel",1),n=g(".ajax-login-panel"),i=g("<iframe></iframe>"),i.bind("load",function(){var a=i[0].contentDocument.location.pathname;a&&0<=a.indexOf("/"+s)&&(o=!1,p=!0,h.hide(),i.attr("src","about:blank"))}),n.append(i),g(u).bind("hideLayer",function(a,b,d){if("popup"===b&&d===h.popup){f.debug("hiding login dialog");if(p){a=m;b=0;for(d=a.length;b<
d;b++){var c=a[b];f.debug("Rerunning ajax query to: "+c.url,c);q.call(g,c.url,c.settings).done(function(){f.debug("Rerunning done");c.deferred.resolve(arguments)}).fail(function(){f.debug("Rerunning failed");c.deferred.reject(arguments)})}}else{a=m;b=0;for(d=a.length;b<d;b++){var e=a[b];f.debug("Executing with original response for: "+e.url,e);e.defaultCallback&&e.defaultCallback()}}m=[]}})),i.attr("src",x),h.show(),o=!0))};f.debug("Using authenticatingPromise");var b={abort:function(){a.abort.apply(a,
arguments)},getAllResponseHeaders:function(){a.getAllResponseHeaders.apply(a,arguments)},getResponseHeader:function(){a.getResponseHeader.apply(a,arguments)},overrideMimeType:function(){a.overrideMimeType.apply(a,arguments)},readyState:a.readyState,setRequestHeader:function(b,c){a.setRequestHeader.apply(a,arguments)},state:function(){a.state.apply(a,arguments)},status:a.status,statusCode:function(){a.statusCode.apply(a,arguments)},statusText:a.statusText},e=g.Deferred();e.promise(b);b.success=b.done;
b.error=b.fail;a.done(function(a,b,c){t(c,e.resolve,e,arguments)});a.fail(function(a,b,c){t(a,e.reject,e,arguments)});return b}return a}if(d.isEnabled("ajax.login")){f.debug("AJAX login support enabled");var o=!1,h,i,p,m=[],q=g.ajax,r=c.get("remote-user"),l=c.get("base-url"),k=c.get("context-path"),s="ajaxlogincomplete.action",x=c.get("context-path")+"/login.action?os_destination=%2F"+s;g.ajax=v}}});require("confluence/module-exporter").safeRequire("confluence-editor-reliable-save/ajax-login",function(d){require("ajs").toInit(d)});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.sticky-table-headers:stickytableheaders-resources', location = '/js/vendor/jquery.stickytableheaders.js' */
/*! Modified by Atlassian | Copyright (c) 2011 by Jonas Mosbech - https://github.com/jmosbech/StickyTableHeaders
	MIT license info: https://github.com/jmosbech/StickyTableHeaders/blob/master/license.txt */
(function(d,c,f){var a="stickyTableHeaders",g=0,e={fixedOffset:0,leftOffset:0,marginTop:0,objDocument:document,objHead:"head",objWindow:c,scrollableArea:c,cacheHeaderHeight:false};function b(i,h){var j=this;j.$el=d(i);j.el=i;j.id=g++;j.$el.bind("destroyed",d.proxy(j.teardown,j));j.$clonedHeader=null;j.$originalHeader=null;j.cachedHeaderHeight=null;j.isSticky=false;j.hasBeenSticky=false;j.leftOffset=null;j.topOffset=null;j.init=function(){j.setOptions(h);j.$el.each(function(){var k=d(this);k.css("padding",0);j.$originalHeader=d("thead:first",this);j.$clonedHeader=j.$originalHeader.clone();k.trigger("clonedHeader."+a,[j.$clonedHeader]);j.$clonedHeader.addClass("tableFloatingHeader");j.$clonedHeader.css("display","none");j.$originalHeader.addClass("tableFloatingHeaderOriginal");j.$originalHeader.after(j.$clonedHeader);j.$printStyle=d('<style type="text/css" media="print">.tableFloatingHeader{display:none !important;}.tableFloatingHeaderOriginal{position:static !important;}</style>');j.$head.append(j.$printStyle)});j.updateWidth();j.toggleHeaders();j.bind()};j.destroy=function(){j.$el.unbind("destroyed",j.teardown);j.teardown()};j.teardown=function(){if(j.isSticky){j.$originalHeader.css("position","static")}d.removeData(j.el,"plugin_"+a);j.unbind();j.$clonedHeader.remove();j.$originalHeader.removeClass("tableFloatingHeaderOriginal");j.$originalHeader.css("visibility","visible");j.$printStyle.remove();j.el=null;j.$el=null};j.bind=function(){j.$scrollableArea.on("scroll."+a,j.toggleHeaders);if(!j.isWindowScrolling){j.$window.on("scroll."+a+j.id,j.setPositionValues);j.$window.on("resize."+a+j.id,j.toggleHeaders)}j.$scrollableArea.on("resize."+a,j.toggleHeaders);j.$scrollableArea.on("resize."+a,j.updateWidth)};j.unbind=function(){j.$scrollableArea.off("."+a,j.toggleHeaders);if(!j.isWindowScrolling){j.$window.off("."+a+j.id,j.setPositionValues);j.$window.off("."+a+j.id,j.toggleHeaders)}j.$scrollableArea.off("."+a,j.updateWidth)};j.debounce=function(l,k){var m=null;return function(){var o=this,n=arguments;clearTimeout(m);m=setTimeout(function(){l.apply(o,n)},k)}};j.toggleHeaders=j.debounce(function(){if(j.$el){j.$el.each(function(){var q=d(this),r,n=j.isWindowScrolling?(isNaN(j.options.fixedOffset)?j.options.fixedOffset.outerHeight():j.options.fixedOffset):j.$scrollableArea.offset().top+(!isNaN(j.options.fixedOffset)?j.options.fixedOffset:0),m=q.offset(),k=j.$scrollableArea.scrollTop()+n,l=j.$scrollableArea.scrollLeft(),o=j.options.cacheHeaderHeight?j.cachedHeaderHeight:j.$clonedHeader.height(),p=j.isWindowScrolling?k>m.top:n>m.top,s=(j.isWindowScrolling?k:0)<(m.top+q.height()-o-(j.isWindowScrolling?0:n));if(p&&s){r=m.left-l+j.options.leftOffset;j.$originalHeader.css({position:"fixed","margin-top":j.options.marginTop,left:r,"z-index":3});j.leftOffset=r;j.topOffset=n;j.$clonedHeader.css("display","");if(!j.isSticky){j.isSticky=true;j.updateWidth();q.trigger("enabledStickiness."+a)}j.setPositionValues()}else{if(j.isSticky){j.$originalHeader.css("position","static");j.$clonedHeader.css("display","none");j.isSticky=false;j.resetWidth(d("td,th",j.$clonedHeader),d("td,th",j.$originalHeader));q.trigger("disabledStickiness."+a)}}})}},0);j.setPositionValues=j.debounce(function(){var k=j.$window.scrollTop(),l=j.$window.scrollLeft();if(!j.isSticky||k<0||k+j.$window.height()>j.$document.height()||l<0||l+j.$window.width()>j.$document.width()){return}j.$originalHeader.css({top:j.topOffset-(j.isWindowScrolling?0:k),left:j.leftOffset-(j.isWindowScrolling?0:l)})},0);j.updateWidth=j.debounce(function(){if(!j.isSticky){return}if(!j.$originalHeaderCells){j.$originalHeaderCells=d("th,td",j.$originalHeader)}if(!j.$clonedHeaderCells){j.$clonedHeaderCells=d("th,td",j.$clonedHeader)}var k=j.getWidth(j.$clonedHeaderCells);j.setWidth(k,j.$clonedHeaderCells,j.$originalHeaderCells);j.$originalHeader.css("width",j.$clonedHeader.width());if(j.options.cacheHeaderHeight){j.cachedHeaderHeight=j.$clonedHeader.height()}},0);j.getWidth=function(k){var l=[];k.each(function(p){var r,s=d(this);if(s.css("box-sizing")==="border-box"){var t=s[0].getBoundingClientRect();if(t.width){r=t.width}else{r=t.right-t.left}}else{var n=d("th",j.$originalHeader);if(n.css("border-collapse")==="collapse"){if(c.getComputedStyle){r=parseFloat(c.getComputedStyle(this,null).width)}else{var q=parseFloat(s.css("padding-left"));var m=parseFloat(s.css("padding-right"));var o=parseFloat(s.css("border-width"));r=s.outerWidth()-q-m-o}}else{r=s.width()}}l[p]=r});return l};j.setWidth=function(m,k,l){k.each(function(n){var o=m[n];l.eq(n).css({"min-width":o,"max-width":o})})};j.resetWidth=function(k,l){k.each(function(m){var n=d(this);l.eq(m).css({"min-width":n.css("min-width"),"max-width":n.css("max-width")})})};j.setOptions=function(k){j.options=d.extend({},e,k);j.$window=d(j.options.objWindow);j.$head=d(j.options.objHead);j.$document=d(j.options.objDocument);j.$scrollableArea=d(j.options.scrollableArea);j.isWindowScrolling=j.$scrollableArea[0]===j.$window[0]};j.updateOptions=function(k){j.setOptions(k);j.unbind();j.bind();j.updateWidth();j.toggleHeaders()};j.init()}d.fn[a]=function(h){return this.each(function(){var i=d.data(this,"plugin_"+a);if(i){if(typeof h==="string"){i[h].apply(i)}else{i.updateOptions(h)}}else{if(h!=="destroy"){d.data(this,"plugin_"+a,new b(this,h))}}})}})(jQuery,window);
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.sticky-table-headers:stickytableheaders-resources', location = '/js/lib/utils.js' */
define("sticky-table-headers/utils",["jquery"],function(d){var c=function(m){return !m.hasClass("stickyTableHeaders")};var f=function(m){return !m.parents("table").length>0};var l=function(m){return m.find("> thead:first").is(":visible")};var b=function(m){return m.find("thead").children().length===1};var i=function(m){return !m.closest(".columnLayout").length>0};var h=function(){return !d("body").hasClass("theme-documentation")};var a=function(m){return m.find(".confluenceTh").parent().length===1};var j=function(m){return m.find(".confluenceTh").siblings().hasClass("confluenceTh")};var g=function(n){var m=d(n);return h()&&c(m)&&i(m)&&f(m)&&l(m)&&b(m)&&a(m)&&j(m)};var k=function(m,o){var n=o||d(window);m.closest(".table-wrap").scroll(function(){n.trigger("scroll.stickyTableHeaders")})};var e=function(m){d(m).each(function(){var r=d(this);var s=r.find(".confluenceTh[rowspan]").length>0;var o=r.find("> :first-child > :first-child .confluenceTh");var n=o.length&&o.closest("thead").length>0;var q=o.length&&o.parent().index()===0;if(f(r)&&i(r)&&!n&&q&&!s){var p=d("<thead />").append(o.parent());r.prepend(p)}})};return{isAValidTable:g,bindHorizontalScrolling:k,moveHeaderRowsToTHead:e,isNotDocumentationTheme:h}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.sticky-table-headers:stickytableheaders-resources', location = '/js/lib/viewpage.js' */
define("sticky-table-headers/viewpage",["jquery","ajs","sticky-table-headers/utils"],function(e,b,d){var c=function(h,g){var f=e(h).filter(function(){return d.isAValidTable(this)});f.stickyTableHeaders(g).addClass("stickyTableHeaders");b.bind("sticky-table-headers.change.options",function(i,j){f.stickyTableHeaders(j)});d.bindHorizontalScrolling(f)};var a=function(){var g=e(".confluenceTable");var j=e(window);if(!d.isNotDocumentationTheme()){return}d.moveHeaderRowsToTHead(g);if(window.MutationObserver){var i=document.querySelector("#page");var h=/sticky|tableFloating|confluenceTh/;var f=new MutationObserver(e.debounce(function(l){var n=false;var o;for(var m=0,k=l.length;m<k;m++){o=l[m].target.className;if(!h.test(o)){n=true;break}}if(n){j.trigger("resize.stickyTableHeaders")}},0));f.observe(i,{subtree:true,attributes:true,childList:true})}c(g,{cacheHeaderHeight:true})};return{initialize:a,setupTable:c}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.sticky-table-headers:stickytableheaders-resources', location = '/js/lib/editor.js' */
define("sticky-table-headers/editor",["ajs","jquery","sticky-table-headers/utils",],function(b,f,e){var d=function(g){var h={};h.objWindow=f(g.getWin());h.scrollableArea=h.objWindow;h.objDocument=f(g.getDoc());h.objHead=h.objDocument.find("head");return h};var c=function(k,h){var j=b.Rte.getEditor();if(j){var l=d(j);var i=f.extend({},l,h);var g=f(k).filter(function(){return e.isAValidTable(this)});g.stickyTableHeaders(i).addClass("stickyTableHeaders");e.bindHorizontalScrolling(g,i.objWindow)}};var a=function(){var h=b.Rte.getEditor();if(h){var g=f(h.getBody()).find(".confluenceTable");e.moveHeaderRowsToTHead(g);c(g)}};return{initialize:a,setupTable:c}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.sticky-table-headers:stickytableheaders-resources', location = '/js/stickytableheaders.js' */
define("sticky-table-headers",["ajs","sticky-table-headers/viewpage","sticky-table-headers/editor"],function(a,c,b){return{initialize:function(){if(!a.DarkFeatures.isEnabled("confluence-table-enhancements.sticky-headers.disabled")){a.toInit(c.initialize)}if(a.DarkFeatures.isEnabled("confluence-table-enhancements.sticky-headers-editor")){a.bind("rte-ready",b.initialize);a.bind("rte-quick-edit-push-state",b.initialize);a.bind("rte-quick-edit-push-hash",b.initialize)}}}});require("sticky-table-headers").initialize();
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.image.effects.ImageEffectsPlugin:propertiespanel', location = 'com/atlassian/confluence/image/effects/property-panel.js' */
AJS.toInit(function(e){var p,i=/(\?|\&)(effects\=[^&]+)($|&)/,t=/(^|\&)(effects\=([^&]+))($|&)/,s=null,j=[],h=2000;q();if(Confluence.Editor.ImageProps){f()}else{l()}function f(){AJS.bind("dialog-created.image-properties",function(x,y){p=y.img;var z="image-effects",w="image-effects-panel";if(!a()){Confluence.Editor.ImageProps.registerPanel(z,c("\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c \u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u044d\u0444\u0444\u0435\u043a\u0442\u044b \u043a \u043e\u043d\u043b\u0430\u0439\u043d-\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\u043c"),w,null)}else{if(!n()){Confluence.Editor.ImageProps.registerPanel(z,c("\u0420\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u0432\u0435\u043b\u0438\u043a\u043e \u0434\u043b\u044f \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u044d\u0444\u0444\u0435\u043a\u0442\u043e\u0432."),w,null)}else{Confluence.Editor.ImageProps.registerPanel("image-effects",c(),"image-effects-panel",r)}}});AJS.bind("dialog-before-show.image-properties",function(){b();o(m(e(p)))})}function l(){var w=new AJS.Dialog({width:600,height:500,id:"image-effects-dialog"});w.addHeader("\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u044d\u0444\u0444\u0435\u043a\u0442 \u043a \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044e");w.addPanel("",c(),"");b();w.addSubmit("\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c",function(){var x=v();x.done(function(){w.hide()})});w.addCancel("\u0417\u0430\u043a\u0440\u044b\u0442\u044c",function(){w.hide()});AJS.Confluence.PropertyPanel.Image.pluginButtons.push(null,{create:function(x){p=x[0];var z=m(x),y=!a();return{className:"image-effects",text:"\u042d\u0444\u0444\u0435\u043a\u0442\u044b...",tooltip:y?"\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c \u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u044d\u0444\u0444\u0435\u043a\u0442\u044b \u043a \u043e\u043d\u043b\u0430\u0439\u043d-\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\u043c":"\u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u044d\u0444\u0444\u0435\u043a\u0442, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0442\u0435\u043d\u044c \u0438\u043b\u0438 \u0440\u0430\u043c\u043a\u0443",click:function(){if(!n()){alert("\u0420\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u0432\u0435\u043b\u0438\u043a\u043e \u0434\u043b\u044f \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u044d\u0444\u0444\u0435\u043a\u0442\u043e\u0432.");return false}o(m(e(p)));AJS.Confluence.PropertyPanel.destroy();w.show()},disabled:y,selected:!!z}}})}function g(y,A){var B=y.attr("src");var x=i.exec(B);var w=A?"effects="+A:"";if(x){B=B.replace(x[2],w)}else{if(A){B=B+(B.indexOf("?")!=-1?"&":"?")+w}}y.attr("src",B);y.attr("data-mce-src",B);var z=y.attr("confluence-query-params");if(z){var x=t.exec(z);if(x){z=z.replace(x[2],w)}else{z=z+"&"+w}}else{z=w}y.attr("confluence-query-params",z)}function m(x){var y=x.attr("confluence-query-params");var w=t.exec(y);if(w){return w[3]}}function o(w){e(".image-effect-preview.selected").removeClass("selected");if(w){e(j).each(function(x,y){if(y.effects==w){e(e(".image-effect-preview")[x]).addClass("selected");return false}})}else{e(".image-effect-preview.image-effect-none").addClass("selected")}s=w}function q(){j.push({name:"\u041d\u0435\u0442",effects:null});j.push({name:"\u041f\u043b\u0435\u043d\u043a\u0430",effects:"border-simple,blur-border,tape"});j.push({name:"\u041c\u043e\u043c\u0435\u043d\u0442\u0430\u043b\u044c\u043d\u044b\u0439 \u0441\u043d\u0438\u043c\u043e\u043a",effects:"border-polaroid,blur-border"});j.push({name:"\u0417\u0430\u0432\u0438\u0442\u043e\u043a \u0441 \u0442\u0435\u043d\u044c\u044e",effects:"border-simple,shadow-kn"});j.push({name:"\u0421\u043d\u0438\u043c\u043e\u043a",effects:"border-simple,blur-border"});j.push({name:"\u0423\u0431\u0440\u0430\u0442\u044c \u0442\u0435\u043d\u044c",effects:"drop-shadow"})}function c(w){if(w){return'<div class="aui-message warning"><span class="aui-icon icon-warning"></span>'+w+"</div>"}return'<div class="image-effects"><ul class="image-list"></ul></div>'}function b(){var x=e("div.image-effects ul.image-list");var z=Math.floor(Math.random()*22)+1;for(var y=0;y<j.length;y++){var w=e('<li class="attached-image image-effect-preview'+(!j[y].effects?" image-effect-none":"")+'"><div class="image-container"><img class="thumbnail" src="'+AJS.contextPath()+"/plugins/servlet/imgFilter.png?preview=true&id="+z+"&effects="+j[y].effects+'" title="'+j[y].name+'" style="margin-top: 5px"></div><span class="caption filename" title="'+j[y].name+'">'+j[y].name+"</span></li>");w.hover(function(){e(this).addClass("hover")},function(){e(this).removeClass("hover")});x.append(w);var A=j[y];w.click(A,function(B){e(".image-effect-preview.selected").removeClass("selected");e(this).addClass("selected");s=B.data.effects})}}function a(){return !e(p).hasClass("confluence-external-resource")}function n(){return !(p.naturalHeight&&p.naturalWidth&&(p.naturalHeight*p.naturalWidth)>(h*h))}function r(){return u()}function v(){return u(d,k)}function u(w,z){var y=e.Deferred();w&&w();p.onload=A;var x=p.src;g(e(p),s);if(p.src==x){A()}function A(){z&&z();y.resolve();p.onload=null;tinyMCE.activeEditor.undoManager.add()}return y}function d(){var C=dialog.popup.element,x=50,z=x*13/60,D=x*30/60,w=x-D,y=e('<div class="image-properties-loading-blanket"><div class="loading-data"></div></div>').appendTo(C.find(".dialog-page-body")),B=y.find(".loading-data");y.css({width:y.parent().width(),height:C.height()});B.css({marginTop:-x*1.2,marginLeft:-x*1.2});var A={color:"#666",width:z,radius:D,length:w,top:0,left:0,zIndex:0,speed:1.042};B.spin(A)}function k(){var w=dialog.popup.element.find(".image-properties-loading-blanket .loading-data");w.css({marginTop:"",marginLeft:""});w.spinStop();w.closest(".image-properties-loading-blanket").remove()}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-browser-metrics:editor', location = '/js/editor.js' */
require(["internal/browser-metrics","jquery"],function(b,c){function a(){var h=AJS.Meta.get("content-type");var g=AJS.Meta.getBoolean("new-page")?"create":"edit";var f=c("body");var d=f.hasClass("edit")||f.hasClass("create");if(d&&h&&g){if(AJS.Meta.getBoolean("shared-drafts")&&AJS.Meta.getBoolean("synchrony-dark-enabled")){var e="confluence."+h+"."+g+".collaborative.view";b.start({key:e,isInitial:true});AJS.bind("synchrony.connected",function(){b.end({key:e})})}else{if(!AJS.Meta.getBoolean("shared-drafts")){b.start({key:"confluence."+h+"."+g+".view",ready:".active-richtext",isInitial:true})}}}}c(a)});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-image-attributes:soy-resources', location = 'soy/image-attributes-panel.soy' */
// This file was automatically generated from image-attributes-panel.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace Confluence.Templates.Editor.ImageAttributes.
 */

if (typeof Confluence == 'undefined') { var Confluence = {}; }
if (typeof Confluence.Templates == 'undefined') { Confluence.Templates = {}; }
if (typeof Confluence.Templates.Editor == 'undefined') { Confluence.Templates.Editor = {}; }
if (typeof Confluence.Templates.Editor.ImageAttributes == 'undefined') { Confluence.Templates.Editor.ImageAttributes = {}; }


Confluence.Templates.Editor.ImageAttributes.content = function(opt_data, opt_ignored) {
  return '<form class="aui" onsubmit="return false;"><div class="field-group"><label for="image-title-attribute">' + soy.$$escapeHtml("\u0422\u0435\u043a\u0441\u0442 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430") + '</label><input class="text" type="text" id="image-title-attribute" name="image-title-attribute" value="' + ((opt_data.imgTitle) ? soy.$$escapeHtml(opt_data.imgTitle) : '') + '"><div class="description">' + soy.$$escapeHtml("\u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u0438 \u043d\u0430\u0432\u0435\u0434\u0435\u043d\u0438\u0438 \u043a\u0443\u0440\u0441\u043e\u0440\u0430 \u043d\u0430 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435") + '</div></div><div class="field-group"><label for="image-alt-attribute">' + soy.$$escapeHtml("\u0410\u043b\u044c\u0442. \u0442\u0435\u043a\u0441\u0442") + '</label><input class="text" type="text" id="image-alt-attribute" name="image-alt-attribute" value="' + ((opt_data.imgAlt) ? soy.$$escapeHtml(opt_data.imgAlt) : '') + '"><div class="description">' + soy.$$escapeHtml("\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f, \u0435\u0441\u043b\u0438 \u043d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435") + '</div></div></form>';
};
if (goog.DEBUG) {
  Confluence.Templates.Editor.ImageAttributes.content.soyTemplateName = 'Confluence.Templates.Editor.ImageAttributes.content';
}

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-image-attributes:image-attributes', location = 'js/image-attributes-panel.js' */
define("confluence-image-attributes/image-attributes-panel",["jquery","ajs","confluence/legacy"],function(f,i,h){return function(){function j(){var a=c.val();d.attr({"data-element-title":a,title:k(d.attr("data-location"),a),alt:e.val()})}function k(a,b){return a&&0<a.length&&b&&0<b.length?a+" ("+b+")":a&&0<a.length?a:b&&0<b.length?"("+b+")":""}i.bind("dialog-created.image-properties",function(a,b){d=f(b.img);var g=f(h.Templates.Editor.ImageAttributes.content({imgTitle:d.attr("data-element-title"),
imgAlt:d.attr("alt")}));c=g.find("#image-title-attribute");e=g.find("#image-alt-attribute");c.val()===e.val()&&(c.bind("input.chained",function(){e.val(c.val())}),e.on("change",function(){c.unbind("input.chained")}));h.Editor.ImageProps.registerPanel(l,g,m,j)});var l="image-attributes",m="image-attributes-panel",d,c,e}});require("confluence/module-exporter").safeRequire("confluence-image-attributes/image-attributes-panel",function(f){require("ajs").toInit(f)});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.ext.newcode-macro-plugin:editor-scripts', location = 'scripts/paste-cleanup.js' */
AJS.$(document).bind("postPaste",function(b,a,c){AJS.$(c.node).find('span[class|="code"]').contents().unwrap();AJS.$(c.node).find('pre[class|="code"]').each(function(d,f){f.className=f.className.replace(/\bcode-.[^\s]*\b/gi,"")})});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-paste:paste-resources', location = 'js/clipboard-access.js' */
define("confluence-paste/clipboard-access",["jquery","ajs","window","tinymce"],function(c,b,g,h){return function(){var e={initializeEditor:function(){b&&b.Rte&&b.Rte.BootstrapManager?b.Rte.BootstrapManager.addOnInitCallback(function(){var a=b.Rte.getEditor();a?g.MutationObserver&&!c.browser.webkit?(new MutationObserver(function(a){for(var f=0;f<a.length;f++){var d=a[f];if(d.addedNodes.length)for(var b=0;b<d.addedNodes.length;b++)if("img"===d.addedNodes[b].localName){g.setTimeout(e.pasteFromDataURL,
0);return}}})).observe(a.getDoc(),{childList:!0,subtree:!0}):a.onPaste.add(function(a,b){if(e.onPaste(b))return!0;h.dom.Event.cancel(b);return!1}):b.log("Could not getEditor from adapter")}):b.log("Could not initialize pasteHandler on Confluence.Editor")},pasteFromDataURL:function(){var a=c('img[src^="data:image"]:not(".editor-inline-macro")',h.activeEditor.getDoc());c.each(a,function(){for(var a=this.src.substring(22,this.src.length),f=3*a.length/4,d=0,c=a.length-1;"="==a[c];c--)d++;b.Confluence.Uploader.upload([e.createUploadFile(a,
f-d,"base64")])});a.remove()},onPaste:function(a){return a&&a.clipboardData?e.pasteFromEvent(a):!0},showClipboardAccessError:function(){(new b.Dialog({width:400,closeOnOutsideClick:!0})).addPanel("alert",c("<div />",{text:"\u0412\u0430\u0448 \u0431\u0440\u0430\u0443\u0437\u0435\u0440 \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u0432\u0441\u0442\u0430\u0432\u043a\u0443 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0438\u0437 \u0431\u0443\u0444\u0435\u0440\u0430 \u043e\u0431\u043c\u0435\u043d\u0430."})).addButton("\u041e\u043a",function(a){a.remove()}).show().updateHeight()},pasteFromEvent:function(a){if(a&&a.clipboardData){if(a.clipboardData.items){a=a.clipboardData.items[0];if(!a||"file"!=a.kind)return!0;
a=a.getAsFile();a=e.createUploadFile(a,a.size);b.Confluence.Uploader.upload([a]);return!1}g.setTimeout(function(a){var b=c("img[src^='webkit-fake-url://']",h.activeEditor.getDoc());b.length&&(b.remove(),a.showClipboardAccessError())},0,this)}return!0},createUploadFile:function(a,b,c){var d=new Date,e=d.getMonth()+1;return{fileName:"image"+d.getFullYear()+"-"+e+"-"+d.getDate()+" "+d.getHours()+":"+d.getMinutes()+":"+d.getSeconds()+".png",fileSize:b,slice:function(b,c){return a.slice(b,b+c)},getAsBinary:function(){return a},
getData:function(){return a},encoding:c}}};e.initializeEditor(c);return e}});require("confluence/module-exporter").safeRequire("confluence-paste/clipboard-access",function(c){require("ajs").toInit(c)});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-paste:autoconvert-core', location = 'js/autoconvert/tinymce-autoconvert.js' */
define("confluence-paste/autoconvert/tinymce-autoconvert",["tinymce","ajs","jquery","document","confluence/api/constants"],function(k,h,e,n,o){function l(a){for(var d=l.options,a=d.parser[d.strictMode?"strict":"loose"].exec(a),c={},b=14;b--;)c[d.key[b]]=a[b]||"";c[d.q.name]={};c[d.key[12]].replace(d.q.parser,function(a,b,e){b&&(c[d.q.name][b]=e)});return c}var f=function(a){a.onUndo.add(this.cleanLinks);this.editor=a;this.weightedHandlers=[];this.handlers=[]};f.prototype={addHandler:function(a,d){this.weightedHandlers.push({handler:a,
weight:d||0});this.weightedHandlers.sort(function(a,b){return a.weight-b.weight});this.handlers=[];for(var c=this.weightedHandlers.length,b=0;b<c;b++)this.handlers.push(this.weightedHandlers[b].handler)},cleanLinks:function(a){e("a.atlassian-autoconvert",a.getDoc()).removeClass("atlassian-autoconvert");return!0},callHandlers:function(a){function d(a){if(a&&(1!==a.length||!a.attr("href")))return b(a);if(a)j=a,g=0,m=l(j.attr("href")),c(i.handlers[g],m,j);else if(g++,g<i.handlers.length)c(i.handlers[g],
m,j);else return b(j)}function c(a,b,c){var e=d,f;f=setTimeout(function(){h.log("Autoconvert: Callback #"+g+" failed to call continuation in time. If there is no subsequent log, the handler is improperly implemented and should be uninstalled.");e=function(){h.log("Autoconvert: Callback #"+g+" did eventualy return. Probably a slow async call.")};d()},k.plugins.Autoconvert.callbackTimeout);a(b,c,function(){var a=g;clearTimeout(f);e.apply(i,arguments);e=function(){h.log("Autoconvert: Callback #"+a+" called the continuation multiple times.")}})}
function b(a){i.editor.undoManager.beforeChange();var b=i.editor.selection,c=i.editor.selection.getBookmark();f.replaceWith(a);b.moveToBookmark(c);i.editor.undoManager.add()}var g=0,i=this,f=e(a),j=e(a).clone(),a=j.attr("href"),m=l(a.replace(/^(.*?\/\/[^/]*?\/.*?)(@)/,"$1%40"));0!==this.handlers.length&&c(this.handlers[0],m,j)}};f.callbackTimeout=5E3;f.convertMacroToDom=function(a,d,c){a={macro:a,contentId:h.Meta.get("content-id")};e.ajax({type:"POST",contentType:"application/json; charset=utf-8",
url:o.CONTEXT_PATH+"/rest/tinymce/1/macro/placeholder",data:e.toJSON(a),dataType:"text",success:d,error:c,timeout:45E3})};f.convertMacroToDomViaWikiText=function(a,d,c){var b=["{",a.name],g=!0;a.defaultParameterValue&&(b.push(":",a.defaultParameterValue),g=!1);for(var i in a.params)g?(b.push(":"),g=!1):b.push("|"),b.push(i,"=",a.params[i]);b.push("}");f.getHtmlFromWikiMarkup(b.join(""),function(a){d(e(a)[0])},function(){c()})};f.getHtmlFromWikiMarkup=function(a,d,c){a={wiki:a,entityId:h.Meta.get("content-id"),
spaceKey:h.Meta.get("space-key")};e.ajax({type:"POST",contentType:"application/json; charset=utf-8",url:o.CONTEXT_PATH+"/rest/tinymce/1/wikixhtmlconverter",data:e.toJSON(a),dataType:"text",success:d,error:c,timeout:45E3})};l.options={strictMode:!1,key:"source protocol authority userInfo user password host port relative path directory file query anchor".split(" "),q:{name:"queryKey",parser:/(?:^|&)([^&=]*)=?([^&]*)/g},parser:{strict:/^(?:([^:\/?#]+):)?(?:\/\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?))?((((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/,
loose:/^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/}};return{autoConverter:f,plugin:{init:function(a){function d(b,d,f){b=e(f.node).children("a");1===b.length&&("A"===b[0].tagName&&b.text()===b.attr("href"))&&(b.attr("class","atlassian-autoconvert"),setTimeout(function(){var b=e("a.atlassian-autoconvert",e(a.selection.getNode().ownerDocument)).removeClass("atlassian-autoconvert");
c.callHandlers(b)},0))}var c=new f(a);k.plugins.Autoconvert.autoConvert=c;a.onInit.add(function(){e(n).bind("postPaste",d);a.addCommand("addAutoconverter",function(a,d){c.addHandler(d)})});a.onRemove.add(function(){e(n).unbind("postPaste",d)})},getInfo:function(){return{longname:"Atlassian Autoconvert",author:"Atlassian",authorurl:"http://www.atlassian.com",infourl:"http://www.atlassian.com",version:"1.0"}}}}});
require("confluence/module-exporter").safeRequire("confluence-paste/autoconvert/tinymce-autoconvert",function(k){var h=require("tinymce");h.plugins.Autoconvert=k.autoConverter;h.create("tinymce.plugins.AutoconvertPlugin",k.plugin);h.PluginManager.add("autoconvert",h.plugins.AutoconvertPlugin)});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-paste:autoconvert-confluence', location = 'js/autoconvert/transformers/confluencepaste.js' */
define("confluence-paste/autoconvert/transformers/confluencepaste",["ajs","tinymce","jquery","document"],function(d,g,h,i){return function(){g.plugins.Autoconvert.autoConvert.addHandler(function(c,a,e){if(a=(a=c.authority===i.location.host)&&(!d.contextPath()||0===c.path.indexOf(d.contextPath()))){var a=d.contextPath()?c.path.substring(d.contextPath().length+1):c.path.substring(1),a=decodeURIComponent(a).split("/"),b;c.queryKey=c.queryKey||{};var f=function(a,b){return!b.anchor||0===b.anchor.indexOf("comment-")?
a:a+"#"+b.anchor.substring(b.anchor.indexOf("-")+1)};c.queryKey.focusedCommentId?(b="$"+c.queryKey.focusedCommentId,b=f(b,c)):c.queryKey.pageId?(b="$"+c.queryKey.pageId,b=f(b,c)):"display"===a[0]?2===a.length&&0===a[1].indexOf("~")?b=a[1]:3===a.length?(b=a[1]+":"+a[2].replace(/\+/g," "),b=f(b,c)):4===a.length&&"status"===a[1]?b="$"+a[3]:6===a.length&&(b=a[1]+":/"+a[2]+"/"+a[3]+"/"+a[4]+"/"+a[5].replace(/\+/g," "),b=f(b,c)):"users"==a[0]&&(2===a.length&&"viewuserprofile.action"==a[1]?b="~"+c.queryKey.username:
2===a.length&&"viewmyprofile.action"==a[1]&&(b="~"+d.Meta.get("remote-user")));b?g.plugins.Autoconvert.getHtmlFromWikiMarkup("["+b+"]",function(a){e(h(a).children()[0])},function(){e()}):e()}else e()})}});require("confluence/module-exporter").safeRequire("confluence-paste/autoconvert/transformers/confluencepaste",function(d){require("ajs").bind("init.rte",d)});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-paste:autoconvert-youtu.be-rewrite', location = 'js/autoconvert/transformers/youtube.js' */
define("confluence-paste/autoconvert/transformers/youtube",["tinymce","jquery"],function(a,d){return function(){a.plugins.Autoconvert.autoConvert.addHandler(function(b,a,c){b.host.match(".*youtu.be.*")?(b="http://youtube.com/watch?v="+b.path.substr(1),c(d(a).attr("href",b).html(b))):c()})}});require("confluence/module-exporter").safeRequire("confluence-paste/autoconvert/transformers/youtube",function(a){require("ajs").bind("init.rte",a)});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-paste:autoconvert-skitch', location = 'js/autoconvert/transformers/skitchpaste.js' */
define("confluence-paste/autoconvert/transformers/skitchpaste",["ajs","jquery","confluence/api/constants"],function(a,b,c){return{pasteHandler:function(a,e,d){"www.skitch.com"===a.host||"skitch.com"===a.host?b.get(c.CONTEXT_PATH+"/rest/autoconvert/1.0/skitchembed?url="+a.source,function(a){a&&a.url?d(b('<img class="confluence-embedded-image confluence-external-resource" src="'+a.url+'" data-image-src="'+a.url+'"/>')[0]):d()}):d()}}});
require("confluence/module-exporter").safeRequire("confluence-paste/autoconvert/transformers/skitchpaste",function(a){var b=require("ajs"),c=require("tinymce");b.bind("init.rte",function(){b.Editor.SkitchPaste=a;c.plugins.Autoconvert.autoConvert.addHandler(a.pasteHandler)})});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-paste:autoconvert-cloudapp', location = 'js/autoconvert/transformers/cloudapppaste.js' */
define("confluence-paste/autoconvert/transformers/cloudapppaste",["ajs","jquery","confluence/api/constants"],function(b,c,e){return function(g,f,d){"cl.ly"==g.host?c.get(e.CONTEXT_PATH+"/rest/autoconvert/1.0/cloudappembed?resource="+g.path.substr(1),function(a){if(a)switch(a.item_type){case "image":a=b.escapeHtml(a.content_url);d(c('<img class="confluence-embedded-image confluence-external-resource" src="'+a+'" data-image-src="'+a+'"/>')[0]);break;case "bookmark":f.text(a.name),f.attr("href",b.escapeHtml(a.redirect_url)),
d(f)}else d()}):d()}});require("confluence/module-exporter").exportModuleAsGlobal("confluence-paste/autoconvert/transformers/cloudapppaste","AJS.Editor.CloudAppPaste",function(b){var c=require("ajs"),e=require("tinymce");c.bind("init.rte",function(){e.plugins.Autoconvert.autoConvert.addHandler(b)})});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-paste:autoconvert-widget-connector', location = 'js/autoconvert/transformers/widgetpaste.js' */
define("confluence-paste/autoconvert/transformers/widgetpaste",["tinymce"],function(a){return function(){var e=[/youtube.com\/watch\?/,/vimeo.com\/[0-9]+/,/maps.google(.[a-z]+)+\/maps/,/[^\.]\.wufoo\.com\/(?:forms|reports)/];a.plugins.Autoconvert.autoConvert.addHandler(function(b,c,d){b=decodeURI(b.source);for(c=0;c<e.length;c++)if(b.match(e[c])){a.plugins.Autoconvert.convertMacroToDom({name:"widget",params:{url:b}},d,d);return}d()})}});
require("confluence/module-exporter").safeRequire("confluence-paste/autoconvert/transformers/widgetpaste",function(a){require("ajs").bind("init.rte",a)});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-paste:autoconvert-widget-connector', location = 'js/autoconvert/transformers/flickrpaste.js' */
define("confluence-paste/autoconvert/transformers/flickrpaste",["tinymce"],function(b){return function(){var e=/^\/photos\/tags\/[^/]+/,f=/^\/photos\/[^/]+\/sets\/[0-9]+/,g=/^\/photos\/[^/]+\/[0-9]+/;b.plugins.Autoconvert.autoConvert.addHandler(function(a,c,d){a.host.match(/flickr.com/)?(c=decodeURIComponent(a.path),c.match(e)||c.match(f)||c.match(g)?(a={name:"widget",params:{url:decodeURI(a.source)}},b.plugins.Autoconvert.convertMacroToDom(a,d,d)):d()):d()})}});
require("confluence/module-exporter").safeRequire("confluence-paste/autoconvert/transformers/flickrpaste",function(b){require("ajs").bind("init.rte",b)});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-paste:autoconvert-shortcut-links', location = 'js/autoconvert/transformers/shortcutlinks.js' */
define("confluence-paste/autoconvert/transformers/shortcutlinks",["ajs","tinymce","jquery"],function(e,k,i){return function(){var f=[],j;j=e.contextPath()?e.contextPath():"";k.plugins.Autoconvert.autoConvert.addHandler(function(a,c,g){if(a.source===c.text())for(var h=0;h<f.length;h++){var b=f[h],d=a.source.match(b.regex);if(d){a=d[1];if(b.defaultAlias){b=b.defaultAlias.replace(/%s/,a);g(i(c).text(b));return}g(i(c).text(a));return}}g()});setTimeout(function(){i.ajax({url:j+"/rest/autoconvert/latest/shortcutlinkconfigurations",
type:"GET",dataType:"json",success:function(a){f=a.configurations;for(a=0;a<f.length;a++){var c=f[a];try{var g=c,h=RegExp,b;var d=c.expandedValue;b=0<=d.indexOf("%s")?d.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&").replace("%s","(.*)"):d.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&")+"(.*)";g.regex=new h(b)}catch(e){console.log("Failed to generated regex for "+c)}}},error:function(a){console.log("Failed to load shortcut link configurations "+a.statusText)}})},0)}});
require("confluence/module-exporter").safeRequire("confluence-paste/autoconvert/transformers/shortcutlinks",function(e){require("ajs").bind("init.rte",e)});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-paste:autoconvert-google-redirect', location = 'js/autoconvert/transformers/google-redirect-convert.js' */
define("confluence-paste/autoconvert/transformers/google-redirect-convert",["jquery","tinymce"],function(c,e){return function(){e.plugins.Autoconvert.autoConvert.addHandler(function(a,b,d){a.host.match(/google.*/)&&"/url"===a.path&&a.queryKey&&a.queryKey.url?(a=decodeURIComponent(a.queryKey.url),b=c(b),b.attr("href",a),b.attr("data-mce-href",a),b.text(a),d(b)):d()})}});
require("confluence/module-exporter").safeRequire("confluence-paste/autoconvert/transformers/google-redirect-convert",function(c){require("ajs").bind("init.rte",c)});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-sortable-tables:ConfluenceSortableTablesEditorPlugin', location = 'js/editor_plugin_src.js' */
define("confluence-sortable-tables/tinymce-plugin",["jquery","document"],function(d,a){return{init:function(e){var c=function(a,e,c){d(".tablesorter",c.node).each(function(a,c){var b=d(c).find("thead"),e,f;1===b.length&&(b=b[0],"THEAD"===b.nodeName&&1===b.childNodes.length&&(f=b.removeChild(b.childNodes[0]),e=d(c).find("tbody")[0],c.removeChild(b),e.insertBefore(f,e.childNodes[0])))})};e.onInit.add(function(){d(a).bind("postPaste",c)});e.onRemove.add(function(){d(a).unbind("postPaste",c)})},getInfo:function(){return{longname:"ConfluenceSortableTablesPlugin",
author:"Atlassian",authorurl:"http://www.atlassian.com",infourl:"http://www.atlassian.com",version:"1.0"}}}});require("confluence/module-exporter").safeRequire("confluence-sortable-tables/tinymce-plugin",function(d){var a=require("tinymce");a.create("tinymce.plugins.ConfluenceSortableTablesPlugin",d);a.PluginManager.add("confluencesortabletablesplugin",a.plugins.ConfluenceSortableTablesPlugin)});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'confluence.macros.advanced:editor_includemacro', location = 'com/atlassian/confluence/plugins/macros/advanced/js/include-macro.js' */
AJS.bind("init.rte",function(){var b=AJS.Meta.get("context-path"),d=AJS.Meta.get("content-id"),c="plugins/servlet/confluence/include-page-macro/goto",a=function(e){var j=AJS.$(e),f=j.attr("data-macro-default-parameter"),h=b+"/"+c+"?location="+f+"&contentId="+d,g=(AJS.$.browser&&AJS.$.browser.msie)?"_blank":"confluence-goto-link-include-macro-"+e.id,i=window.open(h,g);if(i){i.focus()}};AJS.Confluence.PropertyPanel.Macro.registerButtonHandler("goto-page",function(g,f){a(f)})});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-page-layout:pagelayout', location = 'js/pagelayout/page-layout.soy' */
// This file was automatically generated from page-layout.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace Confluence.Templates.PageLayout.
 */

if (typeof Confluence == 'undefined') { var Confluence = {}; }
if (typeof Confluence.Templates == 'undefined') { Confluence.Templates = {}; }
if (typeof Confluence.Templates.PageLayout == 'undefined') { Confluence.Templates.PageLayout = {}; }


Confluence.Templates.PageLayout.contentLayout = function(opt_data, opt_ignored) {
  return '<div class="contentLayout"></div>';
};
if (goog.DEBUG) {
  Confluence.Templates.PageLayout.contentLayout.soyTemplateName = 'Confluence.Templates.PageLayout.contentLayout';
}


Confluence.Templates.PageLayout.cellLayout = function(opt_data, opt_ignored) {
  return '<div class="cell"><div class="innerCell"></div></div>';
};
if (goog.DEBUG) {
  Confluence.Templates.PageLayout.cellLayout.soyTemplateName = 'Confluence.Templates.PageLayout.cellLayout';
}


Confluence.Templates.PageLayout.smallCellLayout = function(opt_data, opt_ignored) {
  return '<div class="cell aside"><div class="innerCell"></div></div>';
};
if (goog.DEBUG) {
  Confluence.Templates.PageLayout.smallCellLayout.soyTemplateName = 'Confluence.Templates.PageLayout.smallCellLayout';
}


Confluence.Templates.PageLayout.headerLayout = function(opt_data, opt_ignored) {
  return '<div class="header"><div class="innerCell"></div></div>';
};
if (goog.DEBUG) {
  Confluence.Templates.PageLayout.headerLayout.soyTemplateName = 'Confluence.Templates.PageLayout.headerLayout';
}


Confluence.Templates.PageLayout.footerLayout = function(opt_data, opt_ignored) {
  return '<div class="footer"><div class="innerCell"></div></div>';
};
if (goog.DEBUG) {
  Confluence.Templates.PageLayout.footerLayout.soyTemplateName = 'Confluence.Templates.PageLayout.footerLayout';
}


Confluence.Templates.PageLayout.columnLayout = function(opt_data, opt_ignored) {
  return '<div class="columnLayout"></div>';
};
if (goog.DEBUG) {
  Confluence.Templates.PageLayout.columnLayout.soyTemplateName = 'Confluence.Templates.PageLayout.columnLayout';
}


Confluence.Templates.PageLayout.emptyLayout2 = function(opt_data, opt_ignored) {
  return '<div class="contentLayout2">' + Confluence.Templates.PageLayout.emptySection2(null) + '</div>';
};
if (goog.DEBUG) {
  Confluence.Templates.PageLayout.emptyLayout2.soyTemplateName = 'Confluence.Templates.PageLayout.emptyLayout2';
}


Confluence.Templates.PageLayout.emptySection2 = function(opt_data, opt_ignored) {
  return '<div class="columnLayout single" data-layout="single">' + Confluence.Templates.PageLayout.cell2({type: 'normal'}) + '</div>';
};
if (goog.DEBUG) {
  Confluence.Templates.PageLayout.emptySection2.soyTemplateName = 'Confluence.Templates.PageLayout.emptySection2';
}


Confluence.Templates.PageLayout.newSection2 = function(opt_data, opt_ignored) {
  return '<div class="columnLayout single" data-layout="single">' + Confluence.Templates.PageLayout.cell2({type: 'normal'}) + '</div>';
};
if (goog.DEBUG) {
  Confluence.Templates.PageLayout.newSection2.soyTemplateName = 'Confluence.Templates.PageLayout.newSection2';
}


Confluence.Templates.PageLayout.cell2 = function(opt_data, opt_ignored) {
  return '<div class="cell ' + soy.$$escapeHtml(opt_data.type) + '" data-type="' + soy.$$escapeHtml(opt_data.type) + '"><div class="innerCell">' + ((opt_data.content) ? soy.$$filterNoAutoescape(opt_data.content) : '') + '</div></div>';
};
if (goog.DEBUG) {
  Confluence.Templates.PageLayout.cell2.soyTemplateName = 'Confluence.Templates.PageLayout.cell2';
}

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-page-layout:pagelayout', location = 'js/pagelayout/tinymce-page-layout.js' */
define("confluence-page-layout/pagelayout/tinymce-page-layout",["jquery","ajs","tinymce"],function(e,f,c){function j(a){a=e(a.getBody());if(a.children(".contentLayout").length)return!1;a.children(".contentLayout2");return!0}var i=function(a){var c=e("#pagelayout-menu"),h=e(".icon-check",c);i=function(a){var b=h.not(".hidden"),a=h.siblings("."+a.name).siblings();b.addClass("hidden");a.removeClass("hidden")};i(a)};return{init:function(a){function l(){j(a)||c.plugins.PageLayoutPlugin.PageLayout.needsContentEditableBody(b.getLayout())||
c.webkit||f.Rte.editorFocus(a)}function h(){c.isGecko&&setTimeout(function(){a.focus();a.dom.getRoot().focus()},1)}function k(){var g=e("#pagelayout-menu").parent(),d=e("#page-layout-2-group");j(a)?(g.addClass("hidden"),d.removeClass("hidden"),b=new c.plugins.PageLayoutPlugin.PageLayout2(a),c.plugins.PageLayoutPlugin.PageLayout2.needsContentEditableBody()&&e(a.getBody()).attr("contenteditable","true")):(g.removeClass("hidden"),d.addClass("hidden"),b=new c.plugins.PageLayoutPlugin.PageLayout(a),c.plugins.PageLayoutPlugin.PageLayout.needsContentEditableBody(b.getLayout())?
b.body.attr("contenteditable","true"):h(),i(b.getLayout()))}var b;this.ed=a;"comment"!==f.Meta.get("content-type")&&(a.onInit.add(function(){a.undoManager.clear();a.undoManager.add();k();f.bind("editor.external.change",function(){b.setup()});f.bind("rte-ready",function(){var b=e('[contenteditable="true"]',a.getBody()),d=!1!==f.Meta.get("editor-auto-focus");b.attr("contenteditable","false");b.attr("contenteditable","true");d&&f.Rte.editorFocus(a)});a.selection.onSetContent.add(l);j(a)&&a.undoManager.onUndo.add(function(){c.plugins.PageLayoutPlugin.PageLayout2.needsContentEditableBody()&&
b.body.attr("contenteditable","true");h()})}),e("#pagelayout-menu").delegate("li.dropdown-item a","click",function(){a.execCommand("mcePageLayout",!1,c.plugins.PageLayoutPlugin.PageLayout.getLayoutOptions(this))}),a.addCommand("mcePageLayoutInitialize",function(){a.undoManager.add();b.createInitialLayoutIfNone()}),a.addCommand("mcePageLayout",function(g,d){a.undoManager.add();b.setLayout(d);i(b.getLayout())}),a.addCommand("mcePageLayoutAddSection",function(g,d){a.undoManager.add();b.addSection&&b.addSection(d&&
d.section)}),a.addCommand("mcePageLayoutChangeSection",function(g,d){a.undoManager.add();b.changeSection&&b.changeSection(d&&d.layout,d&&d.section)}),a.addCommand("mcePageLayoutRemoveSection",function(g,d){a.undoManager.add();b.removeSection&&b.removeSection(d&&d.section)}),a.addCommand("mcePageLayoutMoveSectionUp",function(g,d){a.undoManager.add();b.moveSectionUp&&b.moveSectionUp(d&&d.section)}),a.addCommand("mcePageLayoutMoveSectionDown",function(g,d){a.undoManager.add();b.moveSectionDown&&b.moveSectionDown(d&&
d.section)}),a.onSetContent.add(k),a.onClick.add(function(a,d){var b=e(d.target);b.is("div.cell")&&b.children(".innerCell").focus();if(c.isWebKit&&(d.target===a.getBody()||d.target===a.getBody().parentNode))b=b.find(".innerCell"),b.length&&(a.execCommand("selectAll"),b=d.target!==a.getBody(),a.selection.collapse(b))}),!c.isIE9&&a.onKeyUp.add(function(a,b){var c=b.keyCode;if(8!==c&&46!==c)return!0;c=a.selection.getRng(!0).startContainer;if(e(c).closest(".contentLayout,.contentLayout2",a.getBody()).length&&
(c=e(c).closest(".innerCell"))&&c.length&&a.dom.isEmpty(c.clone()[0]))c.html('<p><br data-mce-bogus="1"></p>'),a.selection.select(c[0],!0),a.selection.collapse(!0)}))},execCommand:function(a){if("selectAll"===a){var a=this.ed,c=a.getBody(),e,f;if("true"==a.dom.getAttrib(c,"contenteditable"))return!1;e=a.dom.select(".innerCell",c);c=e[0];e=e[e.length-1];f=a.dom.createRng();f.setStart(c,0);f.setEnd(e,e.childNodes.length);a.selection.setRng(f);return!0}return!1},getInfo:function(){return{longname:"Page Layout Plugin",
author:"Atlassian",authorurl:"http://www.atlassian.com",infourl:"http://www.atlassian.com",version:"1.0"}}}});require("confluence/module-exporter").safeRequire("confluence-page-layout/pagelayout/tinymce-page-layout",function(e){var f=require("tinymce");f.create("tinymce.plugins.PageLayoutPlugin",e);f.PluginManager.add("pagelayoutplugin",f.plugins.PageLayoutPlugin)});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-page-layout:pagelayout', location = 'js/pagelayout/page-layout.js' */
define("confluence-page-layout/pagelayout/page-layout",["jquery","confluence/templates","ajs"],function(c,k,r){var h=function(a){this.editor=a;this.body=c(a.getBody());this.setup()};h.DEFAULT_LAYOUT={name:"pagelayout-none",columns:0};h.prototype.setup=function(){var a=c(".contentLayout",this.body);a.length?(n(a),o(a,this.body,this.editor),this.editor.undoManager.add()):this.body.attr("contenteditable","true")};h.prototype.setLayout=function(a){var g=require("tinymce"),b;b=c(".contentLayout",this.body);
if(h.getLayoutOptions(b).name!==a.name){r.trigger("analyticsEvent",{name:"PageLayoutEvent.pageLayoutChanged",data:{name:a.name}});if(1===b.length)b=b.clone();else{var d=this.editor;b=this.body;var e=k.PageLayout.contentLayout(),d=d.dom.create("div");d.innerHTML=e;b=c(d).children().html(b.html())}n(b);var e=b,d=c(".columnLayout > .cell",e).length,i=a.name,j=a.columns,f;if(0===d){f=e.html();for(e.html(k.PageLayout.columnLayout());d!==j.length;)p(e),d++}i=i.substring(i.indexOf("-")+1);i=i.substring(0,
Math.max(0,i.indexOf("-"))||void 0);c(".columnLayout",e).attr("class","columnLayout "+i+"Columns");if(j)for(c(".columnLayout > .cell",e).each(function(a,b){void 0!==j[a]&&c(b).attr("class","cell "+j[a])});d!==j.length;)if(d<j.length)p(e),d++;else{var i=c(".columnLayout .cell:nth-child("+d+") .innerCell",e),s=c(".columnLayout > .cell:nth-child("+(d-1)+") .innerCell",e),t=l(i);s.append(t);i.parent().remove();d--}else{var m="";c(".columnLayout > .cell",e).each(function(){m+=l(c(".innerCell",this))});
c(".columnLayout",e).replaceWith(m)}f&&q(e).html(f);a.header?(f=b,c(".header",f).length||f.prepend(k.PageLayout.headerLayout())):(e=b,f=c(".header",e),e=q(e),d=l(c(".innerCell",f)),e.length?(e.prepend(d),f.remove()):f.replaceWith(d));a.footer?(f=b,c(".footer",f).length||f.append(k.PageLayout.footerLayout())):(e=b,f=c(".footer",e),e=c(".columnLayout > .cell:last-child .innerCell",e),d=l(c(".innerCell",f)),e.length?(e.append(d),f.remove()):f.replaceWith(d));h.needsContentEditableBody(a)?(b=b.contents().unwrap(),
this.body.attr("contenteditable","true")):(o(b,this.body,this.editor),b.attr("data-atlassian-layout",JSON.stringify(a)));this.body.empty().append(b);g.isIE&&this.editor.dom.setRoot();b=this.editor;a=b.selection;g=a.getRng(!0);f=c('[contenteditable="true"]',b.getBody());f.length?(b.focus(),f[0].focus(),b=f.children()[0],g.setStart(b,0),g.setEnd(b,0),a.setRng(g)):b.focus()}};h.prototype.getLayout=function(){var a=c(".contentLayout",this.body);return a.length&&a.attr("data-atlassian-layout")?JSON.parse(a.attr("data-atlassian-layout")):
h.DEFAULT_LAYOUT};h.getLayoutOptions=function(a){return(a=(a.jquery?a:c(a)).attr("data-atlassian-layout"))?JSON.parse(a):h.DEFAULT_LAYOUT};h.needsContentEditableBody=function(a){return!(a.header||a.footer||a.columns)};var l=function(a){a=a.jquery?a:c(a);if(a.length)for(var g=a[0].childNodes,b=0;b<g.length;b++){var d=g[b];if(!("P"===d.nodeName&&1===d.childNodes.length&&"BR"===d.firstChild.nodeName))return a.html()}return""},n=function(a){for(var g,b,a=c(".cell, .header, .footer",a),d=0,e=a.length;d<
e;d++)g=c(a[d]),b=g.html(),c(".innerCell",g).length||(g.removeAttr("contenteditable"),g.html('<div class="innerCell">'+b+"</div>"))},o=function(a,g,b){var d=require("tinymce");g.attr("contenteditable","false");c(".innerCell",a).each(function(){var a=c(this);a.attr("contenteditable","true");a.children().length||a.append("<p><br /></p>")});d.isIE&&g.delegate(".innerCell","focus.pageLayout",function(){b.dom.settings.root_element=this})},q=function(a){return c(".columnLayout > .cell:first-child .innerCell",
a)},p=function(a){return c(".columnLayout",a).append(k.PageLayout.cellLayout())};return h});require("confluence/module-exporter").exportModuleAsGlobal("confluence-page-layout/pagelayout/page-layout","tinymce.plugins.PageLayoutPlugin.PageLayout");
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-page-layout:pagelayout', location = 'js/pagelayout/page-layout-2.js' */
define("confluence-page-layout/pagelayout/page-layout-2",["jquery","confluence/templates","ajs"],function(h,n,f){function q(a,b,c,d){var e=a.find(".cell"),f=e.length,i=h(),l=b.cells.length,j=[],m=[],g,k;a.attr("class","columnLayout");a.addClass(b.id);a.attr("data-layout",b.id);g=0;for(k=f;g<k;g++)m=e.eq(g).detach(),j.push(s(m.children(".innerCell")));g=0;for(k=l;g<k;g++)i=i.add(n.PageLayout.cell2({type:b.cells[g].type||""}));if(f<=l)m=j;else{m=j.slice(0,l);g=l;for(k=f;g<k;g++)m[l-1]+=j[g]}a.prepend(i);
g=0;for(k=l;g<k;g++)i.eq(g).find(".innerCell").html(m[g]);p(a,c,d)}var e=function(a){this.editor=a;this.body=h(a.getBody());this.setup()};e.prototype.setup=function(){var a=this.body.find(".contentLayout2");a.length?(p(a,this.body,this.editor),this.editor.undoManager.add()):this.body.attr("contenteditable","true")};e.prototype.addSection=function(a){var b=this,c=h(n.PageLayout.newSection2()),d=a||i(this.body,this.editor,!0);if(d.length){var o=e.Layouts.get(d.attr("data-layout"));this.editor.undoManager.ignore(function(){q(c,
o,b.body,b.editor);d.after(c)});j(this.editor,c);f.trigger("editor.page-layout.add-section",{section:c})}else this.createInitialLayoutIfNone()};e.prototype.changeSection=function(a,b){var c=this;e.isPageLayout()||this.createInitialLayoutIfNone();var d=b||i(this.body,this.editor,!1);if(d.length){var o=e.Layouts.get(d.attr("data-layout"));this.editor.undoManager.ignore(function(){q(d,a,c.body,c.editor)});j(this.editor,d);f.trigger("editor.page-layout.change-layout",{section:d,originalLayout:o,currentLayout:a})}};
e.prototype.removeSection=function(a){if(e.isPageLayout()){var a=a||i(this.body,this.editor,!0),b=a.next(),c=a.prev(),d;b.length?(d=b,a.remove()):c.length?(d=c,a.remove()):(a.closest(".contentLayout2").remove(),a=this.body.find(".contentLayout2").find(".columnLayout").first(),a.length?d=a:(a=this.editor,a.getBody().setAttribute("contenteditable",!0),a.setContent("<p></p>"),r(a),a=h("#rte-button-pagelayout-2"),a.hasClass("active")&&a.click()));d&&d.length&&j(this.editor,d);f.trigger("editor.page-layout.remove-section",
{})}};e.prototype.moveSectionUp=function(a){if(e.isPageLayout()){var a=a||i(this.body,this.editor,!0),b=a.prev();b.length&&(a.detach(),b.before(a),j(this.editor,a));f.trigger("editor.page-layout.move-section-up",{section:a})}};e.prototype.moveSectionDown=function(a){if(e.isPageLayout()){var a=a||i(this.body,this.editor,!0),b=a.next();b.length&&(a.detach(),b.after(a),j(this.editor,a));f.trigger("editor.page-layout.move-section-down",{section:a})}};e.prototype.createInitialLayoutIfNone=function(){if(!e.isPageLayout()){var a=
h(n.PageLayout.emptyLayout2()),b=a.find(".innerCell"),c=this.body.children().detach();b.append(c);this.body.append(a);p(a,this.body,this.editor);r(this.editor)}};e.isPageLayout=function(){return!!h(f.Rte.getEditor().getBody()).find("div.contentLayout2").length};e.needsContentEditableBody=function(){return!e.isPageLayout()};e.Layouts=[{id:"single",icon:"1col",name:"\u041e\u0434\u0438\u043d\u043e\u0447\u043d\u044b\u0439 \u0431\u043b\u043e\u043a",cells:[{type:"normal"}]},{id:"two-equal",icon:"2col",name:"\u0411\u043b\u043e\u043a \u0441 \u0434\u0432\u0443\u043c\u044f \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u043c\u0438",
cells:[{type:"normal"},{type:"normal"}]},{id:"two-left-sidebar",icon:"2col-right",name:"\u0411\u043b\u043e\u043a \u0441 \u0434\u0432\u0443\u043c\u044f \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u043c\u0438 \u0441 \u043b\u0435\u0432\u043e\u0439 \u0431\u043e\u043a\u043e\u0432\u043e\u0439 \u043f\u0430\u043d\u0435\u043b\u044c\u044e",cells:[{type:"aside"},{type:"normal"}]},{id:"two-right-sidebar",icon:"2col-left",name:"\u0411\u043b\u043e\u043a \u0441 \u0434\u0432\u0443\u043c\u044f \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u043c\u0438 \u0441 \u043f\u0440\u0430\u0432\u043e\u0439 \u0431\u043e\u043a\u043e\u0432\u043e\u0439 \u043f\u0430\u043d\u0435\u043b\u044c\u044e",cells:[{type:"normal"},{type:"aside"}]},{id:"three-equal",icon:"3col",name:"\u0411\u043b\u043e\u043a \u0441 \u0442\u0440\u0435\u043c\u044f \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u043c\u0438",cells:[{type:"normal"},{type:"normal"},{type:"normal"}]},{id:"three-with-sidebars",icon:"3col-center",
name:"\u0411\u043b\u043e\u043a \u0441 \u0442\u0440\u0435\u043c\u044f \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u043c\u0438 \u0441 \u0431\u043e\u043a\u043e\u0432\u044b\u043c\u0438 \u043f\u0430\u043d\u0435\u043b\u044f\u043c\u0438",cells:[{type:"sidebars"},{type:"normal"},{type:"sidebars"}]}];e.Layouts.get=function(a){for(var b=e.Layouts,c=0,d=b.length;c<d;c++)if(b[c].id===a)return b[c];return null};e.Layouts.findNearestSection=function(a){var b=f.Rte.getEditor(),c=h(b.getBody());return i(c,b,a)};var s=function(a){a=h(a);if(a.length)for(var b=a[0].childNodes,c=0;c<b.length;c++){var d=b[c];if(!("P"===d.nodeName&&1===d.childNodes.length&&"BR"===d.firstChild.nodeName))return a.html()}return""},
i=function(a,b,c){b=h(b.selection.getRng(!0).startContainer).closest(".columnLayout");!b.length&&c&&(b=a.find(".columnLayout").last());return b},p=function(a,b,c){var d=require("tinymce");b.attr("contenteditable","false");h(".innerCell",a).each(function(){var a=h(this);a.attr("contenteditable","true");a.children().length||a.append("<p><br /></p>")});d.isIE&&b.delegate(".innerCell","focus.pageLayout",function(){c.dom.settings.root_element=this})},r=function(a){var b=a.selection,c=b.getRng(!0),d=h('[contenteditable="true"]',
a.getBody());d.length?(a.focus(),d[0].focus(),a=d.children()[0],c.setStart(a,0),c.setEnd(a,0),b.setRng(c)):a.focus()},j=function(a,b){var c=a.selection,d=c.getRng(!0),e=b.find('[contenteditable="true"]').first(),h=e.children();h.length?(a.focus(),e[0].focus(),e=h[0],d.setStart(e,0),d.setEnd(e,0),c.setRng(d),f.Rte.showElement(e)):a.focus()};return e});require("confluence/module-exporter").exportModuleAsGlobal("confluence-page-layout/pagelayout/page-layout-2","tinymce.plugins.PageLayoutPlugin.PageLayout2");
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-page-layout:pagelayout', location = 'js/pagelayout/tinymce-page-layout-toolbar.js' */
define("confluence-page-layout/pagelayout/tinymce-page-layout-toolbar",["jquery","ajs","tinymce","document","confluence/legacy"],function(d,b,e,f,a){var i=function(a){var a=a||e.plugins.PageLayoutPlugin.PageLayout2.Layouts.findNearestSection(),c=a.attr("data-layout"),a=d("#rte-toolbar-row-pl2-toolbar").find(".layouts button"),c=a.find(".pl2-layout-"+c).closest(".aui-button");c.hasClass("active")||(a.filter(".active").removeClass("active"),c.addClass("active"))};return{initContextToolbars:function(p,
c){var j=d(f),m=d("#page-layout-2"),g=d("#rte-button-pagelayout-2");c.addCommand("mcePageLayoutsToolbar",function(){g.hasClass("active")?j.trigger("removeContextToolbarRow.Toolbar",{id:"pl2-toolbar",animate:!0}):(j.trigger("createContextToolbarRow.Toolbar",{id:"pl2-toolbar",buttons:a.Editor.PageLayoutToolbar.Buttons,topToolbar:!0,animate:!0}),i(),c.execCommand("mcePageLayoutInitialize"));g.toggleClass("active")});g.click(function(a){a.preventDefault();m.hasClass("disabled")||c.execCommand("mcePageLayoutsToolbar",
!1,null)});c.onNodeChange.add(function(a,c,b){a=d(b).closest(".columnLayout");i(a)});for(var k=e.plugins.PageLayoutPlugin.PageLayout2.Layouts,l=[],n=function(b){l.push(new a.Editor.Toolbar.Components.Button({text:b.name,iconClass:"aui-icon aui-icon-small aui-iconfont-layout-"+b.icon+"-large",click:function(){c.execCommand("mcePageLayoutChangeSection",!1,{layout:b})}}))},h=0,o=k.length;h<o;h++)n(k[h]);return{Buttons:[new a.Editor.Toolbar.Components.Group([new a.Editor.Toolbar.Components.Button({triggerText:"\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0440\u0430\u0437\u0434\u0435\u043b",
id:"add-layout-section",tooltip:"\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0440\u0430\u0437\u0434\u0435\u043b \u043d\u0438\u0436\u0435",iconClass:"aui-icon aui-icon-small aui-iconfont-add",click:function(){c.execCommand("mcePageLayoutAddSection")}}),new a.Editor.Toolbar.Components.Button({triggerText:"\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0431\u043b\u043e\u043a",id:"remove-layout-section",tooltip:"\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u0440\u0430\u0437\u0434\u0435\u043b",iconClass:"aui-icon aui-icon-small aui-iconfont-delete",click:function(){c.execCommand("mcePageLayoutRemoveSection")}})]),
new a.Editor.Toolbar.Components.Group([new a.Editor.Toolbar.Components.Button({triggerText:"\u041f\u0435\u0440\u0435\u043c\u0435\u0441\u0442\u0438\u0442\u044c \u0431\u043b\u043e\u043a \u0432\u0432\u0435\u0440\u0445",id:"move-up-layout-section",tooltip:"\u041f\u0435\u0440\u0435\u043c\u0435\u0441\u0442\u0438\u0442\u044c \u0440\u0430\u0437\u0434\u0435\u043b \u0432\u0432\u0435\u0440\u0445",iconClass:"aui-icon aui-icon-small aui-iconfont-up",click:function(){c.execCommand("mcePageLayoutMoveSectionUp")}}),new a.Editor.Toolbar.Components.Button({triggerText:"\u041f\u0435\u0440\u0435\u043c\u0435\u0441\u0442\u0438\u0442\u044c \u0431\u043b\u043e\u043a \u0432\u043d\u0438\u0437",id:"move-down-layout-section",tooltip:"\u041f\u0435\u0440\u0435\u043c\u0435\u0441\u0442\u0438\u0442\u044c \u0440\u0430\u0437\u0434\u0435\u043b \u0432\u043d\u0438\u0437",
iconClass:"aui-icon aui-icon-small aui-iconfont-down",click:function(){c.execCommand("mcePageLayoutMoveSectionDown")}})]),new a.Editor.Toolbar.Components.Group(l,{id:"pagelayout2-toolbar",text:"\u041f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c \u0444\u043e\u0440\u043c\u0430\u0442",groupClass:"layouts"}),new a.Editor.Toolbar.Components.Group([new a.Editor.Toolbar.Components.Button({text:"\u0417\u0430\u043a\u0440\u044b\u0442\u044c \u043f\u0430\u043d\u0435\u043b\u044c \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u043e\u0432",iconClass:"aui-icon aui-icon-small aui-iconfont-close-dialog",click:function(){c.execCommand("mcePageLayoutsToolbar",!1,
null)}})],{groupClass:"close"})],Events:[]}}}});require("confluence/module-exporter").safeRequire("confluence-page-layout/pagelayout/tinymce-page-layout-toolbar",function(d){var b=require("confluence/meta"),e=require("jquery"),f=require("document"),a=require("confluence/legacy");"comment"!==b.get("content-type")&&e(f).bind("initContextToolbars.Toolbar",function(b,e){a.Editor.PageLayoutToolbar=d.initContextToolbars(b,e)})});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-inline-tasks:inline-tasks-editor', location = 'js/editor_plugin_src.js' */
(function(b){var c=/^\u200b?(\[)$/;AJS.bind("confluence.editor.registerHandlers",function(n,m){if(!AJS.Rte.Support.inlineTasks()){return}var k=m.handlerManager,j=m.ed,l=m.createHandler;k.registerHandler("]".charCodeAt(0),l(c,function(){j.plugins.lists.applyList("UL","OL","inline-task-list",{attributesOnItems:{"data-inline-task-id":""},placeholderText:"\u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u0437\u0434\u0435\u0441\u044c \u0432\u0430\u0448\u0443 \u0437\u0430\u0434\u0430\u0447\u0443, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0022@\u0022 \u0434\u043b\u044f \u0435\u0451 \u0441\u0432\u044f\u0437\u044b\u0432\u0430\u043d\u0438\u044f \u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c \u0438 \u0022//\u0022 \u0434\u043b\u044f \u0432\u044b\u0431\u043e\u0440\u0430 \u0435\u0451 \u0434\u0430\u0442\u044b \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f"})},true))});function e(j){j.plugins.lists.applyList=_.bind(_.wrap(j.plugins.lists.applyList,function(k){k.apply(this,Array.prototype.slice.call(arguments,1));g(j)}),j.plugins.lists)}function g(j,l){if(!(tinymce.isIE8||tinymce.isIE11||tinymce.isGecko||tinymce.isWebKit)){return}var k=l||b(d(j));if(k.height()===0||tinymce.isIE8){k.append("&nbsp;");(tinymce.isWebKit||tinymce.isIE8)&&j.selection.setCursorLocation(k[0],0)}}function h(m,k){var j,n,l;if(tinymce.isGecko){l=k.getBoundingClientRect();j=m.pageX-(l.left+tinymce.DOM.getViewPort(tinymce.activeEditor.getWin()).x);n=m.pageY-(l.top+tinymce.DOM.getViewPort(tinymce.activeEditor.getWin()).y)}else{if(tinymce.isIE8){j=m.offsetX-k.offsetLeft;n=m.offsetY-k.offsetTop}else{j=m.offsetX;n=m.offsetY}}return j>=3&&j<=14&&n>=3&&n<=14}function i(j,m){var k=m.target;if(k.tagName!=="LI"){return}var l=j.dom.getParent(k,"ul,ol");if(l.tagName==="UL"&&j.dom.hasClass(l,"inline-task-list")){if(h(m,k)){if(j.dom.hasClass(k,"checked")){j.dom.removeClass(k,"checked")}else{j.dom.addClass(k,"checked")}}}}function d(k){var l=k.selection.getStart();var j=(l&&l.tagName&&l.tagName.toUpperCase()==="LI")?l:k.dom.getParent(l,"li");return j}function a(k,l){if(l.keyCode===tinymce.VK.ENTER&&!l.shiftKey){var j=d(k);if(j){var m=b(j);if(k.dom.hasClass(j.parentNode,"inline-task-list")){m.removeClass("checked").attr("data-inline-task-id","")}else{m.removeClass("checked").removeAttr("data-inline-task-id")}g(k,m)}}}function f(k,l){var j=d(k);if(j){var m=b(j);if(k.dom.hasClass(j.parentNode,"inline-task-list")){m.find("font").contents().unwrap()}}}tinymce.create("tinymce.plugins.ConfluenceTaskListPlugin",{init:function(j,k){e(j);j.onClick.add(i);j.onKeyUp.add(a);if(tinymce.isIE){j.onKeyUp.add(f)}},getInfo:function(){return{longname:"Confluence Task List Plugin",author:"Atlassian",authorurl:"http://www.atlassian.com",version:tinymce.majorVersion+"."+tinymce.minorVersion}}});tinymce.PluginManager.add("confluencetasklist",tinymce.plugins.ConfluenceTaskListPlugin);AJS.Editor.Adapter.addTinyMcePluginInit(function(j){j.plugins+=",confluencetasklist"})})(AJS.$);
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-inline-tasks:inline-tasks-editor', location = 'js/inline-tasks-rte.js' */
(function(c){function a(e){var d=c(e).find("li[data-inline-task-id]");d.each(function(){var g=c(this),f=g.parent();if(!f.is("ul")){f.wrapInner('<ul class="inline-task-list"/>')}else{if(!f.hasClass("inline-task-list")){f.addClass("inline-task-list")}}})}function b(e){a(e);var g;if(Confluence.Editor&&Confluence.Editor.getContentType){g=Confluence.Editor.getContentType()}else{g=AJS.Meta.get("content-type")}var f=c(e).find("ul.inline-task-list"),d=f.find("> li");if(g=="comment"){d.removeClass("checked").removeAttr("data-inline-task-id");f.removeClass("inline-task-list")}else{d.attr("data-pasted-task","true")}}c(document).bind("postPaste",function(f,d,g){b(g.node)})})(AJS.$);
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-inline-tasks:date-helper-js-resources', location = '/js/lib/lang/de.js' */
(function(a){if(typeof define==="function"&&define.amd){define(["moment"],a)}else{if(typeof exports==="object"){module.exports=a(require("../moment"))}else{a(window.moment)}}}(function(b){function a(e,d,c,g){var f={m:["eine Minute","einer Minute"],h:["eine Stunde","einer Stunde"],d:["ein Tag","einem Tag"],dd:[e+" Tage",e+" Tagen"],M:["ein Monat","einem Monat"],MM:[e+" Monate",e+" Monaten"],y:["ein Jahr","einem Jahr"],yy:[e+" Jahre",e+" Jahren"]};return d?f[c][0]:f[c][1]}return b.lang("de",{months:"Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),monthsShort:"Jan._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.".split("_"),weekdays:"Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split("_"),weekdaysShort:"So._Mo._Di._Mi._Do._Fr._Sa.".split("_"),weekdaysMin:"So_Mo_Di_Mi_Do_Fr_Sa".split("_"),longDateFormat:{LT:"H:mm [Uhr]",L:"DD.MM.YYYY",LL:"D. MMMM YYYY",LLL:"D. MMMM YYYY LT",LLLL:"dddd, D. MMMM YYYY LT"},calendar:{sameDay:"[Heute um] LT",sameElse:"L",nextDay:"[Morgen um] LT",nextWeek:"dddd [um] LT",lastDay:"[Gestern um] LT",lastWeek:"[letzten] dddd [um] LT"},relativeTime:{future:"in %s",past:"vor %s",s:"ein paar Sekunden",m:a,mm:"%d Minuten",h:a,hh:"%d Stunden",d:a,dd:a,M:a,MM:a,y:a,yy:a},ordinal:"%d.",week:{dow:1,doy:4}})}));
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-inline-tasks:date-helper-js-resources', location = '/js/lib/lang/es.js' */
(function(a){if(typeof define==="function"&&define.amd){define(["moment"],a)}else{if(typeof exports==="object"){module.exports=a(require("../moment"))}else{a(window.moment)}}}(function(c){var b="ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split("_"),a="ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split("_");return c.lang("es",{months:"enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split("_"),monthsShort:function(d,e){if(/-MMM-/.test(e)){return a[d.month()]}else{return b[d.month()]}},weekdays:"domingo_lunes_martes_miércoles_jueves_viernes_sábado".split("_"),weekdaysShort:"dom._lun._mar._mié._jue._vie._sáb.".split("_"),weekdaysMin:"Do_Lu_Ma_Mi_Ju_Vi_Sá".split("_"),longDateFormat:{LT:"H:mm",L:"DD/MM/YYYY",LL:"D [de] MMMM [de] YYYY",LLL:"D [de] MMMM [de] YYYY LT",LLLL:"dddd, D [de] MMMM [de] YYYY LT"},calendar:{sameDay:function(){return"[hoy a la"+((this.hours()!==1)?"s":"")+"] LT"},nextDay:function(){return"[mañana a la"+((this.hours()!==1)?"s":"")+"] LT"},nextWeek:function(){return"dddd [a la"+((this.hours()!==1)?"s":"")+"] LT"},lastDay:function(){return"[ayer a la"+((this.hours()!==1)?"s":"")+"] LT"},lastWeek:function(){return"[el] dddd [pasado a la"+((this.hours()!==1)?"s":"")+"] LT"},sameElse:"L"},relativeTime:{future:"en %s",past:"hace %s",s:"unos segundos",m:"un minuto",mm:"%d minutos",h:"una hora",hh:"%d horas",d:"un día",dd:"%d días",M:"un mes",MM:"%d meses",y:"un año",yy:"%d años"},ordinal:"%dº",week:{dow:1,doy:4}})}));
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-inline-tasks:date-helper-js-resources', location = '/js/lib/lang/fr.js' */
(function(a){if(typeof define==="function"&&define.amd){define(["moment"],a)}else{if(typeof exports==="object"){module.exports=a(require("../moment"))}else{a(window.moment)}}}(function(a){return a.lang("fr",{months:"janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre".split("_"),monthsShort:"janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.".split("_"),weekdays:"dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split("_"),weekdaysShort:"dim._lun._mar._mer._jeu._ven._sam.".split("_"),weekdaysMin:"Di_Lu_Ma_Me_Je_Ve_Sa".split("_"),longDateFormat:{LT:"HH:mm",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY LT",LLLL:"dddd D MMMM YYYY LT"},calendar:{sameDay:"[Aujourd'hui à] LT",nextDay:"[Demain à] LT",nextWeek:"dddd [à] LT",lastDay:"[Hier à] LT",lastWeek:"dddd [dernier à] LT",sameElse:"L"},relativeTime:{future:"dans %s",past:"il y a %s",s:"quelques secondes",m:"une minute",mm:"%d minutes",h:"une heure",hh:"%d heures",d:"un jour",dd:"%d jours",M:"un mois",MM:"%d mois",y:"un an",yy:"%d ans"},ordinal:function(b){return b+(b===1?"er":"")},week:{dow:1,doy:4}})}));
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-inline-tasks:date-helper-js-resources', location = '/js/lib/lang/ja.js' */
(function(a){if(typeof define==="function"&&define.amd){define(["moment"],a)}else{if(typeof exports==="object"){module.exports=a(require("../moment"))}else{a(window.moment)}}}(function(a){return a.lang("ja",{months:"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),monthsShort:"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),weekdays:"日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日".split("_"),weekdaysShort:"日_月_火_水_木_金_土".split("_"),weekdaysMin:"日_月_火_水_木_金_土".split("_"),longDateFormat:{LT:"Ah時m分",L:"YYYY/MM/DD",LL:"YYYY年M月D日",LLL:"YYYY年M月D日LT",LLLL:"YYYY年M月D日LT dddd"},meridiem:function(b,d,c){if(b<12){return"午前"}else{return"午後"}},calendar:{sameDay:"[今日] LT",nextDay:"[明日] LT",nextWeek:"[来週]dddd LT",lastDay:"[昨日] LT",lastWeek:"[前週]dddd LT",sameElse:"L"},relativeTime:{future:"%s後",past:"%s前",s:"数秒",m:"1分",mm:"%d分",h:"1時間",hh:"%d時間",d:"1日",dd:"%d日",M:"1ヶ月",MM:"%dヶ月",y:"1年",yy:"%d年"}})}));
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-inline-tasks:date-helper-js-resources', location = '/js/lib/lang/en-gb.js' */
(function(a){if(typeof define==="function"&&define.amd){define(["moment"],a)}else{if(typeof exports==="object"){module.exports=a(require("../moment"))}else{a(window.moment)}}}(function(a){return a.lang("en-gb",{months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),monthsShort:"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),weekdaysShort:"Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),weekdaysMin:"Su_Mo_Tu_We_Th_Fr_Sa".split("_"),longDateFormat:{LT:"HH:mm",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY LT",LLLL:"dddd, D MMMM YYYY LT"},calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},ordinal:function(e){var c=e%10,d=(~~(e%100/10)===1)?"th":(c===1)?"st":(c===2)?"nd":(c===3)?"rd":"th";return e+d},week:{dow:1,doy:4}})}));
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-inline-tasks:date-helper-js-resources', location = '/js/inline-tasks-util.js' */
(function(a){var b=window.Confluence||{};b.InlineTasks=b.InlineTasks||{};b.InlineTasks.Util={NODE_TYPE:{ELEMENT_NODE:1,ATTRIBUTE_NODE:2,TEXT_NODE:3,CDATA_SECTION_NODE:4,ENTITY_REFERENCE_NODE:5,ENTITY_NODE:6,PROCESSING_INSTRUCTION_NODE:7,COMMENT_NODE:8,DOCUMENT_NODE:9,DOCUMENT_TYPE_NODE:10,DOCUMENT_FRAGMENT_NODE:11,NOTATION_NODE:12},KEY:{BACKSPACE:8,SPACE:32,PAGEUP:33,PAGEDOWN:34,END:35,HOME:36,INS:45,TAB:9,ENTER:13,SHIFT:16,CTRL:17,ALT:18,ESCAPE:27,LEFT:37,UP:38,RIGHT:39,DOWN:40,DELETE:46,META:91},addContentEditableIfApplicable:function(d){var c=a(d);c.attr({contenteditable:false,"class":"non-editable",onselectstart:"return false;"});tinymce.isIE&&c.attr({contenteditable:true,unselectable:"on",oncontrolselect:"return false;"})}}})(AJS.$);
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-inline-tasks:date-helper-js-resources', location = '/js/dateutil.js' */
var Confluence=window.Confluence||{};Confluence.InlineTasks=Confluence.InlineTasks||{};Confluence.InlineTasks.DateUtil=(function(b,a){a={PATTERN_INSERTING:"DD-MM-YYYY",PATTERN_LOZENGE:"DD MMM YYYY",PATTERN_INSIDE_TIME_ELE:"YYYY-MM-DD",convertDateIntoHtml:function(e,f,g,h){if(!h){h=a.PATTERN_INSERTING}if(!g){g=""}if(!f){f="<time>"}var c=b("<div>"),d="",i=e.format(h);if(f.indexOf("time")>=0){d=b(f,{datetime:e.format(a.PATTERN_INSIDE_TIME_ELE)});Confluence.InlineTasks.Util.addContentEditableIfApplicable(d);g&&d.attr("class",g);d.text(i)}else{d=b(f);g&&d.attr("class",g);d.text(i)}c.append(d);return c.html()},insertDateIntoCurrentCursor:function(f,d,l,k,m){var i=tinyMCE.activeEditor,j=a.convertDateIntoHtml(f,d,l,k),e=b(j,i.getDoc())[0],g=tinymce.confluence.NodeUtils.replaceSelection(e);if(m){i.execCommand("mceInsertContent",false,m,{skip_undo:true})}var c=b(i.selection.getRng(true).startContainer).closest("li[data-inline-task-id]").length?"task":"page";var h={context:c,trigger:"character"};AJS.trigger("analyticsEvent",{name:"confluence-spaces.date.added",data:h});return g},parse:function(d,e){if(!e){e=a.PATTERN_INSIDE_TIME_ELE}var c=moment(b.trim(d),e,true);return c.isValid()?c:null},format:function(c,d){if(!d){d=a.PATTERN_INSIDE_TIME_ELE}return c?c.format(d):null},guessPartialDate:function(c,g){if(c==null){return null}c=b.trim(c.replace(/[-\.\/]/g,"-"));var f=c.split("-"),e=moment().format(g).split("-");for(var d=0;d<3;d++){if(!f[d]){f[d]=e[d]}if(/^\d$/.test(f[d])){f[d]="0"+f[d]}}return a.parse(f.join("-"),g)},datepicker:{POSITION_ABOVE:true,POSITION_BELOW:false,POSITION_RIGHT:true,POSITION_LEFT:false,dropDownStillFitsVertically:function(d,e,c){if(d===this.POSITION_ABOVE){return e.above>=c}return e.below>=c},dropDownStillFitsHorizontally:function(d,e,c){if(d===this.POSITION_RIGHT){return e.right>=c}return e.left>=c},getPreferredHorizontalPosition:function(d,c){if(d.right>=c){return this.POSITION_RIGHT}else{if(d.left>=c){return this.POSITION_LEFT}}return d.right>d.left?this.POSITION_RIGHT:this.POSITION_LEFT},getPreferredVerticalPosition:function(d,c){if(d.below>=c){return this.POSITION_BELOW}else{if(d.above>=c){return this.POSITION_ABOVE}}return d.below>d.above?this.POSITION_BELOW:this.POSITION_ABOVE},calculateDatepickerPosition:function(c){var d=this;return function(f,o){var l,p,r,i,j,s=16,u=0,e,h,k,m,n=AJS.Rte.getEditorFrame();AJS.Position.spaceLeftRight=function(z,y){var x=y.position().left;return{left:x,right:b(z).width()-x}};l=AJS.Position.spaceAboveBelow(n,c);p=AJS.Position.spaceLeftRight(n,c);j=AJS.Rte.Content.offset(c);e=f.outerHeight(true);h=f.outerWidth(true);k=e+s;m=h+u;var w=d.POSITION_BELOW;var v=d.POSITION_RIGHT;if(w){if(!d.dropDownStillFitsVertically(w,l,k)){w=null}}if(!w){w=d.getPreferredVerticalPosition(l,k)}if(v){if(!d.dropDownStillFitsHorizontally(v,p,k)){v=null}}v=d.getPreferredHorizontalPosition(p,m);if(w===d.POSITION_ABOVE){r=j.top-e-s}else{r=j.top+c.height()+s}if(v===d.POSITION_RIGHT){i=j.left-u}else{i=(j.left+c.outerWidth())-h}var t={top:r,left:i};var g=(v==d.POSITION_RIGHT)?c.outerWidth()/2:h-c.outerWidth()/2;if((g<0)||(g>h)){g=(h/10)}var q={left:g,top:(w===d.POSITION_ABOVE)?e:-s/2};return{displayAbove:w,popupCss:t,arrowCss:q}}},getHintTextOfDatePicker:function(c){return c?"\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0441\u0440\u043e\u043a \u0438\u0441\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u0434\u0430\u043d\u043d\u043e\u0439 \u0437\u0430\u0434\u0430\u0447\u0438.":"\u0412\u044b\u0431\u043e\u0440 \u0434\u0430\u0442\u044b."},create:function(k){var j=k.$attachTo,d=k.$positionTo,c=k.startDate,i=k.onSelect,e=k.isSetDueDate;var h=b("<input>").attr("type","date").addClass("aui-date-picker").css("display","none");var g=h.datePicker({overrideBrowserDefault:true,dateFormat:"yy-mm-dd",languageCode:AJS.Meta.get("user-locale")&&AJS.Meta.get("user-locale").split("_")[0],position:this.calculateDatepickerPosition(d),onSelect:function(l){i(a.parse(l));f()},hint:this.getHintTextOfDatePicker(e)});var f=function(){g&&g.destroyPolyfill&&g.destroyPolyfill();h&&h.remove();b(".aui-datepicker-dialog").remove();g=null;h=null};g.show();g.setDate(a.format(c));b(".aui-datepicker-dialog .aui-datepicker-hint").addClass(e?"set-duedate":"set-date");j.before(h);return{die:function(){f()},show:function(){g.show()},hide:function(){g.hide()},getContainer:function(){return h},setDate:function(m){var l=a.guessPartialDate(m,a.PATTERN_INSERTING);AJS.debug("Set date: "+m);l&&g.setDate(a.format(l))},placeDatePicker:function(){var m=AJS.InlineDialog.current;var l=m&&m.popup;l&&l.refresh()}}}}};return a}(AJS.$,Confluence.InlineTasks.DateUtil||{}));AJS.toInit(function(){var b=function(g,d,f){if(d&&d.toLowerCase()==="en_us"){return"MM"+f+"DD"+f+"YYYY"}var e=_.uniq(g.replace(/[^MDY]/g,"").split(""));return e.join(f).replace("D","DD").replace("M","MM").replace("Y","YYYY")};var c=AJS.Meta.get("user-locale");if(c){moment.lang(c.split("_")[0].toLowerCase())}var a=AJS.Meta.get("user-date-pattern");if(a){Confluence.InlineTasks.DateUtil.PATTERN_LOZENGE=a.toUpperCase();Confluence.InlineTasks.DateUtil.PATTERN_INSERTING=b(a.toUpperCase(),c,"-");Confluence.InlineTasks.DateUtil.PATTERN_INSERTING_ALTERNATE=b(a.toUpperCase(),c,"/")}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-inline-tasks:editor-autocomplete-date-js', location = '/js/editor-plugin/date-autocomplete-help-dialog.js' */
AJS.toInit(function(){if(!(Confluence.KeyboardShortcuts&&Confluence.KeyboardShortcuts.Autoformat)){return}Confluence.KeyboardShortcuts.Autoformat.push({action:"//",context:"autoformat.autocomplete",description:"\u0414\u0430\u0442\u0430"})});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-inline-tasks:editor-autocomplete-date-js', location = '/js/editor-plugin/autocomplete-manager.js' */
(function(d){var f=window.Confluence||{};var e="confluence.date-autocomplete-manager.plugin";f.Editor=f.Editor||{};f.Editor.AutoComplete=f.Editor.AutoComplete||{};var b=f.InlineTasks.Util.KEY,a=f.InlineTasks.DateUtil,c=f.Editor.AutoComplete;c.SETTING_DEFAULT={leadingChar:"",isDataValid:function(g){return false},backWords:0,onBeforeDie:function(){},onAfterStart:function(){},onScroll:function(){}};c.Manager=function(g){this.ed=AJS.Rte.getEditor();this.settings=d.extend({},c.SETTING_DEFAULT,g);this.log=AJS.debug;this.control=null};c.Manager.prototype={start:function(g){AJS.trigger("synchrony.stop",{id:e});this.log("startAutoComplete - Started");var h=d.extend({},this.settings,g);this.control=f.Editor.Autocompleter.Control(this.ed,h);if(!this.control){return false}this.attachEventsToControl();h.onAfterStart&&h.onAfterStart({date:g.date,isTriggerFromOrphan:g.isTriggerFromOrphan?true:false});return true},attachEventsToControl:function(){var j=this,m=j.control,i=j.log,h=j.settings;if(typeof this.settings.onBeforeDie==="function"){var l=this.control.die;this.control.die=function(){j.settings.onBeforeDie.apply(j.control,arguments);if(j.dateInserted()){l.apply(j.control,[true]);AJS.trigger("analyticsEvent",{name:"confluence-spaces.tasks.daterecognition.killed"})}else{l.apply(j.control,arguments)}}}var g=_.bind(_.throttle(j.settings.onScroll,40),this);var k={onBeforeKey:function(n,o){if(n.keyCode!==b.ESCAPE&&n.keyCode!==b.ENTER){j.control&&j.control.getContainer().addClass("isDirty")}if(n.keyCode===b.DOWN||n.keyCode===b.UP||n.keyCode===b.ENTER){tinymce.dom.Event.cancel(n);return false}if(n.keyCode===b.ESCAPE||n.keyCode===b.TAB||n.keyCode===b.BACKSPACE&&!o){i("autoCompleteControl.onBeforeKey - killing autoCompleteControl");this.die(n.keyCode===b.BACKSPACE);return false}return true},onKeyPress:function(q,r){var o=AJS.$.browser.msie?q.keyCode:q.which;if(q.keyCode===b.ENTER){tinymce.dom.Event.cancel(q);return false}var p=String.fromCharCode(o),n=AJS.indexOf(this.settings.endChars,p);if(n>=0){i("autoCompleteControl.onKeyPress - caught autocomplete-closing char - character");m.die()}return true},onAfterKey:function(p,q){var o=d("#autocomplete-trigger",j.control.getContainer()),n=o.text();if(o.length>0&&n!==j.settings.leadingChar){i("after","dying because of: trigger text is modified");j.reset();return false}if(p.keyCode===b.ENTER){if(h.isDataValid(q)){m.update(q)}else{i("autoCompleteControl.onAfterKey - closing autocomplete due to invalid data - "+q);m.die(false)}return false}if(j.dateInserted()&&(q.length>10)&&(!a.parse(q,[a.PATTERN_INSERTING,a.PATTERN_INSERTING_ALTERNATE]))){j.reset();return false}if(p.keyCode===b.SPACE){j.reset();return false}return true},onDeath:function(){j.reset()},onScroll:function(){if(!j.isAlive()){return}g()}};d.extend(m,k)},isAlive:function(){return this.control&&!this.control.dying},reset:function(){if(!this.control){return}this.control.die();this.control=null;AJS.trigger("synchrony.start",{id:e})},dateInserted:function(g){if(g===true){return this.control.getContainer().addClass("hasDateInserted")}else{if(g===false){return this.control.getContainer().removeClass("hasDateInserted")}else{return this.control.getContainer().hasClass("hasDateInserted")}}},dirty:function(g){if(g===true){return this.control.getContainer().addClass("isDirty")}else{return this.control.getContainer().hasClass("isDirty")}},reattach:function(){var g=f.Editor.Autocompleter.Control.removeOrphanedControl();if(g&&g.leadingChar===this.settings.leadingChar){this.reset();return this.start({backWords:1,isTriggerFromOrphan:true})}return false}}})(AJS.$);
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-inline-tasks:editor-autocomplete-date-js', location = '/js/editor-plugin/date-autocomplete.js' */
(function(h,e){var r="dateautocomplete",m="tinymce.plugins.DateAutocomplete",p="mceConfInsertDateAutocomplete",k="//";var q="confluence.date-autocomplete.plugin";var s=Confluence.InlineTasks.Util,n=s.NODE_TYPE,d=s.KEY,a=Confluence.InlineTasks.DateUtil,g=null,o=null,b=false,i=e.dom.TreeWalker;var j={initDateAutoCompleteObject:function(t){if(!Confluence.Editor.Autocompleter){Confluence.Editor.Autocompleter=e.confluence.Autocompleter}Confluence.Editor.Autocompleter.Settings[k]={ch:k,endChars:[],update:function(x,w){o.picker.die();var v=(w==a.PATTERN_INSERTING.toLowerCase())?moment():a.guessPartialDate(w,a.PATTERN_INSERTING);v&&a.insertDateIntoCurrentCursor(v,"<time>","",a.PATTERN_LOZENGE,"&nbsp;");if(o.dateInserted()){AJS.trigger("analyticsEvent",{name:"confluence-spaces.tasks.daterecognition.used"})}o.reset();t.undoManager.add();AJS.trigger("synchrony.start",{id:q})}};var u={leadingChar:k,isDataValid:function(v){return !o.dirty()||a.guessPartialDate(v,a.PATTERN_INSERTING)!=null},onBeforeDie:function(){o.picker&&o.picker.die();if(o.control){var v=h(o.control.getContainer());if(!o.dirty()){v.find("#autocomplete-search-text").remove()}}},onAfterStart:function(w){if(w&&w.date){j.fillPlaceholderDateAutoComplete(t,w.date,true);o.dirty(true);o.dateInserted(true)}else{if(w&&!w.isTriggerFromOrphan){j.fillPlaceholderDateAutoComplete(t,a.PATTERN_INSERTING.toLowerCase(),false);o.dateInserted(false)}}var v=o.control.text();var x=a.guessPartialDate(v,a.PATTERN_INSERTING)||moment();j.bindDatePickerToAutoComplete(x)},onScroll:function(){o.picker&&o.picker.placeDatePicker()}};o=new Confluence.Editor.AutoComplete.Manager(u)},activateDateAutocomplete:function(v,u){if(!o.isAlive()){var t=o.start(u);if(!t){g.execCommand("mceInsertContent",false,k,{skip_undo:true});return false}}},bindDatePickerToAutoComplete:function(w){var t=o.control&&o.control.getContainer();if(!t.length){return}t.addClass("date-autocomplete");t.find("#autocomplete-search-text span").addClass("inserting");var v=function(x){o.control.update(x.format(a.PATTERN_INSERTING))},u=j.isInsideTaskAndFirstTimeNode(t);o.picker=a.datepicker.create({$attachTo:t,$positionTo:t,startDate:w,onSelect:v,isSetDueDate:u})},fillPlaceholderDateAutoComplete:function(u,x,w){var t=o.control.getContainer().find("#autocomplete-search-text span");t.text(AJS.Rte.HIDDEN_CHAR+x);var v=u.dom.createRng();v.setStart(t[0].firstChild,1);v.setEnd(t[0].firstChild,x.length+1);w&&v.collapse(false);u.selection.setRng(v)},autocompleteDoubleSlash:function(y,x){var v=x.handlerManager,u=x.ed,w=x.createHandler;var t=w(/(?:\s|\xA0|^|\ufeff|\u200b)(\/)$/,function(){u.execCommand(p,false,{},{skip_undo:true})},true,"#autocomplete");v.registerHandler("/".charCodeAt(0),t)},registerTriggerDoubleSlash:function(t){t.addCommand(p,j.activateDateAutocomplete);AJS.bind("confluence.editor.registerHandlers",this.autocompleteDoubleSlash)},isTimeNode:function(t){return t&&t.nodeType===n.ELEMENT_NODE&&t.tagName.toLowerCase()==="time"},getTimeNodeAtCursor:function(t){if(!t){t=g}var u=t.selection.getNode();if(j.isTimeNode(u)){return u}u=t.selection.getStart();if(j.isTimeNode(u)){return u}u=t.selection.getEnd();if(j.isTimeNode(u)){return u}},makeTimeNodesUnEditable:function(t){t.each(function(){var u=h(this);if(h.trim(u.text())===""){u.remove()}e.isWebKit&&u.remove("br.Apple-interchange-newline");s.addContentEditableIfApplicable(this)})},wrapTimeNodesWithHiddenChar:function(t){t.each(function(){var u=h(this);if(!this.previousSibling||this.previousSibling.nodeType!==n.TEXT_NODE||this.previousSibling.nodeValue===""){u.before(AJS.Rte.HIDDEN_CHAR)}if(!this.nextSibling||this.nextSibling.nodeType!==n.TEXT_NODE||this.previousSibling.nodeValue===""){u.after(AJS.Rte.HIDDEN_CHAR)}})},putCursorAtEdge:function(u,w,t){t=!!t;if(t){if(!w.nextSibling||w.nextSibling.nodeType!==n.TEXT_NODE){h(w).after(u.dom.doc.createTextNode(""))}}else{if(!w.previousSibling||w.previousSibling.nodeType!==n.TEXT_NODE){h(w).before(u.dom.doc.createTextNode(""))}}var v=u.selection.dom.createRng();v.selectNode(t?w.nextSibling:w.previousSibling);v.collapse(t);u.selection.setRng(v)},findFirstTimeNodeInClosestBlock:function(u,z,w){var y=new i(z,u.getBody());var x=z,v=0;do{if(v==1&&j.isTimeNode(z)){return z}var t=w?z.previousSibling:z.nextSibling;if(z!==x&&t&&(u.dom.isBlock(z)||u.dom.isBlock(t))){v++}}while((z=w?y.next():y.prev())&&v<2)},findFirstTimeNodeNearby:function(t,x,u){var w=x;var v=new i(x,t.getBody());do{if(j.isTimeNode(x)){return x}if(t.dom.isBlock(x)||(x!==w&&x.nodeType===n.TEXT_NODE&&x.nodeValue!=="")){return}}while(x=u?v.next():v.prev())},convertInvalidTimeNodeToPlainText:function(t){t.each(function(){var w=h(this);var u=w.attr("datetime");var v=a.parse(u);if(!v){w.before(w.text());w.remove()}})},isInsideTaskAndFirstTimeNode:function(u){var t=h(u),v=t.closest("ul.inline-task-list > li[data-inline-task-id]");if(!v.length){return false}return v.find("time, span.date-autocomplete")[0]===t[0]}};var c={handleRemoveDateLozenge:function(u,A){var z=A.keyCode;if(z!==d.BACKSPACE&&z!==d.DELETE){return}var x=(z===d.DELETE),t=u.selection.getRng(true),v=t.startContainer,w=v;if(v.nodeType==n.TEXT_NODE&&(x?t.startOffset!=v.nodeValue.length:t.startOffset!=0)){return}if(v.nodeType===n.ELEMENT_NODE){if(x){w=(v.childNodes.length===t.startOffset)?v:v.childNodes.item(t.startOffset)}else{w=(t.startOffset===0)?v:v.childNodes.item(t.startOffset-1)}}var y=j.findFirstTimeNodeNearby(u,w,x);y&&u.dom.remove(y)},handleClickingDateLozenge:function(y,B){var v=h(B.target);if(!v.is("time")){return}AJS.trigger("synchrony.stop",{id:q});var t=(v.closest("li[data-inline-task-id]").length)?"task":"page";var w={mode:"editor",context:t};AJS.trigger("analyticsEvent",{name:"confluence-spaces.date.clicked",data:w});var E=v.closest("body");var A=function(){AJS.Rte.unbindScroll("date-lozenge-date-picker");z.die();AJS.trigger("synchrony.start",{id:q})};E.one("keydown click",A);var D=function(G){var H=G.format(a.PATTERN_INSIDE_TIME_ELE);var F=G.format(a.PATTERN_LOZENGE);if(H!==v.attr("datetime")){var I={context:t};AJS.trigger("analyticsEvent",{name:"confluence-spaces.date.changed",data:I})}v.attr("datetime",H);v.text(F);E.unbind("keydown click",A);AJS.trigger("synchrony.start",{id:q})};var u=a.parse(v.attr("datetime")),x=j.isInsideTaskAndFirstTimeNode(v),z=a.datepicker.create({$attachTo:v,$positionTo:v,startDate:u,onSelect:D,isSetDueDate:x});var C=_.bind(_.throttle(function(){if(z&&AJS.Rte.isAnyPartShown(v)){z.placeDatePicker()}else{A()}},40),this);AJS.Rte.bindScroll("date-lozenge-date-picker",C)},handleTypingDate:function(u,w){var v=w.keyCode;if(v===d.UP||v===d.DOWN||v===d.LEFT||v===d.RIGHT||v===d.HOME||v===d.END||v===d.PAGEDOWN||v===d.PAGEUP||w.metaKey||w.ctrlKey||w.altKey){return}if(o.control&&o.picker){var t=o.control.text();o.picker.setDate(t)}},handleOnLoadContent:function(t){var v=h(t.dom.doc),u=v.find("time");j.makeTimeNodesUnEditable(u);j.wrapTimeNodesWithHiddenChar(u)},handlePostPaste:function(u,t,v){j.convertInvalidTimeNodeToPlainText(h(v.node).find("time"))},handlePostPasteContent:function(v,t,w){var u=h(w.node).find("time");j.makeTimeNodesUnEditable(u)},handlePrePasteContent:function(u,t,v){if(j.getTimeNodeAtCursor(g)){v.content="";return false}},fixWhenUpDownNavOnList:function(u,A){var w=A.keyCode;if(w!==d.UP&&w!==d.DOWN){return}var t=u.selection.getRng(true),v=t.startContainer,x=v,y=w===d.DOWN;if(v.nodeType===n.ELEMENT_NODE){if(y){x=(v.childNodes.length===t.startOffset)?v:v.childNodes.item(t.startOffset)}else{x=(t.startOffset===0)?v:v.childNodes.item(t.startOffset-1)}}var z=j.findFirstTimeNodeInClosestBlock(u,x,y);if(z){j.wrapTimeNodesWithHiddenChar(h(z))}},preventCursorInsideDateLozenge:function(u,t,w){var v=(w.nodeType===n.TEXT_NODE)?w.parentNode:w;if(j.isTimeNode(v)){if(b||u.selection.getRng().startOffset>1){j.putCursorAtEdge(u,v,true)}else{j.putCursorAtEdge(u,v,false)}}},handleUndoRedo:function(){o&&o.reattach()}};var f={init:function(t){j.initDateAutoCompleteObject(t);j.registerTriggerDoubleSlash(t);g=t;t.onContextMenu.add(function(){o.reset()});t.onSetContent.add(c.handleOnLoadContent);t.onClick.add(c.handleClickingDateLozenge);t.onKeyUp.add(c.handleTypingDate);if(e.isWebKit){t.onKeyDown.add(c.fixWhenUpDownNavOnList);t.onInit.add(function(){h(document).bind("postPaste",c.handlePostPasteContent)});t.onRemove.add(function(){h(document).unbind("postPaste",c.handlePostPasteContent)})}t.onKeyUp.add(function(z,B){b=(B.keyCode===d.RIGHT);var y=z.selection.getRng(true);var x=y.commonAncestorContainer;var A=!!x&&x.data;if(!!A&&!AJS.$(x).closest("pre,.text-placeholder").length){var C=String.prototype.slice.apply(A,[-11]);if((B.keyCode>=48&&B.keyCode<=57)||(B.keyCode>=96&&B.keyCode<=105)){var u=/(^| )\d{2}[\/\-]\d{2}[\/\-]\d{4}$/;var w=String.prototype.slice.apply(A,[-10]);if(u.test(A)&&a.parse(w,[a.PATTERN_INSERTING,a.PATTERN_INSERTING_ALTERNATE])){var v=y.commonAncestorContainer;y.setStart(v,y.endOffset-w.length);z.undoManager.add();z.undoManager.beforeChange();z.selection.setRng(y);z.execCommand("mceConfInsertDateAutocomplete",false,{date:w},{skip_undo:true});AJS.trigger("analyticsEvent",{name:"confluence-spaces.tasks.daterecognition.triggered"})}}}});if(e.isGecko){t.onKeyDown.add(c.handleRemoveDateLozenge);t.onInit.add(function(){h(document).bind("prePaste",c.handlePrePasteContent)});t.onRemove.add(function(){h(document).unbind("prePaste",c.handlePrePasteContent)})}if(e.isWebKit||e.isGecko){t.onNodeChange.add(c.preventCursorInsideDateLozenge)}t.onUndo.add(c.handleUndoRedo);t.onRedo.add(c.handleUndoRedo);t.onInit.add(function(){h(document).bind("postPaste",c.handlePostPaste)});t.onRemove.add(function(){h(document).unbind("postPaste",c.handlePostPaste);AJS.unbind("confluence.editor.registerHandlers",j.autocompleteDoubleSlash)})},getInfo:function(){return{longname:"Insert Date Autocomplete",author:"Atlassian",authorurl:"http://www.atlassian.com",version:e.majorVersion+"."+e.minorVersion}}};function l(){e.create(m,f);e.PluginManager.add(r,e.plugins.DateAutocomplete);AJS.Rte.BootstrapManager.addTinyMcePluginInit(function(t){t.plugins+=","+r})}l()})(AJS.$,tinymce);
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-hipchat-emoticons-plugin:hipchat-emoticons', location = 'lib/rivets.js' */
(function(){var g,u,v,e,s=[].indexOf||function(a){for(var b=0,c=this.length;b<c;b++)if(b in this&&this[b]===a)return b;return-1},h=function(a,b){return function(){return a.apply(b,arguments)}},t=[].slice,x={}.hasOwnProperty,q=function(a,b){function c(){this.constructor=a}for(var d in b)x.call(b,d)&&(a[d]=b[d]);c.prototype=b.prototype;a.prototype=new c;a.__super__=b.prototype;return a};g={binders:{},components:{},formatters:{},adapters:{},config:{prefix:"rv",templateDelimiters:["{","}"],rootInterface:".",
preloadData:!0,handler:function(a,b,c){return this.call(a,b,c.view.models)}}};if("jQuery"in window)e="on"in jQuery.prototype?["on","off"]:["bind","unbind"],u=e[0],v=e[1],g.Util={bindEvent:function(a,b,c){return jQuery(a)[u](b,c)},unbindEvent:function(a,b,c){return jQuery(a)[v](b,c)},getInputValue:function(a){a=jQuery(a);return"checkbox"===a.attr("type")?a.is(":checked"):a.val()}};else{e="addEventListener"in window?function(a,b,c){return a.addEventListener(b,c,!1)}:function(a,b,c){return a.attachEvent("on"+
b,c)};var w;w="removeEventListener"in window?function(a,b,c){return a.removeEventListener(b,c,!1)}:function(a,b,c){return a.detachEvent("on"+b,c)};g.Util={bindEvent:e,unbindEvent:w,getInputValue:function(a){var b,c,d,f;if("checkbox"===a.type)return a.checked;if("select-multiple"===a.type){f=[];c=0;for(d=a.length;c<d;c++)b=a[c],b.selected&&f.push(b.value);return f}return a.value}}}e=function(){};e.parse=function(a,b,c){var d,f,j,g;f=[];c={"interface":c,path:""};d=j=0;for(g=a.length;j<g;d=j+=1)d=a.charAt(d),
0<=s.call(b,d)?(f.push(c),c={"interface":d,path:""}):c.path+=d;f.push(c);return f};g.KeypathParser=e;e=function(){};e.types={text:0,binding:1};e.parse=function(a,b){var c,d,f,j;j=[];f=a.length;for(d=0;d<f;)if(c=a.indexOf(b[0],d),0>c){j.push({type:this.types.text,value:a.slice(d)});break}else{0<c&&d<c&&j.push({type:this.types.text,value:a.slice(d,c)});d=c+b[0].length;c=a.indexOf(b[1],d);if(0>c){f=a.slice(d-b[1].length);c=j[j.length-1];(null!=c?c.type:void 0)===this.types.text?c.value+=f:j.push({type:this.types.text,
value:f});break}d=a.slice(d,c).trim();j.push({type:this.types.binding,value:d});d=c+b[1].length}return j};g.TextTemplateParser=e;e=function(a,b,c,d){this.view=a;this.model=b;this.keypath=c;this.callback=d;this.unobserve=h(this.unobserve,this);this.realize=h(this.realize,this);this.value=h(this.value,this);this.publish=h(this.publish,this);this.read=h(this.read,this);this.set=h(this.set,this);this.adapter=h(this.adapter,this);this.update=h(this.update,this);this.initialize=h(this.initialize,this);
this.parse=h(this.parse,this);this.parse();this.initialize()};e.prototype.parse=function(){var a,b,c,d,f;d=this.view.adapters;f=[];for(a in d)(b=d[a])&&f.push(a);(c=this.keypath[0],0<=s.call(f,c))?(b=this.keypath[0],a=this.keypath.substr(1)):(b=this.view.config.rootInterface,a=this.keypath);this.tokens=g.KeypathParser.parse(a,f,b);return this.key=this.tokens.pop()};e.prototype.initialize=function(){this.objectPath=[];this.target=this.realize();if(null!=this.target)return this.set(!0,this.key,this.target,
this.callback)};e.prototype.update=function(){var a,b;if((a=this.realize())!==this.target)if(null!=this.target&&this.set(!1,this.key,this.target,this.callback),null!=a&&this.set(!0,this.key,a,this.callback),b=this.value(),this.target=a,this.value()!==b)return this.callback()};e.prototype.adapter=function(a){return this.view.adapters[a["interface"]]};e.prototype.set=function(a,b,c,d){return this.adapter(b)[a?"subscribe":"unsubscribe"](c,b.path,d)};e.prototype.read=function(a,b){return this.adapter(a).read(b,
a.path)};e.prototype.publish=function(a){if(null!=this.target)return this.adapter(this.key).publish(this.target,this.key.path,a)};e.prototype.value=function(){if(null!=this.target)return this.read(this.key,this.target)};e.prototype.realize=function(){var a,b,c,d,f,j,g,e;a=this.model;f=null;e=this.tokens;b=j=0;for(g=e.length;j<g;b=++j)if(d=e[b],null!=a){if(null!=this.objectPath[b]){if(a!==(c=this.objectPath[b]))this.set(!1,d,c,this.update),this.set(!0,d,a,this.update),this.objectPath[b]=a}else this.set(!0,
d,a,this.update),this.objectPath[b]=a;a=this.read(d,a)}else null==f&&(f=b),(c=this.objectPath[b])&&this.set(!1,d,c,this.update);null!=f&&this.objectPath.splice(f);return a};e.prototype.unobserve=function(){var a,b,c,d,f,j;j=this.tokens;a=d=0;for(f=j.length;d<f;a=++d)c=j[a],(b=this.objectPath[a])&&this.set(!1,c,b,this.update);if(null!=this.target)return this.set(!1,this.key,this.target,this.callback)};g.Observer=e;e=function(a,b,c){var d,f,j,e,i;this.els=a;this.models=b;this.options=null!=c?c:{};this.update=
h(this.update,this);this.publish=h(this.publish,this);this.sync=h(this.sync,this);this.unbind=h(this.unbind,this);this.bind=h(this.bind,this);this.select=h(this.select,this);this.build=h(this.build,this);this.componentRegExp=h(this.componentRegExp,this);this.bindingRegExp=h(this.bindingRegExp,this);this.els.jquery||this.els instanceof Array||(this.els=[this.els]);e=["config","binders","formatters","adapters"];c=0;for(j=e.length;c<j;c++){a=e[c];this[a]={};if(this.options[a])for(d in f=this.options[a],
f)b=f[d],this[a][d]=b;i=g[a];for(d in i)if(b=i[d],null==(f=this[a])[d])f[d]=b}this.build()};e.prototype.bindingRegExp=function(){return RegExp("^"+this.config.prefix+"-")};e.prototype.componentRegExp=function(){return RegExp("^"+this.config.prefix.toUpperCase()+"-")};e.prototype.build=function(){var a,b,c,d,f,j,e,h,n;this.bindings=[];j=[];a=this.bindingRegExp();c=this.componentRegExp();var k=this;b=function(a,b,c,d){var f,j,e;j={};var h,p;p=d.split("|");d=[];f=0;for(h=p.length;f<h;f++)e=p[f],d.push(e.trim());
var i;i=d.shift().split("<");e=[];h=0;for(p=i.length;h<p;h++)f=i[h],e.push(f.trim());f=e.shift();j.formatters=d;if(d=e.shift())j.dependencies=d.split(/\s+/);return k.bindings.push(new g[a](k,b,c,f,j))};var l=this;f=function(d){var e,h,p,i,k,m,n,q,r,o,t;if(0>s.call(j,d)){if(3===d.nodeType){if(m=g.TextTemplateParser,i=l.config.templateDelimiters)if((e=m.parse(d.data,i)).length&&!(1===e.length&&e[0].type===m.types.text)){r=0;for(o=e.length;r<o;r++)m=e[r],i=document.createTextNode(m.value),d.parentNode.insertBefore(i,
d),1===m.type&&b("TextBinding",i,null,m.value);d.parentNode.removeChild(d)}}else if(c.test(d.tagName))k=d.tagName.replace(c,"").toLowerCase(),l.bindings.push(new g.ComponentBinding(l,d,k));else if(null!=d.attributes){o=d.attributes;m=0;for(r=o.length;m<r;m++)if(e=o[m],a.test(e.name)){k=e.name.replace(a,"");if(!(p=l.binders[k]))for(i in t=l.binders,t)q=t[i],"*"!==i&&-1!==i.indexOf("*")&&(n=RegExp("^"+i.replace("*",".+")+"$"),n.test(k)&&(p=q));p||(p=l.binders["*"]);if(p.block){n=d.childNodes;h=0;for(p=
n.length;h<p;h++)k=n[h],j.push(k);h=[e]}}r=h||d.attributes;i=0;for(m=r.length;i<m;i++)e=r[i],a.test(e.name)&&(k=e.name.replace(a,""),b("Binding",d,k,e.value))}m=d.childNodes;d=[];i=0;for(e=m.length;i<e;i++)k=m[i],d.push(k);r=[];m=0;for(i=d.length;m<i;m++)e=d[m],r.push(f(e));return r}};n=this.els;e=0;for(h=n.length;e<h;e++)d=n[e],f(d)};e.prototype.select=function(a){var b,c,d,f,e;f=this.bindings;e=[];c=0;for(d=f.length;c<d;c++)b=f[c],a(b)&&e.push(b);return e};e.prototype.bind=function(){var a,b,c,
d,f;d=this.bindings;f=[];b=0;for(c=d.length;b<c;b++)a=d[b],f.push(a.bind());return f};e.prototype.unbind=function(){var a,b,c,d,f;d=this.bindings;f=[];b=0;for(c=d.length;b<c;b++)a=d[b],f.push(a.unbind());return f};e.prototype.sync=function(){var a,b,c,d,f;d=this.bindings;f=[];b=0;for(c=d.length;b<c;b++)a=d[b],f.push(a.sync());return f};e.prototype.publish=function(){var a,b,c,d,f;d=this.select(function(a){return a.binder.publishes});f=[];b=0;for(c=d.length;b<c;b++)a=d[b],f.push(a.publish());return f};
e.prototype.update=function(a){var b,c,d,f,e;null==a&&(a={});for(b in a)c=a[b],this.models[b]=c;f=this.bindings;e=[];c=0;for(d=f.length;c<d;c++)b=f[c],e.push(b.update(a));return e};g.View=e;e=function(a,b,c,d,f){this.view=a;this.el=b;this.type=c;this.keypath=d;this.options=null!=f?f:{};this.update=h(this.update,this);this.unbind=h(this.unbind,this);this.bind=h(this.bind,this);this.publish=h(this.publish,this);this.sync=h(this.sync,this);this.set=h(this.set,this);this.eventHandler=h(this.eventHandler,
this);this.formattedValue=h(this.formattedValue,this);this.setBinder=h(this.setBinder,this);this.formatters=this.options.formatters||[];this.dependencies=[];this.model=void 0;this.setBinder()};e.prototype.setBinder=function(){var a,b,c,d;if(!(this.binder=this.view.binders[this.type]))for(a in d=this.view.binders,d)c=d[a],"*"!==a&&-1!==a.indexOf("*")&&(b=RegExp("^"+a.replace("*",".+")+"$"),b.test(this.type)&&(this.binder=c,this.args=RegExp("^"+a.replace("*","(.+)")+"$").exec(this.type),this.args.shift()));
this.binder||(this.binder=this.view.binders["*"]);if(this.binder instanceof Function)return this.binder={routine:this.binder}};e.prototype.formattedValue=function(a){var b,c,d,f,e;e=this.formatters;d=0;for(f=e.length;d<f;d++)c=e[d],b=c.split(/\s+/),c=b.shift(),c=this.view.formatters[c],(null!=c?c.read:void 0)instanceof Function?a=c.read.apply(c,[a].concat(t.call(b))):c instanceof Function&&(a=c.apply(null,[a].concat(t.call(b))));return a};e.prototype.eventHandler=function(a){var b,c;c=(b=this).view.config.handler;
return function(d){return c.call(a,this,d,b)}};e.prototype.set=function(a){var b,a=a instanceof Function&&!this.binder["function"]?this.formattedValue(a.call(this.model)):this.formattedValue(a);return null!=(b=this.binder.routine)?b.call(this,this.el,a):void 0};e.prototype.sync=function(){var a,b,c,d,f;if(this.model!==this.observer.target){d=this.dependencies;b=0;for(c=d.length;b<c;b++)a=d[b],a.unobserve();this.dependencies=[];if(null!=(this.model=this.observer.target)&&null!=(f=this.options.dependencies)&&
f.length){d=this.options.dependencies;b=0;for(c=d.length;b<c;b++)a=d[b],a=new g.Observer(this.view,this.model,a,this.sync),this.dependencies.push(a)}}return this.set(this.observer.value())};e.prototype.publish=function(){var a,b,c,d,f,e,h,i;c=g.Util.getInputValue(this.el);e=this.formatters.slice(0).reverse();d=0;for(f=e.length;d<f;d++)if(a=e[d],a=a.split(/\s+/),b=a.shift(),null!=(h=this.view.formatters[b])&&h.publish)c=(i=this.view.formatters[b]).publish.apply(i,[c].concat(t.call(a)));return this.observer.publish(c)};
e.prototype.bind=function(){var a,b,c,d;null!=(b=this.binder.bind)&&b.call(this,this.el);this.observer=new g.Observer(this.view,this.view.models,this.keypath,this.sync);this.model=this.observer.target;if(null!=this.model&&null!=(c=this.options.dependencies)&&c.length){d=this.options.dependencies;b=0;for(c=d.length;b<c;b++)a=d[b],a=new g.Observer(this.view,this.model,a,this.sync),this.dependencies.push(a)}if(this.view.config.preloadData)return this.sync()};e.prototype.unbind=function(){var a,b,c,d;
null!=(a=this.binder.unbind)&&a.call(this,this.el);this.observer.unobserve();d=this.dependencies;b=0;for(c=d.length;b<c;b++)a=d[b],a.unobserve();return this.dependencies=[]};e.prototype.update=function(a){var b;null==a&&(a={});this.model=this.observer.target;this.unbind();null!=(b=this.binder.update)&&b.call(this,a);return this.bind()};g.Binding=e;e=function(a,b,c){var d,f;this.view=a;this.el=b;this.type=c;this.unbind=h(this.unbind,this);this.bind=h(this.bind,this);this.update=h(this.update,this);
this.locals=h(this.locals,this);this.component=g.components[this.type];this.attributes={};this.inflections={};d=this.el.attributes||[];b=0;for(c=d.length;b<c;b++)a=d[b],(f=a.name,0<=s.call(this.component.attributes,f))?this.attributes[a.name]=a.value:this.inflections[a.name]=a.value};q(e,g.Binding);e.prototype.sync=function(){};e.prototype.locals=function(a){var b,c,d,f,e,g,h;null==a&&(a=this.view.models);f={};d=this.inflections;for(c in d){b=d[c];h=b.split(".");e=0;for(g=h.length;e<g;e++)b=h[e],
f[c]=(f[c]||a)[b]}for(c in a)d=a[c],null==f[c]&&(f[c]=d);return f};e.prototype.update=function(a){var b;return null!=(b=this.componentView)?b.update(this.locals(a)):void 0};e.prototype.bind=function(){var a;if(null!=this.componentView)return null!=(a=this.componentView)?a.bind():void 0;a=this.component.build.call(this.attributes);(this.componentView=new g.View(a,this.locals(),this.view.options)).bind();return this.el.parentNode.replaceChild(a,this.el)};e.prototype.unbind=function(){var a;return null!=
(a=this.componentView)?a.unbind():void 0};g.ComponentBinding=e;var o=function(a,b,c,d,f){this.view=a;this.el=b;this.type=c;this.keypath=d;this.options=null!=f?f:{};this.sync=h(this.sync,this);this.formatters=this.options.formatters||[];this.dependencies=[]};q(o,g.Binding);o.prototype.binder={routine:function(a,b){return a.data=null!=b?b:""}};o.prototype.sync=function(){return o.__super__.sync.apply(this,arguments)};g.TextBinding=o;g.adapters["."]={id:"_rv",counter:0,weakmap:{},weakReference:function(a){var b;
a.hasOwnProperty(this.id)||(b=this.counter++,this.weakmap[b]={callbacks:{}},Object.defineProperty(a,this.id,{value:b}));return this.weakmap[a[this.id]]},stubFunction:function(a,b){var c,d,f;d=a[b];c=this.weakReference(a);f=this.weakmap;return a[b]=function(){var b,e,g,h,k,l,o,s,q;g=d.apply(a,arguments);l=c.pointers;for(e in l){b=l[e];q=null!=(o=null!=(s=f[e])?s.callbacks[b]:void 0)?o:[];h=0;for(k=q.length;h<k;h++)b=q[h],b()}return g}},observeMutations:function(a,b,c){var d,f,e,g,h;if(Array.isArray(a)){e=
this.weakReference(a);if(null==e.pointers){e.pointers={};f="push pop shift unshift sort reverse splice".split(" ");g=0;for(h=f.length;g<h;g++)d=f[g],this.stubFunction(a,d)}if(null==(a=e.pointers)[b])a[b]=[];if(0>s.call(e.pointers[b],c))return e.pointers[b].push(c)}},unobserveMutations:function(a,b,c){var d,f;if(Array.isArray(a&&null!=a[this.id])&&(d=null!=(f=this.weakReference(a).pointers)?f[b]:void 0))if(a=d.indexOf(c),0<=a)return d.splice(a,1)},subscribe:function(a,b,c){var d,f;d=this.weakReference(a).callbacks;
null==d[b]&&(d[b]=[],f=a[b],Object.defineProperty(a,b,{enumerable:!0,get:function(){return f},set:function(e){return function(g){var h,n,k;if(g!==f){f=g;k=d[b].slice();h=0;for(n=k.length;h<n;h++)c=k[h],0<=s.call(d[b],c)&&c();return e.observeMutations(g,a[e.id],b)}}}(this)}));0>s.call(d[b],c)&&d[b].push(c);return this.observeMutations(a[b],a[this.id],b)},unsubscribe:function(a,b,c){var d;d=this.weakmap[a[this.id]].callbacks[b];c=d.indexOf(c);0<=c&&d.splice(c,1);return this.unobserveMutations(a[b],
a[this.id],b)},read:function(a,b){return a[b]},publish:function(a,b,c){return a[b]=c}};g.binders.text=function(a,b){return null!=a.textContent?a.textContent=null!=b?b:"":a.innerText=null!=b?b:""};g.binders.html=function(a,b){return a.innerHTML=null!=b?b:""};g.binders.show=function(a,b){return a.style.display=b?"":"none"};g.binders.hide=function(a,b){return a.style.display=b?"none":""};g.binders.enabled=function(a,b){return a.disabled=!b};g.binders.disabled=function(a,b){return a.disabled=!!b};g.binders.checked=
{publishes:!0,bind:function(a){return g.Util.bindEvent(a,"change",this.publish)},unbind:function(a){return g.Util.unbindEvent(a,"change",this.publish)},routine:function(a,b){var c;return"radio"===a.type?a.checked=(null!=(c=a.value)?c.toString():void 0)===(null!=b?b.toString():void 0):a.checked=!!b}};g.binders.unchecked={publishes:!0,bind:function(a){return g.Util.bindEvent(a,"change",this.publish)},unbind:function(a){return g.Util.unbindEvent(a,"change",this.publish)},routine:function(a,b){var c;
return"radio"===a.type?a.checked=(null!=(c=a.value)?c.toString():void 0)!==(null!=b?b.toString():void 0):a.checked=!b}};g.binders.value={publishes:!0,bind:function(a){return g.Util.bindEvent(a,"change",this.publish)},unbind:function(a){return g.Util.unbindEvent(a,"change",this.publish)},routine:function(a,b){var c,d,f,e,g;if(null!=window.jQuery){if(a=jQuery(a),(null!=b?b.toString():void 0)!==(null!=(c=a.val())?c.toString():void 0))return a.val(null!=b?b:"")}else if("select-multiple"===a.type){if(null!=
b){g=[];d=0;for(f=a.length;d<f;d++)c=a[d],g.push(c.selected=(e=c.value,0<=s.call(b,e)));return g}}else if((null!=b?b.toString():void 0)!==(null!=(d=a.value)?d.toString():void 0))return a.value=null!=b?b:""}};g.binders["if"]={block:!0,bind:function(a){var b,c;if(null==this.marker)return b=[this.view.config.prefix,this.type].join("-").replace("--","-"),c=a.getAttribute(b),this.marker=document.createComment(" rivets: "+this.type+" "+c+" "),a.removeAttribute(b),a.parentNode.insertBefore(this.marker,a),
a.parentNode.removeChild(a)},unbind:function(){var a;return null!=(a=this.nested)?a.unbind():void 0},routine:function(a,b){var c,d,f,e;if(!!b===(null==this.nested)){if(b){f={};e=this.view.models;for(c in e)d=e[c],f[c]=d;c={binders:this.view.options.binders,formatters:this.view.options.formatters,adapters:this.view.options.adapters,config:this.view.options.config};(this.nested=new g.View(a,f,c)).bind();return this.marker.parentNode.insertBefore(a,this.marker.nextSibling)}a.parentNode.removeChild(a);
this.nested.unbind();return delete this.nested}},update:function(a){var b;return null!=(b=this.nested)?b.update(a):void 0}};g.binders.unless={block:!0,bind:function(a){return g.binders["if"].bind.call(this,a)},unbind:function(){return g.binders["if"].unbind.call(this)},routine:function(a,b){return g.binders["if"].routine.call(this,a,!b)},update:function(a){return g.binders["if"].update.call(this,a)}};g.binders["on-*"]={"function":!0,unbind:function(a){if(this.handler)return g.Util.unbindEvent(a,this.args[0],
this.handler)},routine:function(a,b){this.handler&&g.Util.unbindEvent(a,this.args[0],this.handler);return g.Util.bindEvent(a,this.args[0],this.handler=this.eventHandler(b))}};g.binders["each-*"]={block:!0,bind:function(a){var b,c,d;if(null==this.marker)b=[this.view.config.prefix,this.type].join("-").replace("--","-"),this.marker=document.createComment(" rivets: "+this.type+" "),this.iterated=[],a.removeAttribute(b),a.parentNode.insertBefore(this.marker,a),a.parentNode.removeChild(a);else{d=this.iterated;
b=0;for(c=d.length;b<c;b++)a=d[b],a.bind()}},unbind:function(){var a,b,c,d,f;if(null!=this.iterated){d=this.iterated;f=[];b=0;for(c=d.length;b<c;b++)a=d[b],f.push(a.unbind());return f}},routine:function(a,b){var c,d,f,e,h,i,n,k,l,o;i=this.args[0];b=b||[];if(this.iterated.length>b.length){l=Array(this.iterated.length-b.length);k=0;for(l=l.length;k<l;k++)d=this.iterated.pop(),d.unbind(),this.marker.parentNode.removeChild(d.els[0])}f=k=0;for(l=b.length;k<l;f=++k)if(h=b[f],d={index:f},d[i]=h,null==this.iterated[f]){f=
this.view.models;for(e in f)h=f[e],null==d[e]&&(d[e]=h);h=this.iterated.length?this.iterated[this.iterated.length-1].els[0]:this.marker;f={binders:this.view.options.binders,formatters:this.view.options.formatters,adapters:this.view.options.adapters,config:{}};o=this.view.options.config;for(c in o)n=o[c],f.config[c]=n;f.config.preloadData=!0;n=a.cloneNode(!0);d=new g.View(n,d,f);d.bind();this.iterated.push(d);this.marker.parentNode.insertBefore(n,h.nextSibling)}else this.iterated[f].models[i]!==h&&
this.iterated[f].update(d);if("OPTION"===a.nodeName){k=this.view.bindings;l=[];e=0;for(i=k.length;e<i;e++)c=k[e],c.el===this.marker.parentNode&&"value"===c.type?l.push(c.sync()):l.push(void 0);return l}},update:function(a){var b,c,d,e,g;b={};for(c in a)d=a[c],c!==this.args[0]&&(b[c]=d);e=this.iterated;g=[];c=0;for(d=e.length;c<d;c++)a=e[c],g.push(a.update(b));return g}};g.binders["class-*"]=function(a,b){var c;c=" "+a.className+" ";if(!b===(-1!==c.indexOf(" "+this.args[0]+" ")))return a.className=
b?""+a.className+" "+this.args[0]:c.replace(" "+this.args[0]+" "," ").trim()};g.binders["*"]=function(a,b){return null!=b?a.setAttribute(this.type,b):a.removeAttribute(this.type)};g.factory=function(a){a._=g;a.binders=g.binders;a.components=g.components;a.formatters=g.formatters;a.adapters=g.adapters;a.config=g.config;a.configure=function(a){var c,d;null==a&&(a={});for(c in a)d=a[c],g.config[c]=d};return a.bind=function(a,c,d){null==c&&(c={});null==d&&(d={});a=new g.View(a,c,d);a.bind();return a}};
q={};g.factory(q);define("rivets",q)}).call(this);
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-hipchat-emoticons-plugin:hipchat-emoticons', location = 'data/DataManager.js' */
define("confluence-hipchat-emoticons/data/DataManager",["ajs","jquery"],function(g,h){var d,b=[],c={},e=function(a){a&&(c={},a.forEach(function(a){c[a.shortcut]=a}))},f=function(){return h.ajax({url:g.contextPath()+"/rest/emoticons/1.0/",type:"get",dataType:"json",cache:!1}).then(function(a){localStorage.setItem("hipchat.emoticons.data",JSON.stringify(a))}).then(function(a){b=a.hipchat;e(b)})};return{initializeData:function(){var a=JSON.parse(localStorage.getItem("hipchat.emoticons.data"));a&&(b=
a.hipchat,e(b));d=f()},loadRemoteData:f,getAuthoritativeEmoticons:function(){return d},getHipChatEmoticon:function(a){return c[a]}}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-hipchat-emoticons-plugin:hipchat-emoticons', location = 'insertion/EmoticonInserter.js' */
define("confluence-hipchat-emoticons/insertion/EmoticonInserter",["ajs"],function(e){return{insertEmoticon:function(a,f){var c=e.Rte.getEditor();if(f){var b=$(c.getContainer()),d=null;if(b.parents("#comments-section").length)d="comment";else if(b.parents(".ic-comment-container").length)d="inlinecomment";else if(b.parents("#editpageform").length||b.parents("#createpageform").length)d=b.parents(".blogpost").length?"blog":"page";d&&e.trigger("analyticsEvent",{name:"confluence.hipchat.emoticons.insert."+
f,data:{shortcut:a.shortcut,source:d}})}b=c.dom.createHTML("img",a.name?{src:a.url,alt:a.name+" "+a.shortcut,title:a.name+" "+a.shortcut,border:0,"class":"emoticon emoticon-"+a.name,"data-emoticon-name":a.name}:{src:a.url,alt:"("+a.shortcut+")",title:"("+a.shortcut+")",border:0,"class":"emoticon emoticon-"+a.shortcut,"data-hipchat-emoticon":a.shortcut});c.execCommand("mceInsertContent",!1,b,{skip_undo:!0});c.undoManager.beforeChange();c.undoManager.add()}}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-hipchat-emoticons-plugin:hipchat-emoticons', location = 'completion/CompletionManager.js' */
define("confluence-hipchat-emoticons/completion/CompletionManager","ajs jquery underscore confluence-hipchat-emoticons/completion/Utilities confluence-hipchat-emoticons/data/DataManager confluence-hipchat-emoticons/insertion/EmoticonInserter".split(" "),function(g,h,n,f,i,j){function k(c,b,a){if(!b)throw Error("text node is null");if(b.nodeType!=3){b=b.childNodes[a-1];a=b.length}for(;b&&b.nodeType==3;b=b.previousSibling){if(a==-1)a=b.nodeValue.length;if(a>c)return{container:b,offset:a-c};if(a==c){a=
0;for(c=b.parentNode;b.previousSibling;){b=b.previousSibling;a++}return{container:c,offset:a}}c=c-a;a=-1}return null}var l=/\(([A-Za-z0-9]+)$/,m=function(c,b){if(f.getCharCode(b)===41){var a;a=f.getTextFromPreviousSiblingTextNodes(c.selection.getRng(true));if(a=l.exec(a)){a=a[1];if(a=i.getHipChatEmoticon(a)){var d,e;c.execCommand("mceInsertContent",false,")");c.undoManager.beforeChange();c.undoManager.add();d=c.selection.getRng(true);f.getTextFromPreviousSiblingTextNodes(d);e=k(a.shortcut.length+
1+1,d.commonAncestorContainer,d.startOffset);d.setStart(e.container,e.offset);e=h(d.commonAncestorContainer);c.selection.setRng(d);if(e.closest(".wysiwyg-macro-body").length&&d.toString()==e.text()){e[0].innerHTML="<br>";c.selection.select(e[0].childNodes[0]);c.selection.collapse(true)}else c.execCommand("delete",false,{},{skip_undo:true});j.insertEmoticon(a,"autoformat");tinymce.dom.Event.cancel(b);a=false}else a=true}else a=true;return a}};return{start:function(){g.Rte.BootstrapManager.addOnInitCallback(function(){g.Rte.getEditor().onKeyPress.addToTop(m)})}}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-hipchat-emoticons-plugin:hipchat-emoticons', location = 'completion/Utilities.js' */
define("confluence-hipchat-emoticons/completion/Utilities",["jquery"],function(d){return{getTextFromPreviousSiblingTextNodes:function(b){var a,c;if(!b||!b.collapsed)throw Error("range is null or not collapsed");a=b.startContainer;c=b.startOffset;if(1==a.nodeType&&0<c)if(a=a.childNodes[b.startOffset-1],3==a.nodeType)c=a.nodeValue.length;else return"";else if(3!=a.nodeType)return"";b=a.nodeValue.substring(0,c);for(a=a.previousSibling;a&&3==a.nodeType;a=a.previousSibling)b=a.nodeValue+b;return b},getCharCode:function(b){return d.browser.msie?
b.keyCode:b.which}}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-hipchat-emoticons-plugin:hipchat-emoticons', location = 'dialog/DialogEmoticon.js' */
define("confluence-hipchat-emoticons/dialog/DialogEmoticon",["underscore"],function(b){var c=function(a){this.name=a.name;this.shortcut=a.shortcut;this.fullShortcut=a.fullShortcut;this.url=a.url;this.onClick=a.onClick&&b.bind(a.onClick,this,this);this.visible=!0;this._initializeCaption(a)};b.extend(c.prototype,{onKeypress:function(a){13==a.keyCode&&this.click()},_initializeCaption:function(a){a.selectedText?(this.selectedCaptionPortion=a.selectedText,a=this.fullShortcut.indexOf(this.selectedCaptionPortion),
this.leftCaptionPortion=this.fullShortcut.substring(0,a),this.rightCaptionPortion=this.fullShortcut.substring(a+this.selectedCaptionPortion.length)):(this.leftCaptionPortion=this.fullShortcut,this.rightCaptionPortion=this.selectedCaptionPortion="")}});return c});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-hipchat-emoticons-plugin:hipchat-emoticons', location = 'dialog/EmoticonDialog.js' */
define("confluence-hipchat-emoticons/dialog/EmoticonDialog","ajs jquery rivets underscore confluence-hipchat-emoticons/dialog/DialogEmoticon confluence-hipchat-emoticons/dialog/EmoticonDialogModel confluence-hipchat-emoticons/dialog/Templates".split(" "),function(d,c,e,f,a,g,h){a=function(){var a=new g({dialog:this}),b=c(h.emoticonDialog())[0];document.body.appendChild(b);this._dialog=d.dialog2(b);e.bind(b,a);c(b.querySelector(".loading-spinner")).spin("large");this._dialog.on("show",function(){a.update(a.filterText=
"")})};f.extend(a.prototype,{show:function(){this._dialog.show()},close:function(){this._dialog.hide()}});return a});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-hipchat-emoticons-plugin:hipchat-emoticons', location = 'dialog/EmoticonDialogModel.js' */
define("confluence-hipchat-emoticons/dialog/EmoticonDialogModel",["ajs","underscore","confluence-hipchat-emoticons/data/DataManager","confluence-hipchat-emoticons/insertion/EmoticonInserter","confluence-hipchat-emoticons/dialog/DialogEmoticon"],function(d,h,e,f,g){var c=function(b){var a=this;this.close=function(){b.dialog.close()};this.onFilterSubmit=function(a){return a.preventDefault()};this.onFilterUpdate=function(){a.update(this.value)};var c=function(b){f.insertEmoticon(b);a.close()},i=function(b){f.insertEmoticon(b,
"gallery");a.close()};this.isAdmin=d.Meta.getBoolean("is-admin");this.isHipChatIntegrated=!1;this.loadEmoticons=function(){var b=a.isError?e.loadRemoteData():e.getAuthoritativeEmoticons();a.isLoading=!0;a.isError=!1;a.showEmoticons=!1;a.showHipChatEmoticons=!1;b.then(function(b){a.isLoading=!1;a.hipchatEmoticons=b.hipchat.map(function(a){return new g({shortcut:a.shortcut,fullShortcut:"("+a.shortcut+")",url:a.url,onClick:i})});a.confluenceEmoticons=b.confluence.map(function(a){return new g({name:a.name,
shortcut:a.shortcut,fullShortcut:a.shortcut,url:a.url,onClick:c})});a.showEmoticons=!0;a.showHipChatEmoticons=Boolean(d.Meta.get("remote-user"));a.allEmoticons=h.union(a.confluenceEmoticons,a.hipchatEmoticons);a.isHipChatIntegrated=b.hipchatIntegrated;setTimeout(function(){document.querySelector("#hipchat-emoticons-filter").focus();document.querySelector("#hipchat-emoticons-filter").select()},100)}).fail(function(){a.isError=!0;a.isLoading=!1})}.bind(this);this.loadEmoticons()};c.prototype.update=
function(b){this._previousFilterText!==b&&(this._previousFilterText=b,(this.allEmoticons||[]).forEach(function(a){a.visible=0<=a.fullShortcut.indexOf(b)}))};return c});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-hipchat-emoticons-plugin:hipchat-emoticons', location = 'dialog/templates.soy' */
// This file was automatically generated from templates.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace Confluence.Templates.HipChatEmoticons.Dialog.
 */

if (typeof Confluence == 'undefined') { var Confluence = {}; }
if (typeof Confluence.Templates == 'undefined') { Confluence.Templates = {}; }
if (typeof Confluence.Templates.HipChatEmoticons == 'undefined') { Confluence.Templates.HipChatEmoticons = {}; }
if (typeof Confluence.Templates.HipChatEmoticons.Dialog == 'undefined') { Confluence.Templates.HipChatEmoticons.Dialog = {}; }


Confluence.Templates.HipChatEmoticons.Dialog.emoticonDialog = function(opt_data, opt_ignored) {
  return '<section role="dialog" id="insert-hipchat-emoticon-dialog" class="aui-layer aui-dialog2 aui-dialog2-medium" aria-hidden="true"><header class="aui-dialog2-header"><h2 class="aui-dialog2-header-main">' + soy.$$escapeHtml("\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0441\u043c\u0430\u0439\u043b\u0438\u043a") + '</h2><div class="aui-dialog2-header-secondary"><form class="aui" action="#"><input id="hipchat-emoticons-filter" class="text medium-field" type="search" rv-show="showEmoticons" rv-value="filterText" rv-on-keyup="onFilterUpdate" rv-on-submit="onFilterSubmit" placeholder="' + soy.$$escapeHtml("\u0418\u0441\u043a\u0430\u0442\u044c") + '"></form></div><a class="aui-dialog2-header-close"><span class="aui-icon aui-icon-small aui-iconfont-close-dialog">' + soy.$$escapeHtml("\u041e\u0442\u043c\u0435\u043d\u0430") + '</span></a></header><div class="aui-dialog2-content"><div class="emoticon-gallery"><div rv-show="isLoading" class="loading-spinner"></div><div rv-show="isError" class="error"><p><span class="aui-icon aui-icon-large aui-iconfont-error"></span></p><p>Oh dear, it seems we had some trouble loading your emoticons. Please click the button below to try loading them again.</p><p><button class="aui-button aui-button-primary" id="hipchat-emoticons-error-rety" rv-on-click="loadEmoticons">Retry</button></p></div><div rv-show="showEmoticons" class="emoticons-panel confluence-emoticons-panel"><h4 class="emoticons-panel-header">' + soy.$$escapeHtml("Confluence") + '</h4><hr>' + Confluence.Templates.HipChatEmoticons.Dialog.confluenceEmoticons(null) + '</div><div rv-show="showHipChatEmoticons" class="emoticons-panel hipchat-emoticons-panel"><h4 class="emoticons-panel-header">' + soy.$$escapeHtml("HipChat") + '</h4><hr>' + Confluence.Templates.HipChatEmoticons.Dialog.hipchatEmoticons(null) + '<div rv-hide="isHipChatIntegrated" class="aui-message info"><span class="aui-icon icon-hint"></span><span rv-show="isAdmin">' + soy.$$filterNoAutoescape(AJS.format("\u0421\u043c\u0430\u0439\u043b\u044b HipChat \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b, \u043f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 HipChat \u043d\u0435 \u0438\u043d\u0442\u0435\u0433\u0440\u0438\u0440\u043e\u0432\u0430\u043d \u0432 Confluence. {0}\u0429\u0435\u043b\u043a\u043d\u0438\u0442\u0435 \u0437\u0434\u0435\u0441\u044c{1}, \u0447\u0442\u043e\u0431\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0438\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044e.",'<a target="_blank" href="' + "/wiki" + '/plugins/servlet/hipchat/configure">','</a>')) + '</span><span rv-hide="isAdmin">' + soy.$$filterNoAutoescape("\u0421\u043c\u0430\u0439\u043b\u044b HipChat \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b, \u043f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 HipChat \u043d\u0435 \u0438\u043d\u0442\u0435\u0433\u0440\u0438\u0440\u043e\u0432\u0430\u043d \u0432 Confluence. \u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435\u0441\u044c \u043a \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0443 \u043f\u043e \u043f\u043e\u0432\u043e\u0434\u0443 \u0438\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u0438.") + '</span></div></div></div></div><footer class="aui-dialog2-footer"><div class="aui-dialog2-footer-actions"><button class="aui-button aui-button-link close-button" rv-on-click="close">' + soy.$$escapeHtml("\u041e\u0442\u043c\u0435\u043d\u0430") + '</button></div></footer></section>';
};
if (goog.DEBUG) {
  Confluence.Templates.HipChatEmoticons.Dialog.emoticonDialog.soyTemplateName = 'Confluence.Templates.HipChatEmoticons.Dialog.emoticonDialog';
}


Confluence.Templates.HipChatEmoticons.Dialog.confluenceEmoticons = function(opt_data, opt_ignored) {
  return '<div class="confluence-emoticons">' + Confluence.Templates.HipChatEmoticons.Dialog.genericEmoticonRepeater({modelDataAttribute: 'confluenceEmoticons'}) + '</div>';
};
if (goog.DEBUG) {
  Confluence.Templates.HipChatEmoticons.Dialog.confluenceEmoticons.soyTemplateName = 'Confluence.Templates.HipChatEmoticons.Dialog.confluenceEmoticons';
}


Confluence.Templates.HipChatEmoticons.Dialog.hipchatEmoticons = function(opt_data, opt_ignored) {
  return '<div class="hipchat-emoticons">' + Confluence.Templates.HipChatEmoticons.Dialog.genericEmoticonRepeater({modelDataAttribute: 'hipchatEmoticons'}) + '</div>';
};
if (goog.DEBUG) {
  Confluence.Templates.HipChatEmoticons.Dialog.hipchatEmoticons.soyTemplateName = 'Confluence.Templates.HipChatEmoticons.Dialog.hipchatEmoticons';
}


Confluence.Templates.HipChatEmoticons.Dialog.genericEmoticonRepeater = function(opt_data, opt_ignored) {
  return '<div rv-show="emoticon.visible" rv-each-emoticon="' + soy.$$escapeHtml(opt_data.modelDataAttribute) + '" class="gallery-item" rv-data-shortcut="emoticon.shortcut" rv-data-full-shortcut="emoticon.fullShortcut" rv-on-click="emoticon.onClick" rv-on-keydown="emoticon.onKeypress" tabindex="0"><img rv-src="emoticon.url"><br/><span class="caption"><span rv-text="emoticon.leftCaptionPortion"></span><strong rv-text="emoticon.selectedCaptionPortion"></strong><span rv-text="emoticon.rightCaptionPortion"></span></span></div>';
};
if (goog.DEBUG) {
  Confluence.Templates.HipChatEmoticons.Dialog.genericEmoticonRepeater.soyTemplateName = 'Confluence.Templates.HipChatEmoticons.Dialog.genericEmoticonRepeater';
}

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-hipchat-emoticons-plugin:hipchat-emoticons', location = 'dialog/Templates.js' */
define("confluence-hipchat-emoticons/dialog/Templates",function(){return window.Confluence.Templates.HipChatEmoticons.Dialog});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-hipchat-emoticons-plugin:hipchat-emoticons', location = 'menu/MenuItemOverrider.js' */
define("confluence-hipchat-emoticons/menu/MenuItemOverrider",["ajs","jquery","confluence-hipchat-emoticons/dialog/EmoticonDialog"],function(d,a,c){return{start:function(){var b=null;a(".content-emoticon").off("click").on("click",function(a){b||(b=new c);b.show();a.preventDefault()})}}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-hipchat-emoticons-plugin:hipchat-emoticons', location = 'hipchat-emoticons.js' */
define("confluence-hipchat-emoticons",["jquery","confluence-hipchat-emoticons/completion/CompletionManager","confluence-hipchat-emoticons/data/DataManager","confluence-hipchat-emoticons/menu/MenuItemOverrider"],function(c,d,a,e){c(document).on("postPaste",function(b,d,a){b=c("img",a.node);b.data("hipchatEmoticon")&&b.removeClass("confluence-embedded-image confluence-external-resource")});return{start:function(){a.initializeData();d.start();e.start()}}});AJS.bind("init.rte",function(){require("confluence-hipchat-emoticons").start()});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-hipchat-emoticons-plugin:hipchat-emoticons', location = 'tinymce-plugin.js' */
(function(){var t=tinymce.dom.TreeWalker,c=tinymce.VK;tinymce.PluginManager.requireLangPack("noneditable");tinymce.create("tinymce.plugins.UnknownHipChatEmoticonPlugin",{init:function(h){h.onPreInit.add(function(){var l=function(a){var b;if(1===a.nodeType){if((b=a.getAttribute("data-mce-unknownhipchatemoticon"))&&"inherit"!==b)return b;b=a.contentEditable;if("inherit"!==b)return b}return null},k=function(a){for(var b;a;){if(b=l(a))return"false"===b?a:null;a=a.parentNode}},v=function(a){for(;a;){if(a.id===
u)return a;a=a.parentNode}},w=function(a){var b;if(a){b=new t(a,a);for(a=b.current();a;a=b.next())if(3===a.nodeType)return a}},x=function(a,b){var e,c;if("false"===l(a)&&j.isBlock(a))g.select(a);else return c=j.createRng(),"true"===l(a)&&(a.firstChild||a.appendChild(h.getDoc().createTextNode("\u00a0")),a=a.firstChild,b=!0),e=j.create("span",{id:u,"data-mce-bogus":!0},p),b?a.parentNode.insertBefore(e,a):j.insertAfter(e,a),c.setStart(e.firstChild,1),c.collapse(!0),g.setRng(c),e},y=function(a){var b,
e;if(a)e=g.getRng(!0),e.setStartBefore(a),e.setEndBefore(a),(b=w(a))&&b.nodeValue.charAt(0)==p&&b.deleteData(0,1),j.remove(a,!0),g.setRng(e);else for(e=v(g.getStart());(a=j.get(u))&&a!==b;)e!==a&&((b=w(a))&&b.nodeValue.charAt(0)==p&&b.deleteData(0,1),j.remove(a,!0)),b=a},s=function(){function a(a,b){var e,c,g;e=d.startContainer;c=d.startOffset;if(3==e.nodeType){if(g=e.nodeValue.length,0<c&&c<g||(b?c==g:0==c))return}else if(c<e.childNodes.length)e=e.childNodes[!b&&0<c?c-1:c],e.hasChildNodes()&&(e=
e.firstChild);else return!b?a:null;for(e=new t(e,a);c=e[b?"prev":"next"]();){if(3===c.nodeType&&0<c.nodeValue.length)return;if("true"===l(c))return c}return a}var b,e,c,d;y();c=g.isCollapsed();b=k(g.getStart());e=k(g.getEnd());if(b||e)d=g.getRng(!0),c?(b=b||e,a(b,!0)?(b=a(b,!0),x(b,!0)):a(b,!1)?(b=a(b,!1),x(b,!1)):g.select(b)):(d=g.getRng(!0),b&&d.setStartBefore(b),e&&d.setEndAfter(e),g.setRng(d))},j=h.dom,g=h.selection,u="mce_noneditablecaret",p="\ufeff",o=h.getParam("noneditable_prevent_delete");
h.onMouseUp.addToTop(s);h.onMouseDown.addToTop(s);h.onKeyDown.addToTop(function(a,b){function e(a,b){g.select(a);g.collapse(b)}function h(b){function e(a){for(var b=d;b;){if(b===a)return;b=b.parentNode}j.remove(a);s()}var c,d,f;c=g.getRng(!0);d=c.startContainer;c=c.startOffset;d=v(d)||d;if(g.isCollapsed()){if(f=k(d))return e(f),!1;if(3==d.nodeType&&(b?0<c:c<d.nodeValue.length))return!0;1==d.nodeType&&(d=d.childNodes[c]||d);a:{var i=a.schema.getNonEmptyElements();for(f=new tinymce.dom.TreeWalker(d,
a.getBody());(c=b?f.prev():f.next())&&!i[c.nodeName.toLowerCase()]&&!(3===c.nodeType&&0<tinymce.trim(c.nodeValue).length);)if("false"===l(c)){o||e(c);b=!0;break a}b=k(c)?!0:!1}if(b)return!1}return k(d)?(f=k(d),e(f),!1):!0}var d=b.keyCode,f,n,q=!1;n=g.getStart();f=g.getEnd();f=k(n)||k(f);if(o&&!g.isCollapsed()){var r=g.getRng(!0).cloneContents(),q=!1;tinymce.walk(r,function(a){q="false"===l(a);return!q},"childNodes")}if(f&&(112>d||124<d)&&d!=c.DELETE&&d!=c.BACKSPACE){if(!(tinymce.isMac?b.metaKey:b.ctrlKey)||
!(67==d||88==d||86==d))if(b.preventDefault(),d==c.LEFT||d==c.RIGHT)d=d==c.LEFT,a.dom.isBlock(f)?(f=d?f.previousSibling:f.nextSibling,f=new t(f,f),f=d?f.prev():f.next(),e(f,!d)):e(f,d)}else if(d==c.LEFT||d==c.RIGHT||d==c.BACKSPACE||d==c.DELETE){if(f=v(n)){var i,m=d===c.LEFT||d===c.BACKSPACE?"left":"right";n="left"===m?c.LEFT:c.RIGHT;r="left"===m?c.BACKSPACE:c.DELETE;m="left"===m?!0:!1;g.getRng(!0);if(d===n||d===r){a:{for(i=f;i=i[m?"previousSibling":"nextSibling"];)if(3!==i.nodeType||0<i.nodeValue.length)break a;
i=void 0}if(i&&"false"===l(i)){if(d===n&&e(i,m),d===r&&(f.innerHTML===p||!tinymce.trim(f.innerText||f.textContent)))b.preventDefault(),e(i,m),o||j.remove(i)}else o||y(f)}}if((d==c.BACKSPACE||d==c.DELETE)&&!h(d==c.BACKSPACE)||o&&q&&!confirm(a.getLang("noneditable.confirm_delete")))return b.preventDefault(),!1}});h.onKeyUp.addToTop(s);h.parser.addAttributeFilter("class",function(a){for(var b=a.length,c,g;b--;)g=a[b],c=" "+g.attr("class")+" ",-1!==c.indexOf(" unknown-hipchat-emoticon ")&&g.attr("data-mce-unknownhipchatemoticon",
"false")});h.serializer.addAttributeFilter("data-mce-unknownhipchatemoticon",function(a){for(var b=a.length,c;b--;)c=a[b],c.attr("unknownhipchatemoticon",null),c.attr("data-mce-unknownhipchatemoticon",null)});h.parser.addAttributeFilter("unknownhipchatemoticon",function(a){for(var b=a.length,c;b--;)c=a[b],c.attr("data-mce-unknownhipchatemoticon",c.attr("unknownhipchatemoticon")),c.attr("unknownhipchatemoticon",null)})})},getInfo:function(){return{longname:"unknownhipchatemoticon",author:"Moxiecode Systems AB",
authorurl:"http://tinymce.moxiecode.com",infourl:"",version:tinymce.majorVersion+"."+tinymce.minorVersion}}});tinymce.PluginManager.add("unknownhipchatemoticon",tinymce.plugins.UnknownHipChatEmoticonPlugin);AJS.Editor.Adapter.addTinyMcePluginInit(function(c){c.plugins+=",unknownhipchatemoticon"})})();
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-inline-comments:strip-inline-comment-marker', location = 'editor/paste-handler.js' */
(function(a){AJS.bind("init.rte",function(){a(document).unbind("postPaste",b).bind("postPaste",b);tinymce.activeEditor&&tinymce.activeEditor.onRemove.add(function(){a(document).unbind("postPaste",b)});function b(d,e,c){if(c&&c.node){a(".inline-comment-marker",c.node).contents().unwrap()}}})})(AJS.$);
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.profile-picture:profile-picture-editor_resources', location = 'js/profile-picture.js' */
AJS.bind("init.rte", function() {
    AJS.Confluence.PropertyPanel.Macro.registerButtonHandler("viewProfile", function(e, macroNode) {
        var $macroDiv = AJS.$(macroNode);

        var params = {};
        if ($macroDiv.attr("data-macro-parameters")) {
            AJS.$.each($macroDiv.attr("data-macro-parameters").split("|"), function(idx, item) {
                var param = item.split("=");
                params[param[0]] = param[1];
            });
        }
        window.open(AJS.Confluence.getBaseUrl() + "/display/~" + params["user"]);
    });
});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-view-file-macro:view-file-macro-editor-resources', location = 'templates/view-file-macro-editor.soy' */
// This file was automatically generated from view-file-macro-editor.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace Confluence.ViewFileMacro.Templates.Editor.
 */

if (typeof Confluence == 'undefined') { var Confluence = {}; }
if (typeof Confluence.ViewFileMacro == 'undefined') { Confluence.ViewFileMacro = {}; }
if (typeof Confluence.ViewFileMacro.Templates == 'undefined') { Confluence.ViewFileMacro.Templates = {}; }
if (typeof Confluence.ViewFileMacro.Templates.Editor == 'undefined') { Confluence.ViewFileMacro.Templates.Editor = {}; }


Confluence.ViewFileMacro.Templates.Editor.viewFilePropertyPanelHeader = function(opt_data, opt_ignored) {
  return '<div class="view-file-property-panel-header"><span class="file-name"><span class="aui-icon aui-icon-small ' + soy.$$escapeHtml(opt_data.fileIcon) + '"></span>' + soy.$$escapeHtml(opt_data.fileName) + '</span></div>';
};
if (goog.DEBUG) {
  Confluence.ViewFileMacro.Templates.Editor.viewFilePropertyPanelHeader.soyTemplateName = 'Confluence.ViewFileMacro.Templates.Editor.viewFilePropertyPanelHeader';
}

}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-view-file-macro:view-file-macro-editor-resources', location = '/js/components/view-file-macro-properties-panel.js' */
define("vfm/components/view-file-macro-properties-panel",["jquery","underscore","ajs","confluence","confluence/jsUri","tinymce","vfm/view-file-macro-utils"],function(d,x,f,l,m,b,r){var t="view-file";var a="macro-placeholder-property-panel-edit-button";var y="macro-placeholder-property-panel-remove-button";var c="placeholder/unknown-attachment";var i="data-macro-parameters";var q={"view-file-size-small":"150","view-file-size-medium":"250","view-file-size-large":"400"};var h=[{className:"macro-property-panel-view-file-size-small",text:"",tooltip:"\u041c\u0430\u043b\u0435\u043d\u044c\u043a\u0430\u044f \u043c\u0438\u043d\u0438\u0430\u0442\u044e\u0440\u0430",click:j},{className:"macro-property-panel-view-file-size-medium",text:"",tooltip:"\u0421\u0440\u0435\u0434\u043d\u044f\u044f \u043c\u0438\u043d\u0438\u0430\u0442\u044e\u0440\u0430",click:j},{className:"macro-property-panel-view-file-size-large",text:"",tooltip:"\u0411\u043e\u043b\u044c\u0448\u0430\u044f \u043c\u0438\u043d\u0438\u0430\u0442\u044e\u0440\u0430",click:j},null,{className:"macro-property-panel-view-file-convert-to-link",text:"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u043a\u0430\u043a \u0441\u0441\u044b\u043b\u043a\u0443",tooltip:"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u043a\u0430\u043a \u0441\u0441\u044b\u043b\u043a\u0443",click:g}];function u(E,B){var F=x.find(Object.keys(q),function(G){return q[G]===B});if(F){for(var A=0,D=E.length;A<D;A++){var z=E[A];var C=z.className.replace(" selected","");if(C.indexOf("macro-property-panel-"+F)!==-1){C+=" selected"}z.className=C}}}function s(A){var B=x.reject(A,function(C){return C.className.indexOf(a)>-1||C.className.indexOf(y)>-1});A.splice(0,A.length);for(var z=0;z<B.length;z++){A.push(B[z])}}function k(A,z){var B=d(A);B.attr("height",z);var C=B.attr("src");if(o(C)){B.attr("src",p(B.attr("src"),z));B.attr("data-mce-src",p(B.attr("data-mce-src"),z));if(b.isGecko){f.Rte.getEditor().execCommand("mceRepaint",false)}}v(B,z);b.activeEditor.undoManager.add()}function o(z){return(z!=null&&z.indexOf("/servlet/view-file-macro/placeholder")>=0)}function p(B,z){var A=new m(B);if(A.getQueryParamValue("height")!==""){A.replaceQueryParam("height",z)}return A.toString()}function w(C){var z=C.attr(i);var D=[];var A="";for(var B=0;B<z.length;B++){var E=z[B];if(E==="\\"){A+=E;if(B+1!==z.length){A+=z[++B]}}else{if(E==="|"){D.push(A);A=""}else{A+=E}}}D.push(A);return D}function v(C,A){var B="height="+A;var E=w(C);var D=e(C,"height");if(D){var z=x.indexOf(E,"height="+D);E[z]=B}else{E.push(B)}C.attr(i,E.join("|"))}function e(B,z){var C=w(B);var A=x.find(C,function(D){return(D.indexOf(z+"=")>=0)});return A?A.split("=")[1]:null}function j(B,z){if(d(B).attr("class").indexOf("selected")!==-1){return}f.Confluence.PropertyPanel.destroy();var C=Object.keys(q);var D=d(B).attr("class");for(var A=0;A<C.length;A++){if(D.indexOf(C[A])!==-1){k(z,q[C[A]]);d(z).click();f.trigger("analyticsEvent",{name:"confluence.view-file.resize."+C[A].substring(C[A].lastIndexOf("-")+1,C[A].length)});return}}}function g(B,z){f.trigger("analyticsEvent",{name:"confluence.view-file.convert.to-link-trigger"});f.Confluence.PropertyPanel.destroy();A(z);function A(C){var E=r.getParameterByName(d(C).attr("src"),"attachmentId");var D=f.REST.makeUrl("attachment/"+E+".json");d.ajax({type:"GET",url:D,contentType:"application/json; charset=utf-8",dataType:"json"}).success(function(H){var F=l.Link.fromREST(H);var G=F.insert();b.activeEditor.undoManager.add();b.activeEditor.focus();G.click()})}}function n(){f.bind("created.property-panel",function(G,F){var H=d(F.anchor);var C=H.attr("data-macro-name");if(C!==t){return}var D=l.ViewFileMacro.Templates.Editor.viewFilePropertyPanelHeader;var E=e(H,"name");var B=r.getParameterByName(H.attr("src"),"mimeType");var A=f.Confluence.FileTypesUtils.getAUIIconFromMime(B);var z=d(D({fileName:E,fileIcon:A}));F.panel.find(".aui-property-panel").prepend(z);if(F.shouldFlip){F.tip.css({top:F.panel.outerHeight()})}})}return{init:function(){f.Confluence.PropertyPanel.Macro.registerInitHandler(function(G,D,z){s(D);var E=d(G);var B=E.attr("data-mce-src");if(B&&B.indexOf(c)>-1){return}for(var A=0,C=h.length;A<C;A++){D.push(h[A])}var F=E.attr("height");if(!F){F=(f.Meta.get("content-type")==="comment")?r.DEFAULT_HEIGHT_IN_COMMENT:r.DEFAULT_HEIGHT}u(D,F)},t);n()}}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-view-file-macro:view-file-macro-editor-resources', location = '/js/components/view-file-macro-link-properties-panel.js' */
define("vfm/components/view-file-macro-link-properties-panel",["jquery","ajs","tinymce","vfm/view-file-macro-utils"],function(g,b,e,a){var c="view-file";function f(h){if(h){var k=g(h);var i=k.attr("data-linked-resource-type");var j=k.attr("data-linked-resource-content-type");return b.MacroBrowser.getMacroMetadata(c)&&i==="attachment"&&!(j&&j.indexOf("image")===0)}return false}function d(h){var i=b.REST.makeUrl("attachment/"+g(h).attr("data-linked-resource-id")+".json");g.ajax({type:"GET",url:i,contentType:"application/json; charset=utf-8",dataType:"json"}).success(function(k){var n={name:k.fileName};if(b.Data.get("content-id")!==k.ownerId){n.page=k.parentTitle;n.space=k.space.key;if(k.parentContentType==="blogpost"){var l=k.createdDate.date.split("-");n.date=l[0]+"/"+l[1]+"/"+l[2].substring(0,2)+"/"}}n.height=(b.Meta.get("content-type")==="comment")?a.DEFAULT_HEIGHT_IN_COMMENT:a.DEFAULT_HEIGHT;var j={contentId:b.Meta.get("content-id")||"0",macro:{name:c,params:n}};var m=e.confluence.MacroUtils.insertMacro(j,h);m.done(function(o){g(o).click()})})}return{init:function(){b.bind("link-property-panel-buttons.created",function(j,k){var i=k.buttons;var h=k.link;if(f(h)){i.push({className:"link-property-panel-convert-to-thumbnail-button",text:"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0432 \u0432\u0438\u0434\u0435 \u043c\u0438\u043d\u0438\u0430\u0442\u044e\u0440\u044b",tooltip:"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0432 \u0432\u0438\u0434\u0435 \u043c\u0438\u043d\u0438\u0430\u0442\u044e\u0440\u044b",click:function(){b.Confluence.PropertyPanel.destroy();d(h);b.trigger("analyticsEvent",{name:"confluence.view-file.convert.to-thumbnail-trigger"})}})}})}}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-view-file-macro:view-file-macro-editor-resources', location = '/js/components/vfm-editor-poller.js' */
define("vfm/components/vfm-editor-poller",["ajs","jquery","underscore","tinymce","vfm/view-file-macro-utils","vfm/services/conversion-service"],function(k,e,m,p,q,c){var o;var l=false;var d={};var f=q.THUMBNAIL_POLLING_PERIOD;var h=q.THUMBNAIL_POLLING_BACKOFF_RATIO;function a(){if(!p.activeEditor||!l){return}var s=e("img[data-macro-name='view-file'][src*='thumbnailStatus="+q.THUMBNAIL_STATUS_IN_PROGRESS+"'][data-thumbnail-status!='"+q.THUMBNAIL_STATUS_ERROR+"']",p.activeEditor.dom.doc);if(s.length>0){var r=false;s.each(function(){var u=e(this);var w=u.attr("src");var v=q.getParameterByName(w,"attachmentId");var t=q.getParameterByName(w,"version");if(!d[v]||d[v].version!==t){d[v]={version:t};r=true}});if(r){j()}c.postThumbnailConversionResults(d).then(function(t){if(!p.activeEditor||!l){return}m.each(t,function(x,y){if(!d[y]){return}var w=e("img[data-macro-name='view-file'][src*='attachmentId="+y+"']",p.activeEditor.dom.doc);var v=d[y].version;w.attr("data-thumbnail-status",x);if(x===q.THUMBNAIL_STATUS_CONVERTED){var u=w.attr("src");var z=c.getThumbnailUrl(y,v);z=q.addParamsToUrl(z,{attachmentId:y,mimeType:q.getParameterByName(u,"mimeType")});w.attr("src",z);delete d[y]}else{if(x===q.THUMBNAIL_STATUS_ERROR){delete d[y]}}});if(!m.isEmpty(d)){n()}else{j()}i()})}else{if(s.length===0){j();i()}}}function n(){f=f*h}function j(){f=q.THUMBNAIL_POLLING_PERIOD}function i(){l=true;if(o){clearTimeout(o)}o=setTimeout(a,f)}function g(){if(o){clearTimeout(o);o=undefined}l=false;d={};j()}var b={startPolling:i,stopPolling:g};return b});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-view-file-macro:view-file-macro-editor-resources', location = '/js/vfm-editor.js' */
require(["ajs","tinymce","vfm/components/view-file-macro-properties-panel","vfm/components/view-file-macro-link-properties-panel","vfm/components/vfm-editor-poller"],function(a,d,b,c,e){a.toInit(function(){a.MacroBrowser.setMacroJsOverride("view-file",{opener:function(f){}});b.init();c.init()});d.create("tinymce.plugins.ViewFilePoller",{init:function(f){a.bind("rte-ready",function(){e.startPolling()});a.bind("rte-destroyed",function(){e.stopPolling()})}});d.PluginManager.add("viewFilePoller",d.plugins.ViewFilePoller);a.Rte.BootstrapManager.addTinyMcePluginInit(function(f){f.plugins+=",viewFilePoller"})},undefined,true);
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.adaptavist.confluence.createpage:labelsstring-js', location = 'com/adaptavist/confluence/createpage/js/labelsstring.js' */
AJS.toInit(function(d){if(window.location.href.indexOf("createpage-entervariables.action")>-1){var a=getUrlVars()["labelsAsString"];var b=false;var c=setInterval(function(){if(d("#edit-labels-dialog")[0]===undefined){addLabels(a)}else{if(d("#edit-labels-dialog")[0].style.display!=="none"){d(".dialog-button-panel a.button-panel-cancel-link.button-panel-cancel-link").trigger("click");b=true}}if(b){clearInterval(c)}},500)}});function addLabels(a){if(a){$("#rte-button-labels").trigger("click");$("#labels-string").val(a);$("#add-labels-editor-button").trigger("click")}}function getUrlVars(){var d=[],c;var a=window.location.href.slice(window.location.href.indexOf("?")+1).split("&");for(var b=0;b<a.length;b++){c=a[b].split("=");d.push(c[0]);d[c[0]]=c[1]}return d};
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.ext.newcode-macro-plugin:code-macro-editor', location = '/scripts/code-macro-languages.js' */
(function(d){var b=function(){};b.prototype.fields={string:{language:function(h,f){var g=d(Confluence.Templates.MacroBrowser.macroParameterSelect());var e=d("select",g);if(f==null){f={}}f.setValue=function(k){var j=e.find("option[value='"+k+"']");if(j.length==0){var i=d("<option/>");i.val(k);i.text(k);e.append(i)}};a(e);return new AJS.MacroBrowser.Field(g,e,f)}}};AJS.MacroBrowser.Macros.code=new b();function a(e){c(function(g){if(!g.length){AJS.log("Configured code macro languages result was not in the expected format.");return}var f=e.val();e.empty();e.append(d("<option/>").attr("value",""));d.each(g,function(h,j){var i=d("<option />");i.val(j.aliases[0]);i.text(j.friendlyName);e.append(i)});e.val(f)},function(g,h,f){AJS.log("Failed to retrieve syntax highlighters from Confluence "+h+" - "+f)})}function c(f,e){AJS.$.ajax({async:true,url:AJS.contextPath()+"/plugins/newcode/getlanguages.action",dataType:"json",timeout:10000,error:function(h,i,g){if(e&&typeof(e)=="function"){e(h,i,g)}},success:function(g){if(f&&typeof(f)=="function"){f(g)}}})}})(AJS.$);
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'de.dl.confluence.plugin.imagemap.ImageMapPlugin:macro-browser-smart-fields', location = 'js/activate-smartfields.js' */
(function(a){AJS.MacroBrowser.activateSmartFieldsAttachmentsOnPage("imagemap",["png","jpeg","jpg","gif"])})(AJS.$);
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'confluence.macros.multimedia:macro-browser-smart-fields', location = 'javascript/macro-fields.js' */
(function(a){AJS.MacroBrowser.activateSmartFieldsAttachmentsOnPage("multimedia",["swf","avi","mov","mp4","mpeg","mpg","wmv","wma","mp3","ram","rm"])})(AJS.$);
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-inline-tasks:space-page-picker-shim', location = 'js/space-page-picker-shim.js' */
define("confluence-inline-tasks/space-page-picker-shim",[],function(){function c(d){var f=d.space;var g=d.page;var e=[];if(f){e=e.concat(_.map(f.split(","),function(h){return"space:"+h}))}if(g){e=e.concat(_.map(g.split(","),function(h){return"page:"+h}))}return e.join(",")}function b(e){var d={page:[],space:[]};if(!e){return d}var f=e.split(",");f.forEach(function(g){var j=g.split(":");var i=j[0];var h=j[1];d[i].push(h)});return d}function a(d){return b(d.val())}return{build:function(d){return Confluence.UI.Components.SpacePagePicker.build(d)},setValue:function(e,d){return Confluence.UI.Components.SpacePagePicker.setValue(e,d)},splitStringToMap:b,combineMapToString:c,getValueAsMap:a}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-inline-tasks:inline-tasks-macro-browser', location = 'js/macro-browser-overrides.js' */
define("confluence-inline-tasks/macro-browser-overrides",["jquery","ajs","confluence-inline-tasks/space-page-picker-shim"],function(c,a,b){return{fields:{string:{spaceAndPage:function(g){var f=g.multiple?"autocomplete-multi-space-and-page":"autocomplete-space-and-page";var e=c(Confluence.Templates.MacroBrowser.macroParameter());var h=e.find("input[type='text']");h.addClass(f).attr("data-none-message","\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e");if(g.required){h.keyup(a.MacroBrowser.processRequiredParameters)}h.auiSelect2(b.build({multiple:g.multiple,orgElement:h,inputSpaceId:"legacy-macro-param-spaces",inputSpaceCatId:"legacy-macro-param-space-cats",inputPageId:"legacy-macro-param-pages"}));var d={setValue:function(i){b.setValue(i,h)}};return a.MacroBrowser.Field(e,h,d)}}},beforeParamsSet:function(d){var e=b.combineMapToString({page:d.pages,space:d.spaces});if(e){d.spaceAndPage=e}delete d.pages;delete d.spaces;return d},beforeParamsRetrieved:function(e){var d=b.splitStringToMap(e.spaceAndPage);if(d.page.length){e.pages=d.page.join(",")}if(d.space.length){e.spaces=d.space.join(",")}delete e.spaceAndPage;return e}}});
}catch(e){WRMCB(e)};
;
try {
/* module-key = 'com.atlassian.confluence.plugins.confluence-inline-tasks:inline-tasks-macro-browser', location = 'js/macro-browser-overrides-call.js' */
require("confluence/module-exporter").safeRequire("confluence-inline-tasks/macro-browser-overrides",function(a){require("ajs").MacroBrowser.setMacroJsOverride("tasks-report-macro",a)});
}catch(e){WRMCB(e)};