/* ========= INFORMATION ============================
 
	- document:  Fake Notifications
	- author:    Dmytro Lobov and Wow-Company
	- version:   2.1.1
	- email:     wow@wow-company.com
	- url:       https://codecanyon.net/item/fake-notifications-for-wordpress-creating-effective-herd-effects/19992068
 
 ==================================================== */

! function(a) { a.fn.Notification = function(b) { var screenwidth = screen.width; var c = a.extend({ Variable1: ["Emma", "Noah", "Olivia", "Liam", "Ava", "William"], Variable2: ["Bangkok", "London", "Paris", "Dubai", "New York", "Singapore"], Amount: [100, 2500], Content: '[varible1] from [varible2] has just placed an order for $[amount].', Show: ['stable', 5, 25], Close: 5, Time: [0, 23], LocationTop: [true, '10%'], LocationBottom: [false, '10%'], LocationRight: [true, '10%'], LocationLeft: [false, '10%'], Background: 'black', BorderRadius: 5, BorderWidth: 1, BorderColor: 'red', TextColor: 'white', IconColor: 'white', AnimationEffectOpen: 'fadeIn', AnimationEffectClose: 'fadeOut', Number: 3, Link: [false, 'https://codecanyon.net/item/fake-notifications-for-wordpress-creating-effective-herd-effects/19992068', '_blank'], Screen: [false, ''] }, b); return this.each(function() { var self = this; var number = 0; var screen = 0; if (c.Screen[0] === true && screenwidth <= c.Screen[1]){ var screen = 1; } var currenttime = new Date(); var currenthours = currenttime.getHours(); if (c.Time[0] <= currenthours && currenthours <= c.Time[1] && screen === 0) { A(); }  B();  function B() { a(self).addClass('animated'); if (c.LocationTop[0] == true) { if (c.LocationRight[0] == true) { a(self).css({ 'top': c.LocationTop[1], 'right': c.LocationRight[1], }); } else { a(self).css({ 'top': c.LocationTop[1], 'left': c.LocationLeft[1], }); } } else { if (c.LocationRight[0] == true) { a(self).css({ 'bottom': c.LocationTop[1], 'right': c.LocationRight[1], }); } else { a(self).css({ 'bottom': c.LocationTop[1], 'left': c.LocationLeft[1], }); } } a(self).css({ 'border-radius': c.BorderRadius + 'px', 'border-width': c.BorderWidth + 'px', 'border-color': c.BorderColor, 'background': c.Background }); a(self).find('.notification-img').css({ 'color': c.IconColor }); a(self).find('.notification-text-block').css({ 'color': c.TextColor }); if (c.Link[0] == true) { a(self).attr("onclick", "window.open('" + c.Link[1] + "','" + c.Link[2] + "');"); a(self).css({ 'cursor': 'pointer' }); } };  function A() { if (c.Show[0] == 'stable') { var open = c.Show[1] * 1000; } else { var open = (Math.floor(Math.random() * (c.Show[2] - c.Show[1])) + c.Show[1]) * 1000; } setTimeout(function() { J(); a(self).show(); D(); var rand_heard_name = Math.floor(Math.random() * c.Variable1.length); var rand_heard_city = Math.floor(Math.random() * c.Variable2.length); var rand_heard_product = Math.floor(Math.random() * c.Variable3.length); var rand_heard_number = Math.floor(Math.random() * (c.Amount[0] - c.Amount[1])) + c.Amount[1]; if (c.Content.indexOf('[varible1]') + 1) { var content = c.Content.replace("[varible1]", c.Variable1[rand_heard_name]); } else { var content = c.Content.replace("[variable1]", c.Variable1[rand_heard_name]); } if (content.indexOf('[varible2]') + 1) { var content = content.replace("[varible2]", c.Variable2[rand_heard_city]); } else { var content = content.replace("[variable2]", c.Variable2[rand_heard_city]); } if (content.indexOf('[variable3]') + 1) { var content = content.replace("[variable3]", c.Variable3[rand_heard_product]); } else { var content = content.replace("[variable3]", c.Variable3[rand_heard_product]); } var content = content.replace("[amount]", rand_heard_number); a(self).find('.notification-text').html(content); number++; C(); }, open); }  function C() { var close = c.Close * 1000; setTimeout(function() { E(); F(); if (number < c.Number) { A(); } }, close); }  function D() { a(self).addClass(c.AnimationEffectOpen); }  function E() { a(self).removeClass(c.AnimationEffectOpen); }  function F() { a(self).addClass(c.AnimationEffectClose); }  function J() { a(self).removeClass(c.AnimationEffectClose); } }); } }(jQuery);